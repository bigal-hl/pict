{"version":3,"sources":["pict.min.js","node_modules/browser-pack/_prelude.js","node_modules/async.eachlimit/index.js","node_modules/async.iterator/index.js","node_modules/async.util.eachoflimit/index.js","node_modules/async.util.ensureasync/index.js","node_modules/async.util.isarray/index.js","node_modules/async.util.isarraylike/index.js","node_modules/async.util.keyiterator/index.js","node_modules/async.util.keys/index.js","node_modules/async.util.noop/index.js","node_modules/async.util.once/index.js","node_modules/async.util.onlyonce/index.js","node_modules/async.util.restparam/index.js","node_modules/async.util.setimmediate/index.js","node_modules/async.util.withoutindex/index.js","node_modules/async.waterfall/index.js","node_modules/base64-js/index.js","node_modules/buffer/index.js","node_modules/builtin-status-codes/browser.js","node_modules/cachetrax/source/CacheTrax.js","node_modules/cachetrax/source/LinkedList-Node.js","node_modules/cachetrax/source/LinkedList.js","node_modules/events/events.js","node_modules/fable-log/source/Fable-Log-BaseLogger.js","node_modules/fable-log/source/Fable-Log-DefaultProviders-Web.js","node_modules/fable-log/source/Fable-Log-DefaultStreams.json","node_modules/fable-log/source/Fable-Log-Logger-Console.js","node_modules/fable-log/source/Fable-Log-Logger-SimpleFlatFile.js","node_modules/fable-log/source/Fable-Log.js","node_modules/fable-serviceproviderbase/source/Fable-ServiceProviderBase-Preinit.js","node_modules/fable-serviceproviderbase/source/Fable-ServiceProviderBase.js","node_modules/fable-settings/source/Fable-Settings-Default.json","node_modules/fable-settings/source/Fable-Settings-TemplateProcessor.js","node_modules/fable-settings/source/Fable-Settings.js","node_modules/fable-uuid/source/Fable-UUID-Random-Browser.js","node_modules/fable-uuid/source/Fable-UUID.js","node_modules/fable/node_modules/fable-serviceproviderbase/source/Fable-ServiceProviderBase.js","node_modules/fable/source/Fable-ServiceManager.js","node_modules/fable/source/Fable.js","node_modules/fable/source/services/Fable-Service-CSVParser.js","node_modules/fable/source/services/Fable-Service-DataFormat.js","node_modules/fable/source/services/Fable-Service-EnvironmentData.js","node_modules/fable/source/services/Fable-Service-MetaTemplate.js","node_modules/fable/source/services/Fable-Service-MetaTemplate/MetaTemplate-StringParser.js","node_modules/fable/source/services/Fable-Service-MetaTemplate/MetaTemplate-WordTree.js","node_modules/fable/source/services/Fable-Service-Operation-DefaultSettings.js","node_modules/fable/source/services/Fable-Service-Operation.js","node_modules/fable/source/services/Fable-Service-RestClient.js","node_modules/fable/source/services/Fable-Service-Template.js","node_modules/fable/source/services/Fable-Service-Utility.js","node_modules/https-browserify/index.js","node_modules/ieee754/index.js","node_modules/inherits/inherits_browser.js","node_modules/manyfest/source/Manyfest-CleanWrapCharacters.js","node_modules/manyfest/source/Manyfest-HashTranslation.js","node_modules/manyfest/source/Manyfest-LogToConsole.js","node_modules/manyfest/source/Manyfest-ObjectAddress-CheckAddressExists.js","node_modules/manyfest/source/Manyfest-ObjectAddress-DeleteValue.js","node_modules/manyfest/source/Manyfest-ObjectAddress-GetValue.js","node_modules/manyfest/source/Manyfest-ObjectAddress-SetValue.js","node_modules/manyfest/source/Manyfest-ObjectAddressGeneration.js","node_modules/manyfest/source/Manyfest-ParseConditionals.js","node_modules/manyfest/source/Manyfest-SchemaManipulation.js","node_modules/manyfest/source/Manyfest.js","node_modules/once/once.js","node_modules/path-browserify/index.js","node_modules/precedent/source/Precedent.js","node_modules/precedent/source/StringParser.js","node_modules/precedent/source/WordTree.js","node_modules/process/browser.js","node_modules/punycode/punycode.js","node_modules/querystring-es3/decode.js","node_modules/querystring-es3/encode.js","node_modules/querystring-es3/index.js","node_modules/safe-buffer/index.js","node_modules/simple-concat/index.js","node_modules/simple-get/index.js","node_modules/stream-http/index.js","node_modules/stream-http/lib/capability.js","node_modules/stream-http/lib/request.js","node_modules/stream-http/lib/response.js","node_modules/stream-http/node_modules/readable-stream/errors-browser.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/async_iterator.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/buffer_list.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/from-browser.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/pipeline.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/state.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/stream-http/node_modules/readable-stream/readable-browser.js","node_modules/string_decoder/lib/string_decoder.js","node_modules/timers-browserify/main.js","node_modules/url/url.js","node_modules/url/util.js","node_modules/util-deprecate/browser.js","node_modules/wrappy/wrappy.js","node_modules/xtend/immutable.js","source/Pict-Browser-Shim.js","source/Pict-Content-Assignment.js","source/Pict-Meadow-EntityProvider.js","source/Pict-Template-Provider.js","source/Pict-View.js","source/Pict.js"],"names":["_defineProperty2","obj","key","value","_toPropertyKey2","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive2","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","f","exports","module","define","amd","window","global","self","this","Pict","r","e","n","t","o","i","c","require","u","a","Error","code","p","length","eachOfLimit","withoutIndex","arr","limit","iterator","cb","tasks","makeCallback","index","fn","apply","arguments","next","once","noop","onlyOnce","keyIterator","nextKey","done","running","errored","replenish","err","setImmediate","restParam","args","callback","pop","push","innerArgs","sync","Array","isArray","prototype","toString","_keys","isArrayLike","coll","len","keys","k","hasOwnProperty","func","startIndex","Math","max","rest","_setImmediate","fallback","setTimeout","timers","ensureAsync","wrapIterator","concat","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","join","Uint8Array","indexOf","start","end","num","output","dup","Buffer","base64","ieee754","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","__proto__","encodingOrOffset","allocUnsafe","from","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","buffer","array","byteOffset","fromArrayBuffer","valueOf","b","isBuffer","checked","copy","numberIsNaN","type","data","fromObject","assertSize","size","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","foo","typedArraySupport","console","error","get","species","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","x","y","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","constructor","name","libFableServiceProviderBase","libLinkedList","pFable","pManifest","pServiceHash","super","serviceType","_HashMap","_RecordMap","_List","maxLength","maxAge","RecordMap","put","pData","pHash","Datum","tmpNode","Hash","Metadata","Created","Date","touch","remove","expire","pruneBasedOnExpiration","fComplete","pRemovedRecords","tmpRemovedRecords","tmpNow","tmpKeys","pruneBasedOnLength","pruneCustom","fPruneFunction","prune","fExpirationPruneComplete","getNode","LeftNode","RightNode","__ISNODE","libLinkedListNode","totalNodes","head","tail","initializeNode","pDatum","tmpHash","append","prepend","pNode","each","fAction","fIterator","pError","seek","pNodeIndex","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","isNaN","EventEmitter","init","emitter","Promise","resolve","reject","errorListener","removeListener","resolver","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","events","existing","warning","create","newListener","emit","unshift","warned","w","count","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","addEventListener","wrapListener","removeEventListener","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","message","context","listeners","addListener","prependListener","prependOnceListener","position","originalListener","shift","spliceOne","off","removeAllListeners","rawListeners","eventNames","pLogStreamSettings","pFableLog","_Settings","loggerUUID","generateInsecureUUID","levels","tmpDate","getTime","pCharacter","tmpRandomData","random","floor","initialize","trace","pLogText","pLogObject","debug","info","fatal","pLogLevel","getDefaultProviders","tmpDefaultProviders","default","loggertype","streamtype","level","libBaseLogger","_ShowTimeStamps","showtimestamps","_FormattedTimeStamps","formattedtimestamps","_ContextMessage","Context","Product","_OutputLogLinesToConsole","outputloglinestoconsole","_OutputObjectsToConsole","outputobjectstoconsole","prefixCache","pLevel","pObject","tmpTimeStamp","toISOString","tmpLogLine","log","JSON","stringify","libConsoleLog","libFS","libPath","logFileRawPath","path","logFilePath","normalize","logFileStreamOptions","fileStreamOptions","fileWriter","createWriteStream","activelyWriting","logLineStrings","logObjectStrings","defaultWriteCompleteCallback","defaultBufferFlushCallback","closeWriter","fCloseComplete","tmpCloseComplete","completeBufferFlushToLogFile","fFlushComplete","tmpFlushComplete","flushBufferToLogFile","tmpLineStrings","tmpObjectStrings","tmpConstructedBufferOutputString","fs","CoreServiceProviderBase","FableLog","pSettings","tmpSettings","_Providers","_StreamDefinitions","LogStreams","logStreams","logProviders","activeLogStreams","logStreamsTrace","logStreamsDebug","logStreamsInfo","logStreamsWarn","logStreamsError","logStreamsFatal","datumDecorator","uuid","addLogger","pLogger","setDatumDecorator","fDatumDecorator","pMessage","tmpDecoratedDatum","tmpStreamDefinition","assign","logTime","tmpMessage","tmpTime","getTimeStamp","getTimeDelta","pTimeStamp","logTimeDelta","pTimeDelta","tmpEndTime","logTimeDeltaHuman","tmpMs","tmpSeconds","tmpMinutes","tmpHours","logTimeDeltaRelative","pStartTime","logTimeDeltaRelativeHuman","new","LogProviderBase","LogProviderConsole","FableCoreServiceProviderBase","pOptions","fable","options","UUID","connectFable","FableServiceProviderBase","isFable","getUUID","ProductVersion","ConfigFile","process","libPrecedent","pDependencies","templateProcessor","addPattern","pTemplateValue","tmpTemplateValue","tmpSeparatorIndex","tmpDefaultValue","substring","tmpEnvironmentVariableName","env","parseSetting","pString","parseString","_process","precedent","libFableSettingsTemplateProcessor","FableSettings","settingsTemplateProcessor","_configureEnvTemplating","buildDefaultSettings","merge","base","parse","DefaultConfigFile","pException","settings","_PerformEnvTemplating","NoEnvReplacement","_resolveEnv","tmpKey","_isObject","_deepMergeObjects","toObject","forEach","fromValue","toValue","pSettingsFrom","pSettingsTo","tmpSettingsFrom","tmpSettingsTo","tmpSettingsFromCopy","getRandomValues","crypto","msCrypto","generateWhatWGBytes","tmpBuffer","generateRandomBytes","tmpValue","generate","libRandomByteGenerator","FableUUID","_UUIDModeRandom","UUIDModeRandom","_UUIDLength","UUIDLength","_UUIDRandomDictionary","UUIDDictionary","randomByteGenerator","_HexLookup","bytesToUUID","pBuffer","generateUUIDv4","tmpRandomBytes","generateRandom","tmpUUID","charAt","services","defaultServices","libFableServiceBase","FableService","serviceTypes","serviceClasses","addServiceType","pServiceType","pServiceClass","isFableService","addAndInstantiateServiceType","instantiateServiceProvider","instantiateServiceProviderFromPrototype","pCustomServiceHash","pServicePrototype","tmpService","setDefaultServiceInstantiation","instantiateServiceProviderWithoutRegistration","connectPreinitServiceProviderInstance","pServiceInstance","tmpServiceType","tmpServiceHash","ServiceProviderBase","libFableSettings","libFableUUID","libFableLog","libFableServiceManager","Fable","_coreServices","SettingsManager","Logging","ServiceManager","serviceManager","settingsManager","cachetrax","manyfest","Header","HeaderFieldNames","Delimiter","QuoteCharacter","CleanCharacters","HeaderLineIndex","HasHeader","HasSetHeader","EmitHeader","EmitJSON","EscapedQuoteString","CurrentLine","CurrentRecord","InQuote","InEscapedQuote","LinesParsed","RowsEmitted","marshalRowToJSON","pRowArray","tmpObject","setHeader","pHeaderArray","resetRowState","pushLine","emitRow","pFormatAsJSON","tmpFormatAsJSON","tmpCompletedRecord","parseCSVLine","pLineString","pTargetLength","pPadString","tmpString","stringGeneratePaddingString","_Regex_formatterInsertCommas","_Regex_formatterAddCommasToNumber","_Regex_formatterDollarsRemoveCommas","_Regex_formatterCleanNonAlpha","_Value_MoneySign_Currency","_Value_NaN_Currency","_Value_GroupSeparator_Number","_Value_Prefix_StringHash","_Value_Clean_formatterCleanNonAlpha","_UseEngineStringStartsWith","startsWith","_UseEngineStringEndsWith","endsWith","stringReverse","reverse","stringStartsWith","pSearchString","pStartIndex","stringStartsWith_Polyfill","stringEndsWith","pEndIndex","stringEndsWith_Polyfill","insecureStringHash","tmpStringLength","tmpCharacterIndex","cleanEnclosureWrapCharacters","pWrapCharacter","cleanNonAlphaCharacters","formatterInsertCommas","tmpReversedWithCommas","match","processAddCommasToNumberRegex","pMatch","pSign","pZeros","pBefore","pDecimal","pAfter","formatterAddCommasToNumber","pNumber","formatterDollars","pValue","tmpDollarAmount","parseFloat","toFixed","formatterRoundNumber","pDigits","tmpDigits","tmpTargetLength","tmpPadLength","repeat","formatTimeSpan","pTimeSpan","stringPadStart","formatTimeDelta","pTimeStart","pTimeEnd","getMonthFromDate","pJavascriptDate","getMonth","getMonthAbbreviatedFromDate","formatSortableStringFromDate","pDate","getFullYear","getDate","stringBeforeMatch","stringAfterMatch","tmpStringSplitLocation","stringCountEnclosures","pEnclosureStart","pEnclosureEnd","tmpEnclosureStart","tmpEnclosureEnd","tmpEnclosureCount","tmpEnclosureDepth","stringGetEnclosureValueByIndex","pEnclosureIndexToGet","tmpEnclosureIndexToGet","tmpMatchedEnclosureIndex","tmpEnclosedValueStartIndex","tmpEnclosedValueEndIndex","stringRemoveEnclosureByIndex","pEnclosureIndexToRemove","tmpEnclosureIndexToRemove","tmpEnclosureStartIndex","tmpEnclosureEndIndex","tmpReturnString","Environment","libWordTree","libStringParser","WordTree","StringParser","Utility","eachLimit","ParseTree","pPatternStart","pPatternEnd","pParser","addPatternAsync","pParserPromise","fCallback","fEachLimit","newParserState","pParseTree","Asynchronous","Output","OutputBuffer","Pattern","PatternMatch","PatternMatchOutputBuffer","assignNode","pParserState","appendOutputBuffer","flushOutputBuffer","checkPatternEnd","PatternEnd","PatternStart","isAsync","Parse","checkPatternEndAsync","pAsyncOutput","parseCharacter","parseCharacterAsync","tmpParserState","fCharacterCallback","addChild","pTree","pPattern","pIndex","tmpLeaf","isPromise","pParserAsync","Title","Summary","Version","Status","Completed","CompletionProgress","CompletionTimeElapsed","Steps","StepsCompleted","StartTime","EndTime","Errors","Log","_OperationStatePrototypeString","Name","writeOperationLog","toUTCString","writeOperationErrors","libSimpleGet","TraceLog","dataFormat","DataFormat","prepareRequestOptions","preRequest","executeChunkedRequest","tmpOptions","RequestStartTime","method","url","pResponse","tmpConnectTime","statusCode","tmpData","pChunk","tmpChunkTime","tmpCompletionTime","executeJSONRequest","json","getJSON","pOptionsOrURL","tmpRequestOptions","putJSON","body","postJSON","patchJSON","headJSON","delJSON","getRawText","Matchers","Evaluate","Interpolate","Escaper","Unescaper","GuaranteedNonMatch","templateEscapes","u2028","u2029","renderFunction","templateString","renderTemplate","templateFunction","buildTemplateFunction","pTemplateText","TemplateSource","pCode","decodeURIComponent","TemplateSourceCompiled","libAsyncWaterfall","libAsyncEachLimit","templates","waterfall","extend","pDestinationObject","_len2","pSourceObjects","_key2","template","buildHashedTemplate","pTemplateHash","tmpTemplate","chunk","pInput","pChunkSize","pChunkCache","tmpInputArray","tmpChunkSize","tmpChunkCache","splice","isoStringToDate","pISOString","tmpDateParts","tmpReturnDate","setUTCFullYear","setUTCMonth","setUTCDate","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","tmpTimeZoneOffsetInHours","tmpTimeZoneOffsetInMinutes","setHours","getHours","http","https","validateParams","params","protocol","request","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","LN2","ctor","superCtor","super_","TempCtor","cleanWrapCharacters","libSimpleLog","pInfoLog","pErrorLog","logInfo","logError","translationTable","translationCount","addTranslation","pTranslation","pTranslationSource","removeTranslationHash","pTranslationHash","removeTranslation","clearTranslations","translate","logToConsole","pLogLine","checkAddressExists","pAddress","tmpBracketStartIndex","tmpBracketStopIndex","tmpBoxedPropertyName","tmpBoxedPropertyReference","tmpBoxedPropertyNumber","tmpSubObjectName","tmpNewAddress","fCleanWrapCharacters","fParseConditionals","checkFilters","pRecord","deleteValueAtAddress","pParentAddress","tmpParentAddress","tmpObjectTypeMarkerIndex","tmpObjectPropertyName","tmpArrayProperty","tmpContainerObject","tmpPropertyParentAddress","tmpObjectProperty","tmpObjectPropertyKeys","getValueAtAddress","pRootObject","tmpRootObject","tmpParentAddressParts","tmpBackNavigationCount","tmpParentAddressLength","tmpRecurseAddress","tmpOutputArray","setValueAtAddress","generateAddressses","pBaseAddress","pSchema","tmpBaseAddress","tmpSchema","tmpObjectType","tmpSchemaObjectEntry","Address","InSchema","DataType","Default","tmpObjectProperties","_ConditionalStanzaStart","_ConditionalStanzaEnd","testCondition","pManyfest","pSearchAddress","pSearchComparator","parseConditionals","tmpKeepRecord","tmpStartIndex","tmpStopIndex","tmpMagicComparisonPatternSet","tmpSearchAddress","tmpSearchComparator","tmpSearchValue","resolveAddressMappings","pManyfestSchemaDescriptors","pAddressMapping","tmpManyfestAddresses","tmpHashMapping","pInputAddress","tmpNewDescriptorAddress","tmpOldDescriptorAddress","tmpDescriptor","safeResolveAddressMappings","tmpManyfestSchemaDescriptors","mergeAddressMappings","pManyfestSchemaDescriptorsDestination","pManyfestSchemaDescriptorsSource","tmpSource","tmpNewManyfestSchemaDescriptors","pDescriptorAddress","libHashTranslation","libObjectAddressCheckAddressExists","libObjectAddressGetValue","libObjectAddressSetValue","libObjectAddressDeleteValue","libObjectAddressGeneration","libSchemaManipulation","_DefaultConfiguration","Scope","Descriptors","Manyfest","objectAddressCheckAddressExists","objectAddressGetValue","objectAddressSetValue","objectAddressDeleteValue","defaultValues","Float","Integer","Boolean","Binary","DateTime","Null","strict","scope","elementAddresses","elementHashes","elementDescriptors","dataSolvers","dataSolverState","reset","loadManifest","schemaManipulations","objectAddressGeneration","hashTranslations","clone","tmpNewOptions","tmpNewManyfest","getManifest","deserialize","pManifestString","tmpManifest","tmpDescriptorKeys","tmpDescriptionAddresses","addDescriptor","serialize","pDescriptor","getDescriptorByHash","getDescriptor","resolveHashAddress","eachDescriptor","tmpDescriptorAddresses","checkAddressExistsByHash","tmpAddress","tmpInElementHashTable","tmpInTranslationTable","getValueByHash","getDefaultValue","setValueByHash","deleteValueByHash","validate","tmpValidationData","MissingElements","addValidationError","pErrorMessage","tmpValueExists","Required","tmpElementType","tmpDataType","populateDefaults","pOverwriteProperties","populateObject","fFilter","tmpOverwriteProperties","tmpFilterFunction","wrappy","called","onceStrict","onceError","proto","assertPath","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","posix","cwd","resolvedPath","resolvedAbsolute","isAbsolute","trailingSeparator","joined","relative","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","dirname","hasRoot","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","root","_format","delimiter","win32","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","nextTick","title","browser","argv","version","versions","binding","chdir","umask","freeExports","nodeType","freeModule","freeGlobal","punycode","maxInt","tMin","tMax","skew","damp","initialBias","initialN","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","baseMinusTMin","stringFromCharCode","map","result","mapDomain","ucs2decode","extra","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","decode","basic","oldi","baseMinusT","inputLength","bias","encode","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","ucs2","toASCII","test","toUnicode","prop","qs","eq","regexp","maxKeys","kstr","vstr","v","idx","xs","stringifyPrimitive","objectKeys","ks","encodeURIComponent","copyProps","SafeBuffer","stream","chunks","simpleGet","decompressResponse","querystring","isStream","pipe","opts","maxRedirects","hostname","port","auth","headers","form","accept","toUpperCase","originalHost","req","followRedirects","location","host","resume","redirectHost","cookie","authorization","tryUnzip","abort","ClientRequest","response","statusCodes","defaultProtocol","search","IncomingMessage","Agent","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","xtend","xhr","getXHR","XMLHttpRequest","open","XDomainRequest","checkTypeSupport","responseType","isFunction","fetch","ReadableStream","writableStream","WritableStream","abortController","AbortController","arraybuffer","msstream","mozchunkedarraybuffer","overrideMimeType","capability","inherits","rStates","readyStates","preferBinary","Writable","_opts","_body","_headers","useFetch","mode","_mode","decideMode","_fetchTimer","_socketTimeout","_socketTimer","_onFinish","lowerName","unsafeHeaders","getHeader","header","removeHeader","_destroyed","headersObj","Blob","headersList","keyName","signal","controller","_fetchAbortController","requestTimeout","credentials","withCredentials","then","_fetchResponse","_resetTimers","_connect","reason","_xhr","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","onerror","send","status","statusValid","_write","destroy","flushHeaders","setNoDelay","setSocketKeepAlive","UNSENT","OPENED","HEADERS_RECEIVED","resetTimers","Readable","rawHeaders","trailers","rawTrailers","statusMessage","statusText","_resumeFetch","close","pipeTo","catch","reader","getReader","_pos","responseURL","getAllResponseHeaders","matches","_charset","mimeType","charsetMatch","_read","responseText","newData","MSStreamReader","onload","readAsArrayBuffer","codes","createErrorType","Base","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","getMessage","oneOf","expected","thing","determiner","msg","this_len","Duplex","allowHalfOpen","readable","onend","_writableState","ended","onEndNT","highWaterMark","getBuffer","_readableState","destroyed","PassThrough","Transform","_transform","ReadableState","EElistenerCount","Stream","OurUint8Array","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_INVALID_ARG_TYPE","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","isDuplex","objectMode","readableObjectMode","pipes","pipesCount","flowing","endEmitted","reading","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","decoder","_destroy","readableAddChunk","addToFront","skipChunkCheck","emitReadable","emitReadable_","onEofChunk","chunkInvalid","_uint8ArrayToBuffer","addChunk","maybeReadMore","_undestroy","undestroy","isPaused","setEncoding","enc","content","clear","MAX_HWM","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","nReadingNextTick","resume_","fromList","first","consume","endReadable","endReadableNT","wState","finished","l","nOrig","doRead","dest","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","onclose","onfinish","ondrain","ondata","cleanedUp","needDrain","pipeOnDrain","pause","event","dests","ev","wrap","_this","asyncIterator","_fromList","iterable","util","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","transform","flush","_flush","prefinish","err2","CorkedRequest","entry","finish","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","deprecate","realHasInstance","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","finalCalled","ending","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","writev","_writev","final","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","rState","current","_","hasInstance","object","writeAfterEnd","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_Object$setPrototypeO","_defineProperty","_toPrimitive","_toPropertyKey","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","promise","lastPromise","wrapForNext","_this2","_Object$create","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","source","getOwnPropertyDescriptors","defineProperties","_defineProperties","props","descriptor","custom","instance","Constructor","_classCallCheck","protoProps","staticProps","hasStrings","_getString","_getBuffer","nb","depth","customInspect","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","ERR_STREAM_PREMATURE_CLOSE","eos","_len","_key","onlegacyfinish","writableEnded","readableEnded","onrequest","isRequest","ERR_MISSING_ARGS","streams","popCallback","destroys","closed","destroyer","reduce","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","pipeline","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckExtraBytes","total","utf8CheckIncomplete","clearImmediate","immediateIds","nextImmediateId","Timeout","id","clearFn","_id","_clearFn","setInterval","clearInterval","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","Url","slashes","hash","query","pathname","href","urlParse","resolveObject","isString","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","hostlessProtocol","slashedProtocol","ftp","gopher","file","parseQueryString","slashesDenoteHost","isObject","queryIndex","splitter","uSplit","simplePath","exec","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","h","ae","esc","escape","qm","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","isNullOrUndefined","authInHost","isNull","hasTrailingSlash","up","config","localStorage","wrapper","libPict","inBrowser","hasDocument","document","querySelectorAll","hasJquery","jQuery","customAssignFunction","customAppendFunction","assignContent","pContent","html","tmpTargetElementSet","innerHTML","appendContent","insertAdjacentHTML","pEntity","pMeadowFilterExpression","initializeCache","cache","tmpCountOptions","urlPrefix","restClient","pBody","tmpRecordCount","Count","tmpDownloadURIFragments","tmpDownloadBatchSize","downloadBatchSize","tmpEntitySet","pURIFragment","fDownloadCallback","pDownloadError","pDownloadResponse","pDownloadBody","pFullDownloadError","PictDefaultURLPrefix","PictDefaultDownloadBatchSize","Bundle","getEntity","pIDRecord","tmpPossibleRecord","templateSources","defaultTemplates","loadTemplateFunction","addTemplate","pTemplate","pTemplateSource","addDefaultTemplate","pPrefix","pPostfix","pSource","tmpDefaultTemplate","prefix","postfix","checkDefaultTemplateHash","getTemplate","loadTemplate","defaultPictViewSettings","DefaultRenderable","DefaultDestinationAddress","DefaultTemplateRecordAddress","ViewIdentifier","InitializeOnLoad","RenderOnLoad","Templates","DefaultTemplates","Renderables","Manifests","Source","TemplateProvider","Template","Prefix","Postfix","renderables","tmpRenderable","RenderableHash","initializationFunctionSet","internalInitialize","fStageComplete","renderAsync","render","pRenderable","pRenderDestinationAddress","pTemplateDataAddress","tmpRenderableHash","tmpRenderDestinationAddress","ContentDestinationAddress","tmpDataAddress","RecordAddress","DataProvider","getDataByAddress","tmpContent","parseTemplateByHash","TemplateHash","ContentAssignment","libFable","defaultPictSettings","MainViewportVew","AutoRenderMainViewportView","IdentifierAddressPrefix","manifest","AppData","_DefaultPictTemplatesInitialized","initializePictTemplates","addView","pViewHash","pViewPrototype","tmpViewHash","fExtraTemplateMethods","fEntityRender","tmpEntity","tmpEntityID","tmpEntityTemplate","tmpHashEntitySeparator","tmpHashTemplateSeparator","Record","EntityProvider","MetaTemplate","fNotEmptyRender","tmpHashParts","fTemplateRender","tmpTemplateHash","tmpAddressOfData","fTemplateSetRender","parseTemplateSetByHash","fDataRender","tmpColumnData","parseTemplate","pTemplateString","tmpTemplateString","parseTemplateSet","pDataSet","fRecordTemplateCallback","pTemplateResult","PictViewClass"],"mappings":"AAAA,aAAa,SAASA,iBAAiBC,EAAIC,EAAIC,GAAkK,OAA3JD,EAAIE,gBAAgBF,MAAeD,EAAKI,OAAOC,eAAeL,EAAIC,EAAI,CAACC,MAAMA,EAAMI,YAAW,EAAKC,cAAa,EAAKC,UAAS,IAAaR,EAAIC,GAAKC,EAAcF,CAAI,CAAC,SAASG,gBAAgBM,GAAK,IAAIR,EAAIS,cAAcD,EAAI,UAAU,MAAoB,iBAANR,EAAeA,EAAIU,OAAOV,EAAK,CAAC,SAASS,cAAcE,EAAMC,GAAM,GAAkB,iBAARD,GAA0B,OAARA,EAAa,OAAOA,EAAM,IAAIE,EAAKF,EAAMG,OAAOC,aAAa,QAAUC,IAAPH,EAAiB,CAAC,IAAII,EAAIJ,EAAKK,KAAKP,EAAMC,GAAM,WAAW,GAAgB,iBAANK,EAAe,OAAOA,EAAI,MAAM,IAAIE,UAAU,+CAAgD,CAAC,OAAc,WAAPP,EAAgBF,OAAOU,QAAQT,EAAO,ECA7pB,SAAAU,GAAA,GAAA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,SAAA,GAAA,mBAAAG,QAAAA,OAAAC,IAAAD,OAAA,GAAAH,OAAA,EAAA,oBAAAK,OAAAA,OAAA,oBAAAC,OAAAA,OAAA,oBAAAC,KAAAA,KAAAC,MAAAC,KAAAT,GAAA,CAAA,CAAA,EAAA,WAAA,OAAA,SAAAU,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAf,GAAA,IAAAY,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAC,EAAA,mBAAAC,SAAAA,QAAA,IAAAjB,GAAAgB,EAAA,OAAAA,EAAAD,GAAA,GAAA,GAAAG,EAAA,OAAAA,EAAAH,GAAA,GAAA,IAAAI,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAAA,MAAAI,EAAAE,KAAA,mBAAAF,CAAA,CAAA,IAAAG,EAAAV,EAAAG,GAAA,CAAAd,QAAA,CAAA,GAAAU,EAAAI,GAAA,GAAAlB,KAAAyB,EAAArB,SAAA,SAAAS,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,EAAA,GAAAY,EAAAA,EAAArB,QAAAS,EAAAC,EAAAC,EAAAC,EAAA,CAAA,OAAAD,EAAAG,GAAAd,OAAA,CAAA,IAAA,IAAAiB,EAAA,mBAAAD,SAAAA,QAAAF,EAAA,EAAAA,EAAAF,EAAAU,OAAAR,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,SAAAG,EAAAf,EAAAD,GCEA,IAAAuB,EAAAP,EAAA,0BACAQ,EAAAR,EAAA,2BAEAf,EAAAD,QAAA,SAAAyB,EAAAC,EAAAC,EAAAC,GACA,OAAAL,EAAAG,EAAAH,CAAAE,EAAAD,EAAAG,GAAAC,EACA,CFGA,EAAE,CAAC,yBAAyB,EAAE,0BAA0B,KAAK,EAAE,CAAC,SAASZ,EAAQf,EAAOD,GGRxFC,EAAAD,QAAA,SAAA6B,GAaA,OAZA,SAAAC,EAAAC,GACA,SAAAC,IAIA,OAHAH,EAAAP,QACAO,EAAAE,GAAAE,MAAA,KAAAC,WAEAF,EAAAG,MACA,CAIA,OAHAH,EAAAG,KAAA,WACA,OAAAJ,EAAAF,EAAAP,OAAA,EAAAQ,EAAAC,EAAA,GAAA,IACA,EACAC,CACA,CACAF,CAAA,EACA,CHaA,EAAE,CAAC,GAAG,EAAE,CAAC,SAASd,EAAQf,EAAOD,GI7BjC,IAAAoC,EAAApB,EAAA,mBACAqB,EAAArB,EAAA,mBACAsB,EAAAtB,EAAA,uBACAuB,EAAAvB,EAAA,0BAEAf,EAAAD,QAAA,SAAA0B,GACA,OAAA,SAAAjD,EAAAkD,EAAAC,GACAA,EAAAQ,EAAAR,GAAAS,GAEA,IAAAG,EAAAD,EADA9D,EAAAA,GAAA,IAEA,GAAAiD,GAAA,EACA,OAAAE,EAAA,MAEA,IAAAa,GAAA,EACAC,EAAA,EACAC,GAAA,GAEA,SAAAC,IACA,GAAAH,GAAAC,GAAA,EACA,OAAAd,EAAA,MAGA,KAAAc,EAAAhB,IAAAiB,GAAA,CACA,IAAAjE,EAAA8D,IACA,GAAA,OAAA9D,EAKA,OAJA+D,GAAA,OACAC,GAAA,GACAd,EAAA,OAIAc,GAAA,EACAf,EAAAlD,EAAAC,GAAAA,EAAA4D,GAAA,SAAAO,GACAH,GAAA,EACAG,GACAjB,EAAAiB,GACAF,GAAA,GAEAC,GAEA,IACA,CACA,CAzBA,EA0BA,CACA,CJgCA,EAAE,CAAC,yBAAyB,EAAE,kBAAkB,EAAE,kBAAkB,GAAG,sBAAsB,KAAK,EAAE,CAAC,SAAS5B,EAAQf,EAAOD,GK3E7H,IAAA8C,EAAA9B,EAAA,2BACA+B,EAAA/B,EAAA,wBAEAf,EAAAD,QAAA,SAAAgC,GACA,OAAAe,GAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAE,MACAF,EAAAG,MAAA,WACA,IAAAC,EAAAlB,UACAmB,EACAP,GAAA,WACAG,EAAAhB,MAAA,KAAAmB,EACA,IAEAH,EAAAhB,MAAA,KAAAmB,EAEA,IACA,IAAAC,GAAA,EACArB,EAAAC,MAAA1B,KAAAyC,GACAK,GAAA,CACA,GACA,CL+EA,EAAE,CAAC,uBAAuB,GAAG,0BAA0B,KAAK,EAAE,CAAC,SAASrC,EAAQf,EAAOD,GMlGvFC,EAAAD,QAAAsD,MAAAC,SAAA,SAAA9E,GACA,MAAA,mBAAAI,OAAA2E,UAAAC,SAAA7D,KAAAnB,EACA,CNuGA,EAAE,CAAC,GAAG,EAAE,CAAC,SAASuC,EAAQf,EAAOD,GOzGjC,IAAAuD,EAAAvC,EAAA,sBAEAf,EAAAD,QAAA,SAAAyB,GACA,OAAA8B,EAAA9B,IAEA,iBAAAA,EAAAH,QACAG,EAAAH,QAAA,GACAG,EAAAH,OAAA,GAAA,CAEA,CP8GA,EAAE,CAAC,qBAAqB,IAAI,EAAE,CAAC,SAASN,EAAQf,EAAOD,GQvHvD,IAAA0D,EAAA1C,EAAA,mBACA2C,EAAA3C,EAAA,0BAEAf,EAAAD,QAAA,SAAA4D,GACA,IACAC,EACAC,EAFAhD,GAAA,EAGA,OAAA6C,EAAAC,IACAC,EAAAD,EAAAtC,OACA,WAEA,QADAR,EACA+C,EAAA/C,EAAA,IACA,IAEAgD,EAAAJ,EAAAE,GACAC,EAAAC,EAAAxC,OACA,WAEA,QADAR,EACA+C,EAAAC,EAAAhD,GAAA,IACA,EAEA,CR4HA,EAAE,CAAC,yBAAyB,EAAE,kBAAkB,IAAI,EAAE,CAAC,SAASE,EAAQf,EAAOD,GSjJ/EC,EAAAD,QAAAnB,OAAAiF,MAAA,SAAArF,GACA,IAAAiF,EAAA,GACA,IAAA,IAAAK,KAAAtF,EACAA,EAAAuF,eAAAD,IACAL,EAAAP,KAAAY,GAGA,OAAAL,CACA,CTsJA,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS1C,EAAQf,EAAOD,GU9JjCC,EAAAD,QAAA,WAAA,CVmKA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASgB,EAAQf,EAAOD,GWnKlCC,EAAAD,QAAA,SAAAgC,GACA,OAAA,WACA,OAAAA,IACAA,EAAAC,MAAA1B,KAAA2B,WACAF,EAAA,KACA,CACA,CXwKA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAShB,EAAQf,EAAOD,GY9KlCC,EAAAD,QAAA,SAAAgC,GACA,OAAA,WACA,GAAA,OAAAA,EAAA,MAAA,IAAAb,MAAA,gCACAa,EAAAC,MAAA1B,KAAA2B,WACAF,EAAA,IACA,CACA,CZmLA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAShB,EAAQf,EAAOD,Ga1LlCC,EAAAD,QAAA,SAAAiE,EAAAC,GAEA,OADAA,EAAA,MAAAA,EAAAD,EAAA3C,OAAA,GAAA4C,EACA,WAGA,IAFA,IAAA5C,EAAA6C,KAAAC,IAAAlC,UAAAZ,OAAA4C,EAAA,GACAG,EAAA,IAAAf,MAAAhC,GACAS,EAAA,EAAAA,EAAAT,EAAAS,IACAsC,EAAAtC,GAAAG,UAAAH,EAAAmC,GAEA,OAAAA,GACA,KAAA,EACA,OAAAD,EAAArE,KAAAW,KAAA8D,GACA,KAAA,EACA,OAAAJ,EAAArE,KAAAW,KAAA2B,UAAA,GAAAmC,GAEA,CACA,Cb8LA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASrD,EAAQf,EAAOD,IAClC,SAAW8C,IAAc,Wc7MzB,IAAAwB,EAAA,mBAAAxB,GAAAA,EACAyB,EAAA,SAAAvC,GACAwC,WAAAxC,EAAA,EACA,EAEA/B,EAAAD,QAAA,SAAAgC,GAEA,OAAAsC,GAAAC,GAAAvC,EACA,CdkNC,GAAEpC,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,UAAU8B,aAE5C,EAAE,CAAC2B,OAAS,MAAM,GAAG,CAAC,SAASzD,EAAQf,EAAOD,Ge5N9CC,EAAAD,QAAA,SAAA2B,GACA,OAAA,SAAAhD,EAAAoD,EAAAkB,GACA,OAAAtB,EAAAhD,EAAAsE,EACA,CACA,CfiOA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASjC,EAAQf,EAAOD,GgBrOlC,IAAAoC,EAAApB,EAAA,mBACAqB,EAAArB,EAAA,mBACAuC,EAAAvC,EAAA,sBACA+B,EAAA/B,EAAA,wBACA0D,EAAA1D,EAAA,0BACAW,EAAAX,EAAA,kBAEAf,EAAAD,QAAA,SAAA6B,EAAAD,GAEA,GADAA,EAAAQ,EAAAR,GAAAS,IACAkB,EAAA1B,GAAA,OAAAD,EAAA,IAAAT,MAAA,8DACA,IAAAU,EAAAP,OAAA,OAAAM,KAEA,SAAA+C,EAAAhD,GACA,OAAAoB,GAAA,SAAAF,EAAAG,GACA,GAAAH,EACAjB,EAAAK,MAAA,KAAA,CAAAY,GAAA+B,OAAA5B,QACA,CACA,IAAAb,EAAAR,EAAAQ,OACAA,EACAa,EAAAG,KAAAwB,EAAAxC,IAEAa,EAAAG,KAAAvB,GAEA8C,EAAA/C,GAAAM,MAAA,KAAAe,EACA,CACA,GACA,CACA2B,CAAAhD,EAAAE,GAAA8C,EACA,ChB0OA,EAAE,CAAC,iBAAiB,EAAE,yBAAyB,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,kBAAkB,GAAG,uBAAuB,KAAK,GAAG,CAAC,SAAS3D,EAAQf,EAAOD,GiBtQzKA,EAAA6E,WAuCA,SAAAC,GACA,IAAAC,EAAAC,EAAAF,GACAG,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACA,OAAA,GAAAE,EAAAC,GAAA,EAAAA,CACA,EA3CAlF,EAAAmF,YAiDA,SAAAL,GACA,IAAAM,EAcAtE,EAbAiE,EAAAC,EAAAF,GACAG,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAEAtD,EAAA,IAAA4D,EAVA,SAAAP,EAAAG,EAAAC,GACA,OAAA,GAAAD,EAAAC,GAAA,EAAAA,CACA,CAQAI,CAAAR,EAAAG,EAAAC,IAEAK,EAAA,EAGA1B,EAAAqB,EAAA,EACAD,EAAA,EACAA,EAGA,IAAAnE,EAAA,EAAAA,EAAA+C,EAAA/C,GAAA,EACAsE,EACAI,EAAAV,EAAAW,WAAA3E,KAAA,GACA0E,EAAAV,EAAAW,WAAA3E,EAAA,KAAA,GACA0E,EAAAV,EAAAW,WAAA3E,EAAA,KAAA,EACA0E,EAAAV,EAAAW,WAAA3E,EAAA,IACAW,EAAA8D,KAAAH,GAAA,GAAA,IACA3D,EAAA8D,KAAAH,GAAA,EAAA,IACA3D,EAAA8D,KAAA,IAAAH,EAGA,IAAAF,IACAE,EACAI,EAAAV,EAAAW,WAAA3E,KAAA,EACA0E,EAAAV,EAAAW,WAAA3E,EAAA,KAAA,EACAW,EAAA8D,KAAA,IAAAH,GAGA,IAAAF,IACAE,EACAI,EAAAV,EAAAW,WAAA3E,KAAA,GACA0E,EAAAV,EAAAW,WAAA3E,EAAA,KAAA,EACA0E,EAAAV,EAAAW,WAAA3E,EAAA,KAAA,EACAW,EAAA8D,KAAAH,GAAA,EAAA,IACA3D,EAAA8D,KAAA,IAAAH,GAGA,OAAA3D,CACA,EA5FAzB,EAAA0F,cAkHA,SAAAC,GAQA,IAPA,IAAAP,EACAvB,EAAA8B,EAAArE,OACAsE,EAAA/B,EAAA,EACAgC,EAAA,GACAC,EAAA,MAGAhF,EAAA,EAAAiF,EAAAlC,EAAA+B,EAAA9E,EAAAiF,EAAAjF,GAAAgF,EACAD,EAAA1C,KAAA6C,EAAAL,EAAA7E,EAAAA,EAAAgF,EAAAC,EAAAA,EAAAjF,EAAAgF,IAIA,IAAAF,GACAR,EAAAO,EAAA9B,EAAA,GACAgC,EAAA1C,KACA8C,EAAAb,GAAA,GACAa,EAAAb,GAAA,EAAA,IACA,OAEA,IAAAQ,IACAR,GAAAO,EAAA9B,EAAA,IAAA,GAAA8B,EAAA9B,EAAA,GACAgC,EAAA1C,KACA8C,EAAAb,GAAA,IACAa,EAAAb,GAAA,EAAA,IACAa,EAAAb,GAAA,EAAA,IACA,MAIA,OAAAS,EAAAK,KAAA,GACA,EA1IA,IALA,IAAAD,EAAA,GACAT,EAAA,GACAH,EAAA,oBAAAc,WAAAA,WAAA7C,MAEAlC,EAAA,mEACAN,EAAA,EAAAA,EAAAM,KAAAN,EACAmF,EAAAnF,GAAAM,EAAAN,GACA0E,EAAApE,EAAAqE,WAAA3E,IAAAA,EAQA,SAAAkE,EAAAF,GACA,IAAAjB,EAAAiB,EAAAxD,OAEA,GAAAuC,EAAA,EAAA,EACA,MAAA,IAAA1C,MAAA,kDAKA,IAAA8D,EAAAH,EAAAsB,QAAA,KAOA,OANA,IAAAnB,IAAAA,EAAApB,GAMA,CAAAoB,EAJAA,IAAApB,EACA,EACA,EAAAoB,EAAA,EAGA,CAmEA,SAAAe,EAAAL,EAAAU,EAAAC,GAGA,IAFA,IAAAlB,EARAmB,EASAC,EAAA,GACA1F,EAAAuF,EAAAvF,EAAAwF,EAAAxF,GAAA,EACAsE,GACAO,EAAA7E,IAAA,GAAA,WACA6E,EAAA7E,EAAA,IAAA,EAAA,QACA,IAAA6E,EAAA7E,EAAA,IACA0F,EAAArD,KAdA8C,GADAM,EAeAnB,IAdA,GAAA,IACAa,EAAAM,GAAA,GAAA,IACAN,EAAAM,GAAA,EAAA,IACAN,EAAA,GAAAM,IAaA,OAAAC,EAAAN,KAAA,GACA,CAlGAV,EAAA,IAAAC,WAAA,IAAA,GACAD,EAAA,IAAAC,WAAA,IAAA,EjB6YA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASzE,EAAQf,EAAOD,GAElC,EAAE,CAAC,GAAG,GAAG,CAAC,SAASgB,EAAQf,EAAOD,GAClCkC,UAAU,GAAG,IAAI,GAAGD,MAAMjC,EAAQkC,UAClC,EAAE,CAACuE,IAAM,KAAK,GAAG,CAAC,SAASzF,EAAQf,EAAOD,IAC1C,SAAW0G,IAAQ,WkB3ZnB,IAAAC,EAAA3F,EAAA,aACA4F,EAAA5F,EAAA,WAEAhB,EAAA0G,OAAAA,EACA1G,EAAA6G,WAqTA,SAAAvF,IACAA,GAAAA,IACAA,EAAA,GAEA,OAAAoF,EAAAI,OAAAxF,EACA,EAzTAtB,EAAA+G,kBAAA,GAEA,IAAAC,EAAA,WAsDA,SAAAC,EAAA3F,GACA,GAAAA,EAAA0F,EACA,MAAA,IAAAE,WAAA,cAAA5F,EAAA,kCAGA,IAAA6F,EAAA,IAAAhB,WAAA7E,GAEA,OADA6F,EAAAC,UAAAV,EAAAlD,UACA2D,CACA,CAYA,SAAAT,EAAAxH,EAAAmI,EAAA/F,GAEA,GAAA,iBAAApC,EAAA,CACA,GAAA,iBAAAmI,EACA,MAAA,IAAAxH,UACA,sEAGA,OAAAyH,EAAApI,EACA,CACA,OAAAqI,EAAArI,EAAAmI,EAAA/F,EACA,CAeA,SAAAiG,EAAA5I,EAAA0I,EAAA/F,GACA,GAAA,iBAAA3C,EACA,OAiHA,SAAA6I,EAAAC,GACA,iBAAAA,GAAA,KAAAA,IACAA,EAAA,QAGA,IAAAf,EAAAgB,WAAAD,GACA,MAAA,IAAA5H,UAAA,qBAAA4H,GAGA,IAAAnG,EAAA,EAAAuD,EAAA2C,EAAAC,GACAN,EAAAF,EAAA3F,GAEAqG,EAAAR,EAAAS,MAAAJ,EAAAC,GAEAE,IAAArG,IAIA6F,EAAAA,EAAAU,MAAA,EAAAF,IAGA,OAAAR,CACA,CAvIAW,CAAAnJ,EAAA0I,GAGA,GAAAU,YAAAC,OAAArJ,GACA,OAAAsJ,EAAAtJ,GAGA,GAAA,MAAAA,EACA,MAAAkB,UACA,yHACAlB,GAIA,GAAAuJ,EAAAvJ,EAAAoJ,cACApJ,GAAAuJ,EAAAvJ,EAAAwJ,OAAAJ,aACA,OAkIA,SAAAK,EAAAC,EAAA/G,GACA,GAAA+G,EAAA,GAAAD,EAAAvD,WAAAwD,EACA,MAAA,IAAAnB,WAAA,wCAGA,GAAAkB,EAAAvD,WAAAwD,GAAA/G,GAAA,GACA,MAAA,IAAA4F,WAAA,wCAGA,IAAAC,EAEAA,OADAzH,IAAA2I,QAAA3I,IAAA4B,EACA,IAAA6E,WAAAiC,QACA1I,IAAA4B,EACA,IAAA6E,WAAAiC,EAAAC,GAEA,IAAAlC,WAAAiC,EAAAC,EAAA/G,GAKA,OADA6F,EAAAC,UAAAV,EAAAlD,UACA2D,CACA,CAvJAmB,CAAA3J,EAAA0I,EAAA/F,GAGA,GAAA,iBAAA3C,EACA,MAAA,IAAAkB,UACA,yEAIA,IAAA0I,EAAA5J,EAAA4J,SAAA5J,EAAA4J,UACA,GAAA,MAAAA,GAAAA,IAAA5J,EACA,OAAA+H,EAAAa,KAAAgB,EAAAlB,EAAA/F,GAGA,IAAAkH,EA2IA,SAAA/J,GACA,GAAAiI,EAAA+B,SAAAhK,GAAA,CACA,IAAAoF,EAAA,EAAA6E,EAAAjK,EAAA6C,QACA6F,EAAAF,EAAApD,GAEA,OAAA,IAAAsD,EAAA7F,QAIA7C,EAAAkK,KAAAxB,EAAA,EAAA,EAAAtD,GAHAsD,CAKA,CAEA,QAAAzH,IAAAjB,EAAA6C,OACA,MAAA,iBAAA7C,EAAA6C,QAAAsH,EAAAnK,EAAA6C,QACA2F,EAAA,GAEAgB,EAAAxJ,GAGA,GAAA,WAAAA,EAAAoK,MAAAvF,MAAAC,QAAA9E,EAAAqK,MACA,OAAAb,EAAAxJ,EAAAqK,KAEA,CAlKAC,CAAApK,GACA,GAAA6J,EAAA,OAAAA,EAEA,GAAA,oBAAAhJ,QAAA,MAAAA,OAAAC,aACA,mBAAAd,EAAAa,OAAAC,aACA,OAAAiH,EAAAa,KACA5I,EAAAa,OAAAC,aAAA,UAAA4H,EAAA/F,GAIA,MAAA,IAAAzB,UACA,yHACAlB,EAEA,CAmBA,SAAAqK,EAAAC,GACA,GAAA,iBAAAA,EACA,MAAA,IAAApJ,UAAA,0CACA,GAAAoJ,EAAA,EACA,MAAA,IAAA/B,WAAA,cAAA+B,EAAA,iCAEA,CA0BA,SAAA3B,EAAA2B,GAEA,OADAD,EAAAC,GACAhC,EAAAgC,EAAA,EAAA,EAAA,EAAAP,EAAAO,GACA,CAuCA,SAAAhB,EAAAG,GAGA,IAFA,IAAA9G,EAAA8G,EAAA9G,OAAA,EAAA,EAAA,EAAAoH,EAAAN,EAAA9G,QACA6F,EAAAF,EAAA3F,GACAR,EAAA,EAAAA,EAAAQ,EAAAR,GAAA,EACAqG,EAAArG,GAAA,IAAAsH,EAAAtH,GAEA,OAAAqG,CACA,CAkDA,SAAAuB,EAAApH,GAGA,GAAAA,GAAA0F,EACA,MAAA,IAAAE,WAAA,0DACAF,EAAAvD,SAAA,IAAA,UAEA,OAAA,EAAAnC,CACA,CA6FA,SAAAuD,EAAA2C,EAAAC,GACA,GAAAf,EAAA+B,SAAAjB,GACA,OAAAA,EAAAlG,OAEA,GAAAyG,YAAAC,OAAAR,IAAAU,EAAAV,EAAAO,aACA,OAAAP,EAAA3C,WAEA,GAAA,iBAAA2C,EACA,MAAA,IAAA3H,UACA,kGACA2H,GAIA,IAAA3D,EAAA2D,EAAAlG,OACA4H,EAAAhH,UAAAZ,OAAA,IAAA,IAAAY,UAAA,GACA,IAAAgH,GAAA,IAAArF,EAAA,OAAA,EAIA,IADA,IAAAsF,GAAA,IAEA,OAAA1B,GACA,IAAA,QACA,IAAA,SACA,IAAA,SACA,OAAA5D,EACA,IAAA,OACA,IAAA,QACA,OAAAuF,EAAA5B,GAAAlG,OACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EAAAuC,EACA,IAAA,MACA,OAAAA,IAAA,EACA,IAAA,SACA,OAAAwF,EAAA7B,GAAAlG,OACA,QACA,GAAA6H,EACA,OAAAD,GAAA,EAAAE,EAAA5B,GAAAlG,OAEAmG,GAAA,GAAAA,GAAA6B,cACAH,GAAA,EAGA,CAGA,SAAAI,EAAA9B,EAAApB,EAAAC,GACA,IAAA6C,GAAA,EAcA,SALAzJ,IAAA2G,GAAAA,EAAA,KACAA,EAAA,GAIAA,EAAA9F,KAAAe,OACA,MAAA,GAOA,SAJA5B,IAAA4G,GAAAA,EAAA/F,KAAAe,UACAgF,EAAA/F,KAAAe,QAGAgF,GAAA,EACA,MAAA,GAOA,IAHAA,KAAA,KACAD,KAAA,GAGA,MAAA,GAKA,IAFAoB,IAAAA,EAAA,UAGA,OAAAA,GACA,IAAA,MACA,OAAA+B,EAAAjJ,KAAA8F,EAAAC,GAEA,IAAA,OACA,IAAA,QACA,OAAAmD,EAAAlJ,KAAA8F,EAAAC,GAEA,IAAA,QACA,OAAAoD,EAAAnJ,KAAA8F,EAAAC,GAEA,IAAA,SACA,IAAA,SACA,OAAAqD,EAAApJ,KAAA8F,EAAAC,GAEA,IAAA,SACA,OAAAsD,EAAArJ,KAAA8F,EAAAC,GAEA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAAuD,EAAAtJ,KAAA8F,EAAAC,GAEA,QACA,GAAA6C,EAAA,MAAA,IAAAtJ,UAAA,qBAAA4H,GACAA,GAAAA,EAAA,IAAA6B,cACAH,GAAA,EAGA,CAUA,SAAAW,EAAAtB,EAAA7H,EAAAoJ,GACA,IAAAjJ,EAAA0H,EAAA7H,GACA6H,EAAA7H,GAAA6H,EAAAuB,GACAvB,EAAAuB,GAAAjJ,CACA,CAwIA,SAAAkJ,EAAA7B,EAAA8B,EAAA5B,EAAAZ,EAAAyC,GAEA,GAAA,IAAA/B,EAAA7G,OAAA,OAAA,EAmBA,GAhBA,iBAAA+G,GACAZ,EAAAY,EACAA,EAAA,GACAA,EAAA,WACAA,EAAA,WACAA,GAAA,aACAA,GAAA,YAGAO,EADAP,GAAAA,KAGAA,EAAA6B,EAAA,EAAA/B,EAAA7G,OAAA,GAIA+G,EAAA,IAAAA,EAAAF,EAAA7G,OAAA+G,GACAA,GAAAF,EAAA7G,OAAA,CACA,GAAA4I,EAAA,OAAA,EACA7B,EAAAF,EAAA7G,OAAA,CACA,MAAA,GAAA+G,EAAA,EAAA,CACA,IAAA6B,EACA,OAAA,EADA7B,EAAA,CAEA,CAQA,GALA,iBAAA4B,IACAA,EAAAvD,EAAAa,KAAA0C,EAAAxC,IAIAf,EAAA+B,SAAAwB,GAEA,OAAA,IAAAA,EAAA3I,QACA,EAEA6I,EAAAhC,EAAA8B,EAAA5B,EAAAZ,EAAAyC,GACA,GAAA,iBAAAD,EAEA,OADAA,GAAA,IACA,mBAAA9D,WAAA3C,UAAA4C,QACA8D,EACA/D,WAAA3C,UAAA4C,QAAAxG,KAAAuI,EAAA8B,EAAA5B,GAEAlC,WAAA3C,UAAA4G,YAAAxK,KAAAuI,EAAA8B,EAAA5B,GAGA8B,EAAAhC,EAAA,CAAA8B,GAAA5B,EAAAZ,EAAAyC,GAGA,MAAA,IAAArK,UAAA,uCACA,CAEA,SAAAsK,EAAA1I,EAAAwI,EAAA5B,EAAAZ,EAAAyC,GACA,IA0BApJ,EA1BAuJ,EAAA,EACAC,EAAA7I,EAAAH,OACAiJ,EAAAN,EAAA3I,OAEA,QAAA5B,IAAA+H,IAEA,UADAA,EAAArI,OAAAqI,GAAA6B,gBACA,UAAA7B,GACA,YAAAA,GAAA,aAAAA,GAAA,CACA,GAAAhG,EAAAH,OAAA,GAAA2I,EAAA3I,OAAA,EACA,OAAA,EAEA+I,EAAA,EACAC,GAAA,EACAC,GAAA,EACAlC,GAAA,CACA,CAGA,SAAAmC,EAAArD,EAAArG,GACA,OAAA,IAAAuJ,EACAlD,EAAArG,GAEAqG,EAAAsD,aAAA3J,EAAAuJ,EAEA,CAGA,GAAAH,EAAA,CACA,IAAAQ,GAAA,EACA,IAAA5J,EAAAuH,EAAAvH,EAAAwJ,EAAAxJ,IACA,GAAA0J,EAAA/I,EAAAX,KAAA0J,EAAAP,GAAA,IAAAS,EAAA,EAAA5J,EAAA4J,IAEA,IADA,IAAAA,IAAAA,EAAA5J,GACAA,EAAA4J,EAAA,IAAAH,EAAA,OAAAG,EAAAL,OAEA,IAAAK,IAAA5J,GAAAA,EAAA4J,GACAA,GAAA,CAGA,MAEA,IADArC,EAAAkC,EAAAD,IAAAjC,EAAAiC,EAAAC,GACAzJ,EAAAuH,EAAAvH,GAAA,EAAAA,IAAA,CAEA,IADA,IAAA6J,GAAA,EACAC,EAAA,EAAAA,EAAAL,EAAAK,IACA,GAAAJ,EAAA/I,EAAAX,EAAA8J,KAAAJ,EAAAP,EAAAW,GAAA,CACAD,GAAA,EACA,KACA,CAEA,GAAAA,EAAA,OAAA7J,CACA,CAGA,OAAA,CACA,CAcA,SAAA+J,EAAA1D,EAAAK,EAAAsD,EAAAxJ,GACAwJ,EAAAhL,OAAAgL,IAAA,EACA,IAAAC,EAAA5D,EAAA7F,OAAAwJ,EACAxJ,GAGAA,EAAAxB,OAAAwB,IACAyJ,IACAzJ,EAAAyJ,GAJAzJ,EAAAyJ,EAQA,IAAAC,EAAAxD,EAAAlG,OAEAA,EAAA0J,EAAA,IACA1J,EAAA0J,EAAA,GAEA,IAAA,IAAAlK,EAAA,EAAAA,EAAAQ,IAAAR,EAAA,CACA,IAAAmK,EAAAC,SAAA1D,EAAA2D,OAAA,EAAArK,EAAA,GAAA,IACA,GAAA8H,EAAAqC,GAAA,OAAAnK,EACAqG,EAAA2D,EAAAhK,GAAAmK,CACA,CACA,OAAAnK,CACA,CAEA,SAAAsK,EAAAjE,EAAAK,EAAAsD,EAAAxJ,GACA,OAAA+J,EAAAjC,EAAA5B,EAAAL,EAAA7F,OAAAwJ,GAAA3D,EAAA2D,EAAAxJ,EACA,CAEA,SAAAgK,EAAAnE,EAAAK,EAAAsD,EAAAxJ,GACA,OAAA+J,EA63BA,SAAAE,GAEA,IADA,IAAAC,EAAA,GACA1K,EAAA,EAAAA,EAAAyK,EAAAjK,SAAAR,EAEA0K,EAAArI,KAAA,IAAAoI,EAAA9F,WAAA3E,IAEA,OAAA0K,CACA,CAp4BAC,CAAAjE,GAAAL,EAAA2D,EAAAxJ,EACA,CAEA,SAAAoK,EAAAvE,EAAAK,EAAAsD,EAAAxJ,GACA,OAAAgK,EAAAnE,EAAAK,EAAAsD,EAAAxJ,EACA,CAEA,SAAAqK,EAAAxE,EAAAK,EAAAsD,EAAAxJ,GACA,OAAA+J,EAAAhC,EAAA7B,GAAAL,EAAA2D,EAAAxJ,EACA,CAEA,SAAAsK,EAAAzE,EAAAK,EAAAsD,EAAAxJ,GACA,OAAA+J,EA03BA,SAAAE,EAAAM,GAGA,IAFA,IAAA9K,EAAA+K,EAAAC,EACAP,EAAA,GACA1K,EAAA,EAAAA,EAAAyK,EAAAjK,WACAuK,GAAA,GAAA,KADA/K,EAIAgL,GADA/K,EAAAwK,EAAA9F,WAAA3E,KACA,EACAiL,EAAAhL,EAAA,IACAyK,EAAArI,KAAA4I,GACAP,EAAArI,KAAA2I,GAGA,OAAAN,CACA,CAx4BAQ,CAAAxE,EAAAL,EAAA7F,OAAAwJ,GAAA3D,EAAA2D,EAAAxJ,EACA,CAgFA,SAAAsI,EAAAzC,EAAAd,EAAAC,GACA,OAAA,IAAAD,GAAAC,IAAAa,EAAA7F,OACAqF,EAAAjB,cAAAyB,GAEAR,EAAAjB,cAAAyB,EAAAU,MAAAxB,EAAAC,GAEA,CAEA,SAAAmD,EAAAtC,EAAAd,EAAAC,GACAA,EAAAnC,KAAA8H,IAAA9E,EAAA7F,OAAAgF,GAIA,IAHA,IAAA3G,EAAA,GAEAmB,EAAAuF,EACAvF,EAAAwF,GAAA,CACA,IAQA4F,EAAAC,EAAAC,EAAAC,EARAC,EAAAnF,EAAArG,GACAyL,EAAA,KACAC,EAAAF,EAAA,IAAA,EACAA,EAAA,IAAA,EACAA,EAAA,IAAA,EACA,EAEA,GAAAxL,EAAA0L,GAAAlG,EAGA,OAAAkG,GACA,KAAA,EACAF,EAAA,MACAC,EAAAD,GAEA,MACA,KAAA,EAEA,MAAA,KADAJ,EAAA/E,EAAArG,EAAA,OAEAuL,GAAA,GAAAC,IAAA,EAAA,GAAAJ,GACA,MACAK,EAAAF,GAGA,MACA,KAAA,EACAH,EAAA/E,EAAArG,EAAA,GACAqL,EAAAhF,EAAArG,EAAA,GACA,MAAA,IAAAoL,IAAA,MAAA,IAAAC,KACAE,GAAA,GAAAC,IAAA,IAAA,GAAAJ,IAAA,EAAA,GAAAC,GACA,OAAAE,EAAA,OAAAA,EAAA,SACAE,EAAAF,GAGA,MACA,KAAA,EACAH,EAAA/E,EAAArG,EAAA,GACAqL,EAAAhF,EAAArG,EAAA,GACAsL,EAAAjF,EAAArG,EAAA,GACA,MAAA,IAAAoL,IAAA,MAAA,IAAAC,IAAA,MAAA,IAAAC,KACAC,GAAA,GAAAC,IAAA,IAAA,GAAAJ,IAAA,IAAA,GAAAC,IAAA,EAAA,GAAAC,GACA,OAAAC,EAAA,UACAE,EAAAF,GAMA,OAAAE,GAGAA,EAAA,MACAC,EAAA,GACAD,EAAA,QAEAA,GAAA,MACA5M,EAAAwD,KAAAoJ,IAAA,GAAA,KAAA,OACAA,EAAA,MAAA,KAAAA,GAGA5M,EAAAwD,KAAAoJ,GACAzL,GAAA0L,CACA,CAEA,OAQA,SAAAC,GACA,IAAA5I,EAAA4I,EAAAnL,OACA,GAAAuC,GAAA6I,EACA,OAAAtN,OAAAuN,aAAA1K,MAAA7C,OAAAqN,GAIA,IAAA9M,EAAA,GACAmB,EAAA,EACA,KAAAA,EAAA+C,GACAlE,GAAAP,OAAAuN,aAAA1K,MACA7C,OACAqN,EAAA5E,MAAA/G,EAAAA,GAAA4L,IAGA,OAAA/M,CACA,CAxBAiN,CAAAjN,EACA,CA79BAK,EAAA6M,WAAA7F,EAgBAN,EAAAoG,oBAUA,WAEA,IACA,IAAArL,EAAA,IAAA0E,WAAA,GAEA,OADA1E,EAAA2F,UAAA,CAAAA,UAAAjB,WAAA3C,UAAAuJ,IAAA,WAAA,OAAA,EAAA,GACA,KAAAtL,EAAAsL,KACA,CAAA,MAAArM,GACA,OAAA,CACA,CACA,CAnBAsM,GAEAtG,EAAAoG,qBAAA,oBAAAG,SACA,mBAAAA,QAAAC,OACAD,QAAAC,MACA,iJAgBArO,OAAAC,eAAA4H,EAAAlD,UAAA,SAAA,CACAzE,YAAA,EACAoO,IAAA,WACA,GAAAzG,EAAA+B,SAAAlI,MACA,OAAAA,KAAA4H,MACA,IAGAtJ,OAAAC,eAAA4H,EAAAlD,UAAA,SAAA,CACAzE,YAAA,EACAoO,IAAA,WACA,GAAAzG,EAAA+B,SAAAlI,MACA,OAAAA,KAAA8H,UACA,IAqCA,oBAAA7I,QAAA,MAAAA,OAAA4N,SACA1G,EAAAlH,OAAA4N,WAAA1G,GACA7H,OAAAC,eAAA4H,EAAAlH,OAAA4N,QAAA,CACAzO,MAAA,KACAK,cAAA,EACAD,YAAA,EACAE,UAAA,IAIAyH,EAAA2G,SAAA,KA0DA3G,EAAAa,KAAA,SAAA5I,EAAA0I,EAAA/F,GACA,OAAAiG,EAAA5I,EAAA0I,EAAA/F,EACA,EAIAoF,EAAAlD,UAAA4D,UAAAjB,WAAA3C,UACAkD,EAAAU,UAAAjB,WA8BAO,EAAAI,MAAA,SAAAmC,EAAAqE,EAAA7F,GACA,OArBA,SAAAwB,EAAAqE,EAAA7F,GAEA,OADAuB,EAAAC,GACAA,GAAA,EACAhC,EAAAgC,QAEAvJ,IAAA4N,EAIA,iBAAA7F,EACAR,EAAAgC,GAAAqE,KAAAA,EAAA7F,GACAR,EAAAgC,GAAAqE,KAAAA,GAEArG,EAAAgC,EACA,CAOAnC,CAAAmC,EAAAqE,EAAA7F,EACA,EAUAf,EAAAY,YAAA,SAAA2B,GACA,OAAA3B,EAAA2B,EACA,EAIAvC,EAAA6G,gBAAA,SAAAtE,GACA,OAAA3B,EAAA2B,EACA,EAoGAvC,EAAA+B,SAAA,SAAAD,GACA,OAAA,MAAAA,IAAA,IAAAA,EAAAgF,WACAhF,IAAA9B,EAAAlD,SACA,EAEAkD,EAAA+G,QAAA,SAAAvM,EAAAsH,GAGA,GAFAN,EAAAhH,EAAAiF,cAAAjF,EAAAwF,EAAAa,KAAArG,EAAAA,EAAA4J,OAAA5J,EAAA2D,aACAqD,EAAAM,EAAArC,cAAAqC,EAAA9B,EAAAa,KAAAiB,EAAAA,EAAAsC,OAAAtC,EAAA3D,cACA6B,EAAA+B,SAAAvH,KAAAwF,EAAA+B,SAAAD,GACA,MAAA,IAAA3I,UACA,yEAIA,GAAAqB,IAAAsH,EAAA,OAAA,EAKA,IAHA,IAAAkF,EAAAxM,EAAAI,OACAqM,EAAAnF,EAAAlH,OAEAR,EAAA,EAAA+C,EAAAM,KAAA8H,IAAAyB,EAAAC,GAAA7M,EAAA+C,IAAA/C,EACA,GAAAI,EAAAJ,KAAA0H,EAAA1H,GAAA,CACA4M,EAAAxM,EAAAJ,GACA6M,EAAAnF,EAAA1H,GACA,KACA,CAGA,OAAA4M,EAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,CACA,EAEAhH,EAAAgB,WAAA,SAAAD,GACA,OAAArI,OAAAqI,GAAA6B,eACA,IAAA,MACA,IAAA,OACA,IAAA,QACA,IAAA,QACA,IAAA,SACA,IAAA,SACA,IAAA,SACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EACA,QACA,OAAA,EAEA,EAEA5C,EAAA9B,OAAA,SAAAgJ,EAAAtM,GACA,IAAAgC,MAAAC,QAAAqK,GACA,MAAA,IAAA/N,UAAA,+CAGA,GAAA,IAAA+N,EAAAtM,OACA,OAAAoF,EAAAI,MAAA,GAGA,IAAAhG,EACA,QAAApB,IAAA4B,EAEA,IADAA,EAAA,EACAR,EAAA,EAAAA,EAAA8M,EAAAtM,SAAAR,EACAQ,GAAAsM,EAAA9M,GAAAQ,OAIA,IAAA6G,EAAAzB,EAAAY,YAAAhG,GACAuM,EAAA,EACA,IAAA/M,EAAA,EAAAA,EAAA8M,EAAAtM,SAAAR,EAAA,CACA,IAAAqG,EAAAyG,EAAA9M,GAIA,GAHAoH,EAAAf,EAAAhB,cACAgB,EAAAT,EAAAa,KAAAJ,KAEAT,EAAA+B,SAAAtB,GACA,MAAA,IAAAtH,UAAA,+CAEAsH,EAAAwB,KAAAR,EAAA0F,GACAA,GAAA1G,EAAA7F,MACA,CACA,OAAA6G,CACA,EAiDAzB,EAAA7B,WAAAA,EA8EA6B,EAAAlD,UAAAgK,WAAA,EAQA9G,EAAAlD,UAAAsK,OAAA,WACA,IAAAjK,EAAAtD,KAAAe,OACA,GAAAuC,EAAA,GAAA,EACA,MAAA,IAAAqD,WAAA,6CAEA,IAAA,IAAApG,EAAA,EAAAA,EAAA+C,EAAA/C,GAAA,EACAgJ,EAAAvJ,KAAAO,EAAAA,EAAA,GAEA,OAAAP,IACA,EAEAmG,EAAAlD,UAAAuK,OAAA,WACA,IAAAlK,EAAAtD,KAAAe,OACA,GAAAuC,EAAA,GAAA,EACA,MAAA,IAAAqD,WAAA,6CAEA,IAAA,IAAApG,EAAA,EAAAA,EAAA+C,EAAA/C,GAAA,EACAgJ,EAAAvJ,KAAAO,EAAAA,EAAA,GACAgJ,EAAAvJ,KAAAO,EAAA,EAAAA,EAAA,GAEA,OAAAP,IACA,EAEAmG,EAAAlD,UAAAwK,OAAA,WACA,IAAAnK,EAAAtD,KAAAe,OACA,GAAAuC,EAAA,GAAA,EACA,MAAA,IAAAqD,WAAA,6CAEA,IAAA,IAAApG,EAAA,EAAAA,EAAA+C,EAAA/C,GAAA,EACAgJ,EAAAvJ,KAAAO,EAAAA,EAAA,GACAgJ,EAAAvJ,KAAAO,EAAA,EAAAA,EAAA,GACAgJ,EAAAvJ,KAAAO,EAAA,EAAAA,EAAA,GACAgJ,EAAAvJ,KAAAO,EAAA,EAAAA,EAAA,GAEA,OAAAP,IACA,EAEAmG,EAAAlD,UAAAC,SAAA,WACA,IAAAnC,EAAAf,KAAAe,OACA,OAAA,IAAAA,EAAA,GACA,IAAAY,UAAAZ,OAAAmI,EAAAlJ,KAAA,EAAAe,GACAiI,EAAAtH,MAAA1B,KAAA2B,UACA,EAEAwE,EAAAlD,UAAAyK,eAAAvH,EAAAlD,UAAAC,SAEAiD,EAAAlD,UAAA0K,OAAA,SAAA1F,GACA,IAAA9B,EAAA+B,SAAAD,GAAA,MAAA,IAAA3I,UAAA,6BACA,OAAAU,OAAAiI,GACA,IAAA9B,EAAA+G,QAAAlN,KAAAiI,EACA,EAEA9B,EAAAlD,UAAA2K,QAAA,WACA,IAAA5C,EAAA,GACAnH,EAAApE,EAAA+G,kBAGA,OAFAwE,EAAAhL,KAAAkD,SAAA,MAAA,EAAAW,GAAAgK,QAAA,UAAA,OAAAC,OACA9N,KAAAe,OAAA8C,IAAAmH,GAAA,SACA,WAAAA,EAAA,GACA,EAEA7E,EAAAlD,UAAAiK,QAAA,SAAAa,EAAAjI,EAAAC,EAAAiI,EAAAC,GAIA,GAHAtG,EAAAoG,EAAAnI,cACAmI,EAAA5H,EAAAa,KAAA+G,EAAAA,EAAAxD,OAAAwD,EAAAzJ,cAEA6B,EAAA+B,SAAA6F,GACA,MAAA,IAAAzO,UACA,wFACAyO,GAiBA,QAbA5O,IAAA2G,IACAA,EAAA,QAEA3G,IAAA4G,IACAA,EAAAgI,EAAAA,EAAAhN,OAAA,QAEA5B,IAAA6O,IACAA,EAAA,QAEA7O,IAAA8O,IACAA,EAAAjO,KAAAe,QAGA+E,EAAA,GAAAC,EAAAgI,EAAAhN,QAAAiN,EAAA,GAAAC,EAAAjO,KAAAe,OACA,MAAA,IAAA4F,WAAA,sBAGA,GAAAqH,GAAAC,GAAAnI,GAAAC,EACA,OAAA,EAEA,GAAAiI,GAAAC,EACA,OAAA,EAEA,GAAAnI,GAAAC,EACA,OAAA,EAQA,GAAA/F,OAAA+N,EAAA,OAAA,EASA,IAPA,IAAAZ,GAJAc,KAAA,IADAD,KAAA,GAMAZ,GAPArH,KAAA,IADAD,KAAA,GASAxC,EAAAM,KAAA8H,IAAAyB,EAAAC,GAEAc,EAAAlO,KAAAsH,MAAA0G,EAAAC,GACAE,EAAAJ,EAAAzG,MAAAxB,EAAAC,GAEAxF,EAAA,EAAAA,EAAA+C,IAAA/C,EACA,GAAA2N,EAAA3N,KAAA4N,EAAA5N,GAAA,CACA4M,EAAAe,EAAA3N,GACA6M,EAAAe,EAAA5N,GACA,KACA,CAGA,OAAA4M,EAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,CACA,EA2HAhH,EAAAlD,UAAAmL,SAAA,SAAA1E,EAAA5B,EAAAZ,GACA,OAAA,IAAAlH,KAAA6F,QAAA6D,EAAA5B,EAAAZ,EACA,EAEAf,EAAAlD,UAAA4C,QAAA,SAAA6D,EAAA5B,EAAAZ,GACA,OAAAuC,EAAAzJ,KAAA0J,EAAA5B,EAAAZ,GAAA,EACA,EAEAf,EAAAlD,UAAA4G,YAAA,SAAAH,EAAA5B,EAAAZ,GACA,OAAAuC,EAAAzJ,KAAA0J,EAAA5B,EAAAZ,GAAA,EACA,EA+CAf,EAAAlD,UAAAoE,MAAA,SAAAJ,EAAAsD,EAAAxJ,EAAAmG,GAEA,QAAA/H,IAAAoL,EACArD,EAAA,OACAnG,EAAAf,KAAAe,OACAwJ,EAAA,OAEA,QAAApL,IAAA4B,GAAA,iBAAAwJ,EACArD,EAAAqD,EACAxJ,EAAAf,KAAAe,OACAwJ,EAAA,MAEA,KAAA8D,SAAA9D,GAUA,MAAA,IAAA3J,MACA,2EAVA2J,KAAA,EACA8D,SAAAtN,IACAA,KAAA,OACA5B,IAAA+H,IAAAA,EAAA,UAEAA,EAAAnG,EACAA,OAAA5B,EAMA,CAEA,IAAAqL,EAAAxK,KAAAe,OAAAwJ,EAGA,SAFApL,IAAA4B,GAAAA,EAAAyJ,KAAAzJ,EAAAyJ,GAEAvD,EAAAlG,OAAA,IAAAA,EAAA,GAAAwJ,EAAA,IAAAA,EAAAvK,KAAAe,OACA,MAAA,IAAA4F,WAAA,0CAGAO,IAAAA,EAAA,QAGA,IADA,IAAA0B,GAAA,IAEA,OAAA1B,GACA,IAAA,MACA,OAAAoD,EAAAtK,KAAAiH,EAAAsD,EAAAxJ,GAEA,IAAA,OACA,IAAA,QACA,OAAA8J,EAAA7K,KAAAiH,EAAAsD,EAAAxJ,GAEA,IAAA,QACA,OAAAgK,EAAA/K,KAAAiH,EAAAsD,EAAAxJ,GAEA,IAAA,SACA,IAAA,SACA,OAAAoK,EAAAnL,KAAAiH,EAAAsD,EAAAxJ,GAEA,IAAA,SAEA,OAAAqK,EAAApL,KAAAiH,EAAAsD,EAAAxJ,GAEA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAAsK,EAAArL,KAAAiH,EAAAsD,EAAAxJ,GAEA,QACA,GAAA6H,EAAA,MAAA,IAAAtJ,UAAA,qBAAA4H,GACAA,GAAA,GAAAA,GAAA6B,cACAH,GAAA,EAGA,EAEAzC,EAAAlD,UAAAqL,OAAA,WACA,MAAA,CACAhG,KAAA,SACAC,KAAAxF,MAAAE,UAAAqE,MAAAjI,KAAAW,KAAAuO,MAAAvO,KAAA,GAEA,EAsFA,IAAAmM,EAAA,KAoBA,SAAAhD,EAAAvC,EAAAd,EAAAC,GACA,IAAAyI,EAAA,GACAzI,EAAAnC,KAAA8H,IAAA9E,EAAA7F,OAAAgF,GAEA,IAAA,IAAAxF,EAAAuF,EAAAvF,EAAAwF,IAAAxF,EACAiO,GAAA3P,OAAAuN,aAAA,IAAAxF,EAAArG,IAEA,OAAAiO,CACA,CAEA,SAAApF,EAAAxC,EAAAd,EAAAC,GACA,IAAAyI,EAAA,GACAzI,EAAAnC,KAAA8H,IAAA9E,EAAA7F,OAAAgF,GAEA,IAAA,IAAAxF,EAAAuF,EAAAvF,EAAAwF,IAAAxF,EACAiO,GAAA3P,OAAAuN,aAAAxF,EAAArG,IAEA,OAAAiO,CACA,CAEA,SAAAvF,EAAArC,EAAAd,EAAAC,GACA,IAAAzC,EAAAsD,EAAA7F,SAEA+E,GAAAA,EAAA,KAAAA,EAAA,KACAC,GAAAA,EAAA,GAAAA,EAAAzC,KAAAyC,EAAAzC,GAGA,IADA,IAAAmL,EAAA,GACAlO,EAAAuF,EAAAvF,EAAAwF,IAAAxF,EACAkO,GAAAC,EAAA9H,EAAArG,IAEA,OAAAkO,CACA,CAEA,SAAAnF,EAAA1C,EAAAd,EAAAC,GAGA,IAFA,IAAA4I,EAAA/H,EAAAU,MAAAxB,EAAAC,GACA3G,EAAA,GACAmB,EAAA,EAAAA,EAAAoO,EAAA5N,OAAAR,GAAA,EACAnB,GAAAP,OAAAuN,aAAAuC,EAAApO,GAAA,IAAAoO,EAAApO,EAAA,IAEA,OAAAnB,CACA,CAgCA,SAAAwP,EAAArE,EAAAsE,EAAA9N,GACA,GAAAwJ,EAAA,GAAA,GAAAA,EAAA,EAAA,MAAA,IAAA5D,WAAA,sBACA,GAAA4D,EAAAsE,EAAA9N,EAAA,MAAA,IAAA4F,WAAA,wCACA,CA4KA,SAAAmI,EAAAlI,EAAAxI,EAAAmM,EAAAsE,EAAAhL,EAAA6H,GACA,IAAAvF,EAAA+B,SAAAtB,GAAA,MAAA,IAAAtH,UAAA,+CACA,GAAAlB,EAAAyF,GAAAzF,EAAAsN,EAAA,MAAA,IAAA/E,WAAA,qCACA,GAAA4D,EAAAsE,EAAAjI,EAAA7F,OAAA,MAAA,IAAA4F,WAAA,qBACA,CAwLA,SAAAoI,EAAAnI,EAAAxI,EAAAmM,EAAAsE,EAAAhL,EAAA6H,GACA,GAAAnB,EAAAsE,EAAAjI,EAAA7F,OAAA,MAAA,IAAA4F,WAAA,sBACA,GAAA4D,EAAA,EAAA,MAAA,IAAA5D,WAAA,qBACA,CAEA,SAAAqI,EAAApI,EAAAxI,EAAAmM,EAAA0E,EAAAC,GAOA,OANA9Q,GAAAA,EACAmM,KAAA,EACA2E,GACAH,EAAAnI,EAAAxI,EAAAmM,EAAA,GAEAlE,EAAAgB,MAAAT,EAAAxI,EAAAmM,EAAA0E,EAAA,GAAA,GACA1E,EAAA,CACA,CAUA,SAAA4E,EAAAvI,EAAAxI,EAAAmM,EAAA0E,EAAAC,GAOA,OANA9Q,GAAAA,EACAmM,KAAA,EACA2E,GACAH,EAAAnI,EAAAxI,EAAAmM,EAAA,GAEAlE,EAAAgB,MAAAT,EAAAxI,EAAAmM,EAAA0E,EAAA,GAAA,GACA1E,EAAA,CACA,CAxaApE,EAAAlD,UAAAqE,MAAA,SAAAxB,EAAAC,GACA,IAAAzC,EAAAtD,KAAAe,QACA+E,IAAAA,GAGA,GACAA,GAAAxC,GACA,IAAAwC,EAAA,GACAA,EAAAxC,IACAwC,EAAAxC,IANAyC,OAAA5G,IAAA4G,EAAAzC,IAAAyC,GASA,GACAA,GAAAzC,GACA,IAAAyC,EAAA,GACAA,EAAAzC,IACAyC,EAAAzC,GAGAyC,EAAAD,IAAAC,EAAAD,GAEA,IAAAsJ,EAAApP,KAAAqP,SAAAvJ,EAAAC,GAGA,OADAqJ,EAAAvI,UAAAV,EAAAlD,UACAmM,CACA,EAUAjJ,EAAAlD,UAAAqM,WAAA,SAAA/E,EAAAjG,EAAA4K,GACA3E,KAAA,EACAjG,KAAA,EACA4K,GAAAN,EAAArE,EAAAjG,EAAAtE,KAAAe,QAKA,IAHA,IAAA2I,EAAA1J,KAAAuK,GACAgF,EAAA,EACAhP,EAAA,IACAA,EAAA+D,IAAAiL,GAAA,MACA7F,GAAA1J,KAAAuK,EAAAhK,GAAAgP,EAGA,OAAA7F,CACA,EAEAvD,EAAAlD,UAAAuM,WAAA,SAAAjF,EAAAjG,EAAA4K,GACA3E,KAAA,EACAjG,KAAA,EACA4K,GACAN,EAAArE,EAAAjG,EAAAtE,KAAAe,QAKA,IAFA,IAAA2I,EAAA1J,KAAAuK,IAAAjG,GACAiL,EAAA,EACAjL,EAAA,IAAAiL,GAAA,MACA7F,GAAA1J,KAAAuK,IAAAjG,GAAAiL,EAGA,OAAA7F,CACA,EAEAvD,EAAAlD,UAAAwM,UAAA,SAAAlF,EAAA2E,GAGA,OAFA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACAf,KAAAuK,EACA,EAEApE,EAAAlD,UAAAyM,aAAA,SAAAnF,EAAA2E,GAGA,OAFA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACAf,KAAAuK,GAAAvK,KAAAuK,EAAA,IAAA,CACA,EAEApE,EAAAlD,UAAAiH,aAAA,SAAAK,EAAA2E,GAGA,OAFA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACAf,KAAAuK,IAAA,EAAAvK,KAAAuK,EAAA,EACA,EAEApE,EAAAlD,UAAA0M,aAAA,SAAApF,EAAA2E,GAIA,OAHA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,SAEAf,KAAAuK,GACAvK,KAAAuK,EAAA,IAAA,EACAvK,KAAAuK,EAAA,IAAA,IACA,SAAAvK,KAAAuK,EAAA,EACA,EAEApE,EAAAlD,UAAA2M,aAAA,SAAArF,EAAA2E,GAIA,OAHA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QAEA,SAAAf,KAAAuK,IACAvK,KAAAuK,EAAA,IAAA,GACAvK,KAAAuK,EAAA,IAAA,EACAvK,KAAAuK,EAAA,GACA,EAEApE,EAAAlD,UAAA4M,UAAA,SAAAtF,EAAAjG,EAAA4K,GACA3E,KAAA,EACAjG,KAAA,EACA4K,GAAAN,EAAArE,EAAAjG,EAAAtE,KAAAe,QAKA,IAHA,IAAA2I,EAAA1J,KAAAuK,GACAgF,EAAA,EACAhP,EAAA,IACAA,EAAA+D,IAAAiL,GAAA,MACA7F,GAAA1J,KAAAuK,EAAAhK,GAAAgP,EAMA,OAFA7F,IAFA6F,GAAA,OAEA7F,GAAA9F,KAAAkM,IAAA,EAAA,EAAAxL,IAEAoF,CACA,EAEAvD,EAAAlD,UAAA8M,UAAA,SAAAxF,EAAAjG,EAAA4K,GACA3E,KAAA,EACAjG,KAAA,EACA4K,GAAAN,EAAArE,EAAAjG,EAAAtE,KAAAe,QAKA,IAHA,IAAAR,EAAA+D,EACAiL,EAAA,EACA7F,EAAA1J,KAAAuK,IAAAhK,GACAA,EAAA,IAAAgP,GAAA,MACA7F,GAAA1J,KAAAuK,IAAAhK,GAAAgP,EAMA,OAFA7F,IAFA6F,GAAA,OAEA7F,GAAA9F,KAAAkM,IAAA,EAAA,EAAAxL,IAEAoF,CACA,EAEAvD,EAAAlD,UAAA+M,SAAA,SAAAzF,EAAA2E,GAGA,OAFA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACA,IAAAf,KAAAuK,IACA,GAAA,IAAAvK,KAAAuK,GAAA,GADAvK,KAAAuK,EAEA,EAEApE,EAAAlD,UAAAgN,YAAA,SAAA1F,EAAA2E,GACA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACA,IAAA2I,EAAA1J,KAAAuK,GAAAvK,KAAAuK,EAAA,IAAA,EACA,OAAA,MAAAb,EAAA,WAAAA,EAAAA,CACA,EAEAvD,EAAAlD,UAAAiN,YAAA,SAAA3F,EAAA2E,GACA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACA,IAAA2I,EAAA1J,KAAAuK,EAAA,GAAAvK,KAAAuK,IAAA,EACA,OAAA,MAAAb,EAAA,WAAAA,EAAAA,CACA,EAEAvD,EAAAlD,UAAAkN,YAAA,SAAA5F,EAAA2E,GAIA,OAHA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QAEAf,KAAAuK,GACAvK,KAAAuK,EAAA,IAAA,EACAvK,KAAAuK,EAAA,IAAA,GACAvK,KAAAuK,EAAA,IAAA,EACA,EAEApE,EAAAlD,UAAAmN,YAAA,SAAA7F,EAAA2E,GAIA,OAHA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QAEAf,KAAAuK,IAAA,GACAvK,KAAAuK,EAAA,IAAA,GACAvK,KAAAuK,EAAA,IAAA,EACAvK,KAAAuK,EAAA,EACA,EAEApE,EAAAlD,UAAAoN,YAAA,SAAA9F,EAAA2E,GAGA,OAFA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACAsF,EAAA4D,KAAAjK,KAAAuK,GAAA,EAAA,GAAA,EACA,EAEApE,EAAAlD,UAAAqN,YAAA,SAAA/F,EAAA2E,GAGA,OAFA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACAsF,EAAA4D,KAAAjK,KAAAuK,GAAA,EAAA,GAAA,EACA,EAEApE,EAAAlD,UAAAsN,aAAA,SAAAhG,EAAA2E,GAGA,OAFA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACAsF,EAAA4D,KAAAjK,KAAAuK,GAAA,EAAA,GAAA,EACA,EAEApE,EAAAlD,UAAAuN,aAAA,SAAAjG,EAAA2E,GAGA,OAFA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACAsF,EAAA4D,KAAAjK,KAAAuK,GAAA,EAAA,GAAA,EACA,EAQApE,EAAAlD,UAAAwN,YAAA,SAAArS,EAAAmM,EAAAjG,EAAA4K,IACA9Q,GAAAA,EACAmM,KAAA,EACAjG,KAAA,EACA4K,IAEAJ,EAAA9O,KAAA5B,EAAAmM,EAAAjG,EADAV,KAAAkM,IAAA,EAAA,EAAAxL,GAAA,EACA,GAGA,IAAAiL,EAAA,EACAhP,EAAA,EAEA,IADAP,KAAAuK,GAAA,IAAAnM,IACAmC,EAAA+D,IAAAiL,GAAA,MACAvP,KAAAuK,EAAAhK,GAAAnC,EAAAmR,EAAA,IAGA,OAAAhF,EAAAjG,CACA,EAEA6B,EAAAlD,UAAAyN,YAAA,SAAAtS,EAAAmM,EAAAjG,EAAA4K,IACA9Q,GAAAA,EACAmM,KAAA,EACAjG,KAAA,EACA4K,IAEAJ,EAAA9O,KAAA5B,EAAAmM,EAAAjG,EADAV,KAAAkM,IAAA,EAAA,EAAAxL,GAAA,EACA,GAGA,IAAA/D,EAAA+D,EAAA,EACAiL,EAAA,EAEA,IADAvP,KAAAuK,EAAAhK,GAAA,IAAAnC,IACAmC,GAAA,IAAAgP,GAAA,MACAvP,KAAAuK,EAAAhK,GAAAnC,EAAAmR,EAAA,IAGA,OAAAhF,EAAAjG,CACA,EAEA6B,EAAAlD,UAAA0N,WAAA,SAAAvS,EAAAmM,EAAA2E,GAKA,OAJA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,IAAA,GACAvK,KAAAuK,GAAA,IAAAnM,EACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAA2N,cAAA,SAAAxS,EAAAmM,EAAA2E,GAMA,OALA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,MAAA,GACAvK,KAAAuK,GAAA,IAAAnM,EACA4B,KAAAuK,EAAA,GAAAnM,IAAA,EACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAA4N,cAAA,SAAAzS,EAAAmM,EAAA2E,GAMA,OALA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,MAAA,GACAvK,KAAAuK,GAAAnM,IAAA,EACA4B,KAAAuK,EAAA,GAAA,IAAAnM,EACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAA6N,cAAA,SAAA1S,EAAAmM,EAAA2E,GAQA,OAPA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,WAAA,GACAvK,KAAAuK,EAAA,GAAAnM,IAAA,GACA4B,KAAAuK,EAAA,GAAAnM,IAAA,GACA4B,KAAAuK,EAAA,GAAAnM,IAAA,EACA4B,KAAAuK,GAAA,IAAAnM,EACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAA8N,cAAA,SAAA3S,EAAAmM,EAAA2E,GAQA,OAPA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,WAAA,GACAvK,KAAAuK,GAAAnM,IAAA,GACA4B,KAAAuK,EAAA,GAAAnM,IAAA,GACA4B,KAAAuK,EAAA,GAAAnM,IAAA,EACA4B,KAAAuK,EAAA,GAAA,IAAAnM,EACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAA+N,WAAA,SAAA5S,EAAAmM,EAAAjG,EAAA4K,GAGA,GAFA9Q,GAAAA,EACAmM,KAAA,GACA2E,EAAA,CACA,IAAA/N,EAAAyC,KAAAkM,IAAA,EAAA,EAAAxL,EAAA,GAEAwK,EAAA9O,KAAA5B,EAAAmM,EAAAjG,EAAAnD,EAAA,GAAAA,EACA,CAEA,IAAAZ,EAAA,EACAgP,EAAA,EACA0B,EAAA,EAEA,IADAjR,KAAAuK,GAAA,IAAAnM,IACAmC,EAAA+D,IAAAiL,GAAA,MACAnR,EAAA,GAAA,IAAA6S,GAAA,IAAAjR,KAAAuK,EAAAhK,EAAA,KACA0Q,EAAA,GAEAjR,KAAAuK,EAAAhK,IAAAnC,EAAAmR,GAAA,GAAA0B,EAAA,IAGA,OAAA1G,EAAAjG,CACA,EAEA6B,EAAAlD,UAAAiO,WAAA,SAAA9S,EAAAmM,EAAAjG,EAAA4K,GAGA,GAFA9Q,GAAAA,EACAmM,KAAA,GACA2E,EAAA,CACA,IAAA/N,EAAAyC,KAAAkM,IAAA,EAAA,EAAAxL,EAAA,GAEAwK,EAAA9O,KAAA5B,EAAAmM,EAAAjG,EAAAnD,EAAA,GAAAA,EACA,CAEA,IAAAZ,EAAA+D,EAAA,EACAiL,EAAA,EACA0B,EAAA,EAEA,IADAjR,KAAAuK,EAAAhK,GAAA,IAAAnC,IACAmC,GAAA,IAAAgP,GAAA,MACAnR,EAAA,GAAA,IAAA6S,GAAA,IAAAjR,KAAAuK,EAAAhK,EAAA,KACA0Q,EAAA,GAEAjR,KAAAuK,EAAAhK,IAAAnC,EAAAmR,GAAA,GAAA0B,EAAA,IAGA,OAAA1G,EAAAjG,CACA,EAEA6B,EAAAlD,UAAAkO,UAAA,SAAA/S,EAAAmM,EAAA2E,GAMA,OALA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,KAAA,KACAnM,EAAA,IAAAA,EAAA,IAAAA,EAAA,GACA4B,KAAAuK,GAAA,IAAAnM,EACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAAmO,aAAA,SAAAhT,EAAAmM,EAAA2E,GAMA,OALA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,OAAA,OACAvK,KAAAuK,GAAA,IAAAnM,EACA4B,KAAAuK,EAAA,GAAAnM,IAAA,EACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAAoO,aAAA,SAAAjT,EAAAmM,EAAA2E,GAMA,OALA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,OAAA,OACAvK,KAAAuK,GAAAnM,IAAA,EACA4B,KAAAuK,EAAA,GAAA,IAAAnM,EACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAAqO,aAAA,SAAAlT,EAAAmM,EAAA2E,GAQA,OAPA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,YAAA,YACAvK,KAAAuK,GAAA,IAAAnM,EACA4B,KAAAuK,EAAA,GAAAnM,IAAA,EACA4B,KAAAuK,EAAA,GAAAnM,IAAA,GACA4B,KAAAuK,EAAA,GAAAnM,IAAA,GACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAAsO,aAAA,SAAAnT,EAAAmM,EAAA2E,GASA,OARA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,YAAA,YACAnM,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACA4B,KAAAuK,GAAAnM,IAAA,GACA4B,KAAAuK,EAAA,GAAAnM,IAAA,GACA4B,KAAAuK,EAAA,GAAAnM,IAAA,EACA4B,KAAAuK,EAAA,GAAA,IAAAnM,EACAmM,EAAA,CACA,EAiBApE,EAAAlD,UAAAuO,aAAA,SAAApT,EAAAmM,EAAA2E,GACA,OAAAF,EAAAhP,KAAA5B,EAAAmM,GAAA,EAAA2E,EACA,EAEA/I,EAAAlD,UAAAwO,aAAA,SAAArT,EAAAmM,EAAA2E,GACA,OAAAF,EAAAhP,KAAA5B,EAAAmM,GAAA,EAAA2E,EACA,EAYA/I,EAAAlD,UAAAyO,cAAA,SAAAtT,EAAAmM,EAAA2E,GACA,OAAAC,EAAAnP,KAAA5B,EAAAmM,GAAA,EAAA2E,EACA,EAEA/I,EAAAlD,UAAA0O,cAAA,SAAAvT,EAAAmM,EAAA2E,GACA,OAAAC,EAAAnP,KAAA5B,EAAAmM,GAAA,EAAA2E,EACA,EAGA/I,EAAAlD,UAAAmF,KAAA,SAAA2F,EAAA6D,EAAA9L,EAAAC,GACA,IAAAI,EAAA+B,SAAA6F,GAAA,MAAA,IAAAzO,UAAA,+BAQA,GAPAwG,IAAAA,EAAA,GACAC,GAAA,IAAAA,IAAAA,EAAA/F,KAAAe,QACA6Q,GAAA7D,EAAAhN,SAAA6Q,EAAA7D,EAAAhN,QACA6Q,IAAAA,EAAA,GACA7L,EAAA,GAAAA,EAAAD,IAAAC,EAAAD,GAGAC,IAAAD,EAAA,OAAA,EACA,GAAA,IAAAiI,EAAAhN,QAAA,IAAAf,KAAAe,OAAA,OAAA,EAGA,GAAA6Q,EAAA,EACA,MAAA,IAAAjL,WAAA,6BAEA,GAAAb,EAAA,GAAAA,GAAA9F,KAAAe,OAAA,MAAA,IAAA4F,WAAA,sBACA,GAAAZ,EAAA,EAAA,MAAA,IAAAY,WAAA,2BAGAZ,EAAA/F,KAAAe,SAAAgF,EAAA/F,KAAAe,QACAgN,EAAAhN,OAAA6Q,EAAA7L,EAAAD,IACAC,EAAAgI,EAAAhN,OAAA6Q,EAAA9L,GAGA,IAAAxC,EAAAyC,EAAAD,EAEA,GAAA9F,OAAA+N,GAAA,mBAAAnI,WAAA3C,UAAA4O,WAEA7R,KAAA6R,WAAAD,EAAA9L,EAAAC,QACA,GAAA/F,OAAA+N,GAAAjI,EAAA8L,GAAAA,EAAA7L,EAEA,IAAA,IAAAxF,EAAA+C,EAAA,EAAA/C,GAAA,IAAAA,EACAwN,EAAAxN,EAAAqR,GAAA5R,KAAAO,EAAAuF,QAGAF,WAAA3C,UAAA6O,IAAAzS,KACA0O,EACA/N,KAAAqP,SAAAvJ,EAAAC,GACA6L,GAIA,OAAAtO,CACA,EAMA6C,EAAAlD,UAAA8J,KAAA,SAAArD,EAAA5D,EAAAC,EAAAmB,GAEA,GAAA,iBAAAwC,EAAA,CASA,GARA,iBAAA5D,GACAoB,EAAApB,EACAA,EAAA,EACAC,EAAA/F,KAAAe,QACA,iBAAAgF,IACAmB,EAAAnB,EACAA,EAAA/F,KAAAe,aAEA5B,IAAA+H,GAAA,iBAAAA,EACA,MAAA,IAAA5H,UAAA,6BAEA,GAAA,iBAAA4H,IAAAf,EAAAgB,WAAAD,GACA,MAAA,IAAA5H,UAAA,qBAAA4H,GAEA,GAAA,IAAAwC,EAAA3I,OAAA,CACA,IAAAF,EAAA6I,EAAAxE,WAAA,IACA,SAAAgC,GAAArG,EAAA,KACA,WAAAqG,KAEAwC,EAAA7I,EAEA,CACA,KAAA,iBAAA6I,IACAA,GAAA,KAIA,GAAA5D,EAAA,GAAA9F,KAAAe,OAAA+E,GAAA9F,KAAAe,OAAAgF,EACA,MAAA,IAAAY,WAAA,sBAGA,GAAAZ,GAAAD,EACA,OAAA9F,KAQA,IAAAO,EACA,GANAuF,KAAA,EACAC,OAAA5G,IAAA4G,EAAA/F,KAAAe,OAAAgF,IAAA,EAEA2D,IAAAA,EAAA,GAGA,iBAAAA,EACA,IAAAnJ,EAAAuF,EAAAvF,EAAAwF,IAAAxF,EACAP,KAAAO,GAAAmJ,MAEA,CACA,IAAAiF,EAAAxI,EAAA+B,SAAAwB,GACAA,EACAvD,EAAAa,KAAA0C,EAAAxC,GACA5D,EAAAqL,EAAA5N,OACA,GAAA,IAAAuC,EACA,MAAA,IAAAhE,UAAA,cAAAoK,EACA,qCAEA,IAAAnJ,EAAA,EAAAA,EAAAwF,EAAAD,IAAAvF,EACAP,KAAAO,EAAAuF,GAAA6I,EAAApO,EAAA+C,EAEA,CAEA,OAAAtD,IACA,EAKA,IAAA+R,EAAA,oBAgBA,SAAArD,EAAAtO,GACA,OAAAA,EAAA,GAAA,IAAAA,EAAA8C,SAAA,IACA9C,EAAA8C,SAAA,GACA,CAEA,SAAA2F,EAAA5B,EAAAqE,GAEA,IAAAU,EADAV,EAAAA,GAAA0G,IAMA,IAJA,IAAAjR,EAAAkG,EAAAlG,OACAkR,EAAA,KACAtD,EAAA,GAEApO,EAAA,EAAAA,EAAAQ,IAAAR,EAAA,CAIA,IAHAyL,EAAA/E,EAAA/B,WAAA3E,IAGA,OAAAyL,EAAA,MAAA,CAEA,IAAAiG,EAAA,CAEA,GAAAjG,EAAA,MAAA,EAEAV,GAAA,IAAA,GAAAqD,EAAA/L,KAAA,IAAA,IAAA,KACA,QACA,CAAA,GAAArC,EAAA,IAAAQ,EAAA,EAEAuK,GAAA,IAAA,GAAAqD,EAAA/L,KAAA,IAAA,IAAA,KACA,QACA,CAGAqP,EAAAjG,EAEA,QACA,CAGA,GAAAA,EAAA,MAAA,EACAV,GAAA,IAAA,GAAAqD,EAAA/L,KAAA,IAAA,IAAA,KACAqP,EAAAjG,EACA,QACA,CAGAA,EAAA,OAAAiG,EAAA,OAAA,GAAAjG,EAAA,MACA,MAAAiG,IAEA3G,GAAA,IAAA,GAAAqD,EAAA/L,KAAA,IAAA,IAAA,KAMA,GAHAqP,EAAA,KAGAjG,EAAA,IAAA,CACA,IAAAV,GAAA,GAAA,EAAA,MACAqD,EAAA/L,KAAAoJ,EACA,MAAA,GAAAA,EAAA,KAAA,CACA,IAAAV,GAAA,GAAA,EAAA,MACAqD,EAAA/L,KACAoJ,GAAA,EAAA,IACA,GAAAA,EAAA,IAEA,MAAA,GAAAA,EAAA,MAAA,CACA,IAAAV,GAAA,GAAA,EAAA,MACAqD,EAAA/L,KACAoJ,GAAA,GAAA,IACAA,GAAA,EAAA,GAAA,IACA,GAAAA,EAAA,IAEA,KAAA,MAAAA,EAAA,SASA,MAAA,IAAApL,MAAA,sBARA,IAAA0K,GAAA,GAAA,EAAA,MACAqD,EAAA/L,KACAoJ,GAAA,GAAA,IACAA,GAAA,GAAA,GAAA,IACAA,GAAA,EAAA,GAAA,IACA,GAAAA,EAAA,IAIA,CACA,CAEA,OAAA2C,CACA,CA2BA,SAAA7F,EAAAkC,GACA,OAAA5E,EAAAxB,YA7HA,SAAAoG,GAMA,IAFAA,GAFAA,EAAAA,EAAAkH,MAAA,KAAA,IAEApE,OAAAD,QAAAkE,EAAA,KAEAhR,OAAA,EAAA,MAAA,GAEA,KAAAiK,EAAAjK,OAAA,GAAA,GACAiK,GAAA,IAEA,OAAAA,CACA,CAiHAmH,CAAAnH,GACA,CAEA,SAAAF,EAAAsH,EAAAC,EAAA9H,EAAAxJ,GACA,IAAA,IAAAR,EAAA,EAAAA,EAAAQ,KACAR,EAAAgK,GAAA8H,EAAAtR,QAAAR,GAAA6R,EAAArR,UADAR,EAEA8R,EAAA9R,EAAAgK,GAAA6H,EAAA7R,GAEA,OAAAA,CACA,CAKA,SAAAoH,EAAAzJ,EAAAoK,GACA,OAAApK,aAAAoK,GACA,MAAApK,GAAA,MAAAA,EAAAoU,aAAA,MAAApU,EAAAoU,YAAAC,MACArU,EAAAoU,YAAAC,OAAAjK,EAAAiK,IACA,CACA,SAAAlK,EAAAnK,GAEA,OAAAA,GAAAA,CACA,ClBwaC,GAAEmB,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,UAAU0F,OAE5C,EAAE,CAAC,YAAY,GAAGyB,OAAS,GAAGvB,QAAU,KAAK,GAAG,CAAC,SAAS5F,EAAQf,EAAOD,GmB1pEzEC,EAAAD,QAAA,CACA,IAAA,WACA,IAAA,sBACA,IAAA,aACA,IAAA,KACA,IAAA,UACA,IAAA,WACA,IAAA,gCACA,IAAA,aACA,IAAA,gBACA,IAAA,kBACA,IAAA,eACA,IAAA,mBACA,IAAA,UACA,IAAA,mBACA,IAAA,oBACA,IAAA,QACA,IAAA,YACA,IAAA,eACA,IAAA,YACA,IAAA,qBACA,IAAA,qBACA,IAAA,cACA,IAAA,eACA,IAAA,mBACA,IAAA,YACA,IAAA,YACA,IAAA,qBACA,IAAA,iBACA,IAAA,gCACA,IAAA,kBACA,IAAA,WACA,IAAA,OACA,IAAA,kBACA,IAAA,sBACA,IAAA,oBACA,IAAA,eACA,IAAA,yBACA,IAAA,wBACA,IAAA,qBACA,IAAA,eACA,IAAA,sBACA,IAAA,uBACA,IAAA,SACA,IAAA,oBACA,IAAA,uBACA,IAAA,mBACA,IAAA,wBACA,IAAA,oBACA,IAAA,kCACA,IAAA,gCACA,IAAA,wBACA,IAAA,kBACA,IAAA,cACA,IAAA,sBACA,IAAA,kBACA,IAAA,6BACA,IAAA,0BACA,IAAA,uBACA,IAAA,gBACA,IAAA,2BACA,IAAA,eACA,IAAA,kCnB8pEA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASgB,EAAQf,EAAOD,GoB5sElC,MAAA+S,EAAA/R,EAAA,6BAEAgS,EAAAhS,EAAA,mBA8MAf,EAAAD,QA5MA,cAAA+S,EAEAF,YAAAI,EAAAC,EAAAC,QAEAzT,IAAAuT,EAEAG,MAAA,CAAA,GAIAA,MAAAH,EAAAC,EAAAC,GAGA5S,KAAA8S,YAAA,cAGA9S,KAAA+S,SAAA,CAAA,EAEA/S,KAAAgT,WAAA,CAAA,EAEAhT,KAAAiT,MAAA,IAAAR,EAGAzS,KAAAkT,UAAA,EAGAlT,KAAAmT,OAAA,CACA,CAEAC,gBAEA,OAAApT,KAAAgT,UACA,CAGAK,IAAAC,EAAAC,GAGA,GAAAvT,KAAA+S,SAAAtP,eAAA8P,GAKA,OAFAvT,KAAA+S,SAAAQ,GAAAC,MAAAF,EACAtT,KAAAgT,WAAAO,GAAAD,EACAtT,KAAA+S,SAAAQ,GAAAC,MAGA,IAAAC,EAAAzT,KAAAiT,MAAArQ,KAAA0Q,EAAAC,GAiBA,OAhBAvT,KAAA+S,SAAAU,EAAAC,MAAAD,EACAzT,KAAAgT,WAAAO,GAAAD,EAGAtT,KAAAkT,UAAA,GAAAlT,KAAAiT,MAAAlS,OAAAf,KAAAkT,YAGAO,EAAAzT,KAAAiT,MAAAtQ,aAEA3C,KAAAgT,WAAAS,EAAAC,aACA1T,KAAA+S,SAAAU,EAAAC,OAIAD,EAAAE,SAAAC,SAAA,IAAAC,KAEAJ,EAAAD,KACA,CAGAvJ,KAAAsJ,GAEA,QAAAvT,KAAA+S,SAAAtP,eAAA8P,IAKAvT,KAAA+S,SAAAQ,GAAAC,KACA,CAGAM,MAAAP,GAEA,IAAAvT,KAAA+S,SAAAtP,eAAA8P,GAEA,OAAA,EAIA,IAAAE,EAAAzT,KAAAiT,MAAAc,OAAA/T,KAAA+S,SAAAQ,IAMA,cAJAvT,KAAAgT,WAAAO,UACAvT,KAAA+S,SAAAQ,GAGAvT,KAAAqT,IAAAI,EAAAD,MAAAC,EAAAC,KACA,CAGAM,OAAAT,GAEA,IAAAvT,KAAA+S,SAAAtP,eAAA8P,GAEA,OAAA,EAGA,IAAAE,EAAAzT,KAAA+S,SAAAQ,GASA,OANAE,EAAAzT,KAAAiT,MAAAc,OAAAN,UAEAzT,KAAAgT,WAAAS,EAAAC,aACA1T,KAAA+S,SAAAU,EAAAC,MAGAD,CACA,CAGAQ,uBAAAC,EAAAC,GAEA,IAAAC,OAAA,IAAAD,EAAA,GAAAA,EAEA,GAAAnU,KAAAmT,OAAA,EAEA,OAAAe,EAAAE,GAIA,IAAAC,GAAA,IAAAR,KACAS,EAAAhW,OAAAiF,KAAAvD,KAAA+S,UAEA,IAAA,IAAAxS,EAAA,EAAAA,EAAA+T,EAAAvT,OAAAR,IAGA8T,EAAArU,KAAA+S,SAAAuB,EAAA/T,IAAAoT,SAAAC,SAAA5T,KAAAmT,QAEAiB,EAAAxR,KAAA5C,KAAAgU,OAAAM,EAAA/T,KAGA2T,EAAAE,EACA,CAGAG,mBAAAL,EAAAC,GAEA,IAAAC,OAAA,IAAAD,EAAA,GAAAA,EAGA,GAAAnU,KAAAkT,UAAA,EAEA,KAAAlT,KAAAiT,MAAAlS,OAAAf,KAAAkT,WAEAkB,EAAAxR,KAAA5C,KAAAiT,MAAAtQ,OAIA,OAAAuR,EAAAE,EACA,CAGAI,YAAAN,EAAAO,EAAAN,GAEA,IAAAC,OAAA,IAAAD,EAAA,GAAAA,EAEAG,EAAAhW,OAAAiF,KAAAvD,KAAA+S,UACA,IAAA,IAAAxS,EAAA,EAAAA,EAAA+T,EAAAvT,OAAAR,IACA,CACA,IAAAkT,EAAAzT,KAAA+S,SAAAuB,EAAA/T,IAEAkU,EAAAhB,EAAAD,MAAAC,EAAAC,KAAAD,IAEAW,EAAAxR,KAAA5C,KAAAgU,OAAAM,EAAA/T,IAEA,CACA2T,EAAAE,EACA,CAGAM,MAAAR,GAEA,IAAAE,EAAA,GAGA,GAAApU,KAAAiT,MAAAlS,OAAA,EAEA,OAAAmT,EAAAE,GAIApU,KAAAiU,wBAAAU,IAGA3U,KAAAuU,mBAAAL,EAAAE,EAAA,GACAA,EACA,CAGAQ,QAAArB,GAEA,QAAAvT,KAAA+S,SAAAtP,eAAA8P,IAGAvT,KAAA+S,SAAAQ,EACA,EpBiuEA,EAAE,CAAC,kBAAkB,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAAS9S,EAAQf,EAAOD,GqB95ErFC,EAAAD,QAlBA,MAEA6S,cAEAtS,KAAA0T,MAAA,EACA1T,KAAAwT,OAAA,EAGAxT,KAAA2T,SAAA,CAAA,EAEA3T,KAAA6U,UAAA,EACA7U,KAAA8U,WAAA,EAGA9U,KAAA+U,UAAA,CACA,ErBm8EA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAStU,EAAQf,EAAOD,GsBx9ElC,MAAAuV,EAAAvU,EAAA,wBA6MAf,EAAAD,QApMA,MAEA6S,cAGAtS,KAAAiV,WAAA,EAGAjV,KAAAe,OAAA,EAEAf,KAAAkV,MAAA,EACAlV,KAAAmV,MAAA,CACA,CAGAC,eAAAC,EAAA9B,GAGA,QAAA,IAAA8B,EACA,OAAA,EAEArV,KAAAiV,aAGA,IAAAK,OAAA,IAAA/B,EAAAA,EAAA,QAAAlP,OAAArE,KAAAiV,WAAA,KAEAxB,EAAA,IAAAuB,EAKA,OAHAvB,EAAAC,KAAA4B,EACA7B,EAAAD,MAAA6B,EAEA5B,CACA,CAGA8B,OAAAF,EAAA9B,GAGA,IAAAE,EAAAzT,KAAAoV,eAAAC,EAAA9B,GACA,QAAAE,IAIAzT,KAAAe,SAGA,GAAAf,KAAAe,QAEAf,KAAAkV,KAAAzB,EACAzT,KAAAmV,KAAA1B,EACAA,IAGAzT,KAAAmV,KAAAL,UAAArB,EACAA,EAAAoB,SAAA7U,KAAAmV,KACAnV,KAAAmV,KAAA1B,EAEAA,GACA,CAGA7Q,KAAAyS,EAAA9B,GAEA,OAAAvT,KAAAuV,OAAAF,EAAA9B,EACA,CAGAiC,QAAAH,EAAA9B,GAGA,IAAAE,EAAAzT,KAAAoV,eAAAC,EAAA9B,GACA,QAAAE,IAIAzT,KAAAe,SAGA,GAAAf,KAAAe,QAEAf,KAAAkV,KAAAzB,EACAzT,KAAAmV,KAAA1B,EACAA,IAGAzT,KAAAkV,KAAAL,SAAApB,EACAA,EAAAqB,UAAA9U,KAAAkV,KACAlV,KAAAkV,KAAAzB,EACAA,GACA,CAGAM,OAAA0B,GAEA,YAAA,IAAAA,MAGAA,EAAAV,WAGA/U,KAAAe,SAGAf,KAAAe,OAAA,GAEAf,KAAAkV,MAAA,EACAlV,KAAAmV,MAAA,EACAM,GAIAA,EAAAZ,UAAAY,EAAAX,WAEAW,EAAAZ,SAAAC,UAAAW,EAAAX,UACAW,EAAAX,UAAAD,SAAAY,EAAAZ,SAEAY,EAAAX,WAAA,EACAW,EAAAZ,UAAA,EACAY,GAIAA,EAAAZ,UAEAY,EAAAZ,SAAAC,WAAA,EACA9U,KAAAmV,KAAAM,EAAAZ,SACAY,EAAAZ,UAAA,EACAY,IAIAA,EAAAX,UAAAD,UAAA,EACA7U,KAAAkV,KAAAO,EAAAX,UACAW,EAAAX,WAAA,EACAW,IACA,CAGA9S,MAEA,OAAA3C,KAAA+T,OAAA/T,KAAAkV,KACA,CAGAQ,KAAAC,EAAAzB,GAEA,GAAAlU,KAAAe,OAAA,EACA,OAAAmT,IAEA,IAAAT,GAAA,EAEAmC,EAAAC,IAGA,GAAAA,EACA,OAAA3B,EAAA2B,GAGA,GAAApC,EAGA,KAAAA,EAAAqB,UACA,OAAAZ,IAGAT,EAAAA,EAAAqB,SAAA,MANArB,EAAAzT,KAAAkV,KAUAS,EAAAlC,EAAAD,MAAAC,EAAAC,KAAAkC,EAAA,EAIA,OAAAA,GACA,CAGAE,KAAAC,GAEA,IAAAA,EACA,OAAA,EACA,GAAA/V,KAAAe,OAAA,EACA,OAAA,EACA,GAAAgV,GAAA/V,KAAAe,OACA,OAAA,EAEA,IAAA0S,EAAAzT,KAAAkV,KACA,IAAA,IAAA3U,EAAA,EAAAA,EAAAwV,EAAAxV,IAEAkT,EAAAA,EAAAqB,UAGA,OAAArB,CACA,EtBq+EA,EAAE,CAAC,uBAAuB,KAAK,GAAG,CAAC,SAAShT,EAAQf,EAAOD,GuBhqF3D,IAOAuW,EAPAC,EAAA,iBAAAC,QAAAA,QAAA,KACAC,EAAAF,GAAA,mBAAAA,EAAAvU,MACAuU,EAAAvU,MACA,SAAAqM,EAAAqI,EAAA3T,GACA,OAAA4T,SAAApT,UAAAvB,MAAArC,KAAA0O,EAAAqI,EAAA3T,EACA,EAIAuT,EADAC,GAAA,mBAAAA,EAAAK,QACAL,EAAAK,QACAhY,OAAAiY,sBACA,SAAAxI,GACA,OAAAzP,OAAAkY,oBAAAzI,GACA1J,OAAA/F,OAAAiY,sBAAAxI,GACA,EAEA,SAAAA,GACA,OAAAzP,OAAAkY,oBAAAzI,EACA,EAOA,IAAA0I,EAAAlX,OAAAmX,OAAA,SAAAtY,GACA,OAAAA,GAAAA,CACA,EAEA,SAAAuY,IACAA,EAAAC,KAAAvX,KAAAW,KACA,CACAN,EAAAD,QAAAkX,EACAjX,EAAAD,QAAAoC,KAwYA,SAAAgV,EAAAtE,GACA,OAAA,IAAAuE,SAAA,SAAAC,EAAAC,GACA,SAAAC,EAAA3U,GACAuU,EAAAK,eAAA3E,EAAA4E,GACAH,EAAA1U,EACA,CAEA,SAAA6U,IACA,mBAAAN,EAAAK,gBACAL,EAAAK,eAAA,QAAAD,GAEAF,EAAA,GAAAzP,MAAAjI,KAAAsC,WACA,CAEAyV,EAAAP,EAAAtE,EAAA4E,EAAA,CAAAtV,MAAA,IACA,UAAA0Q,GAMA,SAAAsE,EAAAQ,EAAAC,GACA,mBAAAT,EAAAU,IACAH,EAAAP,EAAA,QAAAQ,EAAAC,EAEA,CATAE,CAAAX,EAAAI,EAAA,CAAApV,MAAA,GAEA,GACA,EAxZA8U,EAAAA,aAAAA,EAEAA,EAAA1T,UAAAwU,aAAAtY,EACAwX,EAAA1T,UAAAyU,aAAA,EACAf,EAAA1T,UAAA0U,mBAAAxY,EAIA,IAAAyY,EAAA,GAEA,SAAAC,EAAAC,GACA,GAAA,mBAAAA,EACA,MAAA,IAAAxY,UAAA,0EAAAwY,EAEA,CAoCA,SAAAC,EAAAC,GACA,YAAA7Y,IAAA6Y,EAAAL,cACAhB,EAAAiB,oBACAI,EAAAL,aACA,CAkDA,SAAAM,EAAAlK,EAAAzF,EAAAwP,EAAAtC,GACA,IAAAhM,EACA0O,EACAC,EA1HAC,EAgJA,GApBAP,EAAAC,QAGA3Y,KADA+Y,EAAAnK,EAAA0J,UAEAS,EAAAnK,EAAA0J,QAAAnZ,OAAA+Z,OAAA,MACAtK,EAAA2J,aAAA,SAIAvY,IAAA+Y,EAAAI,cACAvK,EAAAwK,KAAA,cAAAjQ,EACAwP,EAAAA,SAAAA,EAAAA,SAAAA,GAIAI,EAAAnK,EAAA0J,SAEAU,EAAAD,EAAA5P,SAGAnJ,IAAAgZ,EAEAA,EAAAD,EAAA5P,GAAAwP,IACA/J,EAAA2J,kBAeA,GAbA,mBAAAS,EAEAA,EAAAD,EAAA5P,GACAkN,EAAA,CAAAsC,EAAAK,GAAA,CAAAA,EAAAL,GAEAtC,EACA2C,EAAAK,QAAAV,GAEAK,EAAAvV,KAAAkV,IAIAtO,EAAAuO,EAAAhK,IACA,GAAAoK,EAAApX,OAAAyI,IAAA2O,EAAAM,OAAA,CACAN,EAAAM,QAAA,EAGA,IAAAC,EAAA,IAAA9X,MAAA,+CACAuX,EAAApX,OAAA,IAAAlC,OAAAyJ,GADA,qEAIAoQ,EAAAnG,KAAA,8BACAmG,EAAA7B,QAAA9I,EACA2K,EAAApQ,KAAAA,EACAoQ,EAAAC,MAAAR,EAAApX,OA7KAqX,EA8KAM,EA7KAhM,SAAAA,QAAAkM,MAAAlM,QAAAkM,KAAAR,EA8KA,CAGA,OAAArK,CACA,CAaA,SAAA8K,IACA,IAAA7Y,KAAA8Y,MAGA,OAFA9Y,KAAA+N,OAAAmJ,eAAAlX,KAAAsI,KAAAtI,KAAA+Y,QACA/Y,KAAA8Y,OAAA,EACA,IAAAnX,UAAAZ,OACAf,KAAA8X,SAAAzY,KAAAW,KAAA+N,QACA/N,KAAA8X,SAAApW,MAAA1B,KAAA+N,OAAApM,UAEA,CAEA,SAAAqX,EAAAjL,EAAAzF,EAAAwP,GACA,IAAAmB,EAAA,CAAAH,OAAA,EAAAC,YAAA5Z,EAAA4O,OAAAA,EAAAzF,KAAAA,EAAAwP,SAAAA,GACAoB,EAAAL,EAAAM,KAAAF,GAGA,OAFAC,EAAApB,SAAAA,EACAmB,EAAAF,OAAAG,EACAA,CACA,CAyHA,SAAAE,EAAArL,EAAAzF,EAAA+Q,GACA,IAAAnB,EAAAnK,EAAA0J,QAEA,QAAAtY,IAAA+Y,EACA,MAAA,GAEA,IAAAoB,EAAApB,EAAA5P,GACA,YAAAnJ,IAAAma,EACA,GAEA,mBAAAA,EACAD,EAAA,CAAAC,EAAAxB,UAAAwB,GAAA,CAAAA,GAEAD,EAsDA,SAAAnY,GAEA,IADA,IAAAsN,EAAA,IAAAzL,MAAA7B,EAAAH,QACAR,EAAA,EAAAA,EAAAiO,EAAAzN,SAAAR,EACAiO,EAAAjO,GAAAW,EAAAX,GAAAuX,UAAA5W,EAAAX,GAEA,OAAAiO,CACA,CA3DA+K,CAAAD,GAAAE,EAAAF,EAAAA,EAAAvY,OACA,CAmBA,SAAA0Y,EAAAnR,GACA,IAAA4P,EAAAlY,KAAAyX,QAEA,QAAAtY,IAAA+Y,EAAA,CACA,IAAAoB,EAAApB,EAAA5P,GAEA,GAAA,mBAAAgR,EACA,OAAA,EACA,QAAAna,IAAAma,EACA,OAAAA,EAAAvY,MAEA,CAEA,OAAA,CACA,CAMA,SAAAyY,EAAAtY,EAAAd,GAEA,IADA,IAAAgI,EAAA,IAAArF,MAAA3C,GACAG,EAAA,EAAAA,EAAAH,IAAAG,EACA6H,EAAA7H,GAAAW,EAAAX,GACA,OAAA6H,CACA,CA2CA,SAAAgP,EAAAP,EAAAtE,EAAAuF,EAAAR,GACA,GAAA,mBAAAT,EAAAU,GACAD,EAAAzV,KACAgV,EAAAhV,KAAA0Q,EAAAuF,GAEAjB,EAAAU,GAAAhF,EAAAuF,OAEA,IAAA,mBAAAjB,EAAA6C,iBAYA,MAAA,IAAApa,UAAA,6EAAAuX,GATAA,EAAA6C,iBAAAnH,GAAA,SAAAoH,EAAAhb,GAGA2Y,EAAAzV,MACAgV,EAAA+C,oBAAArH,EAAAoH,GAEA7B,EAAAnZ,EACA,GAGA,CACA,CAraAL,OAAAC,eAAAoY,EAAA,sBAAA,CACAnY,YAAA,EACAoO,IAAA,WACA,OAAAgL,CACA,EACA9F,IAAA,SAAAnT,GACA,GAAA,iBAAAA,GAAAA,EAAA,GAAA8X,EAAA9X,GACA,MAAA,IAAAgI,WAAA,kGAAAhI,EAAA,KAEAiZ,EAAAjZ,CACA,IAGAgY,EAAAC,KAAA,gBAEAzX,IAAAa,KAAAyX,SACAzX,KAAAyX,UAAAnZ,OAAAub,eAAA7Z,MAAAyX,UACAzX,KAAAyX,QAAAnZ,OAAA+Z,OAAA,MACArY,KAAA0X,aAAA,GAGA1X,KAAA2X,cAAA3X,KAAA2X,oBAAAxY,CACA,EAIAwX,EAAA1T,UAAA6W,gBAAA,SAAA1Z,GACA,GAAA,iBAAAA,GAAAA,EAAA,GAAAqW,EAAArW,GACA,MAAA,IAAAuG,WAAA,gFAAAvG,EAAA,KAGA,OADAJ,KAAA2X,cAAAvX,EACAJ,IACA,EAQA2W,EAAA1T,UAAA8W,gBAAA,WACA,OAAAhC,EAAA/X,KACA,EAEA2W,EAAA1T,UAAAsV,KAAA,SAAAjQ,GAEA,IADA,IAAA7F,EAAA,GACAlC,EAAA,EAAAA,EAAAoB,UAAAZ,OAAAR,IAAAkC,EAAAG,KAAAjB,UAAApB,IACA,IAAAyZ,EAAA,UAAA1R,EAEA4P,EAAAlY,KAAAyX,QACA,QAAAtY,IAAA+Y,EACA8B,EAAAA,QAAA7a,IAAA+Y,EAAAvL,WACA,IAAAqN,EACA,OAAA,EAGA,GAAAA,EAAA,CACA,IAAAC,EAGA,GAFAxX,EAAA1B,OAAA,IACAkZ,EAAAxX,EAAA,IACAwX,aAAArZ,MAGA,MAAAqZ,EAGA,IAAA3X,EAAA,IAAA1B,MAAA,oBAAAqZ,EAAA,KAAAA,EAAAC,QAAA,IAAA,KAEA,MADA5X,EAAA6X,QAAAF,EACA3X,CACA,CAEA,IAAA+U,EAAAa,EAAA5P,GAEA,QAAAnJ,IAAAkY,EACA,OAAA,EAEA,GAAA,mBAAAA,EACAlB,EAAAkB,EAAArX,KAAAyC,OAEA,KAAAa,EAAA+T,EAAAtW,OACAqZ,EAAAZ,EAAAnC,EAAA/T,GACA,IAAA/C,EAAA,EAAAA,EAAA+C,IAAA/C,EACA4V,EAAAiE,EAAA7Z,GAAAP,KAAAyC,EAHA,CAMA,OAAA,CACA,EAgEAkU,EAAA1T,UAAAoX,YAAA,SAAA/R,EAAAwP,GACA,OAAAG,EAAAjY,KAAAsI,EAAAwP,GAAA,EACA,EAEAnB,EAAA1T,UAAAsU,GAAAZ,EAAA1T,UAAAoX,YAEA1D,EAAA1T,UAAAqX,gBACA,SAAAhS,EAAAwP,GACA,OAAAG,EAAAjY,KAAAsI,EAAAwP,GAAA,EACA,EAoBAnB,EAAA1T,UAAApB,KAAA,SAAAyG,EAAAwP,GAGA,OAFAD,EAAAC,GACA9X,KAAAuX,GAAAjP,EAAA0Q,EAAAhZ,KAAAsI,EAAAwP,IACA9X,IACA,EAEA2W,EAAA1T,UAAAsX,oBACA,SAAAjS,EAAAwP,GAGA,OAFAD,EAAAC,GACA9X,KAAAsa,gBAAAhS,EAAA0Q,EAAAhZ,KAAAsI,EAAAwP,IACA9X,IACA,EAGA2W,EAAA1T,UAAAiU,eACA,SAAA5O,EAAAwP,GACA,IAAAzK,EAAA6K,EAAAsC,EAAAja,EAAAka,EAKA,GAHA5C,EAAAC,QAGA3Y,KADA+Y,EAAAlY,KAAAyX,SAEA,OAAAzX,KAGA,QAAAb,KADAkO,EAAA6K,EAAA5P,IAEA,OAAAtI,KAEA,GAAAqN,IAAAyK,GAAAzK,EAAAyK,WAAAA,EACA,KAAA9X,KAAA0X,aACA1X,KAAAyX,QAAAnZ,OAAA+Z,OAAA,cAEAH,EAAA5P,GACA4P,EAAAhB,gBACAlX,KAAAuY,KAAA,iBAAAjQ,EAAA+E,EAAAyK,UAAAA,SAEA,GAAA,mBAAAzK,EAAA,CAGA,IAFAmN,GAAA,EAEAja,EAAA8M,EAAAtM,OAAA,EAAAR,GAAA,EAAAA,IACA,GAAA8M,EAAA9M,KAAAuX,GAAAzK,EAAA9M,GAAAuX,WAAAA,EAAA,CACA2C,EAAApN,EAAA9M,GAAAuX,SACA0C,EAAAja,EACA,KACA,CAGA,GAAAia,EAAA,EACA,OAAAxa,KAEA,IAAAwa,EACAnN,EAAAqN,QAiIA,SAAArN,EAAA7L,GACA,KAAAA,EAAA,EAAA6L,EAAAtM,OAAAS,IACA6L,EAAA7L,GAAA6L,EAAA7L,EAAA,GACA6L,EAAA1K,KACA,CAnIAgY,CAAAtN,EAAAmN,GAGA,IAAAnN,EAAAtM,SACAmX,EAAA5P,GAAA+E,EAAA,SAEAlO,IAAA+Y,EAAAhB,gBACAlX,KAAAuY,KAAA,iBAAAjQ,EAAAmS,GAAA3C,EACA,CAEA,OAAA9X,IACA,EAEA2W,EAAA1T,UAAA2X,IAAAjE,EAAA1T,UAAAiU,eAEAP,EAAA1T,UAAA4X,mBACA,SAAAvS,GACA,IAAA8R,EAAAlC,EAAA3X,EAGA,QAAApB,KADA+Y,EAAAlY,KAAAyX,SAEA,OAAAzX,KAGA,QAAAb,IAAA+Y,EAAAhB,eAUA,OATA,IAAAvV,UAAAZ,QACAf,KAAAyX,QAAAnZ,OAAA+Z,OAAA,MACArY,KAAA0X,aAAA,QACAvY,IAAA+Y,EAAA5P,KACA,KAAAtI,KAAA0X,aACA1X,KAAAyX,QAAAnZ,OAAA+Z,OAAA,aAEAH,EAAA5P,IAEAtI,KAIA,GAAA,IAAA2B,UAAAZ,OAAA,CACA,IACA5C,EADAoF,EAAAjF,OAAAiF,KAAA2U,GAEA,IAAA3X,EAAA,EAAAA,EAAAgD,EAAAxC,SAAAR,EAEA,oBADApC,EAAAoF,EAAAhD,KAEAP,KAAA6a,mBAAA1c,GAKA,OAHA6B,KAAA6a,mBAAA,kBACA7a,KAAAyX,QAAAnZ,OAAA+Z,OAAA,MACArY,KAAA0X,aAAA,EACA1X,IACA,CAIA,GAAA,mBAFAoa,EAAAlC,EAAA5P,IAGAtI,KAAAkX,eAAA5O,EAAA8R,QACA,QAAAjb,IAAAib,EAEA,IAAA7Z,EAAA6Z,EAAArZ,OAAA,EAAAR,GAAA,EAAAA,IACAP,KAAAkX,eAAA5O,EAAA8R,EAAA7Z,IAIA,OAAAP,IACA,EAmBA2W,EAAA1T,UAAAmX,UAAA,SAAA9R,GACA,OAAA8Q,EAAApZ,KAAAsI,GAAA,EACA,EAEAqO,EAAA1T,UAAA6X,aAAA,SAAAxS,GACA,OAAA8Q,EAAApZ,KAAAsI,GAAA,EACA,EAEAqO,EAAA8C,cAAA,SAAA5C,EAAAvO,GACA,MAAA,mBAAAuO,EAAA4C,cACA5C,EAAA4C,cAAAnR,GAEAmR,EAAApa,KAAAwX,EAAAvO,EAEA,EAEAqO,EAAA1T,UAAAwW,cAAAA,EAiBA9C,EAAA1T,UAAA8X,WAAA,WACA,OAAA/a,KAAA0X,aAAA,EAAA1B,EAAAhW,KAAAyX,SAAA,EACA,CvBiwFA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAShX,EAAQf,EAAOD,GwB/kGlCC,EAAAD,QApFA,MAEA6S,YAAA0I,EAAAC,GAGAjb,KAAAkb,UAAA,iBAAAF,EAAAA,EAAA,CAAA,EAKAhb,KAAAmb,WAAAnb,KAAAob,uBAIApb,KAAAqb,OACA,CACA,QACA,QACA,OACA,OACA,QACA,QAEA,CAGAD,uBAEA,IAAAE,GAAA,IAAAzH,MAAA0H,UAWA,MAVA,0BAAA1N,QAAA,SACA2N,IAIA,IAAAC,GAAAH,EAAA,GAAA1X,KAAA8X,UAAA,GAAA,EAGA,OAFAJ,EAAA1X,KAAA+X,MAAAL,EAAA,KAEA,KAAAE,EAAAC,EAAA,EAAAA,EAAA,GAAAvY,SAAA,GAAA,GAGA,CAEA0Y,aAEA,CAGAC,MAAAC,EAAAC,GAEA/b,KAAAqH,MAAA,QAAAyU,EAAAC,EACA,CAEAC,MAAAF,EAAAC,GAEA/b,KAAAqH,MAAA,QAAAyU,EAAAC,EACA,CAEAE,KAAAH,EAAAC,GAEA/b,KAAAqH,MAAA,OAAAyU,EAAAC,EACA,CAEAnD,KAAAkD,EAAAC,GAEA/b,KAAAqH,MAAA,OAAAyU,EAAAC,EACA,CAEApP,MAAAmP,EAAAC,GAEA/b,KAAAqH,MAAA,QAAAyU,EAAAC,EACA,CAEAG,MAAAJ,EAAAC,GAEA/b,KAAAqH,MAAA,QAAAyU,EAAAC,EACA,CAEA1U,MAAA8U,EAAAL,EAAAC,GAGA,OAAA,CACA,ExBgrGA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAStb,EAAQf,EAAOD,GyBrvGlCC,EAAAD,QAXA2c,MAEA,IAAAC,EAAA,CAAA,EAMA,OAJAA,EAAA3P,QAAAjM,EAAA,iCAEA4b,EAAAC,QAAAD,EAAA3P,QAEA2P,CAAA,EAGAD,EzB0wGA,EAAE,CAAC,gCAAgC,KAAK,GAAG,CAAC,SAAS3b,EAAQf,EAAOD,G0B7xGpEC,EAAAD,QAAA,CACA,CACA8c,WAAA,UACAC,WAAA,UACAC,MAAA,S1BiyGA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAShc,EAAQf,EAAOD,G2BryGlC,IAAAid,EAAAjc,EAAA,6BA+DAf,EAAAD,QA7DA,cAAAid,EAEApK,YAAA0I,EAAAC,GAEApI,MAAAmI,GAEAhb,KAAA2c,iBAAA3c,KAAAkb,UAAAzX,eAAA,mBAAA,GAAAzD,KAAAkb,UAAA0B,eACA5c,KAAA6c,sBAAA7c,KAAAkb,UAAAzX,eAAA,wBAAA,GAAAzD,KAAAkb,UAAA4B,oBAEA9c,KAAA+c,gBAAA/c,KAAAkb,UAAAzX,eAAA,WAAA,IAAAY,OAAArE,KAAAkb,UAAA8B,QAAA,KACA/B,EAAAC,UAAAzX,eAAA,WAAA,IAAAY,OAAA4W,EAAAC,UAAA+B,QAAA,KACA,sBAGAjd,KAAAkd,0BAAAld,KAAAkb,UAAAzX,eAAA,4BAAAzD,KAAAkb,UAAAiC,wBACAnd,KAAAod,yBAAApd,KAAAkb,UAAAzX,eAAA,2BAAAzD,KAAAkb,UAAAmC,uBAGArd,KAAAsd,YAAA,CAAA,EACA,IAAA,IAAA/c,EAAA,EAAAA,GAAAP,KAAAqb,OAAAta,OAAAR,IAEAP,KAAAsd,YAAAtd,KAAAqb,OAAA9a,IAAA,IAAA8D,OAAArE,KAAAqb,OAAA9a,GAAA,MAAA8D,OAAArE,KAAA+c,gBAAA,MAEA/c,KAAA2c,kBAGA3c,KAAAsd,YAAAtd,KAAAqb,OAAA9a,IAAA,IAAAP,KAAAsd,YAAAtd,KAAAqb,OAAA9a,IAGA,CAEA8G,MAAAkW,EAAAzB,EAAA0B,GAEA,IAAAC,EAAA,GACAzd,KAAA2c,iBAAA3c,KAAA6c,qBAEAY,GAAA,IAAA5J,MAAA6J,cAEA1d,KAAA2c,kBAEAc,GAAA,IAAA5J,MAGA,IAAA8J,EAAA,GAAAtZ,OAAAoZ,GAAApZ,OAAArE,KAAAsd,YAAAC,IAAAlZ,OAAAyX,GAcA,OAZA9b,KAAAkd,0BAEAxQ,QAAAkR,IAAAD,GAIA3d,KAAAod,8BAAA,IAAAI,GAEA9Q,QAAAkR,IAAAC,KAAAC,UAAAN,EAAA,KAAA,IAIAG,CACA,E3B0yGA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAASld,EAAQf,EAAOD,G4Bt2GhE,MAAAse,EAAAtd,EAAA,iCACAud,EAAAvd,EAAA,MACAwd,EAAAxd,EAAA,QAqHAf,EAAAD,QAnHA,cAAAse,EAEAzL,YAAA0I,EAAAC,GAEApI,MAAAmI,EAAAC,GAGAjb,KAAAke,eAAAle,KAAAkb,UAAAzX,eAAA,QAAAzD,KAAAkb,UAAAiD,KAAA,KAAA9Z,OAAArE,KAAA+c,gBAAA,QACA/c,KAAAoe,YAAAH,EAAAI,UAAAre,KAAAke,gBAEAle,KAAAse,qBAAAte,KAAAkb,UAAAzX,eAAA,qBAAAzD,KAAAkb,UAAAqD,kBACA,CACAjH,MAAA,IACApQ,SAAA,QAGAlH,KAAAwe,WAAAR,EAAAS,kBAAAze,KAAAoe,YAAApe,KAAAse,sBAEAte,KAAA0e,iBAAA,EAEA1e,KAAA2e,eAAA,GACA3e,KAAA4e,iBAAA,GAEA5e,KAAA6e,6BAAA,OACA7e,KAAA8e,2BAAA,MACA,CAEAC,YAAAC,GAEA,IAAAC,EAAA,mBAAAD,EAAAA,EAAA,OACA,GAAAhf,KAAAwe,WAGA,OADAxe,KAAAwe,WAAAzY,IAAA,MACA/F,KAAAwe,WAAA3c,KAAA,SAAAod,EAAA9F,KAAAnZ,MAEA,CAEAkf,6BAAAC,GAEAnf,KAAA0e,iBAAA,EACA,IAAAU,EAAA,mBAAAD,EAAAA,EAAAnf,KAAA8e,2BAEA,KAAA9e,KAAA2e,eAAA5d,OAAA,GAMA,OAAAqe,IAJApf,KAAAqf,qBAAAD,EAMA,CAEAC,qBAAAF,GAEA,IAAAnf,KAAA0e,gBACA,CAEA1e,KAAA0e,iBAAA,EAEA,IAAAU,EAAA,mBAAAD,EAAAA,EAAAnf,KAAA8e,2BAGAQ,EAAAtf,KAAA2e,eACAY,EAAAvf,KAAA4e,iBAGA5e,KAAA2e,eAAA,GACA3e,KAAA4e,iBAAA,GAGA,IAAAY,EAAA,GAEA,IAAA,IAAAjf,EAAA,EAAAA,EAAA+e,EAAAve,OAAAR,IAGAif,GAAA,GAAAnb,OAAAib,EAAA/e,GAAA,OACA,IAAAgf,EAAAhf,KAEAif,GAAA,GAAAnb,OAAAkb,EAAAhf,GAAA,OAIA,GAAAP,KAAAwe,WAAAnX,MAAAmY,EAAA,QAOA,OAAAxf,KAAAkf,6BAAAE,GAJApf,KAAAwe,WAAA3c,KAAA,QAAA7B,KAAAkf,6BAAA/F,KAAAnZ,KAAAof,GAMA,CACA,CAEA/X,MAAAkW,EAAAzB,EAAA0B,GAEA,IAAAG,EAAA9K,MAAAxL,MAAAkW,EAAAzB,EAAA0B,GAGAxd,KAAA2e,eAAA/b,KAAA+a,QAGA,IAAAH,EAEAxd,KAAA4e,iBAAAhc,KAAAib,KAAAC,UAAAN,EAAA,KAAA,IAIAxd,KAAA4e,iBAAAhc,MAAA,GAGA5C,KAAAqf,sBACA,E5B22GA,EAAE,CAAC,gCAAgC,GAAGI,GAAK,GAAGtB,KAAO,KAAK,GAAG,CAAC,SAAS1d,EAAQf,EAAOD,G6B39GtF,MAAA+S,EAAA/R,EAAA,6BAAAif,wBAEA,MAAAC,UAAAnN,EAEAF,YAAAsN,EAAAhN,GAEAC,MAAA+M,EAAAhN,GAEA5S,KAAA8S,YAAA,UAEA,IAAA+M,EAAA,iBAAAD,EAAAA,EAAA,CAAA,EACA5f,KAAAkb,UAAA2E,EAEA7f,KAAA8f,WAAArf,EAAA,wCAEAT,KAAA+f,mBAAAF,EAAApc,eAAA,cAAAoc,EAAAG,WAAAvf,EAAA,mCAEAT,KAAAigB,WAAA,GAIAjgB,KAAAkgB,aAAA,CAAA,EAGAlgB,KAAAmgB,iBAAA,CAAA,EAEAngB,KAAAogB,gBAAA,GACApgB,KAAAqgB,gBAAA,GACArgB,KAAAsgB,eAAA,GACAtgB,KAAAugB,eAAA,GACAvgB,KAAAwgB,gBAAA,GACAxgB,KAAAygB,gBAAA,GAEAzgB,KAAA0gB,eAAArL,GAAAA,EAEArV,KAAA2gB,KAAA,iBAAAd,EAAA5C,QAAA4C,EAAA5C,QAAA,SACA,CAEA2D,UAAAC,EAAAtD,GAGA,GAAAvd,KAAAmgB,iBAAA1c,eAAAod,EAAA1F,YAEA,OAAA,EAQA,OAJAnb,KAAAigB,WAAArd,KAAAie,GACA7gB,KAAAmgB,iBAAAU,EAAA1F,aAAA,EAGAoC,GAEA,IAAA,QACAvd,KAAAogB,gBAAAxd,KAAAie,GACA,IAAA,QACA7gB,KAAAqgB,gBAAAzd,KAAAie,GACA,IAAA,OACA7gB,KAAAsgB,eAAA1d,KAAAie,GACA,IAAA,OACA7gB,KAAAugB,eAAA3d,KAAAie,GACA,IAAA,QACA7gB,KAAAwgB,gBAAA5d,KAAAie,GACA,IAAA,QACA7gB,KAAAygB,gBAAA7d,KAAAie,GAIA,OAAA,CACA,CAEAC,kBAAAC,GAIA/gB,KAAA0gB,eAFA,mBAAAK,EAEAA,EAIA1L,GAAAA,CAEA,CAEAwG,MAAAmF,EAAA3L,GAEA,MAAA4L,EAAAjhB,KAAA0gB,eAAArL,GACA,IAAA,IAAA9U,EAAA,EAAAA,EAAAP,KAAAogB,gBAAArf,OAAAR,IAEAP,KAAAogB,gBAAA7f,GAAAsb,MAAAmF,EAAAC,EAEA,CAEAjF,MAAAgF,EAAA3L,GAEA,MAAA4L,EAAAjhB,KAAA0gB,eAAArL,GACA,IAAA,IAAA9U,EAAA,EAAAA,EAAAP,KAAAqgB,gBAAAtf,OAAAR,IAEAP,KAAAqgB,gBAAA9f,GAAAyb,MAAAgF,EAAAC,EAEA,CAEAhF,KAAA+E,EAAA3L,GAEA,MAAA4L,EAAAjhB,KAAA0gB,eAAArL,GACA,IAAA,IAAA9U,EAAA,EAAAA,EAAAP,KAAAsgB,eAAAvf,OAAAR,IAEAP,KAAAsgB,eAAA/f,GAAA0b,KAAA+E,EAAAC,EAEA,CAEArI,KAAAoI,EAAA3L,GAEA,MAAA4L,EAAAjhB,KAAA0gB,eAAArL,GACA,IAAA,IAAA9U,EAAA,EAAAA,EAAAP,KAAAugB,eAAAxf,OAAAR,IAEAP,KAAAugB,eAAAhgB,GAAAqY,KAAAoI,EAAAC,EAEA,CAEAtU,MAAAqU,EAAA3L,GAEA,MAAA4L,EAAAjhB,KAAA0gB,eAAArL,GACA,IAAA,IAAA9U,EAAA,EAAAA,EAAAP,KAAAwgB,gBAAAzf,OAAAR,IAEAP,KAAAwgB,gBAAAjgB,GAAAoM,MAAAqU,EAAAC,EAEA,CAEA/E,MAAA8E,EAAA3L,GAEA,MAAA4L,EAAAjhB,KAAA0gB,eAAArL,GACA,IAAA,IAAA9U,EAAA,EAAAA,EAAAP,KAAAygB,gBAAA1f,OAAAR,IAEAP,KAAAygB,gBAAAlgB,GAAA2b,MAAA8E,EAAAC,EAEA,CAEArF,aAGA,IAAA,IAAArb,EAAA,EAAAA,EAAAP,KAAA+f,mBAAAhf,OAAAR,IACA,CACA,IAAA2gB,EAAA5iB,OAAA6iB,OAAA,CAAA5E,WAAA,UAAAC,WAAA,UAAAC,MAAA,QAAAzc,KAAA+f,mBAAAxf,IAEAP,KAAA8f,WAAArc,eAAAyd,EAAA3E,YAMAvc,KAAA4gB,UAAA,IAAA5gB,KAAA8f,WAAAoB,EAAA3E,YAAA2E,EAAAlhB,MAAAkhB,EAAAzE,OAJA/P,QAAAkR,IAAA,sEAAAvZ,OAAAwZ,KAAAC,UAAAoD,IAMA,CAGA,IAAA,IAAA3gB,EAAA,EAAAA,EAAAP,KAAAigB,WAAAlf,OAAAR,IAEAP,KAAAigB,WAAA1f,GAAAqb,YAEA,CAEAwF,QAAAJ,EAAA3L,GAEA,IAAAgM,OAAA,IAAAL,EAAAA,EAAA,OACAM,EAAA,IAAAzN,KACA7T,KAAAic,KAAA,GAAA5X,OAAAgd,EAAA,KAAAhd,OAAAid,EAAA,YAAAjd,QAAAid,EAAA,KAAAjM,EACA,CAGAkM,eAEA,OAAA,IAAA1N,IACA,CAEA2N,aAAAC,GAGA,OADA,IAAA5N,KACA4N,CACA,CAGAC,aAAAC,EAAAX,EAAA3L,GAEA,IAAAgM,OAAA,IAAAL,EAAAA,EAAA,mBAGAY,GAAA,IAAA/N,KAEA7T,KAAAic,KAAA,GAAA5X,OAAAgd,EAAA,sBAAAhd,QAAAud,EAAA,YAAAvd,OAAAsd,EAAA,OAAAtM,EACA,CAEAwM,kBAAAF,EAAAX,EAAA3L,GAEA,IAAAgM,OAAA,IAAAL,EAAAA,EAAA,mBAEAY,GAAA,IAAA/N,KAEAiO,EAAAnX,SAAAgX,EAAA,KACAI,EAAApX,SAAAgX,EAAA,IAAA,IACAK,EAAArX,SAAAgX,EAAA,IAAA,IACAM,EAAAtX,SAAAgX,EAAA,MAEAG,EAAAA,EAAA,GAAA,KAAAA,EAAAA,EAAA,IAAA,IAAAA,EAAAA,EACAC,EAAAA,EAAA,GAAA,IAAAA,EAAAA,EACAC,EAAAA,EAAA,GAAA,IAAAA,EAAAA,EACAC,EAAAA,EAAA,GAAA,IAAAA,EAAAA,EAEAjiB,KAAAic,KAAA,GAAA5X,OAAAgd,EAAA,sBAAAhd,QAAAud,EAAA,YAAAvd,OAAAsd,EAAA,YAAAtd,OAAA4d,EAAA,KAAA5d,OAAA2d,EAAA,KAAA3d,OAAA0d,EAAA,KAAA1d,OAAAyd,EAAA,KAAAzM,EACA,CAEA6M,qBAAAC,EAAAnB,EAAA3L,GAEArV,KAAA0hB,aAAA1hB,KAAAwhB,aAAAW,GAAAnB,EAAA3L,EACA,CAEA+M,0BAAAD,EAAAnB,EAAA3L,GAEArV,KAAA6hB,kBAAA7hB,KAAAwhB,aAAAW,GAAAnB,EAAA3L,EACA,EAUA3V,EAAAD,QAAAkgB,EACAjgB,EAAAD,QAAA4iB,IAPA,SAAAzC,GAEA,OAAA,IAAAD,EAAAC,EACA,EAKAlgB,EAAAD,QAAA6iB,gBAAA7hB,EAAA,6BACAf,EAAAD,QAAA8iB,mBAAA9hB,EAAA,iCACAf,EAAAD,QAAA8iB,mBAAA9hB,EAAA,uC7Bk+GA,EAAE,CAAC,4BAA4B,GAAG,uCAAuC,GAAG,kCAAkC,GAAG,gCAAgC,GAAG,uCAAuC,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAASA,EAAQf,EAAOD,G8BrsH3P,MAAA+iB,EAEAlQ,YAAAmQ,EAAA7P,GAEA5S,KAAA0iB,OAAA,EAEA1iB,KAAA2iB,QAAA,iBAAAF,EAAAA,EAAA,CAAA,EAEAziB,KAAA8S,YAAA,UAGA9S,KAAA4iB,KAAA,WAAAve,OAAAT,KAAA+X,MAAA,MAAA/X,KAAA8X,SAAA,MAEA1b,KAAA0T,KAAA,iBAAAd,EAAAA,EAAA,GAAAvO,OAAArE,KAAA4iB,KACA,CAMAC,aAAAnQ,GAIA,OAFA1S,KAAA0iB,MAAAhQ,GAEA,CACA,EACAzU,iBA1BAukB,EAAA,kBAiBA,GAWA9iB,EAAAD,QAAA+iB,C9BitHA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS/hB,EAAQf,EAAOD,G+BjvHlC,MAAAqjB,EAEAxQ,YAAAI,EAAA+P,EAAA7P,GAEA5S,KAAA0iB,MAAAhQ,EAEA1S,KAAA2iB,QAAA,iBAAAF,EAAAA,EACA,iBAAA/P,GAAAA,EAAAqQ,QACA,CAAA,EADArQ,EAGA1S,KAAA8S,YAAA,UAEA,mBAAAJ,EAAAsQ,QAEAhjB,KAAA4iB,KAAAlQ,EAAAsQ,UAIAhjB,KAAA4iB,KAAA,cAAAve,OAAAT,KAAA+X,MAAA,MAAA/X,KAAA8X,SAAA,MAGA1b,KAAA0T,KAAA,iBAAAd,EAAAA,EAAA,GAAAvO,OAAArE,KAAA4iB,KACA,EAGA3kB,iBAzBA6kB,EAAA,kBAwBA,GAGApjB,EAAAD,QAAAqjB,EAEApjB,EAAAD,QAAAigB,wBAAAjf,EAAA,yC/BwvHA,EAAE,CAAC,yCAAyC,KAAK,GAAG,CAAC,SAASA,EAAQf,EAAOD,GgC1xH7EC,EAAAD,QAAA,CACAwd,QAAA,sBACAgG,eAAA,QAEAC,YAAA,EAEAlD,WACA,CACA,CACAvD,MAAA,UhCgyHA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAShc,EAAQf,EAAOD,IAClC,SAAW0jB,IAAS,WiCjyHpB,MAAAC,EAAA3iB,EAAA,aAuCAf,EAAAD,QArCA,MAEA6S,YAAA+Q,GAGArjB,KAAAsjB,kBAAA,IAAAF,EAGApjB,KAAAsjB,kBAAAC,WAAA,KAAA,KACAC,IAEA,IAAAC,EAAAD,EAAA1V,OAEA4V,EAAAD,EAAA5d,QAAA,KAGA8d,EAAAF,EAAAG,UAAAF,EAAA,GAEAG,EAAAH,GAAA,EAAAD,EAAAG,UAAA,EAAAF,GAAAD,EAEA,OAAAN,EAAAW,IAAArgB,eAAAogB,GAEAV,EAAAW,IAAAD,GAIAF,CACA,GAEA,CAEAI,aAAAC,GAEA,OAAAhkB,KAAAsjB,kBAAAW,YAAAD,EACA,EjC+yHC,GAAE3kB,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAElC,EAAE,CAACyjB,SAAW,GAAGC,UAAY,KAAK,GAAG,CAAC,SAAS1jB,EAAQf,EAAOD,GkCt1H9D,MAAA+S,EAAA/R,EAAA,6BAAAif,wBAEA0E,EAAA3jB,EAAA,yCAEA,MAAA4jB,UAAA7R,EAEAF,YAAAsN,EAAAhN,GAEAC,MAAA+M,EAAAhN,GAEA5S,KAAA8S,YAAA,kBAGA9S,KAAAskB,0BAAA,IAAAF,EAGApkB,KAAAukB,wBAAA3E,GAEA5f,KAAAsc,QAAAtc,KAAAwkB,uBAGA,IAAA3E,EAAA7f,KAAAykB,MAAA7E,EAAA5f,KAAAwkB,wBAKA,GAFAxkB,KAAA0kB,KAAA7G,KAAA8G,MAAA9G,KAAAC,UAAA+B,IAEAA,EAAA+E,kBAEA,IAGA/E,EAAA7f,KAAAykB,MAAAhkB,EAAAof,EAAA+E,mBAAA/E,EACA,CACA,MAAAgF,GAIAnY,QAAAkR,IAAA,2HACAlR,QAAAkR,IAAA,2BAAAiH,EACA,CAGA,GAAAhF,EAAAqD,WAEA,IAGArD,EAAA7f,KAAAykB,MAAAhkB,EAAAof,EAAAqD,YAAArD,EACA,CACA,MAAAgF,GAIAnY,QAAAkR,IAAA,mHACAlR,QAAAkR,IAAA,2BAAAiH,EACA,CAGA7kB,KAAA8kB,SAAAjF,CACA,CAGA2E,uBAEA,OAAA3G,KAAA8G,MAAA9G,KAAAC,UAAArd,EAAA,6BACA,CAGA8jB,wBAAA3E,GAGA5f,KAAA+kB,uBAAAnF,IAAA,IAAAA,EAAAoF,gBACA,CAGAC,YAAArF,GAEA,IAAA,MAAAsF,KAAAtF,EAEA,iBAAAA,EAAAsF,GAEAllB,KAAAilB,YAAArF,EAAAsF,IAEA,iBAAAtF,EAAAsF,KAEAtF,EAAAsF,GAAAllB,KAAAskB,0BAAAP,aAAAnE,EAAAsF,IAGA,CAKAC,UAAA/mB,GAEA,MAAA,iBAAAA,IAAA2E,MAAAC,QAAA5E,EACA,CAKAgnB,kBAAAC,EAAA7c,GAEA,GAAAA,GAAAxI,KAAAmlB,UAAA3c,GAmBA,OAfAlK,OAAAiF,KAAAiF,GAAA8c,SAAAnnB,IAEA,MAAAonB,EAAA/c,EAAArK,GACA,GAAA6B,KAAAmlB,UAAAI,GACA,CACA,MAAAC,EAAAH,EAAAlnB,GACA,GAAAqnB,GAAAxlB,KAAAmlB,UAAAK,GAIA,YADAxlB,KAAAolB,kBAAAI,EAAAD,EAGA,CACAF,EAAAlnB,GAAAonB,CAAA,IAEAF,CACA,CAGAZ,MAAAgB,EAAAC,GAGA,IAAAC,EAAA,iBAAAF,EAAAA,EAAA,CAAA,EAEAG,EAAA,iBAAAF,EAAAA,EAAA1lB,KAAA8kB,SAGAe,EAAAhI,KAAA8G,MAAA9G,KAAAC,UAAA6H,IAUA,OATAC,EAAA5lB,KAAAolB,kBAAAQ,EAAAC,GAEA7lB,KAAA+kB,uBAEA/kB,KAAAilB,YAAAW,GAGA5lB,KAAAukB,wBAAAqB,GAEAA,CACA,CAGA7Y,KAAA0Y,GAGA,IAAAE,EAAA,iBAAAF,EAAAA,EAAA,CAAA,EAGAI,EAAAhI,KAAA8G,MAAA9G,KAAAC,UAAA6H,IAIA,OAFA3lB,KAAA8kB,SAAA9kB,KAAAolB,kBAAAS,EAAA7lB,KAAA8kB,UAEA9kB,KAAA8kB,QACA,EASAplB,EAAAD,QAAA4kB,EACA3kB,EAAAD,QAAA4iB,IANA,SAAAzC,GAEA,OAAA,IAAAyE,EAAAzE,EACA,ClCm2HA,EAAE,CAAC,2BAA2B,GAAG,wCAAwC,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAASnf,EAAQf,EAAOD,GmCh9HzIC,EAAAD,QArDA,MAEA6S,cAKAtS,KAAA8lB,gBAAA,oBAAAC,QAAAA,OAAAD,iBAAAC,OAAAD,gBAAA3M,KAAA4M,SACA,oBAAAC,UAAA,mBAAAnmB,OAAAmmB,SAAAF,iBAAAE,SAAAF,gBAAA3M,KAAA6M,SACA,CAGAC,sBAEA,IAAAC,EAAA,IAAAtgB,WAAA,IAGA,OADA5F,KAAA8lB,gBAAAI,GACAA,CACA,CAGAC,sBAIA,IAAAD,EAAA,IAAAtgB,WAAA,IAEA,IAAA,IAAAwgB,EAAA7lB,EAAA,EAAAA,EAAA,GAAAA,IAEA,IAAA,EAAAA,KAEA6lB,EAAA,WAAAxiB,KAAA8X,UAGAwK,EAAA3lB,GAAA6lB,MAAA,EAAA7lB,IAAA,GAAA,IAGA,OAAA2lB,CACA,CAEAG,WAEA,OAAArmB,KAAA8lB,gBAEA9lB,KAAAimB,sBAIAjmB,KAAAmmB,qBAEA,EnCuhIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS1lB,EAAQf,EAAOD,GoCjlIlC,MAAA+S,EAAA/R,EAAA,6BAAAif,wBAEA4G,EAAA7lB,EAAA,0BAEA,MAAA8lB,UAAA/T,EAEAF,YAAAsN,EAAAhN,GAEAC,MAAA+M,EAAAhN,GAEA5S,KAAA8S,YAAA,OAIA9S,KAAAwmB,kBAAA,iBAAA5G,IAAAA,EAAAnc,eAAA,oBAAA,GAAAmc,EAAA6G,eAGAzmB,KAAA0mB,YAAA,iBAAA9G,GAAAA,EAAAnc,eAAA,cAAAmc,EAAA+G,WAAA,EAAA,EAEA3mB,KAAA4mB,sBAAA,iBAAAhH,GAAAA,EAAAnc,eAAA,kBAAAmc,EAAAiH,eAAA,EAAA,iEAEA7mB,KAAA8mB,oBAAA,IAAAR,EAGAtmB,KAAA+mB,WAAA,GACA,IAAA,IAAAxmB,EAAA,EAAAA,EAAA,MAAAA,EAEAP,KAAA+mB,WAAAxmB,IAAAA,EAAA,KAAA2C,SAAA,IAAA0H,OAAA,EAEA,CAGAoc,YAAAC,GAEA,IAAA1mB,EAAA,EAEA,MAAA,CACAP,KAAA+mB,WAAAE,EAAA1mB,MAAAP,KAAA+mB,WAAAE,EAAA1mB,MACAP,KAAA+mB,WAAAE,EAAA1mB,MAAAP,KAAA+mB,WAAAE,EAAA1mB,MAAA,IACAP,KAAA+mB,WAAAE,EAAA1mB,MAAAP,KAAA+mB,WAAAE,EAAA1mB,MAAA,IACAP,KAAA+mB,WAAAE,EAAA1mB,MAAAP,KAAA+mB,WAAAE,EAAA1mB,MAAA,IACAP,KAAA+mB,WAAAE,EAAA1mB,MAAAP,KAAA+mB,WAAAE,EAAA1mB,MAAA,IACAP,KAAA+mB,WAAAE,EAAA1mB,MAAAP,KAAA+mB,WAAAE,EAAA1mB,MAAAP,KAAA+mB,WAAAE,EAAA1mB,MAAAP,KAAA+mB,WAAAE,EAAA1mB,MAAAP,KAAA+mB,WAAAE,EAAA1mB,MAAAP,KAAA+mB,WAAAE,EAAA1mB,OACAoF,KAAA,GACA,CAGAuhB,iBAEA,IAAAnkB,MAAA,IACA,IAAAokB,EAAAnnB,KAAA8mB,oBAAAT,WAMA,OAHAc,EAAA,GAAA,GAAAA,EAAA,GAAA,GACAA,EAAA,GAAA,GAAAA,EAAA,GAAA,IAEAnnB,KAAAgnB,YAAAG,EACA,CAGAC,iBAEA,IAAAC,EAAA,GAEA,IAAA,IAAA9mB,EAAA,EAAAA,EAAAP,KAAA0mB,YAAAnmB,IAEA8mB,GAAArnB,KAAA4mB,sBAAAU,OAAA1jB,KAAA+X,MAAA/X,KAAA8X,UAAA1b,KAAA4mB,sBAAA7lB,OAAA,KAGA,OAAAsmB,CACA,CAGArE,UAEA,OAAAhjB,KAAAwmB,gBAEAxmB,KAAAonB,iBAIApnB,KAAAknB,gBAEA,EAUAxnB,EAAAD,QAAA8mB,EACA7mB,EAAAD,QAAA4iB,IAPA,SAAAzC,GAEA,OAAA,IAAA2G,EAAA3G,EACA,CpC4lIA,EAAE,CAAC,yBAAyB,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAASnf,EAAQf,EAAOD,GAC5FkC,UAAU,GAAG,IAAI,GAAGD,MAAMjC,EAAQkC,UAClC,EAAE,CAACuE,IAAM,KAAK,GAAG,CAAC,SAASzF,EAAQf,EAAOD,GqCvrI1C,MAAAqjB,EAEAxQ,YAAAI,EAAA+P,EAAA7P,GAEA5S,KAAA0iB,MAAAhQ,EAEA1S,KAAA2iB,QAAA,iBAAAF,EAAAA,EACA,iBAAA/P,GAAAA,EAAAqQ,QACA,CAAA,EADArQ,EAGA1S,KAAA8S,YAAA,UAEA,mBAAAJ,EAAAsQ,QAEAhjB,KAAA4iB,KAAAlQ,EAAAsQ,UAIAhjB,KAAA4iB,KAAA,cAAAve,OAAAT,KAAA+X,MAAA,MAAA/X,KAAA8X,SAAA,MAGA1b,KAAA0T,KAAA,iBAAAd,EAAAA,EAAA,GAAAvO,OAAArE,KAAA4iB,MAGA5iB,KAAA4d,IAAA5d,KAAA0iB,MAAA9E,IACA5d,KAAAunB,SAAAvnB,KAAA0iB,MAAA6E,SACAvnB,KAAAwnB,gBAAAxnB,KAAA0iB,MAAA8E,eACA,EAGAvpB,iBA9BA6kB,EAAA,kBA6BA,GAGApjB,EAAAD,QAAAqjB,EAEApjB,EAAAD,QAAAigB,wBAAAjf,EAAA,yCrC8rIA,EAAE,CAAC,yCAAyC,KAAK,GAAG,CAAC,SAASA,EAAQf,EAAOD,GsChuI7E,MAAAgoB,EAAAhnB,EAAA,6BAEA,MAAAinB,UAAAD,EAAA/H,wBAEApN,YAAAsN,EAAAhN,GAEAC,MAAA+M,EAAAhN,GAEA5S,KAAA8S,YAAA,iBAEA9S,KAAA2nB,aAAA,GAGA3nB,KAAAunB,SAAA,CAAA,EAGAvnB,KAAAwnB,gBAAA,CAAA,EAGAxnB,KAAA4nB,eAAA,CAAA,CACA,CAEAC,eAAAC,EAAAC,GAGA/nB,KAAA2nB,aAAA/kB,KAAAklB,GAGA9nB,KAAAunB,SAAAO,GAAA,CAAA,EAGA,mBAAAC,GAAAA,EAAAC,eAGAhoB,KAAA4nB,eAAAE,GAAAC,GAKA/nB,KAAA0iB,MAAA9E,IAAAjR,MAAA,kCAAAtI,OAAAyjB,EAAA,oHACA9nB,KAAA4nB,eAAAE,GAAAL,EAEA,CAGAQ,6BAAAH,EAAAC,GAEA/nB,KAAA6nB,eAAAC,EAAAC,GACA/nB,KAAAkoB,2BAAAJ,EAAA,CAAA,EAAA,GAAAzjB,OAAAyjB,EAAA,YACA,CAGAK,wCAAAL,EAAArF,EAAA2F,EAAAC,GAGA,IAAAC,EAAA,IAAAD,EAAAroB,KAAA0iB,MAAAD,EAAA2F,GAWA,OARApoB,KAAAunB,SAAAO,GAAAQ,EAAA5U,MAAA4U,EAGAtoB,KAAAwnB,gBAAA/jB,eAAAqkB,IAEA9nB,KAAAuoB,+BAAAT,EAAAQ,EAAA5U,MAGA4U,CACA,CAGAJ,2BAAAJ,EAAArF,EAAA2F,GAGA,IAAAE,EAAAtoB,KAAAwoB,8CAAAV,EAAArF,EAAA2F,GAWA,OARApoB,KAAAunB,SAAAO,GAAAQ,EAAA5U,MAAA4U,EAGAtoB,KAAAwnB,gBAAA/jB,eAAAqkB,IAEA9nB,KAAAuoB,+BAAAT,EAAAQ,EAAA5U,MAGA4U,CACA,CAGAE,8CAAAV,EAAArF,EAAA2F,GAIA,OADA,IAAApoB,KAAA4nB,eAAAE,GAAA9nB,KAAA0iB,MAAAD,EAAA2F,EAEA,CAGAK,sCAAAC,GAEA,IAAAC,EAAAD,EAAA5V,YACA8V,EAAAF,EAAAhV,KAoBA,OAjBAgV,EAAA7F,aAAA7iB,KAAA0iB,OAEA1iB,KAAAunB,SAAA9jB,eAAAklB,KAIA3oB,KAAAunB,SAAAoB,GAAA,CAAA,GAGA3oB,KAAAunB,SAAAoB,GAAAC,GAAAF,EAGA1oB,KAAAwnB,gBAAA/jB,eAAAklB,IAEA3oB,KAAAuoB,+BAAAI,EAAAC,GAGAF,CACA,CAEAH,+BAAAT,EAAAlV,GAEA,QAAA5S,KAAAunB,SAAAO,GAAArkB,eAAAmP,KAEA5S,KAAA0iB,MAAAoF,GAAA9nB,KAAAunB,SAAAO,GAAAlV,GACA5S,KAAAwnB,gBAAAM,GAAA9nB,KAAAunB,SAAAO,GAAAlV,IACA,EAIA,EAGAlT,EAAAD,QAAAioB,EAEAhoB,EAAAD,QAAAopB,oBAAApB,EACA/nB,EAAAD,QAAAigB,wBAAA+H,EAAA/H,uBtCuuIA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAASjf,EAAQf,EAAOD,GuCj3IhE,MAAAqpB,EAAAroB,EAAA,kBACAsoB,EAAAtoB,EAAA,cACAuoB,EAAAvoB,EAAA,aAEAwoB,EAAAxoB,EAAA,6BAEA,MAAAyoB,EAEA5W,YAAAsN,GAMA5f,KAAAmpB,cAAA,CAAA,EAGAnpB,KAAAmpB,cAAAC,gBAAA,IAAAN,EAAAlJ,GAEA5f,KAAAmpB,cAAAvG,KAAA,IAAAmG,EAAA/oB,KAAAmpB,cAAAC,gBAAAtE,UAEA9kB,KAAAmpB,cAAAE,QAAA,IAAAL,EAAAhpB,KAAAmpB,cAAAC,gBAAAtE,UACA9kB,KAAAmpB,cAAAE,QAAAzN,aAIA5b,KAAAmpB,cAAAG,eAAA,IAAAL,EAAAjpB,MACAA,KAAAupB,eAAAvpB,KAAAmpB,cAAAG,eACAtpB,KAAAupB,eAAA1G,aAAA7iB,MAKAA,KAAAupB,eAAAd,sCAAAzoB,KAAAmpB,cAAAG,gBACAtpB,KAAAupB,eAAAd,sCAAAzoB,KAAAmpB,cAAAvG,MACA5iB,KAAAupB,eAAAd,sCAAAzoB,KAAAmpB,cAAAE,SACArpB,KAAAupB,eAAAd,sCAAAzoB,KAAAmpB,cAAAC,iBAGAppB,KAAAupB,eAAAtB,6BAAA,kBAAAxnB,EAAA,gDACAT,KAAAupB,eAAA1B,eAAA,WAAApnB,EAAA,yCACAT,KAAAupB,eAAA1B,eAAA,eAAApnB,EAAA,6CACAT,KAAAupB,eAAAtB,6BAAA,aAAAxnB,EAAA,2CACAT,KAAAupB,eAAAtB,6BAAA,UAAAxnB,EAAA,wCACAT,KAAAupB,eAAA1B,eAAA,YAAApnB,EAAA,0CACAT,KAAAupB,eAAA1B,eAAA,aAAApnB,EAAA,2CACAT,KAAAupB,eAAA1B,eAAA,YAAApnB,EAAA,0CACAT,KAAAupB,eAAA1B,eAAA,WAAApnB,EAAA,aACAT,KAAAupB,eAAA1B,eAAA,cAAApnB,EAAA,aACA,CAEAsiB,cAEA,OAAA,CACA,CAEA+B,eAEA,OAAA9kB,KAAAmpB,cAAAC,gBAAAtE,QACA,CAEA0E,sBAEA,OAAAxpB,KAAAmpB,cAAAC,eACA,CAEAxL,UAEA,OAAA5d,KAAAmpB,cAAAE,OACA,CAEA9B,eAEA,OAAAvnB,KAAAmpB,cAAAG,eAAA/B,QACA,CAEAC,sBAEA,OAAAxnB,KAAAmpB,cAAAG,eAAA9B,eACA,CAEAxE,UAEA,OAAAhjB,KAAAmpB,cAAAvG,KAAAI,SACA,CAEAN,YAEA,OAAA1iB,IACA,EASAN,EAAAD,QAAAypB,EACAxpB,EAAAD,QAAA4iB,IANA,SAAAzC,GAEA,OAAA,IAAAsJ,EAAAtJ,EACA,EAKAlgB,EAAAD,QAAA6iB,gBAAA0G,EAAA1G,gBACA5iB,EAAAD,QAAAopB,oBAAAI,EAAAJ,oBACAnpB,EAAAD,QAAAigB,wBAAAuJ,EAAAvJ,wBAEAhgB,EAAAD,QAAA0kB,UAAA2E,EAAA3E,SvCw3IA,EAAE,CAAC,4BAA4B,GAAG,wCAAwC,GAAG,yCAAyC,GAAG,8CAA8C,GAAG,2CAA2C,GAAG,wCAAwC,GAAG,yCAAyC,GAAG,uCAAuC,GAAG,sCAAsC,GAAGsF,UAAY,GAAG,YAAY,GAAG,iBAAiB,GAAG,aAAa,GAAGC,SAAW,KAAK,GAAG,CAAC,SAASjpB,EAAQf,EAAOD,GwCt+Ihf,MAAA+S,EAAA/R,EAAA,6BAsMAf,EAAAD,QAxLA,cAAA+S,EAEAF,YAAAI,EAAA+P,EAAA7P,GAEAC,MAAAH,EAAA+P,EAAA7P,GAEA5S,KAAA8S,YAAA,YAEA9S,KAAA2pB,OAAA,GACA3pB,KAAA4pB,iBAAA,GAEA5pB,KAAA6pB,UAAA,IACA7pB,KAAA8pB,eAAA,IAEA9pB,KAAA+pB,gBAAA,CAAA,MAEA/pB,KAAAgqB,gBAAA,EACAhqB,KAAAiqB,WAAA,EACAjqB,KAAAkqB,cAAA,EACAlqB,KAAAmqB,YAAA,EAEAnqB,KAAAoqB,UAAA,EAEApqB,KAAAqqB,mBAAA,SAGArqB,KAAAsqB,YAAA,GACAtqB,KAAAuqB,cAAA,GAEAvqB,KAAAwqB,SAAA,EACAxqB,KAAAyqB,gBAAA,EAEAzqB,KAAA0qB,YAAA,EACA1qB,KAAA2qB,YAAA,CACA,CAEAC,iBAAAC,GAEA,IAAA9nB,MAAAC,QAAA6nB,GAEA,OAAA,EAGA,IAAA,IAAAtqB,EAAAP,KAAA4pB,iBAAA7oB,OAAAR,EAAAsqB,EAAA9pB,OAAAR,IAEAP,KAAA4pB,iBAAArpB,GAAA,GAAA8D,OAAA9D,GAGA,IAAAuqB,EAAA,CAAA,EAEA,IAAA,IAAAvqB,EAAA,EAAAA,EAAAsqB,EAAA9pB,OAAAR,IAEAuqB,EAAA9qB,KAAA4pB,iBAAArpB,IAAAsqB,EAAAtqB,GAGA,OAAAuqB,CACA,CAGAC,UAAAC,GAEAhrB,KAAA2pB,OAAAqB,EAEA,IAAA,IAAAzqB,EAAA,EAAAA,EAAAP,KAAA2pB,OAAA5oB,OAAAR,SAEA,IAAAP,KAAA2pB,OAAAppB,GAEAP,KAAA4pB,iBAAArpB,GAAA,GAAA8D,OAAA9D,GAIAP,KAAA4pB,iBAAArpB,GAAAP,KAAA2pB,OAAAppB,GAAA2C,UAGA,CAEA+nB,gBAEAjrB,KAAAuqB,cAAA,EACA,CAEAW,WAEA,IAAA,IAAA3qB,EAAA,EAAAA,EAAAP,KAAA+pB,gBAAAhpB,OAAAR,IAEAP,KAAAsqB,YAAAtqB,KAAAsqB,YAAAzc,QAAA7N,KAAA+pB,gBAAAxpB,GAAA,IAEAP,KAAAuqB,cAAA3nB,KAAA5C,KAAAsqB,aACAtqB,KAAAsqB,YAAA,EACA,CAEAa,QAAAC,GAEA,IAAAC,OAAA,IAAAD,EAAAprB,KAAAoqB,SAAAgB,EAEAprB,KAAA2qB,cACA,IAAAW,EAAAtrB,KAAAuqB,cAGA,OAFAvqB,KAAAuqB,cAAA,GAEAc,EAEArrB,KAAA4qB,iBAAAU,GAIAA,CAEA,CAEAC,aAAAC,GAEAxrB,KAAA0qB,cAEA,IAAA,IAAAnqB,EAAA,EAAAA,EAAAirB,EAAAzqB,OAAAR,IAEAP,KAAAwqB,SAAAgB,EAAAjrB,IAAAP,KAAA6pB,UAIA2B,EAAAjrB,IAAAP,KAAA8pB,eAGA9pB,KAAAyqB,eAEAzqB,KAAAyqB,gBAAA,EAGAzqB,KAAAwqB,QAKAjqB,EAAAirB,EAAAzqB,QAAAyqB,EAAAjrB,EAAA,IAAAP,KAAA8pB,gBAEA9pB,KAAAsqB,aAAAtqB,KAAAqqB,mBACArqB,KAAAyqB,gBAAA,GAKAzqB,KAAAwqB,SAAA,EAXAxqB,KAAAwqB,SAAA,EAgBAxqB,KAAAsqB,aAAAkB,EAAAjrB,GA5BAP,KAAAkrB,WAiCA,OAAAlrB,KAAAwqB,UAGAxqB,KAAAkrB,WAGAlrB,KAAAiqB,YAAAjqB,KAAAkqB,cAAAlqB,KAAA2qB,aAAA3qB,KAAAgqB,iBAEAhqB,KAAAkqB,cAAA,EAEAlqB,KAAA+qB,UAAA/qB,KAAAmrB,SAAA,MAGAnrB,KAAAmqB,YAEAnqB,KAAA2pB,QASA3pB,KAAAmrB,UAOA,ExC2+IA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAAS1qB,EAAQf,EAAOD,GyC9qJhE,MAAA+S,EAAA/R,EAAA,6BAynBAf,EAAAD,QAnnBA,cAAA+S,EAEAF,YAAAI,EAAA+P,EAAA7P,GAEAC,MAAAH,EAAA+P,EAAA7P,GAoTA3U,iBAAA+B,KAAA,kBAOA,SAAAgkB,EAAAyH,EAAAC,GAEA,IAAAC,EAAA3H,EAAA9gB,WACA,OAAAlD,KAAA4rB,4BAAAD,EAAAF,EAAAC,GAAAC,CACA,IAEA1tB,iBAAA+B,KAAA,gBAOA,SAAAgkB,EAAAyH,EAAAC,GAEA,IAAAC,EAAA3H,EAAA9gB,WACA,OAAAyoB,EAAA3rB,KAAA4rB,4BAAAD,EAAAF,EAAAC,EACA,IA1UA1rB,KAAA8S,YAAA,iBAIA9S,KAAA6rB,6BAAA,UAIA7rB,KAAA8rB,kCAAA,+BACA9rB,KAAA+rB,oCAAA,MACA/rB,KAAAgsB,8BAAA,cAIAhsB,KAAAisB,0BAAA,IACAjsB,KAAAksB,oBAAA,KACAlsB,KAAAmsB,6BAAA,IAEAnsB,KAAAosB,yBAAA,MACApsB,KAAAqsB,oCAAA,IAEArsB,KAAAssB,2BAAA,mBAAAztB,OAAAoE,UAAAspB,WACAvsB,KAAAwsB,yBAAA,mBAAA3tB,OAAAoE,UAAAwpB,QACA,CAaAC,cAAA1I,GAIA,OAAAA,EAAA9R,MAAA,IAAAya,UAAAhnB,KAAA,GACA,CAUAinB,iBAAA5I,EAAA6I,EAAAC,GAEA,OAAA9sB,KAAAssB,2BAEAtI,EAAAuI,WAAAM,EAAAC,GAIA9sB,KAAA+sB,0BAAA1tB,KAAA2kB,EAAA6I,EAAAC,EAEA,CASAC,0BAAAF,EAAAC,GAEA,OAAA9sB,KAAAsH,MAAAwlB,GAAA,EAAAD,EAAA9rB,UAAA8rB,CACA,CAUAG,eAAAhJ,EAAA6I,EAAAI,GAEA,OAAAjtB,KAAAwsB,yBAEAxI,EAAAyI,SAAAI,EAAAI,GAIAjtB,KAAAktB,wBAAA7tB,KAAA2kB,EAAA6I,EAAAI,EAEA,CASAC,wBAAAL,EAAAI,GAYA,OARAA,EAAAjtB,KAAAe,OAMAksB,GAAA,EAJAA,EAAAjtB,KAAAe,OAMAf,KAAA4K,OAAAqiB,EAAAJ,EAAA9rB,OAAA8rB,EAAA9rB,UAAA8rB,CACA,CAQAM,mBAAAnJ,GAEA,IAAA1O,EAAA,EACA8X,EAAApJ,EAAAjjB,OACAssB,EAAA,EAEA,KAAAA,EAAAD,GAEA9X,GAAAA,GAAA,GAAAA,EAAA0O,EAAA9e,WAAAmoB,KAAA,EAGA,MAAA,GAAAhpB,OAAArE,KAAAosB,0BAAA/nB,OAAAiR,EACA,CASAgY,6BAAAC,EAAAvJ,GAcA,OAAAA,EAAAuI,WAAAgB,IAAAvJ,EAAAyI,SAAAc,GAEAvJ,EAAAJ,UAAA,EAAAI,EAAAjjB,OAAA,GAIAijB,CAEA,CAOAwJ,wBAAAxJ,GAEA,GAAA,iBAAAA,GAAA,IAAAA,EAEA,OAAAA,EAAAnW,QAAA7N,KAAAgsB,8BAAAhsB,KAAAqsB,oCAEA,CAaAoB,sBAAAzJ,GAGA,IAEA0J,EAFA1tB,KAAA0sB,cAAA1I,GAEA2J,MAAA3tB,KAAA6rB,8BAAAlmB,KAAA,KAEA,OAAA3F,KAAA0sB,cAAAgB,EACA,CAEAE,8BAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAIA,OAAAJ,GAAAG,EAAAjuB,KAAAytB,sBAAAO,GAAAC,EAAAC,EAAAluB,KAAAytB,sBAAAO,EAAAE,GACA,CAQAC,2BAAAC,GAGA,OAAAA,EAAAlrB,WAAA2K,QAEA7N,KAAA8rB,kCACA9rB,KAAA4tB,8BAAAzU,KAAAnZ,MAEA,CAQAquB,iBAAAC,GAEA,IAAAC,EAAAC,WAAAF,GAAAG,QAAA,GAEA,OAAA/X,MAAA6X,KAGA,iBAAAD,IAGAC,EAAAC,WAAAF,EAAAzgB,QAAA7N,KAAAisB,0BAAA,IAAApe,QAAA7N,KAAA+rB,oCAAA,KAAA0C,QAAA,IAGA/X,MAAA6X,IAEAvuB,KAAAksB,oBAKA,IAAA7nB,OAAArE,KAAAmuB,2BAAAI,GACA,CASAG,qBAAAJ,EAAAK,GAEA,IAAAC,OAAA,IAAAD,EAAA,EAAAA,EAEAvI,EAAAoI,WAAAF,GAAAG,QAAAG,GACA,GAAAlY,MAAA0P,GACA,CAEA,OADA,GACAqI,QAAAG,EACA,CAGA,OAAAxI,CAEA,CAWAwF,4BAAA5H,EAAAyH,EAAAC,GAEA,IAAAmD,EAAApD,GAAA,EACA5sB,YAAA,IAAA6sB,EAAAA,EAAA,KACA,GAAA1H,EAAAjjB,OAAA0qB,EAGA,MAAA,GAGA,CACA,IAAAqD,EAAArD,EAAAzH,EAAAjjB,OAKA,OAJA+tB,EAAApD,EAAA3qB,SAEA2qB,GAAAA,EAAAqD,OAAAF,EAAAnD,EAAA3qB,SAEA2qB,EAAApkB,MAAA,EAAAwnB,EACA,CACA,CAqCAE,eAAAC,GAEA,GAAA,iBAAAA,EAEA,MAAA,GAGA,IAAAnN,EAAAnX,SAAAskB,EAAA,KACAlN,EAAApX,SAAAskB,EAAA,IAAA,IACAjN,EAAArX,SAAAskB,EAAA,IAAA,IACAhN,EAAAtX,SAAAskB,EAAA,MAEA,MAAA,GAAA5qB,OAAArE,KAAAkvB,eAAAjN,EAAA,EAAA,KAAA,KAAA5d,OAAArE,KAAAkvB,eAAAlN,EAAA,EAAA,KAAA,KAAA3d,OAAArE,KAAAkvB,eAAAnN,EAAA,EAAA,KAAA,KAAA1d,OAAArE,KAAAkvB,eAAApN,EAAA,EAAA,KACA,CASAqN,gBAAAC,EAAAC,GAEA,MAAA,iBAAAD,GAAA,iBAAAC,EAEA,GAGArvB,KAAAgvB,eAAAK,EAAAD,EACA,CAGAE,iBAAAC,GAGA,MADA,CAAA,UAAA,WAAA,QAAA,QAAA,MAAA,OAAA,OAAA,SAAA,YAAA,UAAA,WAAA,YACAA,EAAAC,WACA,CAEAC,4BAAAF,GAGA,MADA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAA,EAAAC,WACA,CAEAE,6BAAAC,GAEA,OAAAA,EAAAC,cAAA5vB,KAAAkvB,eAAAS,EAAAH,WAAA,EAAA,KAAAxvB,KAAAkvB,eAAAS,EAAAE,UAAA,EAAA,IACA,CAeAC,kBAAA9L,EAAA6J,GAEA,OAAA7J,EAAA9R,MAAA2b,GAAA,EACA,CAWAkC,iBAAA/L,EAAA6J,GAEA,IAAAmC,EAAAhM,EAAAne,QAAAgoB,GAEA,OAAAmC,EAAA,GAAAA,EAAAnC,EAAA9sB,QAAAijB,EAAAjjB,OAEA,GAGAijB,EAAAJ,UAAAoM,EAAAnC,EAAA9sB,OACA,CAYAkvB,sBAAAjM,EAAAkM,EAAAC,GAEA,IAAAxE,EAAA,iBAAA3H,EAAAA,EAAA,GACAoM,EAAA,iBAAAF,EAAAA,EAAA,IACAG,EAAA,iBAAAF,EAAAA,EAAA,IAEAG,EAAA,EACAC,EAAA,EACA,IAAA,IAAAhwB,EAAA,EAAAA,EAAAorB,EAAA5qB,OAAAR,IAGAorB,EAAAprB,IAAA6vB,GAEA,GAAAG,GAEAD,IAEAC,KAEA5E,EAAAprB,IAAA8vB,GAEAE,IAIA,OAAAD,CACA,CAcAE,+BAAAxM,EAAAyM,EAAAP,EAAAC,GAEA,IAAAxE,EAAA,iBAAA3H,EAAAA,EAAA,GACA0M,EAAA,iBAAAD,EAAAA,EAAA,EACAL,EAAA,iBAAAF,EAAAA,EAAA,IACAG,EAAA,iBAAAF,EAAAA,EAAA,IAEAG,EAAA,EACAC,EAAA,EAEAI,GAAA,EACAC,EAAA,EACAC,EAAA,EAEA,IAAA,IAAAtwB,EAAA,EAAAA,EAAAorB,EAAA5qB,OAAAR,IAGAorB,EAAAprB,IAAA6vB,GAEAG,IAGA,GAAAA,IAEAD,IACAI,GAAAJ,EAAA,IAGAK,GAAA,EACAC,EAAArwB,KAKAorB,EAAAprB,IAAA8vB,IAEAE,IAGA,GAAAA,GACAI,GACAE,GAAAD,IAEAC,EAAAtwB,EACAowB,GAAA,IAKA,OAAAL,GAAAI,EAGA,GAGAG,EAAA,GAAAA,EAAAD,EAEAjF,EAAA/H,UAAAgN,EAAA,EAAAC,GAIAlF,EAAA/H,UAAAgN,EAAA,EAEA,CAYAE,6BAAA9M,EAAA+M,EAAAb,EAAAC,GAEA,IAAAxE,EAAA,iBAAA3H,EAAAA,EAAA,GACAgN,EAAA,iBAAAD,EAAAA,EAAA,EACAX,EAAA,iBAAAF,EAAAA,EAAA,IACAG,EAAA,iBAAAF,EAAAA,EAAA,IAEAG,EAAA,EACAC,EAAA,EAEAI,GAAA,EACAM,EAAA,EACAC,EAAA,EAEA,IAAA,IAAA3wB,EAAA,EAAAA,EAAAorB,EAAA5qB,OAAAR,IAGAorB,EAAAprB,IAAA6vB,GAEAG,IAEA,GAAAA,IAEAD,IACAU,GAAAV,EAAA,IAEAK,GAAA,EACAM,EAAA1wB,KAIAorB,EAAAprB,IAAA8vB,IAEAE,IAEA,GAAAA,GACAI,GACAO,GAAAD,IAEAC,EAAA3wB,EACAowB,GAAA,IAKA,GAAAL,GAAAU,EAEA,OAAArF,EAGA,IAAAwF,EAAA,GAYA,OAVAF,EAAA,IAEAE,EAAAxF,EAAA/H,UAAA,EAAAqN,IAGAtF,EAAA5qB,OAAAmwB,EAAA,GAAAA,EAAAD,IAEAE,GAAAxF,EAAA/H,UAAAsN,EAAA,IAGAC,CACA,EzCmrJA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAAS1wB,EAAQf,EAAOD,G0CzyKhE,MAAAgoB,EAAAhnB,EAAA,8BAAAooB,oBAcAnpB,EAAAD,QAZA,cAAAgoB,EAEAnV,YAAAI,EAAA+P,EAAA7P,GAEAC,MAAAH,EAAA+P,EAAA7P,GAEA5S,KAAA8S,YAAA,kBAEA9S,KAAAoxB,YAAA,SACA,E1C8yKA,EAAE,CAAC,6BAA6B,KAAK,GAAG,CAAC,SAAS3wB,EAAQf,EAAOD,G2CzzKjE,MAAAgoB,EAAAhnB,EAAA,8BAAAooB,oBAOAwI,EAAA5wB,EAAA,yDACA6wB,EAAA7wB,EAAA,6DAmDAf,EAAAD,QAhDA,cAAAgoB,EAEAnV,YAAAI,EAAA+P,EAAA7P,GAEAC,MAAAH,EAAA+P,EAAA7P,GAEA5S,KAAA8S,YAAA,eAEA9S,KAAAuxB,SAAA,IAAAF,EAGArxB,KAAAwxB,aAAA,IAAAF,EAAAtxB,KAAA0iB,MAAA8E,gBAAAiK,QAAAC,WAEA1xB,KAAA2xB,UAAA3xB,KAAAuxB,SAAAI,SACA,CAWApO,WAAAqO,EAAAC,EAAAC,GAEA,OAAA9xB,KAAAuxB,SAAAhO,WAAAqO,EAAAC,EAAAC,EACA,CAEAC,gBAAAH,EAAAC,EAAAG,GAEA,OAAAhyB,KAAAuxB,SAAAQ,gBAAAH,EAAAC,EAAAG,EACA,CASA/N,YAAAD,EAAA1Q,EAAA2e,GAEA,OAAAjyB,KAAAwxB,aAAAvN,YAAAD,EAAAhkB,KAAA2xB,UAAAre,EAAA2e,EACA,E3C8zKA,EAAE,CAAC,6BAA6B,GAAG,4DAA4D,GAAG,wDAAwD,KAAK,GAAG,CAAC,SAASxxB,EAAQf,EAAOD,G4C9lK3LC,EAAAD,QAlRA,MAKA6S,YAAA4f,GAEAlyB,KAAA0xB,UAAAQ,CACA,CASAC,eAAAC,GAEA,MACA,CACAT,UAAAS,EAEAC,cAAA,EAEAC,OAAA,GACAC,aAAA,GAEAC,SAAA,EAEAC,cAAA,EACAC,yBAAA,GAEA,CAUAC,WAAAld,EAAAmd,GAEAA,EAAAH,aAAAhd,EAGAmd,EAAAH,aAAAhvB,eAAA,gBAGAmvB,EAAAJ,QAAAI,EAAAH,aAEA,CAUAI,mBAAArX,EAAAoX,GAEAA,EAAAL,cAAA/W,CACA,CAQAsX,kBAAAF,GAEAA,EAAAN,QAAAM,EAAAL,aACAK,EAAAL,aAAA,EACA,CAQAQ,gBAAAH,EAAAtf,GAEAsf,EAAAL,aAAAxxB,QAAA6xB,EAAAJ,QAAAQ,WAAAjyB,OAAA6xB,EAAAJ,QAAAS,aAAAlyB,QACA6xB,EAAAL,aAAA3nB,QAAAgoB,EAAAJ,QAAAQ,WAAAjyB,UAAA6xB,EAAAJ,QAAAQ,aAIAJ,EAAAJ,QAAAU,SAEAxmB,QAAAkR,IAAA,wDAAAvZ,OAAAuuB,EAAAJ,QAAAS,aAAA,SAAA5uB,OAAAuuB,EAAAJ,QAAAQ,WAAA,6DACAhzB,KAAAuyB,aAAA,GAEAvyB,KAAA8yB,kBAAAF,GAEAA,EAAAJ,SAAA,EACAI,EAAAH,cAAA,IAIAG,EAAAL,aAAAK,EAAAJ,QAAAW,MAAAP,EAAAL,aAAA3nB,OAAAgoB,EAAAJ,QAAAS,aAAAlyB,OAAA6xB,EAAAL,aAAAxxB,QAAA6xB,EAAAJ,QAAAS,aAAAlyB,OAAA6xB,EAAAJ,QAAAQ,WAAAjyB,SAAAuS,GAEAtT,KAAA8yB,kBAAAF,GAEAA,EAAAJ,SAAA,EACAI,EAAAH,cAAA,GAGA,CAEAW,qBAAAR,EAAAtf,EAAA2e,GAEA,GAAAW,EAAAL,aAAAxxB,QAAA6xB,EAAAJ,QAAAQ,WAAAjyB,OAAA6xB,EAAAJ,QAAAS,aAAAlyB,QACA6xB,EAAAL,aAAA3nB,QAAAgoB,EAAAJ,QAAAQ,WAAAjyB,UAAA6xB,EAAAJ,QAAAQ,WACA,CAGA,GAAAJ,EAAAJ,QAAAU,QAEA,OAAAN,EAAAJ,QAAAW,MAAAP,EAAAL,aAAA3nB,OAAAgoB,EAAAJ,QAAAS,aAAAlyB,OAAA6xB,EAAAL,aAAAxxB,QAAA6xB,EAAAJ,QAAAS,aAAAlyB,OAAA6xB,EAAAJ,QAAAQ,WAAAjyB,SAAAuS,GACA,CAAAuC,EAAAwd,KAEAxd,GAEAnJ,QAAAkR,IAAA,0DAAAvZ,OAAAuuB,EAAAJ,QAAAS,aAAA,SAAA5uB,OAAAuuB,EAAAJ,QAAAQ,WAAA,MAAA3uB,OAAAwR,IAGA+c,EAAAL,aAAAc,EAEArzB,KAAA8yB,kBAAAF,GAEAA,EAAAJ,SAAA,EACAI,EAAAH,cAAA,EAEAR,OAKAW,EAAAL,aAAAK,EAAAJ,QAAAW,MAAAP,EAAAL,aAAA3nB,OAAAgoB,EAAAJ,QAAAS,aAAAlyB,OAAA6xB,EAAAL,aAAAxxB,QAAA6xB,EAAAJ,QAAAS,aAAAlyB,OAAA6xB,EAAAJ,QAAAQ,WAAAjyB,SAAAuS,GAEAtT,KAAA8yB,kBAAAF,GAEAA,EAAAJ,SAAA,EACAI,EAAAH,cAAA,CAEA,CAEA,OAAAR,GACA,CASAqB,eAAA9X,EAAAoX,EAAAtf,IAGAsf,EAAAH,cAAAG,EAAAjB,UAAAluB,eAAA+X,IAGAxb,KAAA2yB,WAAAC,EAAAjB,UAAAnW,GAAAoX,GACA5yB,KAAA6yB,mBAAArX,EAAAoX,IAGAA,EAAAH,cAGAG,EAAAH,aAAAhvB,eAAA+X,IAGAxb,KAAA2yB,WAAAC,EAAAH,aAAAjX,GAAAoX,GAEA5yB,KAAA6yB,mBAAArX,EAAAoX,GACAA,EAAAJ,SAGAxyB,KAAA+yB,gBAAAH,EAAAtf,IAMAsf,EAAAN,QAAA9W,CAEA,CAEA+X,oBAAA/X,EAAAoX,EAAAtf,EAAA2e,GAGA,IAAAW,EAAAH,cAAAG,EAAAjB,UAAAluB,eAAA+X,GAGAxb,KAAA2yB,WAAAC,EAAAjB,UAAAnW,GAAAoX,GACA5yB,KAAA6yB,mBAAArX,EAAAoX,QAGA,GAAAA,EAAAH,cASA,GANAG,EAAAH,aAAAhvB,eAAA+X,IAGAxb,KAAA2yB,WAAAC,EAAAH,aAAAjX,GAAAoX,GAEA5yB,KAAA6yB,mBAAArX,EAAAoX,GACAA,EAAAJ,QAGA,OAAAxyB,KAAAozB,qBAAAR,EAAAtf,EAAA2e,QAMAW,EAAAN,QAAA9W,EAGA,OAAAyW,EAAA,KACA,CAUAhO,YAAAD,EAAAoO,EAAA9e,EAAA2e,GAEA,GAAA,mBAAAA,EACA,CACA,IAAAuB,EAAAxzB,KAAAmyB,eAAAC,GAEA,IAAA,IAAA7xB,EAAA,EAAAA,EAAAyjB,EAAAjjB,OAAAR,IAGAP,KAAAszB,eAAAtP,EAAAzjB,GAAAizB,EAAAlgB,EAAA2e,GAKA,OAFAjyB,KAAA8yB,kBAAAU,GAEAA,EAAAlB,MACA,CAEA,CAEA,IAAAkB,EAAAxzB,KAAAmyB,eAAAC,GAEApyB,KAAA0xB,UAAA1N,EAAA,GACA,CAAAxI,EAAAiY,KAEAzzB,KAAAuzB,oBAAA/X,EAAAgY,EAAAlgB,EAAAmgB,EAAA,IAEA5d,IAGA7V,KAAA8yB,kBAAAU,GACAvB,EAAApc,EAAA2d,EAAAlB,OAAA,GAGA,CACA,E5C43KA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS7xB,EAAQf,EAAOD,G6CjjLlCC,EAAAD,QA1FA,MAKA6S,cAEAtS,KAAA2xB,UAAA,CAAA,CACA,CAWA+B,SAAAC,EAAAC,EAAAC,GAKA,OAHAF,EAAAlwB,eAAAmwB,EAAAC,MACAF,EAAAC,EAAAC,IAAA,CAAA,GAEAF,EAAAC,EAAAC,GACA,CASAtQ,WAAAqO,EAAAC,EAAAC,GAEA,GAAAF,EAAA7wB,OAAA,EACA,OAAA,EAEA,GAAA,iBAAA8wB,GAAAA,EAAA9wB,OAAA,EACA,OAAA,EAEA,IAAA+yB,EAAA9zB,KAAA2xB,UAGA,IAAA,IAAApxB,EAAA,EAAAA,EAAAqxB,EAAA7wB,OAAAR,IACAuzB,EAAA9zB,KAAA0zB,SAAAI,EAAAlC,EAAArxB,GASA,OAPAuzB,EAAAb,aAAArB,EACAkC,EAAAd,WAAA,iBAAAnB,GAAAA,EAAA9wB,OAAA,EAAA8wB,EAAAD,EACAkC,EAAAX,MAAA,mBAAArB,EAAAA,EACA,iBAAAA,EAAA,IAAAA,EACAxe,GAAAA,EACAwgB,EAAAC,WAAA,GAEA,CACA,CASAhC,gBAAAH,EAAAC,EAAAmC,GAEA,GAAApC,EAAA7wB,OAAA,EACA,OAAA,EAEA,GAAA,iBAAA8wB,GAAAA,EAAA9wB,OAAA,EACA,OAAA,EAEA,IAAA+yB,EAAA9zB,KAAA2xB,UAGA,IAAA,IAAApxB,EAAA,EAAAA,EAAAqxB,EAAA7wB,OAAAR,IACAuzB,EAAA9zB,KAAA0zB,SAAAI,EAAAlC,EAAArxB,GASA,OAPAuzB,EAAAb,aAAArB,EACAkC,EAAAd,WAAA,iBAAAnB,GAAAA,EAAA9wB,OAAA,EAAA8wB,EAAAD,EACAkC,EAAAX,MAAA,mBAAAa,EAAAA,EACA,iBAAAA,EAAA,CAAAzgB,EAAAD,EAAA2e,KAAAA,EAAAD,eAAA,EACA,CAAAze,EAAAD,EAAA2e,IAAAA,EAAA1e,GACAugB,EAAAZ,SAAA,GAEA,CACA,E7CupLA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASzyB,EAAQf,EAAOD,G8CpvLlCC,EAAAD,QACA,CACAkU,SAAA,CACAiP,MAAA,EACAlP,MAAA,EAEAugB,MAAA,GACAC,QAAA,GAEAC,QAAA,GAEAC,OAAA,CACAC,WAAA,EAEAC,mBAAA,EACAC,sBAAA,EAEAC,MAAA,EACAC,eAAA,EAEAC,UAAA,EACAC,QAAA,GAEAC,OAAA,GACAC,IAAA,G9CwvLA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASp0B,EAAQf,EAAOD,G+ChxLlC,MAAAgoB,EAAAhnB,EAAA,8BAAAooB,oBAEAiM,EAAAjX,KAAAC,UAAArd,EAAA,iDAiFAf,EAAAD,QA/EA,cAAAgoB,EAGAnV,YAAAI,EAAA+P,EAAA7P,GAEAC,MAAAH,EAAA+P,EAAA7P,GAEA5S,KAAA8S,YAAA,kBAEA9S,KAAAiZ,MAAA4E,KAAA8G,MAAAmQ,GAGA90B,KAAAiZ,MAAAtF,SAAAD,KAAA1T,KAAA0T,KACA1T,KAAAiZ,MAAAtF,SAAAiP,KAAA5iB,KAAA4iB,KAEA5iB,KAAAuS,KAAA,iBAAAvS,KAAA2iB,QAAAoS,KAAA/0B,KAAA2iB,QAAAoS,KAAA,qBAAA1wB,OAAArE,KAAAiZ,MAAAtF,SAAAiP,MAEA5iB,KAAA4d,IAAA5d,IACA,CAEAg1B,kBAAA7Y,EAAAL,EAAAC,GAEA/b,KAAAiZ,MAAA4b,IAAAjyB,KAAA,GAAAyB,QAAA,IAAAwP,MAAAohB,cAAA,MAAA5wB,OAAA8X,EAAA,OAAA9X,OAAAyX,IAEA,iBAAAC,GAEA/b,KAAAiZ,MAAA4b,IAAAjyB,KAAAib,KAAAC,UAAA/B,GAEA,CAEAmZ,qBAAApZ,EAAAC,GAEA/b,KAAAiZ,MAAA2b,OAAAhyB,KAAA,GAAAyB,OAAAyX,IAEA,iBAAAC,GAEA/b,KAAAiZ,MAAA2b,OAAAhyB,KAAAib,KAAAC,UAAA/B,GAEA,CAEAF,MAAAC,EAAAC,GAEA/b,KAAAg1B,kBAAA,QAAAlZ,EAAAC,GACA/b,KAAA0iB,MAAA9E,IAAA/B,MAAAC,EAAAC,EACA,CAEAC,MAAAF,EAAAC,GAEA/b,KAAAg1B,kBAAA,QAAAlZ,EAAAC,GACA/b,KAAA0iB,MAAA9E,IAAA5B,MAAAF,EAAAC,EACA,CAEAE,KAAAH,EAAAC,GAEA/b,KAAAg1B,kBAAA,OAAAlZ,EAAAC,GACA/b,KAAA0iB,MAAA9E,IAAA3B,KAAAH,EAAAC,EACA,CAEAnD,KAAAkD,EAAAC,GAEA/b,KAAAg1B,kBAAA,OAAAlZ,EAAAC,GACA/b,KAAA0iB,MAAA9E,IAAAhF,KAAAkD,EAAAC,EACA,CAEApP,MAAAmP,EAAAC,GAEA/b,KAAAg1B,kBAAA,QAAAlZ,EAAAC,GACA/b,KAAAk1B,qBAAApZ,EAAAC,GACA/b,KAAA0iB,MAAA9E,IAAAjR,MAAAmP,EAAAC,EACA,CAEAG,MAAAJ,EAAAC,GAEA/b,KAAAg1B,kBAAA,QAAAlZ,EAAAC,GACA/b,KAAAk1B,qBAAApZ,EAAAC,GACA/b,KAAA0iB,MAAA9E,IAAA1B,MAAAJ,EAAAC,EACA,E/CqxLA,EAAE,CAAC,6BAA6B,GAAG,+CAA+C,KAAK,GAAG,CAAC,SAAStb,EAAQf,EAAOD,GgDr2LnH,MAAAgoB,EAAAhnB,EAAA,8BAAAooB,oBAEAsM,EAAA10B,EAAA,cAkNAf,EAAAD,QAhNA,cAAAgoB,EAEAnV,YAAAI,EAAA+P,EAAA7P,GAEAC,MAAAH,EAAA+P,EAAA7P,GAEA5S,KAAAo1B,UAAA,GACAp1B,KAAA2iB,QAAAyS,UAAAp1B,KAAA0iB,MAAA0S,YAEAp1B,KAAAo1B,UAAA,GAGAp1B,KAAAq1B,WAAAr1B,KAAA0iB,MAAA8E,gBAAA8N,WAEAt1B,KAAA8S,YAAA,aAIA9S,KAAAu1B,sBAAA9S,GAAAA,CACA,CAEA+S,WAAA/S,GAGA,OAAAziB,KAAAu1B,sBAAA9S,EACA,CAEAgT,sBAAAhT,EAAAwP,GAEA,IAAAyD,EAAA11B,KAAAw1B,WAAA/S,GASA,OAPAiT,EAAAC,iBAAA31B,KAAA0iB,MAAA9E,IAAA2D,eAEAvhB,KAAAo1B,UAEAp1B,KAAA0iB,MAAA9E,IAAA5B,MAAA,aAAA3X,OAAAqxB,EAAAE,OAAA,gBAAAvxB,OAAAqxB,EAAAG,IAAA,QAAAxxB,OAAAqxB,EAAAC,mBAGAR,EAAAO,GACA,CAAA7f,EAAAigB,KAEA,GAAAjgB,EAEA,OAAAoc,EAAApc,EAAAigB,GAGA,GAAA91B,KAAAo1B,SACA,CACA,IAAAW,EAAA/1B,KAAA0iB,MAAA9E,IAAA2D,eACAvhB,KAAA0iB,MAAA9E,IAAA5B,MAAA,UAAA3X,OAAAqxB,EAAAE,OAAA,kBAAAvxB,OAAArE,KAAAq1B,WAAAlG,gBAAAuG,EAAAC,iBAAAI,GAAA,YAAA1xB,OAAAyxB,EAAAE,YACA,CAEA,IAAAC,EAAA,GAEAH,EAAAve,GAAA,QAAA2e,IAGA,GAAAl2B,KAAAo1B,SACA,CACA,IAAAe,EAAAn2B,KAAA0iB,MAAA9E,IAAA2D,eACAvhB,KAAA0iB,MAAA9E,IAAA5B,MAAA,UAAA3X,OAAAqxB,EAAAE,OAAA,qBAAAvxB,OAAA6xB,EAAAn1B,OAAA,kBAAAsD,OAAArE,KAAAq1B,WAAAlG,gBAAAuG,EAAAC,iBAAAQ,GAAA,MACA,CACAF,GAAAC,CAAA,IAGAJ,EAAAve,GAAA,OAAA,KAEA,GAAAvX,KAAAo1B,SACA,CACA,IAAAgB,EAAAp2B,KAAA0iB,MAAA9E,IAAA2D,eACAvhB,KAAA0iB,MAAA9E,IAAA5B,MAAA,OAAA3X,OAAAqxB,EAAAE,OAAA,yBAAAvxB,OAAA4xB,EAAAl1B,OAAA,kBAAAsD,OAAArE,KAAAq1B,WAAAlG,gBAAAuG,EAAAC,iBAAAS,GAAA,MACA,CACA,OAAAnE,EAAApc,EAAAigB,EAAAG,EAAA,GACA,GAEA,CAEAI,mBAAA5T,EAAAwP,GAEAxP,EAAA6T,MAAA,EAEA,IAAAZ,EAAA11B,KAAAw1B,WAAA/S,GASA,OAPAiT,EAAAC,iBAAA31B,KAAA0iB,MAAA9E,IAAA2D,eAEAvhB,KAAAo1B,UAEAp1B,KAAA0iB,MAAA9E,IAAA5B,MAAA,aAAA3X,OAAAqxB,EAAAE,OAAA,qBAAAvxB,OAAAqxB,EAAAG,IAAA,QAAAxxB,OAAAqxB,EAAAC,mBAGAR,EAAAO,GACA,CAAA7f,EAAAigB,KAEA,GAAAjgB,EAEA,OAAAoc,EAAApc,EAAAigB,GAGA,GAAA91B,KAAAo1B,SACA,CACA,IAAAW,EAAA/1B,KAAA0iB,MAAA9E,IAAA2D,eACAvhB,KAAA0iB,MAAA9E,IAAA5B,MAAA,eAAA3X,OAAAqxB,EAAAE,OAAA,kBAAAvxB,OAAArE,KAAAq1B,WAAAlG,gBAAAuG,EAAAC,iBAAAI,GAAA,YAAA1xB,OAAAyxB,EAAAE,YACA,CAEAF,EAAAve,GAAA,QAAA2e,IAEA,GAAAl2B,KAAAo1B,SACA,CACA,IAAAe,EAAAn2B,KAAA0iB,MAAA9E,IAAA2D,eACAvhB,KAAA0iB,MAAA9E,IAAA5B,MAAA,eAAA3X,OAAAqxB,EAAAE,OAAA,qBAAAvxB,OAAA6xB,EAAAn1B,OAAA,kBAAAsD,OAAArE,KAAAq1B,WAAAlG,gBAAAuG,EAAAC,iBAAAQ,GAAA,MACA,CAEA,OAAAlE,EAAApc,EAAAigB,EAAAjY,KAAA8G,MAAAuR,GAAA,IAGAJ,EAAAve,GAAA,OAAA,KAEA,GAAAvX,KAAAo1B,SACA,CACA,IAAAgB,EAAAp2B,KAAA0iB,MAAA9E,IAAA2D,eACAvhB,KAAA0iB,MAAA9E,IAAA5B,MAAA,YAAA3X,OAAAqxB,EAAAE,OAAA,6BAAAvxB,OAAArE,KAAAq1B,WAAAlG,gBAAAuG,EAAAC,iBAAAS,GAAA,MACA,IACA,GAEA,CAEAG,QAAAC,EAAAvE,GAEA,IAAAwE,EAAA,iBAAAD,EAAAA,EAAA,CAAA,EAQA,MAPA,iBAAAA,IAEAC,EAAAZ,IAAAW,GAGAC,EAAAb,OAAA,MAEA51B,KAAAq2B,mBAAAI,EAAAxE,EACA,CAEAyE,QAAAjU,EAAAwP,GAEA,MAAA,iBAAAxP,EAAAkU,KAEA1E,EAAA,IAAArxB,MAAA,2CAGA6hB,EAAAmT,OAAA,MAEA51B,KAAAq2B,mBAAA5T,EAAAwP,GACA,CAEA2E,SAAAnU,EAAAwP,GAEA,MAAA,iBAAAxP,EAAAkU,KAEA1E,EAAA,IAAArxB,MAAA,4CAGA6hB,EAAAmT,OAAA,OAEA51B,KAAAq2B,mBAAA5T,EAAAwP,GACA,CAEA4E,UAAApU,EAAAwP,GAEA,MAAA,iBAAAxP,EAAAkU,KAEA1E,EAAA,IAAArxB,MAAA,6CAGA6hB,EAAAmT,OAAA,QAEA51B,KAAAq2B,mBAAA5T,EAAAwP,GACA,CAEA6E,SAAArU,EAAAwP,GAEA,MAAA,iBAAAxP,EAAAkU,KAEA1E,EAAA,IAAArxB,MAAA,4CAGA6hB,EAAAmT,OAAA,OAEA51B,KAAAq2B,mBAAA5T,EAAAwP,GACA,CAEA8E,QAAAtU,EAAAwP,GAIA,OAFAxP,EAAAmT,OAAA,SAEA51B,KAAAq2B,mBAAA5T,EAAAwP,EACA,CAEA+E,WAAAR,EAAAvE,GAEA,IAAAwE,EAAA,iBAAAD,EAAAA,EAAA,CAAA,EAQA,MAPA,iBAAAA,IAEAC,EAAAZ,IAAAW,GAGAC,EAAAb,OAAA,MAEA51B,KAAAy1B,sBAAAgB,EAAAxE,EACA,EhD02LA,EAAE,CAAC,6BAA6B,GAAG,aAAa,KAAK,GAAG,CAAC,SAASxxB,EAAQf,EAAOD,GiD3jMjF,MAAAgoB,EAAAhnB,EAAA,8BAAAooB,oBAyGAnpB,EAAAD,QAvGA,cAAAgoB,EAWAnV,YAAAI,EAAA+P,EAAA7P,GAEAC,MAAAH,EAAA+P,EAAA7P,GAEA5S,KAAA8S,YAAA,WAIA9S,KAAAi3B,SACA,CACAC,SAAA,kBACAC,YAAA,mBACAC,QAAA,+BACAC,UAAA,8BAEAC,mBAAA,MAKAt3B,KAAAu3B,gBAAA,CACA,KAAA,KACA,IAAA,IACAr3B,EAAA,KACA,KAAA,IACAE,EAAA,KACA,KAAA,IACAC,EAAA,KACA,KAAA,IACAm3B,MAAA,SACA,SAAA,QACAC,MAAA,SACA,SAAA,SAKAz3B,KAAA03B,gBAAA,EACA13B,KAAA23B,gBAAA,CACA,CAEAC,eAAAtkB,GAEA,OAAAtT,KAAA03B,eAAApkB,EACA,CAEAukB,iBAAAvkB,GAGA,OADAtT,KAAA43B,eAAAze,KAAAnZ,KAEA,CAEA83B,sBAAAC,EAAAzkB,GA2BA,OAvBAtT,KAAAg4B,eAAA,SAAAD,EACAlqB,QAAA7N,KAAAi3B,SAAAG,SACAvJ,GAEA,KAAAxpB,OAAArE,KAAAu3B,gBAAA1J,MAEAhgB,QAAA7N,KAAAi3B,SAAAE,aAAAn3B,KAAAi3B,SAAAK,oBACA,CAAAzJ,EAAAoK,IAEA,QAAA5zB,OAAA6zB,mBAAAD,GAAA,WAEApqB,QAAA7N,KAAAi3B,SAAAC,UAAAl3B,KAAAi3B,SAAAK,oBACA,CAAAzJ,EAAAoK,IAEA,OAAA5zB,OAAA6zB,mBAAAD,GAAA,eACA,OAGAj4B,KAAAg4B,eAAA,mCAAA3zB,OAAArE,KAAAg4B,eAAA,OACAh4B,KAAAg4B,eAAA,oFAAA3zB,OAAArE,KAAAg4B,eAAA,iBAEAh4B,KAAA03B,eAAA,IAAArhB,SAAA,sBAAArW,KAAAg4B,qBAEA,IAAA1kB,EAEAtT,KAAA03B,eAAApkB,IAKAtT,KAAAm4B,uBAAA,mBAAAn4B,KAAAg4B,eAAA,IAEAh4B,KAAA63B,mBACA,EjDgkMA,EAAE,CAAC,6BAA6B,KAAK,GAAG,CAAC,SAASp3B,EAAQf,EAAOD,GkDtqMjE,MAAAgoB,EAAAhnB,EAAA,8BAAAooB,oBAGAuP,EAAA33B,EAAA,mBACA43B,EAAA53B,EAAA,mBAoJAf,EAAAD,QAlJA,cAAAgoB,EAWAnV,YAAAI,EAAA+P,EAAA7P,GAEAC,MAAAH,EAAA+P,EAAA7P,GAEA5S,KAAAs4B,UAAA,CAAA,EAGAt4B,KAAAu4B,UAAAH,EACAp4B,KAAA0xB,UAAA2G,CACA,CAIAG,OAAAC,GACA,IAAA,IAAAC,EAAA/2B,UAAAZ,OADA43B,EAAA,IAAA51B,MAAA21B,EAAA,EAAAA,EAAA,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,EAAA,GAAAj3B,UAAAi3B,GAEA,OAAAt6B,OAAA6iB,OAAAsX,KAAAE,EACA,CAKAE,SAAAd,EAAAzkB,GAIA,OAFAtT,KAAA0iB,MAAA6G,eAAAf,8CAAA,YAEAsP,sBAAAC,EAAAzkB,EACA,CAGAwlB,oBAAAC,EAAAhB,EAAAzkB,GAEA,IAAA0lB,EAAAh5B,KAAA0iB,MAAA6G,eAAArB,2BAAA,WAAA,CAAA,EAAA6Q,GAIA,OAFA/4B,KAAAs4B,UAAAS,GAAAC,EAAAlB,sBAAAC,EAAAzkB,GAEAtT,KAAAs4B,UAAAS,EACA,CAOAE,MAAAC,EAAAC,EAAAC,GAEA,IAAAC,EAAA,IAAAH,GAEAI,EAAA,iBAAAH,EAAAA,EAAA,EACAI,OAAA,IAAAH,EAAAA,EAAA,GAEA,GAAAE,GAAA,EAEA,OAAAC,EAGA,KAAAF,EAAAt4B,QAEAw4B,EAAA32B,KAAAy2B,EAAAG,OAAA,EAAAF,IAGA,OAAAC,CACA,CAYAE,gBAAAC,GAIA,IAAAC,EAAAD,EAAAxnB,MAAA,OAGA0nB,EAAA,IAAA/lB,KAMA+lB,EAAAC,eAAAlvB,SAAAgvB,EAAA,KAIAC,EAAAE,YAAAnvB,SAAAgvB,EAAA,GAAA,IACAC,EAAAG,WAAApvB,SAAAgvB,EAAA,KAGAC,EAAAI,YAAArvB,SAAAgvB,EAAA,KACAC,EAAAK,cAAAtvB,SAAAgvB,EAAA,KACAC,EAAAM,cAAAvvB,SAAAgvB,EAAA,KACAC,EAAAO,mBAAAxvB,SAAAgvB,EAAA,KAGA,IAAAS,EAAA,EAGA,GAAAT,EAAA,IAAAA,EAAA,GACA,CAGA,IAAAU,EAAA,EAGAV,EAAA,KAGAU,EAAA1vB,SAAAgvB,EAAA,IAAA,IAIAS,EAAAzvB,SAAAgvB,EAAA,IAAAU,EAGA,KAAAX,EAAA9uB,QAAA,EAAA,KAGAwvB,IAAA,EAEA,CAMA,OAHAR,EAAAU,SAAAV,EAAAW,WAAAH,GAGAR,CACA,ElD2qMA,EAAE,CAAC,6BAA6B,GAAG,kBAAkB,EAAE,kBAAkB,KAAK,GAAG,CAAC,SAASn5B,EAAQf,EAAOD,GmDh0M1G,IAAA+6B,EAAA/5B,EAAA,QACAo1B,EAAAp1B,EAAA,OAEAg6B,EAAA/6B,EAAAD,QAEA,IAAA,IAAAtB,KAAAq8B,EACAA,EAAA/2B,eAAAtF,KAAAs8B,EAAAt8B,GAAAq8B,EAAAr8B,IAaA,SAAAu8B,EAAAC,GAOA,GANA,iBAAAA,IACAA,EAAA9E,EAAAlR,MAAAgW,IAEAA,EAAAC,WACAD,EAAAC,SAAA,UAEA,WAAAD,EAAAC,SACA,MAAA,IAAAh6B,MAAA,aAAA+5B,EAAAC,SAAA,sCAEA,OAAAD,CACA,CArBAF,EAAAI,QAAA,SAAAF,EAAAt5B,GAEA,OADAs5B,EAAAD,EAAAC,GACAH,EAAAK,QAAAx7B,KAAAW,KAAA26B,EAAAt5B,EACA,EAEAo5B,EAAA7tB,IAAA,SAAA+tB,EAAAt5B,GAEA,OADAs5B,EAAAD,EAAAC,GACAH,EAAA5tB,IAAAvN,KAAAW,KAAA26B,EAAAt5B,EACA,CnDg1MA,EAAE,CAACm5B,KAAO,GAAG3E,IAAM,MAAM,GAAG,CAAC,SAASp1B,EAAQf,EAAOD,4FoDh2MrDA,EAAAwK,KAAA,SAAArC,EAAA2C,EAAAuwB,EAAAC,EAAAC,GACA,IAAA76B,EAAAqJ,EACAyxB,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAE,GAAA,EACA76B,EAAAu6B,EAAAE,EAAA,EAAA,EACAK,EAAAP,GAAA,EAAA,EACAQ,EAAA1zB,EAAA2C,EAAAhK,GAOA,IALAA,GAAA86B,EAEAl7B,EAAAm7B,GAAA,IAAAF,GAAA,EACAE,KAAAF,EACAA,GAAAH,EACAG,EAAA,EAAAj7B,EAAA,IAAAA,EAAAyH,EAAA2C,EAAAhK,GAAAA,GAAA86B,EAAAD,GAAA,GAKA,IAHA5xB,EAAArJ,GAAA,IAAAi7B,GAAA,EACAj7B,KAAAi7B,EACAA,GAAAL,EACAK,EAAA,EAAA5xB,EAAA,IAAAA,EAAA5B,EAAA2C,EAAAhK,GAAAA,GAAA86B,EAAAD,GAAA,GAEA,GAAA,IAAAj7B,EACAA,EAAA,EAAAg7B,MACA,IAAAh7B,IAAA+6B,EACA,OAAA1xB,EAAA+xB,IAAAvpB,KAAAspB,GAAA,EAAA,GAEA9xB,GAAA5F,KAAAkM,IAAA,EAAAirB,GACA56B,GAAAg7B,CACA,CACA,OAAAG,GAAA,EAAA,GAAA9xB,EAAA5F,KAAAkM,IAAA,EAAA3P,EAAA46B,EACA,EAEAt7B,EAAA4H,MAAA,SAAAO,EAAAxJ,EAAAmM,EAAAuwB,EAAAC,EAAAC,GACA,IAAA76B,EAAAqJ,EAAAhJ,EACAy6B,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAM,EAAA,KAAAT,EAAAn3B,KAAAkM,IAAA,GAAA,IAAAlM,KAAAkM,IAAA,GAAA,IAAA,EACAvP,EAAAu6B,EAAA,EAAAE,EAAA,EACAK,EAAAP,EAAA,GAAA,EACAQ,EAAAl9B,EAAA,GAAA,IAAAA,GAAA,EAAAA,EAAA,EAAA,EAAA,EAmCA,IAjCAA,EAAAwF,KAAA63B,IAAAr9B,GAEAsY,MAAAtY,IAAAA,IAAA4T,KACAxI,EAAAkN,MAAAtY,GAAA,EAAA,EACA+B,EAAA+6B,IAEA/6B,EAAAyD,KAAA+X,MAAA/X,KAAAga,IAAAxf,GAAAwF,KAAA83B,KACAt9B,GAAAoC,EAAAoD,KAAAkM,IAAA,GAAA3P,IAAA,IACAA,IACAK,GAAA,IAGApC,GADA+B,EAAAg7B,GAAA,EACAK,EAAAh7B,EAEAg7B,EAAA53B,KAAAkM,IAAA,EAAA,EAAAqrB,IAEA36B,GAAA,IACAL,IACAK,GAAA,GAGAL,EAAAg7B,GAAAD,GACA1xB,EAAA,EACArJ,EAAA+6B,GACA/6B,EAAAg7B,GAAA,GACA3xB,GAAApL,EAAAoC,EAAA,GAAAoD,KAAAkM,IAAA,EAAAirB,GACA56B,GAAAg7B,IAEA3xB,EAAApL,EAAAwF,KAAAkM,IAAA,EAAAqrB,EAAA,GAAAv3B,KAAAkM,IAAA,EAAAirB,GACA56B,EAAA,IAIA46B,GAAA,EAAAnzB,EAAA2C,EAAAhK,GAAA,IAAAiJ,EAAAjJ,GAAA86B,EAAA7xB,GAAA,IAAAuxB,GAAA,GAIA,IAFA56B,EAAAA,GAAA46B,EAAAvxB,EACAyxB,GAAAF,EACAE,EAAA,EAAArzB,EAAA2C,EAAAhK,GAAA,IAAAJ,EAAAI,GAAA86B,EAAAl7B,GAAA,IAAA86B,GAAA,GAEArzB,EAAA2C,EAAAhK,EAAA86B,IAAA,IAAAC,CACA,CpDo2MA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS76B,EAAQf,EAAOD,GqDx7MlC,mBAAAnB,OAAA+Z,OAEA3Y,EAAAD,QAAA,SAAAk8B,EAAAC,GACAA,IACAD,EAAAE,OAAAD,EACAD,EAAA14B,UAAA3E,OAAA+Z,OAAAujB,EAAA34B,UAAA,CACAqP,YAAA,CACAlU,MAAAu9B,EACAn9B,YAAA,EACAE,UAAA,EACAD,cAAA,KAIA,EAGAiB,EAAAD,QAAA,SAAAk8B,EAAAC,GACA,GAAAA,EAAA,CACAD,EAAAE,OAAAD,EACA,IAAAE,EAAA,WAAA,EACAA,EAAA74B,UAAA24B,EAAA34B,UACA04B,EAAA14B,UAAA,IAAA64B,EACAH,EAAA14B,UAAAqP,YAAAqpB,CACA,CACA,CrD47MA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASl7B,EAAQf,EAAOD,GsD17MlCC,EAAAD,QAZAs8B,CAAAvgB,EAAAwI,IAEAA,EAAAuI,WAAA/Q,IAAAwI,EAAAyI,SAAAjR,GAEAwI,EAAAJ,UAAA,EAAAI,EAAAjjB,OAAA,GAIAijB,CtD29MA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASvjB,EAAQf,EAAOD,GuD/+MlC,IAAAu8B,EAAAv7B,EAAA,8BAiHAf,EAAAD,QAhGA,MAEA6S,YAAA2pB,EAAAC,GAGAl8B,KAAAm8B,QAAA,mBAAAF,EAAAA,EAAAD,EACAh8B,KAAAo8B,SAAA,mBAAAF,EAAAA,EAAAF,EAEAh8B,KAAAq8B,iBAAA,CAAA,CACA,CAEAC,mBAEA,OAAAh+B,OAAAiF,KAAAvD,KAAAq8B,kBAAAt7B,MACA,CAEAw7B,eAAAC,GAIA,GAAA,iBAAAA,EAGA,OADAx8B,KAAAo8B,SAAA,2FAAA/3B,cAAAm4B,KACA,EAGAl+B,OAAAiF,KAAAi5B,GAEAlX,SACAmX,IAEA,iBAAAD,EAAAC,GAEAz8B,KAAAo8B,SAAA,gFAAA/3B,OAAAo4B,EAAA,6CAAAp4B,cAAAm4B,EAAAC,KAIAz8B,KAAAq8B,iBAAAI,GAAAD,EAAAC,EACA,GAEA,CAEAC,sBAAAC,GAEA38B,KAAAq8B,iBAAA54B,eAAAk5B,WAEA38B,KAAAq8B,iBAAAM,EAEA,CAKAC,kBAAAJ,GAEA,GAAA,iBAAAA,EAGA,OADAx8B,KAAA08B,sBAAAF,IACA,EAEA,GAAA,iBAAAA,EACA,CAQA,OAPAl+B,OAAAiF,KAAAi5B,GAEAlX,SACAmX,IAEAz8B,KAAA48B,kBAAAH,EAAA,KAEA,CACA,CAIA,OADAz8B,KAAAo8B,SAAA,mHAAA/3B,cAAAm4B,KACA,CAEA,CAEAK,oBAEA78B,KAAAq8B,iBAAA,CAAA,CACA,CAEAS,UAAAN,GAEA,OAAAx8B,KAAAq8B,iBAAA54B,eAAA+4B,GAEAx8B,KAAAq8B,iBAAAG,GAIAA,CAEA,EvDu/MA,EAAE,CAAC,6BAA6B,KAAK,GAAG,CAAC,SAAS/7B,EAAQf,EAAOD,GwDvlNjEC,EAAAD,QATAs9B,CAAAC,EAAAjhB,KAEA,IAAA4B,EAAA,iBAAAqf,EAAAA,EAAA,GAEAtwB,QAAAkR,IAAA,cAAAvZ,OAAAsZ,IAEA5B,GAAArP,QAAAkR,IAAAC,KAAAC,UAAA/B,GAAA,CxD6mNA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAStb,EAAQf,EAAOD,GyDxnNlC,IAAAu8B,EAAAv7B,EAAA,8BAiNAf,EAAAD,QA7LA,MAEA6S,YAAA2pB,EAAAC,GAGAl8B,KAAAm8B,QAAA,mBAAAF,EAAAA,EAAAD,EACAh8B,KAAAo8B,SAAA,mBAAAF,EAAAA,EAAAF,CACA,CAQAiB,mBAAAzf,EAAA0f,GAIA,GAAA,iBAAA1f,EAAA,OAAA,EAEA,GAAA,iBAAA0f,EAAA,OAAA,EAGA,IAAAxZ,EAAAwZ,EAAAr3B,QAAA,KAGA,IAAA,GAAA6d,EACA,CAEA,IAAAyZ,EAAAD,EAAAr3B,QAAA,KACAu3B,EAAAF,EAAAr3B,QAAA,KAUA,GAAAs3B,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CAEA,IAAAE,EAAAH,EAAAtZ,UAAA,EAAAuZ,GAAArvB,OAIA,GAAA,iBAAA0P,EAAA6f,GAEA,OAAA,EAIA,IAAAC,EAAAJ,EAAAtZ,UAAAuZ,EAAA,EAAAC,GAAAtvB,OAEAyvB,EAAA5yB,SAAA2yB,EAAA,IAOA,OAAAv6B,MAAAC,QAAAwa,EAAA6f,KAAA3mB,MAAA6mB,KAOA7mB,MAAA6mB,IAIAD,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GACAA,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GACAA,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GAGA9f,EAAA6f,GAAA55B,eAAA65B,IAKAC,KAAA/f,EAAA6f,GAEA,CAIA,OAAA7f,EAAA/Z,eAAAy5B,EAEA,CAEA,CACA,IAAAM,EAAAN,EAAAtZ,UAAA,EAAAF,GACA+Z,EAAAP,EAAAtZ,UAAAF,EAAA,GAIAyZ,EAAAK,EAAA33B,QAAA,KACAu3B,EAAAI,EAAA33B,QAAA,KAUA,GAAAs3B,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CACA,IAAAE,EAAAG,EAAA5Z,UAAA,EAAAuZ,GAAArvB,OAEAwvB,EAAAE,EAAA5Z,UAAAuZ,EAAA,EAAAC,GAAAtvB,OAEAyvB,EAAA5yB,SAAA2yB,EAAA,IAgBA,OAAAv6B,MAAAC,QAAAwa,EAAA6f,KAAA3mB,MAAA6mB,KAUA7mB,MAAA6mB,IAGAD,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GACAA,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GACAA,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GAGAt9B,KAAAi9B,mBAAAzf,EAAA6f,GAAAC,GAAAG,IAKAz9B,KAAAi9B,mBAAAzf,EAAA6f,GAAAE,GAAAE,GAEA,CAIA,QAAAjgB,EAAA/Z,eAAA+5B,IAAA,iBAAAhgB,EAAAggB,MAIAhgB,EAAA/Z,eAAA+5B,KAQAhgB,EAAAggB,GAAA,CAAA,GALAx9B,KAAAi9B,mBAAAzf,EAAAggB,GAAAC,GAQA,CACA,EzDgoNA,EAAE,CAAC,6BAA6B,KAAK,GAAG,CAAC,SAASh9B,EAAQf,EAAOD,G0D90NjE,IAAAu8B,EAAAv7B,EAAA,8BACAi9B,EAAAj9B,EAAA,qCACAk9B,EAAAl9B,EAAA,2CA+VAf,EAAAD,QAzUA,MAEA6S,YAAA2pB,EAAAC,GAGAl8B,KAAAm8B,QAAA,mBAAAF,EAAAA,EAAAD,EACAh8B,KAAAo8B,SAAA,mBAAAF,EAAAA,EAAAF,EAEAh8B,KAAA+7B,oBAAA2B,CACA,CAGAE,aAAAV,EAAAW,GAEA,OAAAF,EAAA39B,KAAAk9B,EAAAW,EACA,CAGAC,qBAAAtgB,EAAA0f,EAAAa,GAGA,GAAA,iBAAAvgB,EAAA,OAEA,GAAA,iBAAA0f,EAAA,OAEA,IAAAc,EAAA,GACA,iBAAAD,IAEAC,EAAAD,GAIA,IAAAra,EAAAwZ,EAAAr3B,QAAA,KAGA,IAAA,GAAA6d,EACA,CAEA,IAAAyZ,EAAAD,EAAAr3B,QAAA,KACAu3B,EAAAF,EAAAr3B,QAAA,KAIAo4B,EAAAf,EAAAr3B,QAAA,MAWA,GAAAs3B,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CAEA,IAAAE,EAAAH,EAAAtZ,UAAA,EAAAuZ,GAAArvB,OAIA,GAAA,iBAAA0P,EAAA6f,GAEA,OAAA,EAIA,IAAAC,EAAAJ,EAAAtZ,UAAAuZ,EAAA,EAAAC,GAAAtvB,OAEAyvB,EAAA5yB,SAAA2yB,EAAA,IAOA,OAAAv6B,MAAAC,QAAAwa,EAAA6f,KAAA3mB,MAAA6mB,KAOA7mB,MAAA6mB,IAIAD,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GACAA,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GACAA,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,UAGA9f,EAAA6f,GAAAC,IACA,WAIA9f,EAAA6f,GAAAE,IACA,GAEA,CAGA,GAAAJ,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,GAAA,EACA,CACA,IAAAE,EAAAH,EAAAtZ,UAAA,EAAAuZ,GAAArvB,OAEA,IAAA/K,MAAAC,QAAAwa,EAAA6f,IAGA,OAAA,EAGA,IAAAhE,EAAA7b,EAAA6f,GAEA,IAAA,IAAA98B,EAAA84B,EAAAt4B,OAAA,EAAAR,GAAA,EAAAA,IACA,CAEAP,KAAA49B,aAAAV,EAAA7D,EAAA94B,KAIA84B,EAAAG,OAAAj5B,EAAA,EAEA,CACA,OAAA,CACA,CAEA,GAAA09B,EAAA,EACA,CACA,IAAAC,EAAAhB,EAAAtZ,UAAA,EAAAqa,GAAAnwB,OAEA,MAAA,iBAAA0P,EAAA0gB,YAMA1gB,EAAA0gB,IACA,EACA,CAKA,cADA1gB,EAAA0f,IACA,CAEA,CAEA,CACA,IAAAM,EAAAN,EAAAtZ,UAAA,EAAAF,GACA+Z,EAAAP,EAAAtZ,UAAAF,EAAA,GAKAyZ,EAAAK,EAAA33B,QAAA,KACAu3B,EAAAI,EAAA33B,QAAA,KAUA,GAAAs3B,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CACA,IAAAE,EAAAG,EAAA5Z,UAAA,EAAAuZ,GAAArvB,OAEAwvB,EAAAE,EAAA5Z,UAAAuZ,EAAA,EAAAC,GAAAtvB,OAEAyvB,EAAA5yB,SAAA2yB,EAAA,IAgBA,OAAAv6B,MAAAC,QAAAwa,EAAA6f,KAAA3mB,MAAA6mB,KAKA,iBAAA/f,EAAA6f,KASA3mB,MAAA6mB,IAGAD,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GACAA,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GACAA,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GAGAU,EAAA,GAAA35B,OAAA25B,GAAA35B,OAAA25B,EAAAj9B,OAAA,EAAA,IAAA,IAAAsD,OAAAm5B,GAEAx9B,KAAA89B,qBAAAtgB,EAAA6f,GAAAC,GAAAG,EAAAO,KAKAA,EAAA,GAAA35B,OAAA25B,GAAA35B,OAAA25B,EAAAj9B,OAAA,EAAA,IAAA,IAAAsD,OAAAm5B,GAEAx9B,KAAA89B,qBAAAtgB,EAAA6f,GAAAE,GAAAE,EAAAO,KAEA,CAGA,GAAAb,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,GAAA,EACA,CACA,IAAAE,EAAAH,EAAAtZ,UAAA,EAAAuZ,GAAArvB,OAEA,IAAA/K,MAAAC,QAAAwa,EAAA6f,IAGA,OAAA,EAIA,IAAAc,EAAA3gB,EAAA6f,GAEAW,EAAA,GAAA35B,OAAA25B,GAAA35B,OAAA25B,EAAAj9B,OAAA,EAAA,IAAA,IAAAsD,OAAAg5B,GAEA,IAAAe,EAAA,CAAA,EACA,IAAA,IAAA79B,EAAA,EAAAA,EAAA49B,EAAAp9B,OAAAR,IACA,CACA,IAAA89B,EAAA,GAAAh6B,OAAA25B,EAAA,KAAA35B,OAAA9D,EAAA,KACA6lB,EAAApmB,KAAA89B,qBAAAtgB,EAAA6f,GAAA98B,GAAAk9B,EAAAY,GAEAD,EAAA,GAAA/5B,OAAAg6B,EAAA,KAAAh6B,OAAAo5B,IAAArX,CACA,CAEA,OAAAgY,CACA,CAIA,IAAAH,EAAAf,EAAAr3B,QAAA,MACA,GAAAo4B,EAAA,EACA,CACA,IAAAC,EAAAhB,EAAAtZ,UAAA,EAAAqa,GAAAnwB,OAEA,GAAA,iBAAA0P,EAAA0gB,GAGA,OAAA,EAIA,IAAAI,EAAA9gB,EAAA0gB,GACAK,EAAAjgC,OAAAiF,KAAA+6B,GAEAN,EAAA,GAAA35B,OAAA25B,GAAA35B,OAAA25B,EAAAj9B,OAAA,EAAA,IAAA,IAAAsD,OAAA65B,GAEA,IAAAE,EAAA,CAAA,EACA,IAAA,IAAA79B,EAAA,EAAAA,EAAAg+B,EAAAx9B,OAAAR,IACA,CACA,IAAA89B,EAAA,GAAAh6B,OAAA25B,EAAA,KAAA35B,OAAAk6B,EAAAh+B,IACA6lB,EAAApmB,KAAA89B,qBAAAtgB,EAAA0gB,GAAAK,EAAAh+B,IAAAk9B,EAAAY,GAGAr+B,KAAA49B,aAAAV,EAAA9W,KAGAgY,EAAA,GAAA/5B,OAAAg6B,EAAA,KAAAh6B,OAAAo5B,IAAArX,EAEA,CAEA,OAAAgY,CACA,CAIA,OAAA5gB,EAAA/Z,eAAA+5B,IAAA,iBAAAhgB,EAAAggB,QAEA,EAEAhgB,EAAA/Z,eAAA+5B,IAIAQ,EAAA,GAAA35B,OAAA25B,GAAA35B,OAAA25B,EAAAj9B,OAAA,EAAA,IAAA,IAAAsD,OAAAm5B,GACAx9B,KAAA89B,qBAAAtgB,EAAAggB,GAAAC,EAAAO,KAMAA,EAAA,GAAA35B,OAAA25B,GAAA35B,OAAA25B,EAAAj9B,OAAA,EAAA,IAAA,IAAAsD,OAAAm5B,GACAhgB,EAAAggB,GAAA,CAAA,EACAx9B,KAAA89B,qBAAAtgB,EAAAggB,GAAAC,EAAAO,GAEA,CACA,E1Ds1NA,EAAE,CAAC,0CAA0C,GAAG,oCAAoC,GAAG,6BAA6B,KAAK,GAAG,CAAC,SAASv9B,EAAQf,EAAOD,G2DprOrJ,IAAAu8B,EAAAv7B,EAAA,8BACAi9B,EAAAj9B,EAAA,qCACAk9B,EAAAl9B,EAAA,2CAuYAf,EAAAD,QAjXA,MAEA6S,YAAA2pB,EAAAC,GAGAl8B,KAAAm8B,QAAA,mBAAAF,EAAAA,EAAAD,EACAh8B,KAAAo8B,SAAA,mBAAAF,EAAAA,EAAAF,EAEAh8B,KAAA+7B,oBAAA2B,CACA,CAEAE,aAAAV,EAAAW,GAEA,OAAAF,EAAA39B,KAAAk9B,EAAAW,EACA,CAGAW,kBAAAhhB,EAAA0f,EAAAa,EAAAU,GAGA,GAAA,iBAAAjhB,EAAA,OAEA,GAAA,iBAAA0f,EAAA,OAEA,IAAAc,EAAA,GACA,iBAAAD,IAEAC,EAAAD,GAIA,IAAAW,OAAA,IAAAD,EAAAjhB,EAAAihB,EAGA/a,EAAAwZ,EAAAr3B,QAAA,KAGA,GAAA,GAAA6d,EACA,CAGA,IAAAib,EAAAX,EAAA9rB,MAAA,KAEA0sB,EAAA,EAGA,IAAA,IAAAr+B,EAAA,EAAAA,EAAA28B,EAAAn8B,QAEA,KAAAm8B,EAAA5V,OAAA/mB,GAFAA,IAMAq+B,IAGA,IAAAC,EAAAF,EAAA59B,OAAA69B,EAEA,GAAAC,EAAA,EAKA,OAGA,CAGA,IAAAC,EAAA5B,EAAA51B,MAAAs3B,GAMA,OALAC,EAAA,IAEAC,EAAA,GAAAz6B,OAAAs6B,EAAAr3B,MAAA,EAAAu3B,GAAAl5B,KAAA,KAAA,KAAAtB,OAAAy6B,IAEA9+B,KAAAm8B,QAAA,yDAAA93B,OAAAy6B,EAAA,MACA9+B,KAAAw+B,kBAAAE,EAAAI,EACA,CACA,CAGA,IAAA,GAAApb,EACA,CAEA,IAAAyZ,EAAAD,EAAAr3B,QAAA,KACAu3B,EAAAF,EAAAr3B,QAAA,KAIAo4B,EAAAf,EAAAr3B,QAAA,MAWA,GAAAs3B,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CAEA,IAAAE,EAAAH,EAAAtZ,UAAA,EAAAuZ,GAAArvB,OAIA,GAAA,iBAAA0P,EAAA6f,GAEA,OAIA,IAAAC,EAAAJ,EAAAtZ,UAAAuZ,EAAA,EAAAC,GAAAtvB,OAEAyvB,EAAA5yB,SAAA2yB,EAAA,IAOA,GAAAv6B,MAAAC,QAAAwa,EAAA6f,KAAA3mB,MAAA6mB,GAEA,OAKA,OAAA7mB,MAAA6mB,IAIAD,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GACAA,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GACAA,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GAGA9f,EAAA6f,GAAAC,IAIA9f,EAAA6f,GAAAE,EAEA,CAGA,GAAAJ,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,GAAA,EACA,CACA,IAAAE,EAAAH,EAAAtZ,UAAA,EAAAuZ,GAAArvB,OAEA,IAAA/K,MAAAC,QAAAwa,EAAA6f,IAGA,OAAA,EAGA,IAAAhE,EAAA7b,EAAA6f,GACA0B,EAAA,GACA,IAAA,IAAAx+B,EAAA,EAAAA,EAAA84B,EAAAt4B,OAAAR,IACA,CAEAP,KAAA49B,aAAAV,EAAA7D,EAAA94B,KAGAw+B,EAAAn8B,KAAAy2B,EAAA94B,GAEA,CAEA,OAAAw+B,CACA,CAEA,GAAAd,EAAA,EACA,CACA,IAAAC,EAAAhB,EAAAtZ,UAAA,EAAAqa,GAAAnwB,OAEA,MAAA,iBAAA0P,EAAA0gB,IAMA1gB,EAAA0gB,EACA,CAIA,OAAA1gB,EAAA0f,EAEA,CAEA,CACA,IAAAM,EAAAN,EAAAtZ,UAAA,EAAAF,GACA+Z,EAAAP,EAAAtZ,UAAAF,EAAA,GAKAyZ,EAAAK,EAAA33B,QAAA,KACAu3B,EAAAI,EAAA33B,QAAA,KAUA,GAAAs3B,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CACA,IAAAE,EAAAG,EAAA5Z,UAAA,EAAAuZ,GAAArvB,OAEAwvB,EAAAE,EAAA5Z,UAAAuZ,EAAA,EAAAC,GAAAtvB,OAEAyvB,EAAA5yB,SAAA2yB,EAAA,IAgBA,GAAAv6B,MAAAC,QAAAwa,EAAA6f,KAAA3mB,MAAA6mB,GAEA,OAGA,GAAA,iBAAA/f,EAAA6f,GAEA,OAOA,OAAA3mB,MAAA6mB,IAGAD,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GACAA,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GACAA,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GAGAU,EAAA,GAAA35B,OAAA25B,GAAA35B,OAAA25B,EAAAj9B,OAAA,EAAA,IAAA,IAAAsD,OAAAm5B,GAEAx9B,KAAAw+B,kBAAAhhB,EAAA6f,GAAAC,GAAAG,EAAAO,EAAAU,KAKAV,EAAA,GAAA35B,OAAA25B,GAAA35B,OAAA25B,EAAAj9B,OAAA,EAAA,IAAA,IAAAsD,OAAAm5B,GAEAx9B,KAAAw+B,kBAAAhhB,EAAA6f,GAAAE,GAAAE,EAAAO,EAAAU,GAEA,CAGA,GAAAvB,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,GAAA,EACA,CACA,IAAAE,EAAAH,EAAAtZ,UAAA,EAAAuZ,GAAArvB,OAEA,IAAA/K,MAAAC,QAAAwa,EAAA6f,IAGA,OAAA,EAIA,IAAAc,EAAA3gB,EAAA6f,GAEAW,EAAA,GAAA35B,OAAA25B,GAAA35B,OAAA25B,EAAAj9B,OAAA,EAAA,IAAA,IAAAsD,OAAAg5B,GAEA,IAAAe,EAAA,CAAA,EACA,IAAA,IAAA79B,EAAA,EAAAA,EAAA49B,EAAAp9B,OAAAR,IACA,CACA,IAAA89B,EAAA,GAAAh6B,OAAA25B,EAAA,KAAA35B,OAAA9D,EAAA,KACA6lB,EAAApmB,KAAAw+B,kBAAAhhB,EAAA6f,GAAA98B,GAAAk9B,EAAAY,EAAAK,GAEAN,EAAA,GAAA/5B,OAAAg6B,EAAA,KAAAh6B,OAAAo5B,IAAArX,CACA,CAEA,OAAAgY,CACA,CAIA,IAAAH,EAAAf,EAAAr3B,QAAA,MACA,GAAAo4B,EAAA,EACA,CACA,IAAAC,EAAAhB,EAAAtZ,UAAA,EAAAqa,GAAAnwB,OAEA,GAAA,iBAAA0P,EAAA0gB,GAGA,OAAA,EAIA,IAAAI,EAAA9gB,EAAA0gB,GACAK,EAAAjgC,OAAAiF,KAAA+6B,GAEAN,EAAA,GAAA35B,OAAA25B,GAAA35B,OAAA25B,EAAAj9B,OAAA,EAAA,IAAA,IAAAsD,OAAA65B,GAEA,IAAAE,EAAA,CAAA,EACA,IAAA,IAAA79B,EAAA,EAAAA,EAAAg+B,EAAAx9B,OAAAR,IACA,CACA,IAAA89B,EAAA,GAAAh6B,OAAA25B,EAAA,KAAA35B,OAAAk6B,EAAAh+B,IACA6lB,EAAApmB,KAAAw+B,kBAAAhhB,EAAA0gB,GAAAK,EAAAh+B,IAAAk9B,EAAAY,EAAAK,GAGA1+B,KAAA49B,aAAAV,EAAA9W,KAGAgY,EAAA,GAAA/5B,OAAAg6B,EAAA,KAAAh6B,OAAAo5B,IAAArX,EAEA,CAEA,OAAAgY,CACA,CAIA,OAAA5gB,EAAA/Z,eAAA+5B,IAAA,iBAAAhgB,EAAAggB,QAEA,EAEAhgB,EAAA/Z,eAAA+5B,IAIAQ,EAAA,GAAA35B,OAAA25B,GAAA35B,OAAA25B,EAAAj9B,OAAA,EAAA,IAAA,IAAAsD,OAAAm5B,GACAx9B,KAAAw+B,kBAAAhhB,EAAAggB,GAAAC,EAAAO,EAAAU,KAMAV,EAAA,GAAA35B,OAAA25B,GAAA35B,OAAA25B,EAAAj9B,OAAA,EAAA,IAAA,IAAAsD,OAAAm5B,GACAhgB,EAAAggB,GAAA,CAAA,EACAx9B,KAAAw+B,kBAAAhhB,EAAAggB,GAAAC,EAAAO,EAAAU,GAEA,CACA,E3D4rOA,EAAE,CAAC,0CAA0C,GAAG,oCAAoC,GAAG,6BAA6B,KAAK,GAAG,CAAC,SAASj+B,EAAQf,EAAOD,G4DlkPrJ,IAAAu8B,EAAAv7B,EAAA,8BACAi9B,EAAAj9B,EAAA,qCA+MAf,EAAAD,QA3LA,MAEA6S,YAAA2pB,EAAAC,GAGAl8B,KAAAm8B,QAAA,mBAAAF,EAAAA,EAAAD,EACAh8B,KAAAo8B,SAAA,mBAAAF,EAAAA,EAAAF,EAEAh8B,KAAA+7B,oBAAA2B,CACA,CAGAsB,kBAAAxhB,EAAA0f,EAAA5O,GAGA,GAAA,iBAAA9Q,EAAA,OAAA,EAEA,GAAA,iBAAA0f,EAAA,OAAA,EAEA,IAAAxZ,EAAAwZ,EAAAr3B,QAAA,KAEA,IAAA,GAAA6d,EACA,CAEA,IAAAyZ,EAAAD,EAAAr3B,QAAA,KACAu3B,EAAAF,EAAAr3B,QAAA,KAUA,GAAAs3B,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CAEA,IAAAE,EAAAH,EAAAtZ,UAAA,EAAAuZ,GAAArvB,OAIA,GAAA,iBAAA0P,EAAA6f,GAEA,OAAA,EAIA,IAAAC,EAAAJ,EAAAtZ,UAAAuZ,EAAA,EAAAC,GAAAtvB,OAEAyvB,EAAA5yB,SAAA2yB,EAAA,IAOA,OAAAv6B,MAAAC,QAAAwa,EAAA6f,KAAA3mB,MAAA6mB,KAOA7mB,MAAA6mB,IAIAD,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GACAA,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GACAA,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GAGA9f,EAAA6f,GAAAC,GAAAhP,GACA,IAIA9Q,EAAA6f,GAAAE,GAAAjP,GACA,GAEA,CAKA,OADA9Q,EAAA0f,GAAA5O,GACA,CAEA,CAEA,CACA,IAAAkP,EAAAN,EAAAtZ,UAAA,EAAAF,GACA+Z,EAAAP,EAAAtZ,UAAAF,EAAA,GAIAyZ,EAAAK,EAAA33B,QAAA,KACAu3B,EAAAI,EAAA33B,QAAA,KAUA,GAAAs3B,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CACA,IAAAE,EAAAG,EAAA5Z,UAAA,EAAAuZ,GAAArvB,OAEAwvB,EAAAE,EAAA5Z,UAAAuZ,EAAA,EAAAC,GAAAtvB,OAEAyvB,EAAA5yB,SAAA2yB,EAAA,IAgBA,OAAAv6B,MAAAC,QAAAwa,EAAA6f,KAAA3mB,MAAA6mB,KAQA7mB,MAAA6mB,IAGAD,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GACAA,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GACAA,EAAAt9B,KAAA+7B,oBAAA,IAAAuB,GAGAt9B,KAAAg/B,kBAAAxhB,EAAA6f,GAAAC,GAAAG,EAAAnP,IAKAtuB,KAAAg/B,kBAAAxhB,EAAA6f,GAAAE,GAAAE,EAAAnP,GAEA,CAIA,OAAA9Q,EAAA/Z,eAAA+5B,IAAA,iBAAAhgB,EAAAggB,IAEAhgB,EAAA/Z,eAAA,aACA+Z,EAAA,QAAA,CAAA,GAEAA,EAAA,QAAA0f,GAAA5O,GACA,IAEA9Q,EAAA/Z,eAAA+5B,KAQAhgB,EAAAggB,GAAA,CAAA,GALAx9B,KAAAg/B,kBAAAxhB,EAAAggB,GAAAC,EAAAnP,GAQA,CACA,E5D0kPA,EAAE,CAAC,oCAAoC,GAAG,6BAA6B,KAAK,GAAG,CAAC,SAAS7tB,EAAQf,EAAOD,G6DvxPxG,IAAAu8B,EAAAv7B,EAAA,8BA4HAf,EAAAD,QApGA,MAEA6S,YAAA2pB,EAAAC,GAGAl8B,KAAAm8B,QAAA,mBAAAF,EAAAA,EAAAD,EACAh8B,KAAAo8B,SAAA,mBAAAF,EAAAA,EAAAF,CACA,CAWAiD,mBAAAzhB,EAAA0hB,EAAAC,GAEA,IAAAC,EAAA,iBAAAF,EAAAA,EAAA,GACAG,EAAA,iBAAAF,EAAAA,EAAA,CAAA,EAEAG,SAAA9hB,EAEA+hB,EACA,CACAC,QAAAJ,EACA1rB,KAAA0rB,EACArK,KAAAqK,EAEAK,UAAA,GASA,OALA,UAAAH,GAAA,MAAA9hB,IAEA8hB,EAAA,QAGAA,GAEA,IAAA,SACAC,EAAAG,SAAA,SACAH,EAAAI,QAAAniB,EACA6hB,EAAAD,GAAAG,EACA,MACA,IAAA,SACA,IAAA,SACAA,EAAAG,SAAA,SACAH,EAAAI,QAAAniB,EACA6hB,EAAAD,GAAAG,EACA,MACA,IAAA,YACA,IAAA,OACAA,EAAAG,SAAA,MACAH,EAAAI,QAAAniB,EACA6hB,EAAAD,GAAAG,EACA,MACA,IAAA,SACA,GAAAx8B,MAAAC,QAAAwa,GACA,CACA+hB,EAAAG,SAAA,QACA,IAAAN,IAEAC,EAAAD,GAAAG,GAGA,IAAA,IAAAh/B,EAAA,EAAAA,EAAAid,EAAAzc,OAAAR,IAEAP,KAAAi/B,mBAAAzhB,EAAAjd,GAAA,GAAA8D,OAAA+6B,EAAA,KAAA/6B,OAAA9D,EAAA,KAAA8+B,EAEA,KAEA,CACAE,EAAAG,SAAA,SACA,IAAAN,IAEAC,EAAAD,GAAAG,EACAH,GAAA,KAGA,IAAAQ,EAAAthC,OAAAiF,KAAAia,GAEA,IAAA,IAAAjd,EAAA,EAAAA,EAAAq/B,EAAA7+B,OAAAR,IAEAP,KAAAi/B,mBAAAzhB,EAAAoiB,EAAAr/B,IAAA,GAAA8D,OAAA+6B,GAAA/6B,OAAAu7B,EAAAr/B,IAAA8+B,EAEA,EAQA,OAAAA,CACA,E7D+xPA,EAAE,CAAC,6BAA6B,KAAK,GAAG,CAAC,SAAS5+B,EAAQf,EAAOD,G8D74PjE,MAAAogC,EAAA,OAEAC,EAAA,OAIAC,EAAAA,CAAAC,EAAAnC,EAAAoC,EAAAC,EAAA5R,KAEA,OAAA4R,GAEA,IAAA,KACA,OAAAF,EAAAxB,kBAAAX,EAAAoC,IAAA3R,EAEA,IAAA,IACA,OAAA0R,EAAAxB,kBAAAX,EAAAoC,GAAA3R,EAEA,IAAA,IACA,OAAA0R,EAAAxB,kBAAAX,EAAAoC,GAAA3R,EAEA,IAAA,KACA,OAAA0R,EAAAxB,kBAAAX,EAAAoC,IAAA3R,EAEA,IAAA,KACA,OAAA0R,EAAAxB,kBAAAX,EAAAoC,IAAA3R,EAEA,IAAA,MACA,OAAA0R,EAAAxB,kBAAAX,EAAAoC,KAAA3R,EAGA,QACA,OAAA0R,EAAAxB,kBAAAX,EAAAoC,IAAA3R,EAEA,EA4CA5uB,EAAAD,QAzCA0gC,CAAAH,EAAA9C,EAAAW,KAEA,IAAAuC,GAAA,EAWAC,EAAAnD,EAAAr3B,QAAAg6B,GAEA,MAAA,GAAAQ,GACA,CACA,IAAAC,EAAApD,EAAAr3B,QAAAi6B,EAAAO,EAnDAR,GAqDA,IAAA,GAAAS,EACA,CACA,IAAAC,EAAArD,EAAAtZ,UAAAyc,EAvDAR,EAuDAS,GAAApuB,MAAA,KAEAsuB,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAGAH,EAAAA,GAAAL,EAAAC,EAAAnC,EAAA2C,EAAAC,EAAAC,GACAL,EAAAnD,EAAAr3B,QAAAg6B,EAAAS,EA7DAR,EA8DA,MAGAO,GAAA,CAGA,CAEA,OAAAD,CAAA,C9Dg6PA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS3/B,EAAQf,EAAOD,G+Dp/PlC,IAAAu8B,EAAAv7B,EAAA,8BAqIAf,EAAAD,QA9HA,MAEA6S,YAAA2pB,EAAAC,GAGAl8B,KAAAm8B,QAAA,mBAAAF,EAAAA,EAAAD,EACAh8B,KAAAo8B,SAAA,mBAAAF,EAAAA,EAAAF,CACA,CAoBA2E,uBAAAC,EAAAC,GAEA,GAAA,iBAAAD,EAGA,OADA5gC,KAAAo8B,SAAA,+EACA,EAGA,GAAA,iBAAAyE,EAGA,OAAA,EAIA,IAAAC,EAAAxiC,OAAAiF,KAAAq9B,GACAG,EAAA,CAAA,EA6CA,OA5CAD,EAAAxb,SACA4X,IAEA0D,EAAA1D,GAAAz5B,eAAA,UAEAs9B,EAAAH,EAAA1D,GAAAxpB,MAAAwpB,EACA,IAGA5+B,OAAAiF,KAAAs9B,GAEAvb,SACA0b,IAEA,IAAAC,EAAAJ,EAAAG,GACAE,GAAA,EACAC,GAAA,EAGAP,EAAAn9B,eAAAu9B,GAEAE,EAAAF,EAEAD,EAAAt9B,eAAAu9B,KAEAE,EAAAH,EAAAC,IAIAE,GAEAC,EAAAP,EAAAM,UACAN,EAAAM,IAKAC,EAAA,CAAAztB,KAAAstB,GAIAJ,EAAAK,GAAAE,CAAA,KAGA,CACA,CAEAC,2BAAAR,EAAAC,GAGA,IAAAQ,EAAAxjB,KAAA8G,MAAA9G,KAAAC,UAAA8iB,IAEA,OADA5gC,KAAA2gC,uBAAAU,EAAAR,GACAQ,CACA,CAEAC,qBAAAC,EAAAC,GAEA,GAAA,iBAAAA,GAAA,iBAAAD,EAGA,OADAvhC,KAAAo8B,SAAA,yEACA,EAGA,IAAAqF,EAAA5jB,KAAA8G,MAAA9G,KAAAC,UAAA0jB,IACAE,EAAA7jB,KAAA8G,MAAA9G,KAAAC,UAAAyjB,IAcA,OAXAjjC,OAAAiF,KAAAk+B,GAEAnc,SACAqc,IAEAD,EAAAj+B,eAAAk+B,KAEAD,EAAAC,GAAAF,EAAAE,GACA,IAGAD,CACA,E/D4/PA,EAAE,CAAC,6BAA6B,KAAK,GAAG,CAAC,SAASjhC,EAAQf,EAAOD,GgE9nQjE,MAAA+S,EAAA/R,EAAA,6BAEA,IAAAu7B,EAAAv7B,EAAA,8BAEAmhC,EAAAnhC,EAAA,iCACAohC,EAAAphC,EAAA,kDACAqhC,EAAArhC,EAAA,wCACAshC,EAAAthC,EAAA,wCACAuhC,EAAAvhC,EAAA,2CACAwhC,EAAAxhC,EAAA,yCACAyhC,EAAAzhC,EAAA,oCAEA,MAAA0hC,EAAA,CAAAC,MAAA,UAAAC,YAAA,CAAA,GAOA,MAAAC,UAAA9vB,EAEAF,YAAAI,EAAAC,EAAAC,QAEAzT,IAAAuT,EAEAG,MAAA,CAAA,GAIAA,MAAAH,EAAAC,EAAAC,GAGA5S,KAAA8S,YAAA,WAGA9S,KAAAm8B,QAAAH,EACAh8B,KAAAo8B,SAAAJ,EAGAh8B,KAAAuiC,gCAAA,IAAAV,EAAA7hC,KAAAm8B,QAAAn8B,KAAAo8B,UACAp8B,KAAAwiC,sBAAA,IAAAV,EAAA9hC,KAAAm8B,QAAAn8B,KAAAo8B,UACAp8B,KAAAyiC,sBAAA,IAAAV,EAAA/hC,KAAAm8B,QAAAn8B,KAAAo8B,UACAp8B,KAAA0iC,yBAAA,IAAAV,EAAAhiC,KAAAm8B,QAAAn8B,KAAAo8B,UAEAp8B,KAAA2iB,QAAAlf,eAAA,mBAEAzD,KAAA2iB,QAAAggB,cACA,CACA9jC,OAAA,GACAU,OAAA,EACAqjC,MAAA,EACAC,QAAA,EACAC,SAAA,EACAC,OAAA,EACAC,SAAA,EACAjgC,MAAA,GACAzE,OAAA,CAAA,EACA2kC,KAAA,OAGAjjC,KAAA2iB,QAAAlf,eAAA,YAEAzD,KAAA2iB,QAAAugB,QAAA,GAGAljC,KAAAmjC,WAAAhkC,EACAa,KAAAojC,sBAAAjkC,EACAa,KAAAqjC,mBAAAlkC,EACAa,KAAAsjC,wBAAAnkC,EAEAa,KAAAujC,iBAAApkC,EAEAa,KAAAwjC,qBAAArkC,EAEAa,KAAAyjC,QAEA,iBAAAzjC,KAAA2iB,SAEA3iB,KAAA0jC,aAAA1jC,KAAA2iB,SAGA3iB,KAAA2jC,oBAAA,IAAAzB,EAAAliC,KAAAm8B,QAAAn8B,KAAAo8B,UACAp8B,KAAA4jC,wBAAA,IAAA3B,EAAAjiC,KAAAm8B,QAAAn8B,KAAAo8B,UAEAp8B,KAAA6jC,iBAAA,IAAAjC,EAAA5hC,KAAAm8B,QAAAn8B,KAAAo8B,SACA,CAOAqH,QAEAzjC,KAAAmjC,MAAA,UACAnjC,KAAAojC,iBAAA,GACApjC,KAAAqjC,cAAA,CAAA,EACArjC,KAAAsjC,mBAAA,CAAA,EACAtjC,KAAAujC,iBAAApkC,EACAa,KAAAwjC,gBAAA,CAAA,CACA,CAEAM,QAGA,IAAAC,EAAAlmB,KAAA8G,MAAA9G,KAAAC,UAAA9d,KAAA2iB,UAEAqhB,EAAA,IAAA1B,EAAAtiC,KAAAikC,cAAAjkC,KAAAm8B,QAAAn8B,KAAAo8B,SAAA2H,GAKA,OAFAC,EAAAH,iBAAAtH,eAAAv8B,KAAA6jC,iBAAAxH,kBAEA2H,CACA,CAGAE,YAAAC,GAGA,OAAAnkC,KAAA0jC,aAAA7lB,KAAA8G,MAAAwf,GACA,CAGAT,aAAA/wB,GAEA,iBAAAA,GAEA3S,KAAAo8B,SAAA,IAAA/3B,OAAArE,KAAAmjC,MAAA,yEAAA9+B,cAAAsO,EAAA,MAGA,IAAAyxB,EAAA,iBAAAzxB,EAAAA,EAAA,CAAA,EAEA0xB,EAAA/lC,OAAAiF,KAAA4+B,GAEA,IAAA,IAAA5hC,EAAA,EAAAA,EAAA8jC,EAAAtjC,OAAAR,IAEA6jC,EAAA3gC,eAAA4gC,EAAA9jC,MAEA6jC,EAAAC,EAAA9jC,IAAAsd,KAAA8G,MAAA9G,KAAAC,UAAAqkB,EAAAkC,EAAA9jC,OAoBA,GAhBA6jC,EAAA3gC,eAAA,SAEA,iBAAA2gC,EAAAhC,MAEApiC,KAAAmjC,MAAAiB,EAAAhC,MAIApiC,KAAAo8B,SAAA,IAAA/3B,OAAArE,KAAAmjC,MAAA,kFAAA9+B,cAAA+/B,EAAAhC,MAAA,KAAAgC,GAKApkC,KAAAo8B,SAAA,IAAA/3B,OAAArE,KAAAmjC,MAAA,2GAAAiB,GAGAA,EAAA3gC,eAAA,eAEA,GAAA,iBAAA2gC,EAAA/B,YACA,CACA,IAAAiC,EAAAhmC,OAAAiF,KAAA6gC,EAAA/B,aACA,IAAA,IAAA9hC,EAAA,EAAAA,EAAA+jC,EAAAvjC,OAAAR,IAEAP,KAAAukC,cAAAD,EAAA/jC,GAAA6jC,EAAA/B,YAAAiC,EAAA/jC,IAEA,MAGAP,KAAAo8B,SAAA,IAAA/3B,OAAArE,KAAAmjC,MAAA,sIAAA9+B,cAAA+/B,EAAA/B,YAAA,KAAA+B,QAKApkC,KAAAo8B,SAAA,IAAA/3B,OAAArE,KAAAmjC,MAAA,uIAAAiB,EAEA,CAIAI,YAEA,OAAA3mB,KAAAC,UAAA9d,KAAAikC,cACA,CAEAA,cAEA,MACA,CACA7B,MAAApiC,KAAAmjC,MACAd,YAAAxkB,KAAA8G,MAAA9G,KAAAC,UAAA9d,KAAAsjC,qBAEA,CAGAiB,cAAArH,EAAAuH,GAEA,MAAA,iBAAAA,GAGAA,EAAAhhC,eAAA,aAEAghC,EAAAjF,QAAAtC,GAGAl9B,KAAAsjC,mBAAA7/B,eAAAy5B,IAEAl9B,KAAAojC,iBAAAxgC,KAAAs6B,GAIAl9B,KAAAsjC,mBAAApG,GAAAuH,EAGAzkC,KAAAqjC,cAAAnG,GAAAA,EAEAuH,EAAAhhC,eAAA,QAIAzD,KAAAqjC,cAAAoB,EAAA/wB,MAAAwpB,EAIAuH,EAAA/wB,KAAAwpB,GAGA,IAIAl9B,KAAAo8B,SAAA,IAAA/3B,OAAArE,KAAAmjC,MAAA,mDAAA9+B,OAAA64B,EAAA,uEAAA74B,cAAAogC,EAAA,OACA,EAEA,CAEAC,oBAAAnxB,GAEA,OAAAvT,KAAA2kC,cAAA3kC,KAAA4kC,mBAAArxB,GACA,CAEAoxB,cAAAzH,GAEA,OAAAl9B,KAAAsjC,mBAAApG,EACA,CAGA2H,eAAAlvB,GAEA,IAAAmvB,EAAAxmC,OAAAiF,KAAAvD,KAAAsjC,oBACA,IAAA,IAAA/iC,EAAA,EAAAA,EAAAukC,EAAA/jC,OAAAR,IAEAoV,EAAA3V,KAAAsjC,mBAAAwB,EAAAvkC,IAGA,CAMAwkC,yBAAAvnB,EAAAjK,GAEA,OAAAvT,KAAAi9B,mBAAAzf,EAAAxd,KAAA4kC,mBAAArxB,GACA,CAGA0pB,mBAAAzf,EAAA0f,GAEA,OAAAl9B,KAAAuiC,gCAAAtF,mBAAAzf,EAAA0f,EACA,CAGA0H,mBAAArxB,GAEA,IAAAyxB,EAEAC,EAAAjlC,KAAAqjC,cAAA5/B,eAAA8P,GACA2xB,EAAAllC,KAAA6jC,iBAAAxH,iBAAA54B,eAAA8P,GAwBA,OAnBAyxB,EAFAC,IAAAC,EAEAllC,KAAAqjC,cAAA9vB,GAGA2xB,GAAAllC,KAAAqjC,cAAA5/B,eAAAzD,KAAA6jC,iBAAA/G,UAAAvpB,IAEAvT,KAAAqjC,cAAArjC,KAAA6jC,iBAAA/G,UAAAvpB,IAGA2xB,EAEAllC,KAAA6jC,iBAAA/G,UAAAvpB,GAMAA,EAGAyxB,CACA,CAGAG,eAAA3nB,EAAAjK,GAEA,IAAA6S,EAAApmB,KAAAw+B,kBAAAhhB,EAAAxd,KAAA4kC,mBAAArxB,IAQA,YANA,IAAA6S,IAGAA,EAAApmB,KAAAolC,gBAAAplC,KAAA0kC,oBAAAnxB,KAGA6S,CACA,CAGAoY,kBAAAhhB,EAAA0f,GAEA,IAAA9W,EAAApmB,KAAAwiC,sBAAAhE,kBAAAhhB,EAAA0f,GAQA,YANA,IAAA9W,IAGAA,EAAApmB,KAAAolC,gBAAAplC,KAAA2kC,cAAAzH,KAGA9W,CACA,CAGAif,eAAA7nB,EAAAjK,EAAA+a,GAEA,OAAAtuB,KAAAg/B,kBAAAxhB,EAAAxd,KAAA4kC,mBAAArxB,GAAA+a,EACA,CAGA0Q,kBAAAxhB,EAAA0f,EAAA5O,GAEA,OAAAtuB,KAAAyiC,sBAAAzD,kBAAAxhB,EAAA0f,EAAA5O,EACA,CAGAgX,kBAAA9nB,EAAAjK,EAAA+a,GAEA,OAAAtuB,KAAA89B,qBAAAtgB,EAAAxd,KAAA4kC,mBAAArxB,GAAA+a,EACA,CAGAwP,qBAAAtgB,EAAA0f,EAAA5O,GAEA,OAAAtuB,KAAA0iC,yBAAA5E,qBAAAtgB,EAAA0f,EAAA5O,EACA,CAGAiX,SAAA/nB,GAEA,IAAAgoB,EACA,CACA5kC,MAAA,KACAg0B,OAAA,GACA6Q,gBAAA,IAGA,iBAAAjoB,IAEAgoB,EAAA5kC,OAAA,EACA4kC,EAAA5Q,OAAAhyB,KAAA,iEAAAyB,cAAAmZ,KAGA,IAAAkoB,EAAAA,CAAAxI,EAAAyI,KAEAH,EAAA5kC,OAAA,EACA4kC,EAAA5Q,OAAAhyB,KAAA,uBAAAyB,OAAA64B,EAAA,MAAA74B,OAAAshC,EAAA,KAAA,EAIA,IAAA,IAAAplC,EAAA,EAAAA,EAAAP,KAAAojC,iBAAAriC,OAAAR,IACA,CACA,IAAA4gC,EAAAnhC,KAAA2kC,cAAA3kC,KAAAojC,iBAAA7iC,IACAqlC,EAAA5lC,KAAAi9B,mBAAAzf,EAAA2jB,EAAA3B,SACApZ,EAAApmB,KAAAw+B,kBAAAhhB,EAAA2jB,EAAA3B,SAcA,QAZA,IAAApZ,GAAAwf,IAIAJ,EAAAC,gBAAA7iC,KAAAu+B,EAAA3B,UACA2B,EAAA0E,UAAA7lC,KAAA2iB,QAAAugB,SAEAwC,EAAAvE,EAAA3B,QAAA,qDAKA2B,EAAAzB,SACA,CACA,IAAAoG,SAAA1f,EACA,OAAA+a,EAAAzB,SAAAx8B,WAAA4K,OAAA/E,eAEA,IAAA,SACA,UAAA+8B,GAEAJ,EAAAvE,EAAA3B,QAAA,kBAAAn7B,OAAA88B,EAAAzB,SAAA,wBAAAr7B,OAAAyhC,IAEA,MAEA,IAAA,SACA,UAAAA,GAEAJ,EAAAvE,EAAA3B,QAAA,kBAAAn7B,OAAA88B,EAAAzB,SAAA,wBAAAr7B,OAAAyhC,IAEA,MAEA,IAAA,UACA,GAAA,UAAAA,EAEAJ,EAAAvE,EAAA3B,QAAA,kBAAAn7B,OAAA88B,EAAAzB,SAAA,wBAAAr7B,OAAAyhC,QAGA,CACA1f,EAAAljB,WACA2C,QAAA,MAAA,GAGA6/B,EAAAvE,EAAA3B,QAAA,kBAAAn7B,OAAA88B,EAAAzB,SAAA,2CAEA,CACA,MAEA,IAAA,QACA,UAAAoG,GAEAJ,EAAAvE,EAAA3B,QAAA,kBAAAn7B,OAAA88B,EAAAzB,SAAA,wBAAAr7B,OAAAyhC,IAEA,MAEA,IAAA,WAEA,gBADA,IAAAjyB,KAAAuS,GACAljB,YAEAwiC,EAAAvE,EAAA3B,QAAA,kBAAAn7B,OAAA88B,EAAAzB,SAAA,iDAGA,QAGA,UAAAoG,GAEAJ,EAAAvE,EAAA3B,QAAA,kBAAAn7B,OAAA88B,EAAAzB,SAAA,qFAAAr7B,OAAAyhC,IAIA,CACA,CAEA,OAAAN,CACA,CAGAJ,gBAAAX,GAEA,GAAA,iBAAAA,EAAA,CAKA,GAAAA,EAAAhhC,eAAA,WAEA,OAAAghC,EAAA9E,QAGA,CAGA,IAAAoG,EAAAtB,EAAAhhC,eAAA,YAAAghC,EAAA/E,SAAA,SACA,OAAA1/B,KAAA2iB,QAAAggB,cAAAl/B,eAAAsiC,GAEA/lC,KAAA2iB,QAAAggB,cAAAoD,GAKA,IAEA,CApBA,CAqBA,CAGAC,iBAAAxoB,EAAAyoB,GAEA,OAAAjmC,KAAAkmC,eAAA1oB,EAAAyoB,GAEAxB,GAEAA,EAAAhhC,eAAA,YAEA,CAIAyiC,eAAA1oB,EAAAyoB,EAAAE,GAGA,IAAArb,EAAA,iBAAAtN,EAAAA,EAAA,CAAA,EAEA4oB,OAAA,IAAAH,GAAAA,EAGAI,EAAA,mBAAAF,EAAAA,EAAA1B,IAAA,EAiBA,OAfAzkC,KAAAojC,iBAAA9d,SACA4X,IAEA,IAAAiE,EAAAnhC,KAAA2kC,cAAAzH,GAEAmJ,EAAAlF,MAGAiF,GAAApmC,KAAAi9B,mBAAAnS,EAAAoS,IAEAl9B,KAAAg/B,kBAAAlU,EAAAoS,EAAAl9B,KAAAolC,gBAAAjE,IAEA,IAGArW,CACA,EAGAprB,EAAAD,QAAA6iC,ChEmoQA,EAAE,CAAC,gCAAgC,GAAG,6BAA6B,GAAG,iDAAiD,GAAG,0CAA0C,GAAG,uCAAuC,GAAG,uCAAuC,GAAG,wCAAwC,GAAG,mCAAmC,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAAS7hC,EAAQf,EAAOD,GiE5pRzY,IAAA6mC,EAAA7lC,EAAA,UAoBA,SAAAoB,EAAAJ,GACA,IAAAjC,EAAA,SAAAA,IACA,OAAAA,EAAA+mC,OAAA/mC,EAAApB,OACAoB,EAAA+mC,QAAA,EACA/mC,EAAApB,MAAAqD,EAAAC,MAAA1B,KAAA2B,WACA,EAEA,OADAnC,EAAA+mC,QAAA,EACA/mC,CACA,CAEA,SAAAgnC,EAAA/kC,GACA,IAAAjC,EAAA,SAAAA,IACA,GAAAA,EAAA+mC,OACA,MAAA,IAAA3lC,MAAApB,EAAAinC,WAEA,OADAjnC,EAAA+mC,QAAA,EACA/mC,EAAApB,MAAAqD,EAAAC,MAAA1B,KAAA2B,UACA,EACA4Q,EAAA9Q,EAAA8Q,MAAA,+BAGA,OAFA/S,EAAAinC,UAAAl0B,EAAA,sCACA/S,EAAA+mC,QAAA,EACA/mC,CACA,CAxCAE,EAAAD,QAAA6mC,EAAAzkC,GACAnC,EAAAD,QAAAyjC,OAAAoD,EAAAE,GAEA3kC,EAAA6kC,MAAA7kC,GAAA,WACAvD,OAAAC,eAAA8X,SAAApT,UAAA,OAAA,CACA7E,MAAA,WACA,OAAAyD,EAAA7B,KACA,EACAvB,cAAA,IAGAH,OAAAC,eAAA8X,SAAApT,UAAA,aAAA,CACA7E,MAAA,WACA,OAAAooC,EAAAxmC,KACA,EACAvB,cAAA,GAEA,GjEsrRA,EAAE,CAAC6nC,OAAS,MAAM,GAAG,CAAC,SAAS7lC,EAAQf,EAAOD,IAC9C,SAAW0jB,IAAS,WkE/qRpB,SAAAwjB,EAAAxoB,GACA,GAAA,iBAAAA,EACA,MAAA,IAAA7e,UAAA,mCAAAue,KAAAC,UAAAK,GAEA,CAGA,SAAAyoB,EAAAzoB,EAAA0oB,GAMA,IALA,IAIAhmC,EAJAzB,EAAA,GACA0nC,EAAA,EACAC,GAAA,EACAC,EAAA,EAEAzmC,EAAA,EAAAA,GAAA4d,EAAApd,SAAAR,EAAA,CACA,GAAAA,EAAA4d,EAAApd,OACAF,EAAAsd,EAAAjZ,WAAA3E,OACA,IAAA,KAAAM,EACA,MAEAA,EAAA,EAAA,CACA,GAAA,KAAAA,EAAA,CACA,GAAAkmC,IAAAxmC,EAAA,GAAA,IAAAymC,QAEA,GAAAD,IAAAxmC,EAAA,GAAA,IAAAymC,EAAA,CACA,GAAA5nC,EAAA2B,OAAA,GAAA,IAAA+lC,GAAA,KAAA1nC,EAAA8F,WAAA9F,EAAA2B,OAAA,IAAA,KAAA3B,EAAA8F,WAAA9F,EAAA2B,OAAA,GACA,GAAA3B,EAAA2B,OAAA,EAAA,CACA,IAAAkmC,EAAA7nC,EAAAyK,YAAA,KACA,GAAAo9B,IAAA7nC,EAAA2B,OAAA,EAAA,EACA,IAAAkmC,GACA7nC,EAAA,GACA0nC,EAAA,GAGAA,GADA1nC,EAAAA,EAAAkI,MAAA,EAAA2/B,IACAlmC,OAAA,EAAA3B,EAAAyK,YAAA,KAEAk9B,EAAAxmC,EACAymC,EAAA,EACA,QACA,CACA,MAAA,GAAA,IAAA5nC,EAAA2B,QAAA,IAAA3B,EAAA2B,OAAA,CACA3B,EAAA,GACA0nC,EAAA,EACAC,EAAAxmC,EACAymC,EAAA,EACA,QACA,CAEAH,IACAznC,EAAA2B,OAAA,EACA3B,GAAA,MAEAA,EAAA,KACA0nC,EAAA,EAEA,MACA1nC,EAAA2B,OAAA,EACA3B,GAAA,IAAA+e,EAAA7W,MAAAy/B,EAAA,EAAAxmC,GAEAnB,EAAA+e,EAAA7W,MAAAy/B,EAAA,EAAAxmC,GACAumC,EAAAvmC,EAAAwmC,EAAA,EAEAA,EAAAxmC,EACAymC,EAAA,CACA,MAAA,KAAAnmC,IAAA,IAAAmmC,IACAA,EAEAA,GAAA,CAEA,CACA,OAAA5nC,CACA,CAcA,IAAA8nC,EAAA,CAEAnwB,QAAA,WAKA,IAJA,IAEAowB,EAFAC,EAAA,GACAC,GAAA,EAGA9mC,EAAAoB,UAAAZ,OAAA,EAAAR,IAAA,IAAA8mC,EAAA9mC,IAAA,CACA,IAAA4d,EACA5d,GAAA,EACA4d,EAAAxc,UAAApB,SAEApB,IAAAgoC,IACAA,EAAAhkB,EAAAgkB,OACAhpB,EAAAgpB,GAGAR,EAAAxoB,GAGA,IAAAA,EAAApd,SAIAqmC,EAAAjpB,EAAA,IAAAipB,EACAC,EAAA,KAAAlpB,EAAAjZ,WAAA,GACA,CAQA,OAFAkiC,EAAAR,EAAAQ,GAAAC,GAEAA,EACAD,EAAArmC,OAAA,EACA,IAAAqmC,EAEA,IACAA,EAAArmC,OAAA,EACAqmC,EAEA,GAEA,EAEA/oB,UAAA,SAAAF,GAGA,GAFAwoB,EAAAxoB,GAEA,IAAAA,EAAApd,OAAA,MAAA,IAEA,IAAAumC,EAAA,KAAAnpB,EAAAjZ,WAAA,GACAqiC,EAAA,KAAAppB,EAAAjZ,WAAAiZ,EAAApd,OAAA,GAQA,OAHA,KAFAod,EAAAyoB,EAAAzoB,GAAAmpB,IAEAvmC,QAAAumC,IAAAnpB,EAAA,KACAA,EAAApd,OAAA,GAAAwmC,IAAAppB,GAAA,KAEAmpB,EAAA,IAAAnpB,EACAA,CACA,EAEAmpB,WAAA,SAAAnpB,GAEA,OADAwoB,EAAAxoB,GACAA,EAAApd,OAAA,GAAA,KAAAod,EAAAjZ,WAAA,EACA,EAEAS,KAAA,WACA,GAAA,IAAAhE,UAAAZ,OACA,MAAA,IAEA,IADA,IAAAymC,EACAjnC,EAAA,EAAAA,EAAAoB,UAAAZ,SAAAR,EAAA,CACA,IAAA5B,EAAAgD,UAAApB,GACAomC,EAAAhoC,GACAA,EAAAoC,OAAA,SACA5B,IAAAqoC,EACAA,EAAA7oC,EAEA6oC,GAAA,IAAA7oC,EAEA,CACA,YAAAQ,IAAAqoC,EACA,IACAN,EAAA7oB,UAAAmpB,EACA,EAEAC,SAAA,SAAAzgC,EAAA0gC,GAIA,GAHAf,EAAA3/B,GACA2/B,EAAAe,GAEA1gC,IAAA0gC,EAAA,MAAA,GAKA,IAHA1gC,EAAAkgC,EAAAnwB,QAAA/P,OACA0gC,EAAAR,EAAAnwB,QAAA2wB,IAEA,MAAA,GAIA,IADA,IAAAC,EAAA,EACAA,EAAA3gC,EAAAjG,QACA,KAAAiG,EAAA9B,WAAAyiC,KADAA,GASA,IALA,IAAAC,EAAA5gC,EAAAjG,OACA8mC,EAAAD,EAAAD,EAGAG,EAAA,EACAA,EAAAJ,EAAA3mC,QACA,KAAA2mC,EAAAxiC,WAAA4iC,KADAA,GAWA,IAPA,IACAC,EADAL,EAAA3mC,OACA+mC,EAGA/mC,EAAA8mC,EAAAE,EAAAF,EAAAE,EACAC,GAAA,EACAznC,EAAA,EACAA,GAAAQ,IAAAR,EAAA,CACA,GAAAA,IAAAQ,EAAA,CACA,GAAAgnC,EAAAhnC,EAAA,CACA,GAAA,KAAA2mC,EAAAxiC,WAAA4iC,EAAAvnC,GAGA,OAAAmnC,EAAApgC,MAAAwgC,EAAAvnC,EAAA,GACA,GAAA,IAAAA,EAGA,OAAAmnC,EAAApgC,MAAAwgC,EAAAvnC,EAEA,MAAAsnC,EAAA9mC,IACA,KAAAiG,EAAA9B,WAAAyiC,EAAApnC,GAGAynC,EAAAznC,EACA,IAAAA,IAGAynC,EAAA,IAGA,KACA,CACA,IAAAC,EAAAjhC,EAAA9B,WAAAyiC,EAAApnC,GAEA,GAAA0nC,IADAP,EAAAxiC,WAAA4iC,EAAAvnC,GAEA,MACA,KAAA0nC,IACAD,EAAAznC,EACA,CAEA,IAAAkO,EAAA,GAGA,IAAAlO,EAAAonC,EAAAK,EAAA,EAAAznC,GAAAqnC,IAAArnC,EACAA,IAAAqnC,GAAA,KAAA5gC,EAAA9B,WAAA3E,KACA,IAAAkO,EAAA1N,OACA0N,GAAA,KAEAA,GAAA,OAMA,OAAAA,EAAA1N,OAAA,EACA0N,EAAAi5B,EAAApgC,MAAAwgC,EAAAE,IAEAF,GAAAE,EACA,KAAAN,EAAAxiC,WAAA4iC,MACAA,EACAJ,EAAApgC,MAAAwgC,GAEA,EAEAI,UAAA,SAAA/pB,GACA,OAAAA,CACA,EAEAgqB,QAAA,SAAAhqB,GAEA,GADAwoB,EAAAxoB,GACA,IAAAA,EAAApd,OAAA,MAAA,IAKA,IAJA,IAAAF,EAAAsd,EAAAjZ,WAAA,GACAkjC,EAAA,KAAAvnC,EACAkF,GAAA,EACAsiC,GAAA,EACA9nC,EAAA4d,EAAApd,OAAA,EAAAR,GAAA,IAAAA,EAEA,GAAA,MADAM,EAAAsd,EAAAjZ,WAAA3E,KAEA,IAAA8nC,EAAA,CACAtiC,EAAAxF,EACA,KACA,OAGA8nC,GAAA,EAIA,OAAA,IAAAtiC,EAAAqiC,EAAA,IAAA,IACAA,GAAA,IAAAriC,EAAA,KACAoY,EAAA7W,MAAA,EAAAvB,EACA,EAEAuiC,SAAA,SAAAnqB,EAAAtP,GACA,QAAA1P,IAAA0P,GAAA,iBAAAA,EAAA,MAAA,IAAAvP,UAAA,mCACAqnC,EAAAxoB,GAEA,IAGA5d,EAHAuF,EAAA,EACAC,GAAA,EACAsiC,GAAA,EAGA,QAAAlpC,IAAA0P,GAAAA,EAAA9N,OAAA,GAAA8N,EAAA9N,QAAAod,EAAApd,OAAA,CACA,GAAA8N,EAAA9N,SAAAod,EAAApd,QAAA8N,IAAAsP,EAAA,MAAA,GACA,IAAAoqB,EAAA15B,EAAA9N,OAAA,EACAynC,GAAA,EACA,IAAAjoC,EAAA4d,EAAApd,OAAA,EAAAR,GAAA,IAAAA,EAAA,CACA,IAAAM,EAAAsd,EAAAjZ,WAAA3E,GACA,GAAA,KAAAM,GAGA,IAAAwnC,EAAA,CACAviC,EAAAvF,EAAA,EACA,KACA,OAEA,IAAAioC,IAGAH,GAAA,EACAG,EAAAjoC,EAAA,GAEAgoC,GAAA,IAEA1nC,IAAAgO,EAAA3J,WAAAqjC,IACA,KAAAA,IAGAxiC,EAAAxF,IAKAgoC,GAAA,EACAxiC,EAAAyiC,GAIA,CAGA,OADA1iC,IAAAC,EAAAA,EAAAyiC,GAAA,IAAAziC,IAAAA,EAAAoY,EAAApd,QACAod,EAAA7W,MAAAxB,EAAAC,EACA,CACA,IAAAxF,EAAA4d,EAAApd,OAAA,EAAAR,GAAA,IAAAA,EACA,GAAA,KAAA4d,EAAAjZ,WAAA3E,IAGA,IAAA8nC,EAAA,CACAviC,EAAAvF,EAAA,EACA,KACA,OACA,IAAAwF,IAGAsiC,GAAA,EACAtiC,EAAAxF,EAAA,GAIA,OAAA,IAAAwF,EAAA,GACAoY,EAAA7W,MAAAxB,EAAAC,EAEA,EAEA0iC,QAAA,SAAAtqB,GACAwoB,EAAAxoB,GAQA,IAPA,IAAAuqB,GAAA,EACAC,EAAA,EACA5iC,GAAA,EACAsiC,GAAA,EAGAO,EAAA,EACAroC,EAAA4d,EAAApd,OAAA,EAAAR,GAAA,IAAAA,EAAA,CACA,IAAAM,EAAAsd,EAAAjZ,WAAA3E,GACA,GAAA,KAAAM,GASA,IAAAkF,IAGAsiC,GAAA,EACAtiC,EAAAxF,EAAA,GAEA,KAAAM,GAEA,IAAA6nC,EACAA,EAAAnoC,EACA,IAAAqoC,IACAA,EAAA,IACA,IAAAF,IAGAE,GAAA,QArBA,IAAAP,EAAA,CACAM,EAAApoC,EAAA,EACA,KACA,CAoBA,CAEA,OAAA,IAAAmoC,IAAA,IAAA3iC,GAEA,IAAA6iC,GAEA,IAAAA,GAAAF,IAAA3iC,EAAA,GAAA2iC,IAAAC,EAAA,EACA,GAEAxqB,EAAA7W,MAAAohC,EAAA3iC,EACA,EAEA8iC,OAAA,SAAAC,GACA,GAAA,OAAAA,GAAA,iBAAAA,EACA,MAAA,IAAAxpC,UAAA,0EAAAwpC,GAEA,OAvVA,SAAAC,EAAAD,GACA,IAAAn/B,EAAAm/B,EAAAn/B,KAAAm/B,EAAAE,KACAtkB,EAAAokB,EAAApkB,OAAAokB,EAAAv2B,MAAA,KAAAu2B,EAAAj6B,KAAA,IACA,OAAAlF,EAGAA,IAAAm/B,EAAAE,KACAr/B,EAAA+a,EAEA/a,EAAAo/B,EAAArkB,EALAA,CAMA,CA6UAukB,CAAA,IAAAH,EACA,EAEAnkB,MAAA,SAAAxG,GACAwoB,EAAAxoB,GAEA,IAAA3P,EAAA,CAAAw6B,KAAA,GAAAr/B,IAAA,GAAA+a,KAAA,GAAA7V,IAAA,GAAA0D,KAAA,IACA,GAAA,IAAA4L,EAAApd,OAAA,OAAAyN,EACA,IAEA1I,EAFAjF,EAAAsd,EAAAjZ,WAAA,GACAoiC,EAAA,KAAAzmC,EAEAymC,GACA94B,EAAAw6B,KAAA,IACAljC,EAAA,GAEAA,EAAA,EAaA,IAXA,IAAA4iC,GAAA,EACAC,EAAA,EACA5iC,GAAA,EACAsiC,GAAA,EACA9nC,EAAA4d,EAAApd,OAAA,EAIA6nC,EAAA,EAGAroC,GAAAuF,IAAAvF,EAEA,GAAA,MADAM,EAAAsd,EAAAjZ,WAAA3E,KAUA,IAAAwF,IAGAsiC,GAAA,EACAtiC,EAAAxF,EAAA,GAEA,KAAAM,GAEA,IAAA6nC,EAAAA,EAAAnoC,EAAA,IAAAqoC,IAAAA,EAAA,IACA,IAAAF,IAGAE,GAAA,QAlBA,IAAAP,EAAA,CACAM,EAAApoC,EAAA,EACA,KACA,CAwCA,OArBA,IAAAmoC,IAAA,IAAA3iC,GAEA,IAAA6iC,GAEA,IAAAA,GAAAF,IAAA3iC,EAAA,GAAA2iC,IAAAC,EAAA,GACA,IAAA5iC,IACAyI,EAAAkW,KAAAlW,EAAA+D,KAAA,IAAAo2B,GAAArB,EAAAnpB,EAAA7W,MAAA,EAAAvB,GAAAoY,EAAA7W,MAAAqhC,EAAA5iC,KAGA,IAAA4iC,GAAArB,GACA94B,EAAA+D,KAAA4L,EAAA7W,MAAA,EAAAohC,GACAl6B,EAAAkW,KAAAvG,EAAA7W,MAAA,EAAAvB,KAEAyI,EAAA+D,KAAA4L,EAAA7W,MAAAqhC,EAAAD,GACAl6B,EAAAkW,KAAAvG,EAAA7W,MAAAqhC,EAAA5iC,IAEAyI,EAAAK,IAAAsP,EAAA7W,MAAAohC,EAAA3iC,IAGA4iC,EAAA,EAAAn6B,EAAA7E,IAAAwU,EAAA7W,MAAA,EAAAqhC,EAAA,GAAArB,IAAA94B,EAAA7E,IAAA,KAEA6E,CACA,EAEAu6B,IAAA,IACAG,UAAA,IACAC,MAAA,KACAjC,MAAA,MAGAA,EAAAA,MAAAA,EAEAxnC,EAAAD,QAAAynC,ClE4sRC,GAAE7nC,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAElC,EAAE,CAACyjB,SAAW,KAAK,GAAG,CAAC,SAASzjB,EAAQf,EAAOD;;;;;;;;;;AmErtS/C,IAAA4xB,EAAA5wB,EAAA,iBACA6wB,EAAA7wB,EAAA,qBA0CAf,EAAAD,QAxCA,MAKA6S,cAEAtS,KAAAuxB,SAAA,IAAAF,EAEArxB,KAAAwxB,aAAA,IAAAF,EAEAtxB,KAAA2xB,UAAA3xB,KAAAuxB,SAAAI,SACA,CAUApO,WAAAqO,EAAAC,EAAAC,GAEA,OAAA9xB,KAAAuxB,SAAAhO,WAAAqO,EAAAC,EAAAC,EACA,CASA7N,YAAAD,EAAA1Q,GAEA,OAAAtT,KAAAwxB,aAAAvN,YAAAD,EAAAhkB,KAAA2xB,UAAAre,EACA,EnEouSA,EAAE,CAAC,oBAAoB,GAAG,gBAAgB,KAAK,GAAG,CAAC,SAAS7S,EAAQf,EAAOD,GoE7mS3EC,EAAAD,QAlKA,MAKA6S,cAEA,CASA6f,eAAAC,GAEA,MACA,CACAT,UAAAS,EAEAC,cAAA,EAEAC,OAAA,GACAC,aAAA,GAEAC,SAAA,EAEAC,cAAA,EACAC,yBAAA,GAEA,CAUAC,WAAAld,EAAAmd,GAEAA,EAAAH,aAAAhd,EAGAmd,EAAAH,aAAAhvB,eAAA,gBAGAmvB,EAAAJ,QAAAI,EAAAH,aAEA,CAUAI,mBAAArX,EAAAoX,GAEAA,EAAAL,cAAA/W,CACA,CAQAsX,kBAAAF,GAEAA,EAAAN,QAAAM,EAAAL,aACAK,EAAAL,aAAA,EACA,CAQAQ,gBAAAH,EAAAtf,GAEAsf,EAAAL,aAAAxxB,QAAA6xB,EAAAJ,QAAAQ,WAAAjyB,OAAA6xB,EAAAJ,QAAAS,aAAAlyB,QACA6xB,EAAAL,aAAA3nB,QAAAgoB,EAAAJ,QAAAQ,WAAAjyB,UAAA6xB,EAAAJ,QAAAQ,aAIAJ,EAAAL,aAAAK,EAAAJ,QAAAW,MAAAP,EAAAL,aAAA3nB,OAAAgoB,EAAAJ,QAAAS,aAAAlyB,OAAA6xB,EAAAL,aAAAxxB,QAAA6xB,EAAAJ,QAAAS,aAAAlyB,OAAA6xB,EAAAJ,QAAAQ,WAAAjyB,SAAAuS,GAEAtT,KAAA8yB,kBAAAF,GAEAA,EAAAJ,SAAA,EACAI,EAAAH,cAAA,EAEA,CASAa,eAAA9X,EAAAoX,EAAAtf,IAGAsf,EAAAH,cAAAG,EAAAjB,UAAAluB,eAAA+X,IAGAxb,KAAA2yB,WAAAC,EAAAjB,UAAAnW,GAAAoX,GACA5yB,KAAA6yB,mBAAArX,EAAAoX,IAGAA,EAAAH,cAGAG,EAAAH,aAAAhvB,eAAA+X,IAGAxb,KAAA2yB,WAAAC,EAAAH,aAAAjX,GAAAoX,GAEA5yB,KAAA6yB,mBAAArX,EAAAoX,GACAA,EAAAJ,SAGAxyB,KAAA+yB,gBAAAH,EAAAtf,IAMAsf,EAAAN,QAAA9W,CAEA,CASAyI,YAAAD,EAAAoO,EAAA9e,GAEA,IAAAkgB,EAAAxzB,KAAAmyB,eAAAC,GAEA,IAAA,IAAA7xB,EAAA,EAAAA,EAAAyjB,EAAAjjB,OAAAR,IAEAP,KAAAszB,eAAAtP,EAAAzjB,GAAAizB,EAAAlgB,GAKA,OAFAtT,KAAA8yB,kBAAAU,GAEAA,EAAAlB,MACA,EpE2xSA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS7xB,EAAQf,EAAOD,GqEh4SlCC,EAAAD,QA1DA,MAKA6S,cAEAtS,KAAA2xB,UAAA,CAAA,CACA,CAWA+B,SAAAC,EAAAC,EAAAC,GAKA,OAHAF,EAAAlwB,eAAAmwB,EAAAC,MACAF,EAAAC,EAAAC,IAAA,CAAA,GAEAF,EAAAC,EAAAC,GACA,CASAtQ,WAAAqO,EAAAC,EAAAC,GAEA,GAAAF,EAAA7wB,OAAA,EACA,OAAA,EAEA,GAAA,iBAAA8wB,GAAAA,EAAA9wB,OAAA,EACA,OAAA,EAEA,IAAA+yB,EAAA9zB,KAAA2xB,UAGA,IAAA,IAAApxB,EAAA,EAAAA,EAAAqxB,EAAA7wB,OAAAR,IACAuzB,EAAA9zB,KAAA0zB,SAAAI,EAAAlC,EAAArxB,GAQA,OANAuzB,EAAAb,aAAArB,EACAkC,EAAAd,WAAA,iBAAAnB,GAAAA,EAAA9wB,OAAA,EAAA8wB,EAAAD,EACAkC,EAAAX,MAAA,mBAAArB,EAAAA,EACA,iBAAAA,EAAA,IAAAA,EACAxe,GAAAA,GAEA,CACA,ErEs8SA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS7S,EAAQf,EAAOD,GsElgTlC,IAOA2pC,EACAC,EARAlmB,EAAAzjB,EAAAD,QAAA,CAAA,EAUA,SAAA6pC,IACA,MAAA,IAAA1oC,MAAA,kCACA,CACA,SAAA2oC,IACA,MAAA,IAAA3oC,MAAA,oCACA,CAqBA,SAAA4oC,EAAAC,GACA,GAAAL,IAAAnlC,WAEA,OAAAA,WAAAwlC,EAAA,GAGA,IAAAL,IAAAE,IAAAF,IAAAnlC,WAEA,OADAmlC,EAAAnlC,WACAA,WAAAwlC,EAAA,GAEA,IAEA,OAAAL,EAAAK,EAAA,EACA,CAAA,MAAAtpC,GACA,IAEA,OAAAipC,EAAA/pC,KAAA,KAAAoqC,EAAA,EACA,CAAA,MAAAtpC,GAEA,OAAAipC,EAAA/pC,KAAAW,KAAAypC,EAAA,EACA,CACA,CAGA,EA5CA,WACA,IAEAL,EADA,mBAAAnlC,WACAA,WAEAqlC,CAEA,CAAA,MAAAnpC,GACAipC,EAAAE,CACA,CACA,IAEAD,EADA,mBAAAK,aACAA,aAEAH,CAEA,CAAA,MAAAppC,GACAkpC,EAAAE,CACA,CACA,CAnBA,GAwEA,IAEAI,EAFAC,EAAA,GACAC,GAAA,EAEAC,GAAA,EAEA,SAAAC,IACAF,GAAAF,IAGAE,GAAA,EACAF,EAAA5oC,OACA6oC,EAAAD,EAAAtlC,OAAAulC,GAEAE,GAAA,EAEAF,EAAA7oC,QACAipC,IAEA,CAEA,SAAAA,IACA,IAAAH,EAAA,CAGA,IAAAI,EAAAT,EAAAO,GACAF,GAAA,EAGA,IADA,IAAAvmC,EAAAsmC,EAAA7oC,OACAuC,GAAA,CAGA,IAFAqmC,EAAAC,EACAA,EAAA,KACAE,EAAAxmC,GACAqmC,GACAA,EAAAG,GAAAI,MAGAJ,GAAA,EACAxmC,EAAAsmC,EAAA7oC,MACA,CACA4oC,EAAA,KACAE,GAAA,EAnEA,SAAAM,GACA,GAAAd,IAAAK,aAEA,OAAAA,aAAAS,GAGA,IAAAd,IAAAE,IAAAF,IAAAK,aAEA,OADAL,EAAAK,aACAA,aAAAS,GAEA,IAEA,OAAAd,EAAAc,EACA,CAAA,MAAAhqC,GACA,IAEA,OAAAkpC,EAAAhqC,KAAA,KAAA8qC,EACA,CAAA,MAAAhqC,GAGA,OAAAkpC,EAAAhqC,KAAAW,KAAAmqC,EACA,CACA,CAIA,CA0CAC,CAAAH,EAlBA,CAmBA,CAgBA,SAAAI,EAAAZ,EAAA5hC,GACA7H,KAAAypC,IAAAA,EACAzpC,KAAA6H,MAAAA,CACA,CAWA,SAAA/F,IAAA,CA5BAqhB,EAAAmnB,SAAA,SAAAb,GACA,IAAAhnC,EAAA,IAAAM,MAAApB,UAAAZ,OAAA,GACA,GAAAY,UAAAZ,OAAA,EACA,IAAA,IAAAR,EAAA,EAAAA,EAAAoB,UAAAZ,OAAAR,IACAkC,EAAAlC,EAAA,GAAAoB,UAAApB,GAGAqpC,EAAAhnC,KAAA,IAAAynC,EAAAZ,EAAAhnC,IACA,IAAAmnC,EAAA7oC,QAAA8oC,GACAL,EAAAQ,EAEA,EAOAK,EAAApnC,UAAAinC,IAAA,WACAlqC,KAAAypC,IAAA/nC,MAAA,KAAA1B,KAAA6H,MACA,EACAsb,EAAAonB,MAAA,UACApnB,EAAAqnB,SAAA,EACArnB,EAAAW,IAAA,CAAA,EACAX,EAAAsnB,KAAA,GACAtnB,EAAAunB,QAAA,GACAvnB,EAAAwnB,SAAA,CAAA,EAIAxnB,EAAA5L,GAAAzV,EACAqhB,EAAA9I,YAAAvY,EACAqhB,EAAAthB,KAAAC,EACAqhB,EAAAvI,IAAA9Y,EACAqhB,EAAAjM,eAAApV,EACAqhB,EAAAtI,mBAAA/Y,EACAqhB,EAAA5K,KAAAzW,EACAqhB,EAAA7I,gBAAAxY,EACAqhB,EAAA5I,oBAAAzY,EAEAqhB,EAAA/I,UAAA,SAAA7H,GAAA,MAAA,EAAA,EAEA4Q,EAAAynB,QAAA,SAAAr4B,GACA,MAAA,IAAA3R,MAAA,mCACA,EAEAuiB,EAAAgkB,IAAA,WAAA,MAAA,GAAA,EACAhkB,EAAA0nB,MAAA,SAAAlhC,GACA,MAAA,IAAA/I,MAAA,iCACA,EACAuiB,EAAA2nB,MAAA,WAAA,OAAA,CAAA,CtEsgTA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASrqC,EAAQf,EAAOD,IAClC,SAAWK,IAAQ,YuE7rTnB,SAAAkpC,GAGA,IAAA+B,EAAA,iBAAAtrC,GAAAA,IACAA,EAAAurC,UAAAvrC,EACAwrC,EAAA,iBAAAvrC,GAAAA,IACAA,EAAAsrC,UAAAtrC,EACAwrC,EAAA,iBAAAprC,GAAAA,EAEAorC,EAAAprC,SAAAorC,GACAA,EAAArrC,SAAAqrC,GACAA,EAAAnrC,OAAAmrC,IAEAlC,EAAAkC,GAQA,IAAAC,EAiCAhtC,EA9BAitC,EAAA,WAGA1mB,EAAA,GACA2mB,EAAA,EACAC,EAAA,GACAC,EAAA,GACAC,EAAA,IACAC,EAAA,GACAC,EAAA,IACAxC,EAAA,IAGAyC,EAAA,QACAC,EAAA,eACAC,EAAA,4BAGAC,EAAA,CACAC,SAAA,kDACA,YAAA,iDACA,gBAAA,iBAIAC,EAAAtnB,EAAA2mB,EACA1vB,EAAA/X,KAAA+X,MACAswB,EAAAptC,OAAAuN,aAaA,SAAAO,EAAArE,GACA,MAAA,IAAA3B,WAAAmlC,EAAAxjC,GACA,CAUA,SAAA4jC,EAAArkC,EAAApG,GAGA,IAFA,IAAAV,EAAA8G,EAAA9G,OACAorC,EAAA,GACAprC,KACAorC,EAAAprC,GAAAU,EAAAoG,EAAA9G,IAEA,OAAAorC,CACA,CAYA,SAAAC,EAAAnlC,EAAAxF,GACA,IAAA6D,EAAA2B,EAAAiL,MAAA,KACAi6B,EAAA,GAWA,OAVA7mC,EAAAvE,OAAA,IAGAorC,EAAA7mC,EAAA,GAAA,IACA2B,EAAA3B,EAAA,IAMA6mC,EADAD,GAFAjlC,EAAAA,EAAA4G,QAAAg+B,EAAA,MACA35B,MAAA,KACAzQ,GAAAkE,KAAA,IAEA,CAeA,SAAA0mC,EAAAplC,GAMA,IALA,IAGA7I,EACAkuC,EAJArmC,EAAA,GACAsmC,EAAA,EACAxrC,EAAAkG,EAAAlG,OAGAwrC,EAAAxrC,IACA3C,EAAA6I,EAAA/B,WAAAqnC,OACA,OAAAnuC,GAAA,OAAAmuC,EAAAxrC,EAGA,QAAA,OADAurC,EAAArlC,EAAA/B,WAAAqnC,OAEAtmC,EAAArD,OAAA,KAAAxE,IAAA,KAAA,KAAAkuC,GAAA,QAIArmC,EAAArD,KAAAxE,GACAmuC,KAGAtmC,EAAArD,KAAAxE,GAGA,OAAA6H,CACA,CAUA,SAAAumC,EAAA3kC,GACA,OAAAqkC,EAAArkC,GAAA,SAAAzJ,GACA,IAAA6H,EAAA,GAOA,OANA7H,EAAA,QAEA6H,GAAAgmC,GADA7tC,GAAA,SACA,GAAA,KAAA,OACAA,EAAA,MAAA,KAAAA,GAEA6H,GAAAgmC,EAAA7tC,EAEA,IAAAuH,KAAA,GACA,CAmCA,SAAA8mC,EAAAC,EAAAC,GAGA,OAAAD,EAAA,GAAA,IAAAA,EAAA,MAAA,GAAAC,IAAA,EACA,CAOA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAvpC,EAAA,EAGA,IAFAqpC,EAAAE,EAAApxB,EAAAkxB,EAAArB,GAAAqB,GAAA,EACAA,GAAAlxB,EAAAkxB,EAAAC,GACAD,EAAAb,EAAAV,GAAA,EAAA9nC,GAAAkhB,EACAmoB,EAAAlxB,EAAAkxB,EAAAb,GAEA,OAAArwB,EAAAnY,GAAAwoC,EAAA,GAAAa,GAAAA,EAAAtB,GACA,CASA,SAAAyB,EAAAluC,GAEA,IAEA2P,EAIAw+B,EACA5iC,EACA7I,EACA0rC,EACAx0B,EACAlV,EACAkpC,EACArsC,EAEA8sC,EArEAnhC,EAsDA/F,EAAA,GACAmnC,EAAAtuC,EAAAiC,OAEAR,EAAA,EACAH,EAAAsrC,EACA2B,EAAA5B,EAqBA,KALAwB,EAAAnuC,EAAA+K,YAAAq/B,IACA,IACA+D,EAAA,GAGA5iC,EAAA,EAAAA,EAAA4iC,IAAA5iC,EAEAvL,EAAAoG,WAAAmF,IAAA,KACAsC,EAAA,aAEA1G,EAAArD,KAAA9D,EAAAoG,WAAAmF,IAMA,IAAA7I,EAAAyrC,EAAA,EAAAA,EAAA,EAAA,EAAAzrC,EAAA4rC,GAAA,CAOA,IAAAF,EAAA3sC,EAAAmY,EAAA,EAAAlV,EAAAkhB,EAEAljB,GAAA4rC,GACAzgC,EAAA,mBAGA+/B,GAxGA1gC,EAwGAlN,EAAAoG,WAAA1D,MAvGA,GAAA,GACAwK,EAAA,GAEAA,EAAA,GAAA,GACAA,EAAA,GAEAA,EAAA,GAAA,GACAA,EAAA,GAEA0Y,IAgGAA,GAAAgoB,EAAA/wB,GAAAyvB,EAAA7qC,GAAAmY,KACA/L,EAAA,YAGApM,GAAAmsC,EAAAh0B,IAGAg0B,GAFArsC,EAAAmD,GAAA6pC,EAAAhC,EAAA7nC,GAAA6pC,EAAA/B,EAAAA,EAAA9nC,EAAA6pC,IAbA7pC,GAAAkhB,EAoBAhM,EAAAiD,EAAAyvB,GADA+B,EAAAzoB,EAAArkB,KAEAsM,EAAA,YAGA+L,GAAAy0B,EAKAE,EAAAT,EAAArsC,EAAA2sC,EADAz+B,EAAAxI,EAAAlF,OAAA,EACA,GAAAmsC,GAIAvxB,EAAApb,EAAAkO,GAAA28B,EAAAhrC,GACAuM,EAAA,YAGAvM,GAAAub,EAAApb,EAAAkO,GACAlO,GAAAkO,EAGAxI,EAAAuzB,OAAAj5B,IAAA,EAAAH,EAEA,CAEA,OAAAosC,EAAAvmC,EACA,CASA,SAAAqnC,EAAAxuC,GACA,IAAAsB,EACAysC,EACAU,EACAC,EACAH,EACAhjC,EACAb,EACAikC,EACAjqC,EACAnD,EACAqtC,EAGAN,EAEAO,EACAR,EACAS,EANA3nC,EAAA,GAoBA,IARAmnC,GAHAtuC,EAAAutC,EAAAvtC,IAGAiC,OAGAX,EAAAsrC,EACAmB,EAAA,EACAQ,EAAA5B,EAGAphC,EAAA,EAAAA,EAAA+iC,IAAA/iC,GACAqjC,EAAA5uC,EAAAuL,IACA,KACApE,EAAArD,KAAAqpC,EAAAyB,IAeA,IAXAH,EAAAC,EAAAvnC,EAAAlF,OAMAysC,GACAvnC,EAAArD,KAAAsmC,GAIAqE,EAAAH,GAAA,CAIA,IAAA5jC,EAAA4hC,EAAA/gC,EAAA,EAAAA,EAAA+iC,IAAA/iC,GACAqjC,EAAA5uC,EAAAuL,KACAjK,GAAAstC,EAAAlkC,IACAA,EAAAkkC,GAcA,IAPAlkC,EAAApJ,EAAAub,GAAAyvB,EAAAyB,IADAc,EAAAJ,EAAA,KAEA5gC,EAAA,YAGAkgC,IAAArjC,EAAApJ,GAAAutC,EACAvtC,EAAAoJ,EAEAa,EAAA,EAAAA,EAAA+iC,IAAA/iC,EAOA,IANAqjC,EAAA5uC,EAAAuL,IAEAjK,KAAAysC,EAAAzB,GACAz+B,EAAA,YAGA+gC,GAAAttC,EAAA,CAEA,IAAAqtC,EAAAZ,EAAArpC,EAAAkhB,IAEA+oB,GADAptC,EAAAmD,GAAA6pC,EAAAhC,EAAA7nC,GAAA6pC,EAAA/B,EAAAA,EAAA9nC,EAAA6pC,IADA7pC,GAAAkhB,EAKAkpB,EAAAH,EAAAptC,EACA8sC,EAAAzoB,EAAArkB,EACA4F,EAAArD,KACAqpC,EAAAQ,EAAApsC,EAAAutC,EAAAT,EAAA,KAEAM,EAAA9xB,EAAAiyB,EAAAT,GAGAlnC,EAAArD,KAAAqpC,EAAAQ,EAAAgB,EAAA,KACAJ,EAAAT,EAAAC,EAAAc,EAAAJ,GAAAC,GACAX,EAAA,IACAU,CACA,GAGAV,IACAzsC,CAEA,CACA,OAAA6F,EAAAN,KAAA,GACA,CA8EA,GAnCAwlC,EAAA,CAMAT,QAAA,QAQAmD,KAAA,CACAb,OAAAX,EACAiB,OAAAd,GAEAQ,OAAAA,EACAM,OAAAA,EACAQ,QA/BA,SAAAhvC,GACA,OAAAstC,EAAAttC,GAAA,SAAAmI,GACA,OAAA2kC,EAAAmC,KAAA9mC,GACA,OAAAqmC,EAAArmC,GACAA,CACA,GACA,EA0BA+mC,UAnDA,SAAAlvC,GACA,OAAAstC,EAAAttC,GAAA,SAAAmI,GACA,OAAA0kC,EAAAoC,KAAA9mC,GACA+lC,EAAA/lC,EAAAK,MAAA,GAAAyB,eACA9B,CACA,GACA,GA2DA8jC,GAAAE,EACA,GAAAvrC,EAAAD,SAAAsrC,EAEAE,EAAAxrC,QAAA0rC,OAGA,IAAAhtC,KAAAgtC,EACAA,EAAA1nC,eAAAtF,KAAA4sC,EAAA5sC,GAAAgtC,EAAAhtC,SAKA6qC,EAAAmC,SAAAA,CAGA,CAnhBA,CAmhBAnrC,KvEisTC,GAAEX,KAAKW,KAAM,GAAEX,KAAKW,KAAuB,oBAAXF,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAElJ,EAAE,CAAC,GAAG,GAAG,CAAC,SAASY,EAAQf,EAAOD,GwE7rUlC,SAAAgE,EAAAvF,EAAA+vC,GACA,OAAA3vC,OAAA2E,UAAAQ,eAAApE,KAAAnB,EAAA+vC,EACA,CAEAvuC,EAAAD,QAAA,SAAAyuC,EAAAnF,EAAAoF,EAAAxrB,GACAomB,EAAAA,GAAA,IACAoF,EAAAA,GAAA,IACA,IAAAjwC,EAAA,CAAA,EAEA,GAAA,iBAAAgwC,GAAA,IAAAA,EAAAntC,OACA,OAAA7C,EAGA,IAAAkwC,EAAA,MACAF,EAAAA,EAAAh8B,MAAA62B,GAEA,IAAAsF,EAAA,IACA1rB,GAAA,iBAAAA,EAAA0rB,UACAA,EAAA1rB,EAAA0rB,SAGA,IAAA/qC,EAAA4qC,EAAAntC,OAEAstC,EAAA,GAAA/qC,EAAA+qC,IACA/qC,EAAA+qC,GAGA,IAAA,IAAA9tC,EAAA,EAAAA,EAAA+C,IAAA/C,EAAA,CACA,IAEA+tC,EAAAC,EAAA/qC,EAAAgrC,EAFArhC,EAAA+gC,EAAA3tC,GAAAsN,QAAAugC,EAAA,OACAK,EAAAthC,EAAAtH,QAAAsoC,GAGAM,GAAA,GACAH,EAAAnhC,EAAAvC,OAAA,EAAA6jC,GACAF,EAAAphC,EAAAvC,OAAA6jC,EAAA,KAEAH,EAAAnhC,EACAohC,EAAA,IAGA/qC,EAAA00B,mBAAAoW,GACAE,EAAAtW,mBAAAqW,GAEA9qC,EAAAvF,EAAAsF,GAEAR,EAAA9E,EAAAsF,IACAtF,EAAAsF,GAAAZ,KAAA4rC,GAEAtwC,EAAAsF,GAAA,CAAAtF,EAAAsF,GAAAgrC,GAJAtwC,EAAAsF,GAAAgrC,CAMA,CAEA,OAAAtwC,CACA,EAEA,IAAA8E,EAAAD,MAAAC,SAAA,SAAA0rC,GACA,MAAA,mBAAApwC,OAAA2E,UAAAC,SAAA7D,KAAAqvC,EACA,CxE0tUA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASjuC,EAAQf,EAAOD,GyEtxUlC,IAAAkvC,EAAA,SAAAH,GACA,cAAAA,GACA,IAAA,SACA,OAAAA,EAEA,IAAA,UACA,OAAAA,EAAA,OAAA,QAEA,IAAA,SACA,OAAAngC,SAAAmgC,GAAAA,EAAA,GAEA,QACA,MAAA,GAEA,EAEA9uC,EAAAD,QAAA,SAAAvB,EAAA6qC,EAAAoF,EAAA57B,GAOA,OANAw2B,EAAAA,GAAA,IACAoF,EAAAA,GAAA,IACA,OAAAjwC,IACAA,OAAAiB,GAGA,iBAAAjB,EACAguC,EAAA0C,EAAA1wC,IAAA,SAAAsF,GACA,IAAAqrC,EAAAC,mBAAAH,EAAAnrC,IAAA2qC,EACA,OAAAnrC,EAAA9E,EAAAsF,IACA0oC,EAAAhuC,EAAAsF,IAAA,SAAAgrC,GACA,OAAAK,EAAAC,mBAAAH,EAAAH,GACA,IAAA7oC,KAAAojC,GAEA8F,EAAAC,mBAAAH,EAAAzwC,EAAAsF,IAEA,IAAAmC,KAAAojC,GAIAx2B,EACAu8B,mBAAAH,EAAAp8B,IAAA47B,EACAW,mBAAAH,EAAAzwC,IAFA,EAGA,EAEA,IAAA8E,EAAAD,MAAAC,SAAA,SAAA0rC,GACA,MAAA,mBAAApwC,OAAA2E,UAAAC,SAAA7D,KAAAqvC,EACA,EAEA,SAAAxC,EAAAwC,EAAAlvC,GACA,GAAAkvC,EAAAxC,IAAA,OAAAwC,EAAAxC,IAAA1sC,GAEA,IADA,IAAAJ,EAAA,GACAmB,EAAA,EAAAA,EAAAmuC,EAAA3tC,OAAAR,IACAnB,EAAAwD,KAAApD,EAAAkvC,EAAAnuC,GAAAA,IAEA,OAAAnB,CACA,CAEA,IAAAwvC,EAAAtwC,OAAAiF,MAAA,SAAArF,GACA,IAAAkB,EAAA,GACA,IAAA,IAAAjB,KAAAD,EACAI,OAAA2E,UAAAQ,eAAApE,KAAAnB,EAAAC,IAAAiB,EAAAwD,KAAAzE,GAEA,OAAAiB,CACA,CzEgzUA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASqB,EAAQf,EAAOD,G0El4UlCA,EAAAutC,OAAAvtC,EAAAklB,MAAAlkB,EAAA,YACAhB,EAAA6tC,OAAA7tC,EAAAqe,UAAArd,EAAA,W1Eu4UA,EAAE,CAAC,WAAW,GAAG,WAAW,KAAK,GAAG,CAAC,SAASA,EAAQf,EAAOD,uF2Ex4U7D,IAAAmI,EAAAnH,EAAA,UACA0F,EAAAyB,EAAAzB,OAGA,SAAA4oC,EAAA38B,EAAAC,GACA,IAAA,IAAAlU,KAAAiU,EACAC,EAAAlU,GAAAiU,EAAAjU,EAEA,CASA,SAAA6wC,EAAArwC,EAAAmI,EAAA/F,GACA,OAAAoF,EAAAxH,EAAAmI,EAAA/F,EACA,CAVAoF,EAAAa,MAAAb,EAAAI,OAAAJ,EAAAY,aAAAZ,EAAA6G,gBACAtN,EAAAD,QAAAmI,GAGAmnC,EAAAnnC,EAAAnI,GACAA,EAAA0G,OAAA6oC,GAOAA,EAAA/rC,UAAA3E,OAAA+Z,OAAAlS,EAAAlD,WAGA8rC,EAAA5oC,EAAA6oC,GAEAA,EAAAhoC,KAAA,SAAArI,EAAAmI,EAAA/F,GACA,GAAA,iBAAApC,EACA,MAAA,IAAAW,UAAA,iCAEA,OAAA6G,EAAAxH,EAAAmI,EAAA/F,EACA,EAEAiuC,EAAAzoC,MAAA,SAAAmC,EAAAqE,EAAA7F,GACA,GAAA,iBAAAwB,EACA,MAAA,IAAApJ,UAAA,6BAEA,IAAAsH,EAAAT,EAAAuC,GAUA,YATAvJ,IAAA4N,EACA,iBAAA7F,EACAN,EAAAmG,KAAAA,EAAA7F,GAEAN,EAAAmG,KAAAA,GAGAnG,EAAAmG,KAAA,GAEAnG,CACA,EAEAooC,EAAAjoC,YAAA,SAAA2B,GACA,GAAA,iBAAAA,EACA,MAAA,IAAApJ,UAAA,6BAEA,OAAA6G,EAAAuC,EACA,EAEAsmC,EAAAhiC,gBAAA,SAAAtE,GACA,GAAA,iBAAAA,EACA,MAAA,IAAApJ,UAAA,6BAEA,OAAAsI,EAAAtB,WAAAoC,EACA,C3E64UA,EAAE,CAACd,OAAS,KAAK,GAAG,CAAC,SAASnH,EAAQf,EAAOD,IAC7C,SAAW0G,IAAQ,iG4E78UnBzG,EAAAD,QAAA,SAAAwvC,EAAA5tC,GACA,IAAA6tC,EAAA,GACAD,EAAA13B,GAAA,QAAA,SAAA0hB,GACAiW,EAAAtsC,KAAAq2B,EACA,IACAgW,EAAAptC,KAAA,OAAA,WACAR,GAAAA,EAAA,KAAA8E,EAAA9B,OAAA6qC,IACA7tC,EAAA,IACA,IACA4tC,EAAAptC,KAAA,SAAA,SAAAS,GACAjB,GAAAA,EAAAiB,GACAjB,EAAA,IACA,GACA,C5Ei9UC,GAAEhC,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,UAAU0F,OAE5C,EAAE,CAACyB,OAAS,KAAK,GAAG,CAAC,SAASnH,EAAQf,EAAOD,IAC7C,SAAW0G,IAAQ,8F6Ej+UnBzG,EAAAD,QAAA0vC,EAEA,MAAA9qC,EAAA5D,EAAA,iBACA2uC,EAAA3uC,EAAA,uBACA+5B,EAAA/5B,EAAA,QACAg6B,EAAAh6B,EAAA,SACAoB,EAAApB,EAAA,QACA4uC,EAAA5uC,EAAA,eACAo1B,EAAAp1B,EAAA,OAEA6uC,EAAAhvC,GAAA,OAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAAivC,KAEA,SAAAJ,EAAAK,EAAAnuC,GAIA,GAHAmuC,EAAAlxC,OAAA6iB,OAAA,CAAAsuB,aAAA,IAAA,iBAAAD,EAAA,CAAA3Z,IAAA2Z,GAAAA,GACAnuC,EAAAQ,EAAAR,GAEAmuC,EAAA3Z,IAAA,CACA,MAAA6Z,SAAAA,EAAAC,KAAAA,EAAA/U,SAAAA,EAAAgV,KAAAA,EAAAzxB,KAAAA,GAAA0X,EAAAlR,MAAA6qB,EAAA3Z,YACA2Z,EAAA3Z,IACA6Z,GAAAC,GAAA/U,GAAAgV,EACAtxC,OAAA6iB,OAAAquB,EAAA,CAAAE,WAAAC,OAAA/U,WAAAgV,OAAAzxB,SADAqxB,EAAArxB,KAAAA,CAEA,CAEA,MAAA0xB,EAAA,CAAA,kBAAA,iBAIA,IAAAlZ,EAHA6Y,EAAAK,SAAAvxC,OAAAiF,KAAAisC,EAAAK,SAAAvqB,SAAA9hB,GAAAqsC,EAAArsC,EAAAuF,eAAAymC,EAAAK,QAAArsC,KACAgsC,EAAAK,QAAAA,EAGAL,EAAA7Y,KACAA,EAAA6Y,EAAAlZ,OAAAgZ,EAAAE,EAAA7Y,MAAA9Y,KAAAC,UAAA0xB,EAAA7Y,MAAA6Y,EAAA7Y,KACA6Y,EAAAM,OACAnZ,EAAA,iBAAA6Y,EAAAM,KAAAN,EAAAM,KAAAT,EAAAvxB,UAAA0xB,EAAAM,MACAN,EAAAK,QAAA,gBAAA,qCAGAlZ,IACA6Y,EAAA5Z,SAAA4Z,EAAA5Z,OAAA,QACA0Z,EAAA3Y,KAAA6Y,EAAAK,QAAA,kBAAA1pC,EAAA7B,WAAAqyB,IACA6Y,EAAAlZ,OAAAkZ,EAAAM,OAAAN,EAAAK,QAAA,gBAAA,4BAEAL,EAAA7Y,YAAA6Y,EAAAM,KAEAN,EAAAlZ,OAAAkZ,EAAAK,QAAAE,OAAA,oBACAP,EAAA5Z,SAAA4Z,EAAA5Z,OAAA4Z,EAAA5Z,OAAAoa,eAEA,MAAAC,EAAAT,EAAAE,SAEAQ,GADA,WAAAV,EAAA5U,SAAAH,EAAAD,GACAK,QAAA2U,GAAApwC,IACA,IAAA,IAAAowC,EAAAW,iBAAA/wC,EAAA42B,YAAA,KAAA52B,EAAA42B,WAAA,KAAA52B,EAAAywC,QAAAO,SAAA,CACAZ,EAAA3Z,IAAAz2B,EAAAywC,QAAAO,gBACAZ,EAAAK,QAAAQ,KACAjxC,EAAAkxC,SAEA,MAAAC,EAAA1a,EAAAlR,MAAA6qB,EAAA3Z,KAAA6Z,SAYA,OAVA,OAAAa,GAAAA,IAAAN,WACAT,EAAAK,QAAAW,cACAhB,EAAAK,QAAAY,eAGA,SAAAjB,EAAA5Z,QAAA,CAAA,IAAA,KAAAxnB,SAAAhP,EAAA42B,cACAwZ,EAAA5Z,OAAA,aACA4Z,EAAAK,QAAA,yBAAAL,EAAAK,QAAA,iBAGA,GAAAL,EAAAC,eAAApuC,EAAA,IAAAT,MAAA,uBACAuuC,EAAAK,EAAAnuC,EACA,CAEA,MAAAqvC,EAAA,mBAAAtB,GAAA,SAAAI,EAAA5Z,OACAv0B,EAAA,KAAAqvC,EAAAtB,EAAAhwC,GAAAA,EAAA,IAWA,OATA8wC,EAAA34B,GAAA,WAAA,KACA24B,EAAAS,QACAtvC,EAAA,IAAAT,MAAA,qBAAA,IAEAsvC,EAAA34B,GAAA,QAAAlW,GAEAiuC,EAAA3Y,GAAAA,EAAApf,GAAA,QAAAlW,GAAAkuC,KAAAW,GACAA,EAAAnqC,IAAA4wB,GAEAuZ,CACA,CAEAf,EAAA9qC,OAAA,CAAAmrC,EAAAnuC,IACA8tC,EAAAK,GAAA,CAAAltC,EAAAlD,KACA,GAAAkD,EAAA,OAAAjB,EAAAiB,GACA+B,EAAAjF,GAAA,CAAAkD,EAAAiG,KACA,GAAAjG,EAAA,OAAAjB,EAAAiB,GACA,GAAAktC,EAAAlZ,KACA,IACA/tB,EAAAsV,KAAA8G,MAAApc,EAAArF,WACA,CAAA,MAAAZ,GACA,OAAAjB,EAAAiB,EAAAlD,EAAAmJ,EACA,CAEAlH,EAAA,KAAAjC,EAAAmJ,EAAA,GACA,IAIA,CAAA,MAAA,OAAA,MAAA,QAAA,OAAA,UAAA+c,SAAAsQ,IACAuZ,EAAAvZ,GAAA,CAAA4Z,EAAAnuC,KACA,iBAAAmuC,IAAAA,EAAA,CAAA3Z,IAAA2Z,IACAL,EAAA7wC,OAAA6iB,OAAA,CAAAyU,OAAAA,EAAAoa,eAAAR,GAAAnuC,GACA,G7Es+UC,GAAEhC,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,UAAU0F,OAE5C,EAAE,CAACyB,OAAS,GAAG,sBAAsB,GAAG4yB,KAAO,GAAGC,MAAQ,GAAG54B,KAAO,GAAGwtC,YAAc,GAAG,gBAAgB,GAAGxZ,IAAM,MAAM,GAAG,CAAC,SAASp1B,EAAQf,EAAOD,IACnJ,SAAWK,IAAQ,W8EnlVnB,IAAA8wC,EAAAnwC,EAAA,iBACAowC,EAAApwC,EAAA,kBACA+3B,EAAA/3B,EAAA,SACAqwC,EAAArwC,EAAA,wBACAo1B,EAAAp1B,EAAA,OAEA+5B,EAAA/6B,EAEA+6B,EAAAK,QAAA,SAAA2U,EAAAnuC,GAEAmuC,EADA,iBAAAA,EACA3Z,EAAAlR,MAAA6qB,GAEAhX,EAAAgX,GAKA,IAAAuB,GAAA,IAAAjxC,EAAAswC,SAAAxV,SAAAoW,OAAA,aAAA,QAAA,GAEApW,EAAA4U,EAAA5U,UAAAmW,EACAV,EAAAb,EAAAE,UAAAF,EAAAa,KACAV,EAAAH,EAAAG,KACAxxB,EAAAqxB,EAAArxB,MAAA,IAGAkyB,IAAA,IAAAA,EAAAxqC,QAAA,OACAwqC,EAAA,IAAAA,EAAA,KAGAb,EAAA3Z,KAAAwa,EAAAzV,EAAA,KAAAyV,EAAA,KAAAV,EAAA,IAAAA,EAAA,IAAAxxB,EACAqxB,EAAA5Z,QAAA4Z,EAAA5Z,QAAA,OAAAoa,cACAR,EAAAK,QAAAL,EAAAK,SAAA,CAAA,EAIA,IAAAK,EAAA,IAAAU,EAAApB,GAGA,OAFAnuC,GACA6uC,EAAA34B,GAAA,WAAAlW,GACA6uC,CACA,EAEA1V,EAAA5tB,IAAA,SAAA4iC,EAAAnuC,GACA,IAAA6uC,EAAA1V,EAAAK,QAAA2U,EAAAnuC,GAEA,OADA6uC,EAAAnqC,MACAmqC,CACA,EAEA1V,EAAAoW,cAAAA,EACApW,EAAAyW,gBAAAJ,EAAAI,gBAEAzW,EAAA0W,MAAA,WAAA,EACA1W,EAAA0W,MAAAC,kBAAA,EAEA3W,EAAA4W,YAAA,IAAA5W,EAAA0W,MAEA1W,EAAA6W,aAAAP,EAEAtW,EAAA8W,QAAA,CACA,WACA,UACA,OACA,SACA,MACA,OACA,OACA,WACA,QACA,aACA,QACA,OACA,SACA,UACA,QACA,OACA,WACA,YACA,QACA,MACA,SACA,SACA,YACA,QACA,SACA,c9EslVC,GAAEjyC,KAAKW,KAAM,GAAEX,KAAKW,KAAuB,oBAAXF,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAElJ,EAAE,CAAC,gBAAgB,GAAG,iBAAiB,GAAG,uBAAuB,GAAGg2B,IAAM,IAAI0b,MAAQ,MAAM,GAAG,CAAC,SAAS9wC,EAAQf,EAAOD,IACxH,SAAWK,IAAQ,W+EnqVnB,IAAA0xC,EACA,SAAAC,IAEA,QAAAtyC,IAAAqyC,EAAA,OAAAA,EAEA,GAAA1xC,EAAA4xC,eAAA,CACAF,EAAA,IAAA1xC,EAAA4xC,eAIA,IACAF,EAAAG,KAAA,MAAA7xC,EAAA8xC,eAAA,IAAA,sBACA,CAAA,MAAAzxC,GACAqxC,EAAA,IACA,CACA,MAEAA,EAAA,KAEA,OAAAA,CACA,CAEA,SAAAK,EAAAvpC,GACA,IAAAkpC,EAAAC,IACA,IAAAD,EAAA,OAAA,EACA,IAEA,OADAA,EAAAM,aAAAxpC,EACAkpC,EAAAM,eAAAxpC,CACA,CAAA,MAAAnI,GAAA,CACA,OAAA,CACA,CAeA,SAAA4xC,EAAA3zC,GACA,MAAA,mBAAAA,CACA,CAxDAqB,EAAAuyC,MAAAD,EAAAjyC,EAAAkyC,QAAAD,EAAAjyC,EAAAmyC,gBAEAxyC,EAAAyyC,eAAAH,EAAAjyC,EAAAqyC,gBAEA1yC,EAAA2yC,gBAAAL,EAAAjyC,EAAAuyC,iBAuCA5yC,EAAA6yC,YAAA7yC,EAAAuyC,OAAAH,EAAA,eAIApyC,EAAA8yC,UAAA9yC,EAAAuyC,OAAAH,EAAA,aACApyC,EAAA+yC,uBAAA/yC,EAAAuyC,OAAAH,EAAA,2BAIApyC,EAAAgzC,iBAAAhzC,EAAAuyC,SAAAP,KAAAM,EAAAN,IAAAgB,kBAMAjB,EAAA,I/E+qVC,GAAEnyC,KAAKW,KAAM,GAAEX,KAAKW,KAAuB,oBAAXF,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAElJ,EAAE,CAAC,GAAG,GAAG,CAAC,SAASY,EAAQf,EAAOD,IAClC,SAAW0jB,EAAQrjB,EAAOqG,IAAQ,WgF5uVlC,IAAAusC,EAAAjyC,EAAA,gBACAkyC,EAAAlyC,EAAA,YACAowC,EAAApwC,EAAA,cACAwuC,EAAAxuC,EAAA,mBAEAwwC,EAAAJ,EAAAI,gBACA2B,EAAA/B,EAAAgC,YAgBA,IAAAjC,EAAAlxC,EAAAD,QAAA,SAAA+vC,GACA,IAYAsD,EAZA/yC,EAAAC,KACAivC,EAAA8D,SAAA1zC,KAAAU,GAEAA,EAAAizC,MAAAxD,EACAzvC,EAAAkzC,MAAA,GACAlzC,EAAAmzC,SAAA,CAAA,EACA1D,EAAAI,MACA7vC,EAAAgrB,UAAA,gBAAA,SAAA5kB,EAAAa,KAAAwoC,EAAAI,MAAA1sC,SAAA,WACA5E,OAAAiF,KAAAisC,EAAAK,SAAAvqB,SAAA,SAAA/S,GACAxS,EAAAgrB,UAAAxY,EAAAi9B,EAAAK,QAAAt9B,GACA,IAGA,IAAA4gC,GAAA,EACA,GAAA,kBAAA3D,EAAA4D,MAAA,mBAAA5D,IAAAkD,EAAAN,gBAEAe,GAAA,EACAL,GAAA,OACA,GAAA,qBAAAtD,EAAA4D,KAGAN,GAAA,OACA,GAAA,6BAAAtD,EAAA4D,KAEAN,GAAAJ,EAAAD,qBACA,IAAAjD,EAAA4D,MAAA,YAAA5D,EAAA4D,MAAA,gBAAA5D,EAAA4D,KAIA,MAAA,IAAAxyC,MAAA,+BAFAkyC,GAAA,CAGA,CACA/yC,EAAAszC,MA9CA,SAAAP,EAAAK,GACA,OAAAT,EAAAV,OAAAmB,EACA,QACAT,EAAAF,sBACA,0BACAE,EAAAH,SACA,YACAG,EAAAJ,aAAAQ,EACA,cAEA,MAEA,CAkCAQ,CAAAR,EAAAK,GACApzC,EAAAwzC,YAAA,KACAxzC,EAAAyzC,eAAA,KACAzzC,EAAA0zC,aAAA,KAEA1zC,EAAAwX,GAAA,UAAA,WACAxX,EAAA2zC,WACA,GACA,EAEAf,EAAA/B,EAAA3B,EAAA8D,UAEAnC,EAAA3tC,UAAA8nB,UAAA,SAAAxY,EAAAnU,GACA,IACAu1C,EAAAphC,EAAAxJ,eAIA,IAAA6qC,EAAA/tC,QAAA8tC,KALA3zC,KAQAkzC,SAAAS,GAAA,CACAphC,KAAAA,EACAnU,MAAAA,GAEA,EAEAwyC,EAAA3tC,UAAA4wC,UAAA,SAAAthC,GACA,IAAAuhC,EAAA9zC,KAAAkzC,SAAA3gC,EAAAxJ,eACA,OAAA+qC,EACAA,EAAA11C,MACA,IACA,EAEAwyC,EAAA3tC,UAAA8wC,aAAA,SAAAxhC,UACAvS,KACAkzC,SAAA3gC,EAAAxJ,cACA,EAEA6nC,EAAA3tC,UAAAywC,UAAA,WACA,IAAA3zC,EAAAC,KAEA,IAAAD,EAAAi0C,WAAA,CAEA,IAAAxE,EAAAzvC,EAAAizC,MAEA,YAAAxD,GAAA,IAAAA,EAAAvF,SACAlqC,EAAAkE,WAAAurC,EAAAvF,SAGA,IAAAgK,EAAAl0C,EAAAmzC,SACAvc,EAAA,KACA,QAAA6Y,EAAA5Z,QAAA,SAAA4Z,EAAA5Z,SACAe,EAAA,IAAAud,KAAAn0C,EAAAkzC,MAAA,CACA3qC,MAAA2rC,EAAA,iBAAA,CAAA,GAAA71C,OAAA,MAKA,IAAA+1C,EAAA,GAaA,GAZA71C,OAAAiF,KAAA0wC,GAAA3uB,SAAA,SAAA8uB,GACA,IAAA7hC,EAAA0hC,EAAAG,GAAA7hC,KACAnU,EAAA61C,EAAAG,GAAAh2C,MACA2E,MAAAC,QAAA5E,GACAA,EAAAknB,SAAA,SAAAkpB,GACA2F,EAAAvxC,KAAA,CAAA2P,EAAAi8B,GACA,IAEA2F,EAAAvxC,KAAA,CAAA2P,EAAAnU,GAEA,IAEA,UAAA2B,EAAAszC,MAAA,CACA,IAAAgB,EAAA,KACA,GAAA3B,EAAAN,gBAAA,CACA,IAAAkC,EAAA,IAAAjC,gBACAgC,EAAAC,EAAAD,OACAt0C,EAAAw0C,sBAAAD,EAEA,mBAAA9E,GAAA,IAAAA,EAAAgF,iBACAz0C,EAAAwzC,YAAAzzC,EAAAmE,YAAA,WACAlE,EAAAwY,KAAA,kBACAxY,EAAAw0C,uBACAx0C,EAAAw0C,sBAAA5D,OACA,GAAAnB,EAAAgF,gBAEA,CAEA10C,EAAAkyC,MAAAjyC,EAAAizC,MAAAnd,IAAA,CACAD,OAAA71B,EAAAizC,MAAApd,OACAia,QAAAsE,EACAxd,KAAAA,QAAAx3B,EACAi0C,KAAA,OACAqB,YAAAjF,EAAAkF,gBAAA,UAAA,cACAL,OAAAA,IACAM,MAAA,SAAA9D,GACA9wC,EAAA60C,eAAA/D,EACA9wC,EAAA80C,cAAA,GACA90C,EAAA+0C,UACA,IAAA,SAAAC,GACAh1C,EAAA80C,cAAA,GACA90C,EAAAi0C,YACAj0C,EAAAwY,KAAA,QAAAw8B,EACA,GACA,KAAA,CACA,IAAAvD,EAAAzxC,EAAAi1C,KAAA,IAAAl1C,EAAA4xC,eACA,IACAF,EAAAG,KAAA5xC,EAAAizC,MAAApd,OAAA71B,EAAAizC,MAAAnd,KAAA,EACA,CAAA,MAAAvzB,GAIA,YAHA6gB,EAAAmnB,UAAA,WACAvqC,EAAAwY,KAAA,QAAAjW,EACA,GAEA,CAGA,iBAAAkvC,IACAA,EAAAM,aAAA/xC,EAAAszC,OAEA,oBAAA7B,IACAA,EAAAkD,kBAAAlF,EAAAkF,iBAEA,SAAA30C,EAAAszC,OAAA,qBAAA7B,GACAA,EAAAiB,iBAAA,sCAEA,mBAAAjD,IACAgC,EAAAvH,QAAAuF,EAAAgF,eACAhD,EAAAyD,UAAA,WACAl1C,EAAAwY,KAAA,iBACA,GAGA47B,EAAA7uB,SAAA,SAAAwuB,GACAtC,EAAA0D,iBAAApB,EAAA,GAAAA,EAAA,GACA,IAEA/zC,EAAAo1C,UAAA,KACA3D,EAAA4D,mBAAA,WACA,OAAA5D,EAAA6D,YACA,KAAAzC,EAAA0C,QACA,KAAA1C,EAAA2C,KACAx1C,EAAAy1C,iBAGA,EAGA,4BAAAz1C,EAAAszC,QACA7B,EAAAiE,WAAA,WACA11C,EAAAy1C,gBACA,GAGAhE,EAAAkE,QAAA,WACA31C,EAAAi0C,aAEAj0C,EAAA80C,cAAA,GACA90C,EAAAwY,KAAA,QAAA,IAAA3X,MAAA,cACA,EAEA,IACA4wC,EAAAmE,KAAAhf,EACA,CAAA,MAAAr0B,GAIA,YAHA6gB,EAAAmnB,UAAA,WACAvqC,EAAAwY,KAAA,QAAAjW,EACA,GAEA,CACA,CA7HA,CA8HA,EAgBAsuC,EAAA3tC,UAAAuyC,eAAA,WACA,IAAAz1C,EAAAC,KAEAD,EAAA80C,cAAA,GAZA,SAAArD,GACA,IACA,IAAAoE,EAAApE,EAAAoE,OACA,OAAA,OAAAA,GAAA,IAAAA,CACA,CAAA,MAAAz1C,GACA,OAAA,CACA,CACA,CAOA01C,CAAA91C,EAAAi1C,QAAAj1C,EAAAi0C,aAGAj0C,EAAAo1C,WACAp1C,EAAA+0C,WAEA/0C,EAAAo1C,UAAAK,eAAAz1C,EAAA80C,aAAA17B,KAAApZ,IACA,EAEA6wC,EAAA3tC,UAAA6xC,SAAA,WACA,IAAA/0C,EAAAC,KAEAD,EAAAi0C,aAGAj0C,EAAAo1C,UAAA,IAAAlE,EAAAlxC,EAAAi1C,KAAAj1C,EAAA60C,eAAA70C,EAAAszC,MAAAtzC,EAAA80C,aAAA17B,KAAApZ,IACAA,EAAAo1C,UAAA59B,GAAA,SAAA,SAAAjV,GACAvC,EAAAwY,KAAA,QAAAjW,EACA,IAEAvC,EAAAwY,KAAA,WAAAxY,EAAAo1C,WACA,EAEAvE,EAAA3tC,UAAA6yC,OAAA,SAAA7c,EAAA/xB,EAAA7F,GACArB,KAEAizC,MAAArwC,KAAAq2B,GACA53B,GACA,EAEAuvC,EAAA3tC,UAAA4xC,aAAA,SAAA3yC,GACA,IAAAnC,EAAAC,KAEAF,EAAA4pC,aAAA3pC,EAAA0zC,cACA1zC,EAAA0zC,aAAA,KAEAvxC,GACApC,EAAA4pC,aAAA3pC,EAAAwzC,aACAxzC,EAAAwzC,YAAA,MACAxzC,EAAAyzC,iBACAzzC,EAAA0zC,aAAA3zC,EAAAmE,YAAA,WACAlE,EAAAwY,KAAA,UACA,GAAAxY,EAAAyzC,gBAEA,EAEA5C,EAAA3tC,UAAA0tC,MAAAC,EAAA3tC,UAAA8yC,QAAA,SAAAzzC,GACA,IAAAvC,EAAAC,KACAD,EAAAi0C,YAAA,EACAj0C,EAAA80C,cAAA,GACA90C,EAAAo1C,YACAp1C,EAAAo1C,UAAAnB,YAAA,GACAj0C,EAAAi1C,KACAj1C,EAAAi1C,KAAArE,QACA5wC,EAAAw0C,uBACAx0C,EAAAw0C,sBAAA5D,QAEAruC,GACAvC,EAAAwY,KAAA,QAAAjW,EACA,EAEAsuC,EAAA3tC,UAAA8C,IAAA,SAAAwC,EAAArB,EAAA7F,GAEA,mBAAAkH,IACAlH,EAAAkH,EACAA,OAAApJ,GAGA8vC,EAAA8D,SAAA9vC,UAAA8C,IAAA1G,KANAW,KAMAuI,EAAArB,EAAA7F,EACA,EAEAuvC,EAAA3tC,UAAAgB,WAAA,SAAAgmC,EAAA5oC,GACA,IAAAtB,EAAAC,KAEAqB,GACAtB,EAAA8B,KAAA,UAAAR,GAEAtB,EAAAyzC,eAAAvJ,EACAlqC,EAAA80C,cAAA,EACA,EAEAjE,EAAA3tC,UAAA+yC,aAAA,WAAA,EACApF,EAAA3tC,UAAAgzC,WAAA,WAAA,EACArF,EAAA3tC,UAAAizC,mBAAA,WAAA,EAGA,IAAAtC,EAAA,CACA,iBACA,kBACA,iCACA,gCACA,aACA,iBACA,SACA,UACA,OACA,MACA,SACA,OACA,aACA,SACA,UACA,KACA,UACA,oBACA,UACA,MhFgvVC,GAAEv0C,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAA8B,oBAAXX,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAAEY,EAAQ,UAAU0F,OAE1L,EAAE,CAAC,eAAe,GAAG,aAAa,GAAG+d,SAAW,GAAGtc,OAAS,GAAG+qC,SAAW,GAAG,kBAAkB,KAAK,GAAG,CAAC,SAASlyC,EAAQf,EAAOD,IAChI,SAAW0jB,EAAQrjB,EAAOqG,IAAQ,WiFjlWlC,IAAAusC,EAAAjyC,EAAA,gBACAkyC,EAAAlyC,EAAA,YACAwuC,EAAAxuC,EAAA,mBAEAmyC,EAAAnzC,EAAAozC,YAAA,CACAsD,OAAA,EACAC,OAAA,EACAC,iBAAA,EACAf,QAAA,EACAC,KAAA,GAGAtE,EAAAxxC,EAAAwxC,gBAAA,SAAAO,EAAAX,EAAAuC,EAAAkD,GACA,IAAAv2C,EAAAC,KAiBA,GAhBAivC,EAAAsH,SAAAl3C,KAAAU,GAEAA,EAAAszC,MAAAD,EACArzC,EAAA8vC,QAAA,CAAA,EACA9vC,EAAAy2C,WAAA,GACAz2C,EAAA02C,SAAA,CAAA,EACA12C,EAAA22C,YAAA,GAGA32C,EAAAwX,GAAA,OAAA,WAEA4L,EAAAmnB,UAAA,WACAvqC,EAAAwY,KAAA,QACA,GACA,IAEA,UAAA66B,EAAA,CAYA,GAXArzC,EAAA60C,eAAA/D,EAEA9wC,EAAA81B,IAAAgb,EAAAhb,IACA91B,EAAAi2B,WAAA6a,EAAA+E,OACA71C,EAAA42C,cAAA9F,EAAA+F,WAEA/F,EAAAhB,QAAAvqB,SAAA,SAAAwuB,EAAA31C,GACA4B,EAAA8vC,QAAA1xC,EAAA4K,eAAA+qC,EACA/zC,EAAAy2C,WAAA5zC,KAAAzE,EAAA21C,EACA,IAEApB,EAAAR,eAAA,CACA,IAAAxzC,EAAA,IAAAyzC,eAAA,CACA9qC,MAAA,SAAA4xB,GAEA,OADAqd,GAAA,GACA,IAAAx/B,SAAA,SAAAC,EAAAC,GACAjX,EAAAi0C,WACAh9B,IACAjX,EAAA6C,KAAAuD,EAAAa,KAAAiyB,IACAliB,IAEAhX,EAAA82C,aAAA9/B,CAEA,GACA,EACA+/B,MAAA,WACAR,GAAA,GACAv2C,EAAAi0C,YACAj0C,EAAA6C,KAAA,KACA,EACA+tC,MAAA,SAAAruC,GACAg0C,GAAA,GACAv2C,EAAAi0C,YACAj0C,EAAAwY,KAAA,QAAAjW,EACA,IAGA,IAMA,YALAuuC,EAAAla,KAAAogB,OAAAr4C,GAAAs4C,OAAA,SAAA10C,GACAg0C,GAAA,GACAv2C,EAAAi0C,YACAj0C,EAAAwY,KAAA,QAAAjW,EACA,GAEA,CAAA,MAAAnC,GAAA,CACA,CAEA,IAAA82C,EAAApG,EAAAla,KAAAugB,YACA,SAAAjtC,IACAgtC,EAAAhtC,OAAA0qC,MAAA,SAAAxI,GACApsC,EAAAi0C,aAEAsC,EAAAnK,EAAAjqC,MACAiqC,EAAAjqC,KACAnC,EAAA6C,KAAA,OAGA7C,EAAA6C,KAAAuD,EAAAa,KAAAmlC,EAAA/tC,QACA6L,KACA,IAAA+sC,OAAA,SAAA10C,GACAg0C,GAAA,GACAv2C,EAAAi0C,YACAj0C,EAAAwY,KAAA,QAAAjW,EACA,GACA,CACA2H,GACA,KAAA,CA2BA,GA1BAlK,EAAAi1C,KAAAxD,EACAzxC,EAAAo3C,KAAA,EAEAp3C,EAAA81B,IAAA2b,EAAA4F,YACAr3C,EAAAi2B,WAAAwb,EAAAoE,OACA71C,EAAA42C,cAAAnF,EAAAoF,WACApF,EAAA6F,wBAAAnlC,MAAA,SACAoT,SAAA,SAAAwuB,GACA,IAAAwD,EAAAxD,EAAAnmB,MAAA,oBACA,GAAA2pB,EAAA,CACA,IAAAn5C,EAAAm5C,EAAA,GAAAvuC,cACA,eAAA5K,QACAgB,IAAAY,EAAA8vC,QAAA1xC,KACA4B,EAAA8vC,QAAA1xC,GAAA,IAEA4B,EAAA8vC,QAAA1xC,GAAAyE,KAAA00C,EAAA,UACAn4C,IAAAY,EAAA8vC,QAAA1xC,GACA4B,EAAA8vC,QAAA1xC,IAAA,KAAAm5C,EAAA,GAEAv3C,EAAA8vC,QAAA1xC,GAAAm5C,EAAA,GAEAv3C,EAAAy2C,WAAA5zC,KAAA00C,EAAA,GAAAA,EAAA,GACA,CACA,IAEAv3C,EAAAw3C,SAAA,kBACA7E,EAAAD,iBAAA,CACA,IAAA+E,EAAAz3C,EAAAy2C,WAAA,aACA,GAAAgB,EAAA,CACA,IAAAC,EAAAD,EAAA7pB,MAAA,2BACA8pB,IACA13C,EAAAw3C,SAAAE,EAAA,GAAA1uC,cAEA,CACAhJ,EAAAw3C,WACAx3C,EAAAw3C,SAAA,QACA,CACA,CACA,EAEA5E,EAAA1B,EAAAhC,EAAAsH,UAEAtF,EAAAhuC,UAAAy0C,MAAA,WACA,IAEA3gC,EAFA/W,KAEA62C,aACA9/B,IAHA/W,KAIA62C,aAAA,KACA9/B,IAEA,EAEAk6B,EAAAhuC,UAAAuyC,eAAA,SAAAc,GACA,IAAAv2C,EAAAC,KAEAwxC,EAAAzxC,EAAAi1C,KAEAnE,EAAA,KACA,OAAA9wC,EAAAszC,OACA,IAAA,OAEA,IADAxC,EAAAW,EAAAmG,cACA52C,OAAAhB,EAAAo3C,KAAA,CACA,IAAAS,EAAA/G,EAAAjmC,OAAA7K,EAAAo3C,MACA,GAAA,mBAAAp3C,EAAAw3C,SAAA,CAEA,IADA,IAAA3vC,EAAAzB,EAAAI,MAAAqxC,EAAA72C,QACAR,EAAA,EAAAA,EAAAq3C,EAAA72C,OAAAR,IACAqH,EAAArH,GAAA,IAAAq3C,EAAA1yC,WAAA3E,GAEAR,EAAA6C,KAAAgF,EACA,MACA7H,EAAA6C,KAAAg1C,EAAA73C,EAAAw3C,UAEAx3C,EAAAo3C,KAAAtG,EAAA9vC,MACA,CACA,MACA,IAAA,cACA,GAAAywC,EAAA6D,aAAAzC,EAAA2C,OAAA/D,EAAAX,SACA,MACAA,EAAAW,EAAAX,SACA9wC,EAAA6C,KAAAuD,EAAAa,KAAA,IAAApB,WAAAirC,KACA,MACA,IAAA,0BAEA,GADAA,EAAAW,EAAAX,SACAW,EAAA6D,aAAAzC,EAAA0C,UAAAzE,EACA,MACA9wC,EAAA6C,KAAAuD,EAAAa,KAAA,IAAApB,WAAAirC,KACA,MACA,IAAA,YAEA,GADAA,EAAAW,EAAAX,SACAW,EAAA6D,aAAAzC,EAAA0C,QACA,MACA,IAAA2B,EAAA,IAAAn3C,EAAA+3C,eACAZ,EAAAxB,WAAA,WACAwB,EAAA9K,OAAA7nC,WAAAvE,EAAAo3C,OACAp3C,EAAA6C,KAAAuD,EAAAa,KAAA,IAAApB,WAAAqxC,EAAA9K,OAAA7kC,MAAAvH,EAAAo3C,SACAp3C,EAAAo3C,KAAAF,EAAA9K,OAAA7nC,WAEA,EACA2yC,EAAAa,OAAA,WACAxB,GAAA,GACAv2C,EAAA6C,KAAA,KACA,EAEAq0C,EAAAc,kBAAAlH,GAKA9wC,EAAAi1C,KAAAK,aAAAzC,EAAA2C,MAAA,cAAAx1C,EAAAszC,QACAiD,GAAA,GACAv2C,EAAA6C,KAAA,MAEA,CjFolWC,GAAEvD,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAA8B,oBAAXX,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAAEY,EAAQ,UAAU0F,OAE1L,EAAE,CAAC,eAAe,GAAG+d,SAAW,GAAGtc,OAAS,GAAG+qC,SAAW,GAAG,kBAAkB,KAAK,GAAG,CAAC,SAASlyC,EAAQf,EAAOD,GkFpyWhH,IAAAu4C,EAAA,CAAA,EAEA,SAAAC,EAAAp3C,EAAAqZ,EAAAg+B,GACAA,IACAA,EAAAt3C,OAWA,IAAAu3C,EAEA,SAAAC,GAnBA,IAAAC,EAAAC,EAsBA,SAAAH,EAAAI,EAAAC,EAAAC,GACA,OAAAL,EAAA/4C,KAAAW,KAdA,SAAAu4C,EAAAC,EAAAC,GACA,MAAA,iBAAAv+B,EACAA,EAEAA,EAAAq+B,EAAAC,EAAAC,EAEA,CAQAC,CAAAH,EAAAC,EAAAC,KAAAz4C,IACA,CAEA,OA1BAs4C,EAoBAF,GApBAC,EAoBAF,GApBAl1C,UAAA3E,OAAA+Z,OAAAigC,EAAAr1C,WAAAo1C,EAAAp1C,UAAAqP,YAAA+lC,EAAAA,EAAAxxC,UAAAyxC,EA0BAH,CACA,CARA,CAQAD,GAEAC,EAAAl1C,UAAAsP,KAAA2lC,EAAA3lC,KACA4lC,EAAAl1C,UAAApC,KAAAA,EACAm3C,EAAAn3C,GAAAs3C,CACA,CAGA,SAAAQ,EAAAC,EAAAC,GACA,GAAA91C,MAAAC,QAAA41C,GAAA,CACA,IAAAt1C,EAAAs1C,EAAA73C,OAKA,OAJA63C,EAAAA,EAAA1M,KAAA,SAAA3rC,GACA,OAAA1B,OAAA0B,EACA,IAEA+C,EAAA,EACA,UAAAe,OAAAw0C,EAAA,KAAAx0C,OAAAu0C,EAAAtxC,MAAA,EAAAhE,EAAA,GAAAqC,KAAA,MAAA,SAAAizC,EAAAt1C,EAAA,GACA,IAAAA,EACA,UAAAe,OAAAw0C,EAAA,KAAAx0C,OAAAu0C,EAAA,GAAA,QAAAv0C,OAAAu0C,EAAA,IAEA,MAAAv0C,OAAAw0C,EAAA,KAAAx0C,OAAAu0C,EAAA,GAEA,CACA,MAAA,MAAAv0C,OAAAw0C,EAAA,KAAAx0C,OAAAxF,OAAA+5C,GAEA,CA6BAX,EAAA,yBAAA,SAAA1lC,EAAAnU,GACA,MAAA,cAAAA,EAAA,4BAAAmU,EAAA,GACA,GAAAjT,WACA24C,EAAA,wBAAA,SAAA1lC,EAAAqmC,EAAAxxC,GAEA,IAAA0xC,EA/BA9H,EAAA1jC,EAwCAyrC,EAEA,GATA,iBAAAH,IAjCA5H,EAiCA,OAAA4H,EAhCAhuC,QAAA0C,GAAAA,EAAA,EAAA,GAAAA,EAAA0jC,EAAAjwC,UAAAiwC,IAiCA8H,EAAA,cACAF,EAAAA,EAAA/qC,QAAA,QAAA,KAEAirC,EAAA,UAhCA,SAAA9tC,EAAAgmC,EAAAgI,GAKA,YAJA75C,IAAA65C,GAAAA,EAAAhuC,EAAAjK,UACAi4C,EAAAhuC,EAAAjK,QAGAiK,EAAA4Y,UAAAo1B,EAAAhI,EAAAjwC,OAAAi4C,KAAAhI,CACA,CA+BAvkB,CAAAla,EAAA,aAEAwmC,EAAA,OAAA10C,OAAAkO,EAAA,KAAAlO,OAAAy0C,EAAA,KAAAz0C,OAAAs0C,EAAAC,EAAA,aACA,CACA,IAAAtwC,EAhCA,SAAA0C,EAAAgmC,EAAAlrC,GAKA,MAJA,iBAAAA,IACAA,EAAA,KAGAA,EAAAkrC,EAAAjwC,OAAAiK,EAAAjK,UAGA,IAAAiK,EAAAnF,QAAAmrC,EAAAlrC,EAEA,CAsBAsI,CAAAmE,EAAA,KAAA,WAAA,WACAwmC,EAAA,QAAA10C,OAAAkO,EAAA,MAAAlO,OAAAiE,EAAA,KAAAjE,OAAAy0C,EAAA,KAAAz0C,OAAAs0C,EAAAC,EAAA,QACA,CAGA,OADAG,GAAA,mBAAA10C,cAAA+C,EAEA,GAAA9H,WACA24C,EAAA,4BAAA,2BACAA,EAAA,8BAAA,SAAA1lC,GACA,MAAA,OAAAA,EAAA,4BACA,IACA0lC,EAAA,6BAAA,mBACAA,EAAA,wBAAA,SAAA1lC,GACA,MAAA,eAAAA,EAAA,+BACA,IACA0lC,EAAA,wBAAA,kCACAA,EAAA,yBAAA,6BACAA,EAAA,6BAAA,mBACAA,EAAA,yBAAA,sCAAA34C,WACA24C,EAAA,wBAAA,SAAAt5C,GACA,MAAA,qBAAAA,CACA,GAAAW,WACA24C,EAAA,qCAAA,oCACAv4C,EAAAD,QAAAu4C,MAAAA,ClF2yWA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASv3C,EAAQf,EAAOD,IAClC,SAAW0jB,IAAS,WmF74WpB,IAAAyrB,EAAAtwC,OAAAiF,MAAA,SAAArF,GACA,IAAAqF,EAAA,GACA,IAAA,IAAApF,KAAAD,EAAAqF,EAAAX,KAAAzE,GACA,OAAAoF,CACA,EAGA7D,EAAAD,QAAAw5C,EACA,IAAA1C,EAAA91C,EAAA,sBACAsyC,EAAAtyC,EAAA,sBACAA,EAAA,WAAAA,CAAAw4C,EAAA1C,GAIA,IADA,IAAAhzC,EAAAqrC,EAAAmE,EAAA9vC,WACAurC,EAAA,EAAAA,EAAAjrC,EAAAxC,OAAAytC,IAAA,CACA,IAAA5Y,EAAAryB,EAAAirC,GACAyK,EAAAh2C,UAAA2yB,KAAAqjB,EAAAh2C,UAAA2yB,GAAAmd,EAAA9vC,UAAA2yB,GACA,CAEA,SAAAqjB,EAAAt2B,GACA,KAAA3iB,gBAAAi5C,GAAA,OAAA,IAAAA,EAAAt2B,GACA4zB,EAAAl3C,KAAAW,KAAA2iB,GACAowB,EAAA1zC,KAAAW,KAAA2iB,GACA3iB,KAAAk5C,eAAA,EACAv2B,KACA,IAAAA,EAAAw2B,WAAAn5C,KAAAm5C,UAAA,IACA,IAAAx2B,EAAAjkB,WAAAsB,KAAAtB,UAAA,IACA,IAAAikB,EAAAu2B,gBACAl5C,KAAAk5C,eAAA,EACAl5C,KAAA6B,KAAA,MAAAu3C,IAGA,CA8BA,SAAAA,IAEAp5C,KAAAq5C,eAAAC,OAIAn2B,EAAAmnB,SAAAiP,EAAAv5C,KACA,CACA,SAAAu5C,EAAAx5C,GACAA,EAAAgG,KACA,CAvCAzH,OAAAC,eAAA06C,EAAAh2C,UAAA,wBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAAq5C,eAAAG,aACA,IAEAl7C,OAAAC,eAAA06C,EAAAh2C,UAAA,iBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAAq5C,gBAAAr5C,KAAAq5C,eAAAI,WACA,IAEAn7C,OAAAC,eAAA06C,EAAAh2C,UAAA,iBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAAq5C,eAAAt4C,MACA,IAeAzC,OAAAC,eAAA06C,EAAAh2C,UAAA,YAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,YAAAzN,IAAAa,KAAA05C,qBAAAv6C,IAAAa,KAAAq5C,iBAGAr5C,KAAA05C,eAAAC,WAAA35C,KAAAq5C,eAAAM,UACA,EACA7nC,IAAA,SAAA1T,QAGAe,IAAAa,KAAA05C,qBAAAv6C,IAAAa,KAAAq5C,iBAMAr5C,KAAA05C,eAAAC,UAAAv7C,EACA4B,KAAAq5C,eAAAM,UAAAv7C,EACA,GnF66WC,GAAEiB,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAElC,EAAE,CAAC,qBAAqB,GAAG,qBAAqB,GAAGyjB,SAAW,GAAGyuB,SAAW,KAAK,GAAG,CAAC,SAASlyC,EAAQf,EAAOD,GoFhhX7GC,EAAAD,QAAAm6C,EACA,IAAAC,EAAAp5C,EAAA,uBAEA,SAAAm5C,EAAAj3B,GACA,KAAA3iB,gBAAA45C,GAAA,OAAA,IAAAA,EAAAj3B,GACAk3B,EAAAx6C,KAAAW,KAAA2iB,EACA,CAJAliB,EAAA,WAAAA,CAAAm5C,EAAAC,GAKAD,EAAA32C,UAAA62C,WAAA,SAAA7gB,EAAA/xB,EAAA7F,GACAA,EAAA,KAAA43B,EACA,CpF6iXA,EAAE,CAAC,sBAAsB,GAAG0Z,SAAW,KAAK,GAAG,CAAC,SAASlyC,EAAQf,EAAOD,IACxE,SAAW0jB,EAAQrjB,IAAQ,WqFxjX3B,IAAAm5C,EAHAv5C,EAAAD,QAAA82C,EAMAA,EAAAwD,cAAAA,EAGAt5C,EAAA,UAAAkW,aAAA,IACAqjC,EAAA,SAAAnjC,EAAAvO,GACA,OAAAuO,EAAAuD,UAAA9R,GAAAvH,MACA,EAIAk5C,EAAAx5C,EAAA,6BAGA0F,EAAA1F,EAAA,UAAA0F,OACA+zC,QAAA,IAAAp6C,EAAAA,EAAA,oBAAAD,OAAAA,OAAA,oBAAAE,KAAAA,KAAA,CAAA,GAAA6F,YAAA,WAAA,EASA,IACAoW,EADAm+B,EAAA15C,EAAA,QAGAub,EADAm+B,GAAAA,EAAAC,SACAD,EAAAC,SAAA,UAEA,WAAA,EAIA,IAWAC,EACAC,EACAtzC,EAbAuzC,EAAA95C,EAAA,kCACA+5C,EAAA/5C,EAAA,8BAEAg6C,EADAh6C,EAAA,4BACAg6C,iBACAC,EAAAj6C,EAAA,aAAAu3C,MACA2C,EAAAD,EAAAC,qBACAC,EAAAF,EAAAE,0BACAC,EAAAH,EAAAG,2BACAC,EAAAJ,EAAAI,mCAMAr6C,EAAA,WAAAA,CAAA81C,EAAA0D,GACA,IAAAc,EAAAP,EAAAO,eACAC,EAAA,CAAA,QAAA,QAAA,UAAA,QAAA,UAYA,SAAAjB,EAAAp3B,EAAAssB,EAAAgM,GACAhC,EAAAA,GAAAx4C,EAAA,oBACAkiB,EAAAA,GAAA,CAAA,EAOA,kBAAAs4B,IAAAA,EAAAhM,aAAAgK,GAIAj5C,KAAAk7C,aAAAv4B,EAAAu4B,WACAD,IAAAj7C,KAAAk7C,WAAAl7C,KAAAk7C,cAAAv4B,EAAAw4B,oBAIAn7C,KAAAw5C,cAAAiB,EAAAz6C,KAAA2iB,EAAA,wBAAAs4B,GAKAj7C,KAAA4H,OAAA,IAAA2yC,EACAv6C,KAAAe,OAAA,EACAf,KAAAo7C,MAAA,KACAp7C,KAAAq7C,WAAA,EACAr7C,KAAAs7C,QAAA,KACAt7C,KAAAs5C,OAAA,EACAt5C,KAAAu7C,YAAA,EACAv7C,KAAAw7C,SAAA,EAMAx7C,KAAA8C,MAAA,EAIA9C,KAAAy7C,cAAA,EACAz7C,KAAA07C,iBAAA,EACA17C,KAAA27C,mBAAA,EACA37C,KAAA47C,iBAAA,EACA57C,KAAA67C,QAAA,EAGA77C,KAAA87C,WAAA,IAAAn5B,EAAAm5B,UAGA97C,KAAA+7C,cAAAp5B,EAAAo5B,YAGA/7C,KAAA25C,WAAA,EAKA35C,KAAAg8C,gBAAAr5B,EAAAq5B,iBAAA,OAGAh8C,KAAAi8C,WAAA,EAGAj8C,KAAAk8C,aAAA,EACAl8C,KAAAm8C,QAAA,KACAn8C,KAAAkH,SAAA,KACAyb,EAAAzb,WACAmzC,IAAAA,EAAA55C,EAAA,mBAAA45C,eACAr6C,KAAAm8C,QAAA,IAAA9B,EAAA13B,EAAAzb,UACAlH,KAAAkH,SAAAyb,EAAAzb,SAEA,CACA,SAAAqvC,EAAA5zB,GAEA,GADAs2B,EAAAA,GAAAx4C,EAAA,sBACAT,gBAAAu2C,GAAA,OAAA,IAAAA,EAAA5zB,GAIA,IAAAs4B,EAAAj7C,gBAAAi5C,EACAj5C,KAAA05C,eAAA,IAAAK,EAAAp3B,EAAA3iB,KAAAi7C,GAGAj7C,KAAAm5C,UAAA,EACAx2B,IACA,mBAAAA,EAAA1Y,OAAAjK,KAAA03C,MAAA/0B,EAAA1Y,MACA,mBAAA0Y,EAAAozB,UAAA/1C,KAAAo8C,SAAAz5B,EAAAozB,UAEAkE,EAAA56C,KAAAW,KACA,CAwDA,SAAAq8C,EAAApN,EAAAhW,EAAA/xB,EAAAo1C,EAAAC,GACAvgC,EAAA,mBAAAid,GACA,IAKAhf,EALAhB,EAAAg2B,EAAAyK,eACA,GAAA,OAAAzgB,EACAhgB,EAAAuiC,SAAA,EAuNA,SAAAvM,EAAAh2B,GAEA,GADA+C,EAAA,cACA/C,EAAAqgC,MAAA,OACA,GAAArgC,EAAAkjC,QAAA,CACA,IAAAljB,EAAAhgB,EAAAkjC,QAAAp2C,MACAkzB,GAAAA,EAAAl4B,SACAkY,EAAArR,OAAAhF,KAAAq2B,GACAhgB,EAAAlY,QAAAkY,EAAAiiC,WAAA,EAAAjiB,EAAAl4B,OAEA,CACAkY,EAAAqgC,OAAA,EACArgC,EAAAnW,KAIA05C,EAAAvN,IAGAh2B,EAAAwiC,cAAA,EACAxiC,EAAAyiC,kBACAziC,EAAAyiC,iBAAA,EACAe,EAAAxN,IAGA,CA9OAyN,CAAAzN,EAAAh2B,QAIA,GADAsjC,IAAAtiC,EA6CA,SAAAhB,EAAAggB,GACA,IAAAhf,EAjPA/b,EAkPA+6B,EAjPA9yB,EAAA+B,SAAAhK,IAAAA,aAAAg8C,GAiPA,iBAAAjhB,QAAA95B,IAAA85B,GAAAhgB,EAAAiiC,aACAjhC,EAAA,IAAA0gC,EAAA,QAAA,CAAA,SAAA,SAAA,cAAA1hB,IAnPA,IAAA/6B,EAqPA,OAAA+b,CACA,CAnDA0iC,CAAA1jC,EAAAggB,IACAhf,EACA8gC,EAAA9L,EAAAh1B,QACA,GAAAhB,EAAAiiC,YAAAjiB,GAAAA,EAAAl4B,OAAA,EAIA,GAHA,iBAAAk4B,GAAAhgB,EAAAiiC,YAAA58C,OAAAub,eAAAof,KAAA9yB,EAAAlD,YACAg2B,EA3MA,SAAAA,GACA,OAAA9yB,EAAAa,KAAAiyB,EACA,CAyMA2jB,CAAA3jB,IAEAqjB,EACArjC,EAAAsiC,WAAAR,EAAA9L,EAAA,IAAA6L,GAAA+B,EAAA5N,EAAAh2B,EAAAggB,GAAA,QACA,GAAAhgB,EAAAqgC,MACAyB,EAAA9L,EAAA,IAAA2L,OACA,IAAA3hC,EAAA0gC,UACA,OAAA,EAEA1gC,EAAAuiC,SAAA,EACAviC,EAAAkjC,UAAAj1C,GACA+xB,EAAAhgB,EAAAkjC,QAAA90C,MAAA4xB,GACAhgB,EAAAiiC,YAAA,IAAAjiB,EAAAl4B,OAAA87C,EAAA5N,EAAAh2B,EAAAggB,GAAA,GAAA6jB,EAAA7N,EAAAh2B,IAEA4jC,EAAA5N,EAAAh2B,EAAAggB,GAAA,EAEA,MACAqjB,IACArjC,EAAAuiC,SAAA,EACAsB,EAAA7N,EAAAh2B,IAOA,OAAAA,EAAAqgC,QAAArgC,EAAAlY,OAAAkY,EAAAugC,eAAA,IAAAvgC,EAAAlY,OACA,CACA,SAAA87C,EAAA5N,EAAAh2B,EAAAggB,EAAAqjB,GACArjC,EAAAqiC,SAAA,IAAAriC,EAAAlY,SAAAkY,EAAAnW,MACAmW,EAAAgjC,WAAA,EACAhN,EAAA12B,KAAA,OAAA0gB,KAGAhgB,EAAAlY,QAAAkY,EAAAiiC,WAAA,EAAAjiB,EAAAl4B,OACAu7C,EAAArjC,EAAArR,OAAA4Q,QAAAygB,GAAAhgB,EAAArR,OAAAhF,KAAAq2B,GACAhgB,EAAAwiC,cAAAe,EAAAvN,IAEA6N,EAAA7N,EAAAh2B,EACA,CA3GA3a,OAAAC,eAAAg4C,EAAAtzC,UAAA,YAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,YAAAzN,IAAAa,KAAA05C,gBAGA15C,KAAA05C,eAAAC,SACA,EACA7nC,IAAA,SAAA1T,GAGA4B,KAAA05C,iBAMA15C,KAAA05C,eAAAC,UAAAv7C,EACA,IAEAm4C,EAAAtzC,UAAA8yC,QAAAyE,EAAAzE,QACAQ,EAAAtzC,UAAA85C,WAAAvC,EAAAwC,UACAzG,EAAAtzC,UAAAm5C,SAAA,SAAA95C,EAAAjB,GACAA,EAAAiB,EACA,EAMAi0C,EAAAtzC,UAAAL,KAAA,SAAAq2B,EAAA/xB,GACA,IACAq1C,EADAtjC,EAAAjZ,KAAA05C,eAcA,OAZAzgC,EAAAiiC,WAUAqB,GAAA,EATA,iBAAAtjB,KACA/xB,EAAAA,GAAA+R,EAAA+iC,mBACA/iC,EAAA/R,WACA+xB,EAAA9yB,EAAAa,KAAAiyB,EAAA/xB,GACAA,EAAA,IAEAq1C,GAAA,GAKAF,EAAAr8C,KAAAi5B,EAAA/xB,GAAA,EAAAq1C,EACA,EAGAhG,EAAAtzC,UAAAuV,QAAA,SAAAygB,GACA,OAAAojB,EAAAr8C,KAAAi5B,EAAA,MAAA,GAAA,EACA,EA6DAsd,EAAAtzC,UAAAg6C,SAAA,WACA,OAAA,IAAAj9C,KAAA05C,eAAA4B,OACA,EAGA/E,EAAAtzC,UAAAi6C,YAAA,SAAAC,GACA9C,IAAAA,EAAA55C,EAAA,mBAAA45C,eACA,IAAA8B,EAAA,IAAA9B,EAAA8C,GACAn9C,KAAA05C,eAAAyC,QAAAA,EAEAn8C,KAAA05C,eAAAxyC,SAAAlH,KAAA05C,eAAAyC,QAAAj1C,SAKA,IAFA,IAAApG,EAAAd,KAAA05C,eAAA9xC,OAAAsN,KACAkoC,EAAA,GACA,OAAAt8C,GACAs8C,GAAAjB,EAAA90C,MAAAvG,EAAAyH,MACAzH,EAAAA,EAAAc,KAKA,OAHA5B,KAAA05C,eAAA9xC,OAAAy1C,QACA,KAAAD,GAAAp9C,KAAA05C,eAAA9xC,OAAAhF,KAAAw6C,GACAp9C,KAAA05C,eAAA34C,OAAAq8C,EAAAr8C,OACAf,IACA,EAGA,IAAAs9C,EAAA,WAqBA,SAAAC,EAAAn9C,EAAA6Y,GACA,OAAA7Y,GAAA,GAAA,IAAA6Y,EAAAlY,QAAAkY,EAAAqgC,MAAA,EACArgC,EAAAiiC,WAAA,EACA96C,GAAAA,EAEA6Y,EAAAqiC,SAAAriC,EAAAlY,OAAAkY,EAAArR,OAAAsN,KAAA3M,KAAAxH,OAAAkY,EAAAlY,QAGAX,EAAA6Y,EAAAugC,gBAAAvgC,EAAAugC,cA5BA,SAAAp5C,GAeA,OAdAA,GAAAk9C,EAEAl9C,EAAAk9C,GAIAl9C,IACAA,GAAAA,IAAA,EACAA,GAAAA,IAAA,EACAA,GAAAA,IAAA,EACAA,GAAAA,IAAA,EACAA,GAAAA,IAAA,GACAA,KAEAA,CACA,CAYAo9C,CAAAp9C,IACAA,GAAA6Y,EAAAlY,OAAAX,EAEA6Y,EAAAqgC,MAIArgC,EAAAlY,QAHAkY,EAAAwiC,cAAA,EACA,GAGA,CA6HA,SAAAe,EAAAvN,GACA,IAAAh2B,EAAAg2B,EAAAyK,eACA19B,EAAA,eAAA/C,EAAAwiC,aAAAxiC,EAAAyiC,iBACAziC,EAAAwiC,cAAA,EACAxiC,EAAAyiC,kBACA1/B,EAAA,eAAA/C,EAAAqiC,SACAriC,EAAAyiC,iBAAA,EACAv4B,EAAAmnB,SAAAmS,EAAAxN,GAEA,CACA,SAAAwN,EAAAxN,GACA,IAAAh2B,EAAAg2B,EAAAyK,eACA19B,EAAA,gBAAA/C,EAAA0gC,UAAA1gC,EAAAlY,OAAAkY,EAAAqgC,OACArgC,EAAA0gC,YAAA1gC,EAAAlY,SAAAkY,EAAAqgC,QACArK,EAAA12B,KAAA,YACAU,EAAAyiC,iBAAA,GASAziC,EAAAwiC,cAAAxiC,EAAAqiC,UAAAriC,EAAAqgC,OAAArgC,EAAAlY,QAAAkY,EAAAugC,cACAiE,EAAAxO,EACA,CAQA,SAAA6N,EAAA7N,EAAAh2B,GACAA,EAAAijC,cACAjjC,EAAAijC,aAAA,EACA/4B,EAAAmnB,SAAAoT,EAAAzO,EAAAh2B,GAEA,CACA,SAAAykC,EAAAzO,EAAAh2B,GAwBA,MAAAA,EAAAuiC,UAAAviC,EAAAqgC,QAAArgC,EAAAlY,OAAAkY,EAAAugC,eAAAvgC,EAAAqiC,SAAA,IAAAriC,EAAAlY,SAAA,CACA,IAAAuC,EAAA2V,EAAAlY,OAGA,GAFAib,EAAA,wBACAizB,EAAAhlC,KAAA,GACA3G,IAAA2V,EAAAlY,OAEA,KACA,CACAkY,EAAAijC,aAAA,CACA,CAgPA,SAAAyB,EAAA59C,GACA,IAAAkZ,EAAAlZ,EAAA25C,eACAzgC,EAAA0iC,kBAAA57C,EAAA0Z,cAAA,YAAA,EACAR,EAAA2iC,kBAAA3iC,EAAA4iC,OAGA5iC,EAAAqiC,SAAA,EAGAv7C,EAAA0Z,cAAA,QAAA,GACA1Z,EAAAuwC,QAEA,CACA,SAAAsN,EAAA79C,GACAic,EAAA,4BACAjc,EAAAkK,KAAA,EACA,CAuBA,SAAA4zC,EAAA5O,EAAAh2B,GACA+C,EAAA,SAAA/C,EAAAuiC,SACAviC,EAAAuiC,SACAvM,EAAAhlC,KAAA,GAEAgP,EAAA2iC,iBAAA,EACA3M,EAAA12B,KAAA,UACAklC,EAAAxO,GACAh2B,EAAAqiC,UAAAriC,EAAAuiC,SAAAvM,EAAAhlC,KAAA,EACA,CAWA,SAAAwzC,EAAAxO,GACA,IAAAh2B,EAAAg2B,EAAAyK,eAEA,IADA19B,EAAA,OAAA/C,EAAAqiC,SACAriC,EAAAqiC,SAAA,OAAArM,EAAAhlC,SACA,CAmHA,SAAA6zC,EAAA19C,EAAA6Y,GAEA,OAAA,IAAAA,EAAAlY,OAAA,MAEAkY,EAAAiiC,WAAA1sC,EAAAyK,EAAArR,OAAA8S,SAAAta,GAAAA,GAAA6Y,EAAAlY,QAEAyN,EAAAyK,EAAAkjC,QAAAljC,EAAArR,OAAAjC,KAAA,IAAA,IAAAsT,EAAArR,OAAA7G,OAAAkY,EAAArR,OAAAm2C,QAAA9kC,EAAArR,OAAAvD,OAAA4U,EAAAlY,QACAkY,EAAArR,OAAAy1C,SAGA7uC,EAAAyK,EAAArR,OAAAo2C,QAAA59C,EAAA6Y,EAAAkjC,SAEA3tC,GATA,IAAAA,CAUA,CACA,SAAAyvC,EAAAhP,GACA,IAAAh2B,EAAAg2B,EAAAyK,eACA19B,EAAA,cAAA/C,EAAAsiC,YACAtiC,EAAAsiC,aACAtiC,EAAAqgC,OAAA,EACAn2B,EAAAmnB,SAAA4T,EAAAjlC,EAAAg2B,GAEA,CACA,SAAAiP,EAAAjlC,EAAAg2B,GAIA,GAHAjzB,EAAA,gBAAA/C,EAAAsiC,WAAAtiC,EAAAlY,SAGAkY,EAAAsiC,YAAA,IAAAtiC,EAAAlY,SACAkY,EAAAsiC,YAAA,EACAtM,EAAAkK,UAAA,EACAlK,EAAA12B,KAAA,OACAU,EAAA8iC,aAAA,CAGA,IAAAoC,EAAAlP,EAAAoK,iBACA8E,GAAAA,EAAApC,aAAAoC,EAAAC,WACAnP,EAAA8G,SAEA,CAEA,CASA,SAAAlwC,EAAA6oC,EAAAvhC,GACA,IAAA,IAAA5M,EAAA,EAAA89C,EAAA3P,EAAA3tC,OAAAR,EAAA89C,EAAA99C,IACA,GAAAmuC,EAAAnuC,KAAA4M,EAAA,OAAA5M,EAEA,OAAA,CACA,CA1pBAg2C,EAAAtzC,UAAAgH,KAAA,SAAA7J,GACA4b,EAAA,OAAA5b,GACAA,EAAAuK,SAAAvK,EAAA,IACA,IAAA6Y,EAAAjZ,KAAA05C,eACA4E,EAAAl+C,EAMA,GALA,IAAAA,IAAA6Y,EAAAyiC,iBAAA,GAKA,IAAAt7C,GAAA6Y,EAAAwiC,gBAAA,IAAAxiC,EAAAugC,cAAAvgC,EAAAlY,QAAAkY,EAAAugC,cAAAvgC,EAAAlY,OAAA,IAAAkY,EAAAqgC,OAGA,OAFAt9B,EAAA,qBAAA/C,EAAAlY,OAAAkY,EAAAqgC,OACA,IAAArgC,EAAAlY,QAAAkY,EAAAqgC,MAAA2E,EAAAj+C,MAAAw8C,EAAAx8C,MACA,KAKA,GAAA,KAHAI,EAAAm9C,EAAAn9C,EAAA6Y,KAGAA,EAAAqgC,MAEA,OADA,IAAArgC,EAAAlY,QAAAk9C,EAAAj+C,MACA,KA0BA,IA2BAwO,EA3BA+vC,EAAAtlC,EAAAwiC,aA6CA,OA5CAz/B,EAAA,gBAAAuiC,IAGA,IAAAtlC,EAAAlY,QAAAkY,EAAAlY,OAAAX,EAAA6Y,EAAAugC,gBAEAx9B,EAAA,6BADAuiC,GAAA,GAMAtlC,EAAAqgC,OAAArgC,EAAAuiC,QAEAx/B,EAAA,mBADAuiC,GAAA,GAEAA,IACAviC,EAAA,WACA/C,EAAAuiC,SAAA,EACAviC,EAAAnW,MAAA,EAEA,IAAAmW,EAAAlY,SAAAkY,EAAAwiC,cAAA,GAEAz7C,KAAA03C,MAAAz+B,EAAAugC,eACAvgC,EAAAnW,MAAA,EAGAmW,EAAAuiC,UAAAp7C,EAAAm9C,EAAAe,EAAArlC,KAIA,QADAzK,EAAApO,EAAA,EAAA09C,EAAA19C,EAAA6Y,GAAA,OAEAA,EAAAwiC,aAAAxiC,EAAAlY,QAAAkY,EAAAugC,cACAp5C,EAAA,IAEA6Y,EAAAlY,QAAAX,EACA6Y,EAAAgjC,WAAA,GAEA,IAAAhjC,EAAAlY,SAGAkY,EAAAqgC,QAAArgC,EAAAwiC,cAAA,GAGA6C,IAAAl+C,GAAA6Y,EAAAqgC,OAAA2E,EAAAj+C,OAEA,OAAAwO,GAAAxO,KAAAuY,KAAA,OAAA/J,GACAA,CACA,EA6GA+nC,EAAAtzC,UAAAy0C,MAAA,SAAAt3C,GACA26C,EAAA/6C,KAAA,IAAA66C,EAAA,WACA,EACAtE,EAAAtzC,UAAAssC,KAAA,SAAAiP,EAAAC,GACA,IAAArsC,EAAApS,KACAiZ,EAAAjZ,KAAA05C,eACA,OAAAzgC,EAAAoiC,YACA,KAAA,EACApiC,EAAAmiC,MAAAoD,EACA,MACA,KAAA,EACAvlC,EAAAmiC,MAAA,CAAAniC,EAAAmiC,MAAAoD,GACA,MACA,QACAvlC,EAAAmiC,MAAAx4C,KAAA47C,GAGAvlC,EAAAoiC,YAAA,EACAr/B,EAAA,wBAAA/C,EAAAoiC,WAAAoD,GACA,IACAC,IADAD,IAAA,IAAAA,EAAA14C,MAAAy4C,IAAAr7B,EAAAw7B,QAAAH,IAAAr7B,EAAAy7B,OACAxF,EAAAyF,EAGA,SAAAC,EAAA3F,EAAA4F,GACA/iC,EAAA,YACAm9B,IAAA/mC,GACA2sC,IAAA,IAAAA,EAAAC,aACAD,EAAAC,YAAA,EAkBAhjC,EAAA,WAEAwiC,EAAAtnC,eAAA,QAAA+nC,GACAT,EAAAtnC,eAAA,SAAAgoC,GACAV,EAAAtnC,eAAA,QAAAioC,GACAX,EAAAtnC,eAAA,QAAAw+B,GACA8I,EAAAtnC,eAAA,SAAA4nC,GACA1sC,EAAA8E,eAAA,MAAAkiC,GACAhnC,EAAA8E,eAAA,MAAA2nC,GACAzsC,EAAA8E,eAAA,OAAAkoC,GACAC,GAAA,GAOApmC,EAAAgjC,YAAAuC,EAAAnF,iBAAAmF,EAAAnF,eAAAiG,WAAAH,IA/BA,CACA,SAAA/F,IACAp9B,EAAA,SACAwiC,EAAAz4C,KACA,CAdAkT,EAAAsiC,WAAAp4B,EAAAmnB,SAAAoU,GAAAtsC,EAAAvQ,KAAA,MAAA68C,GACAF,EAAAjnC,GAAA,SAAAunC,GAmBA,IAAAK,EAgFA,SAAA/sC,GACA,OAAA,WACA,IAAA6G,EAAA7G,EAAAsnC,eACA19B,EAAA,cAAA/C,EAAAgjC,YACAhjC,EAAAgjC,YAAAhjC,EAAAgjC,aACA,IAAAhjC,EAAAgjC,YAAAjC,EAAA5nC,EAAA,UACA6G,EAAAqiC,SAAA,EACAmC,EAAArrC,GAEA,CACA,CA1FAmtC,CAAAntC,GACAosC,EAAAjnC,GAAA,QAAA4nC,GACA,IAAAE,GAAA,EAsBA,SAAAD,EAAAnmB,GACAjd,EAAA,UACA,IAAAxN,EAAAgwC,EAAAn3C,MAAA4xB,GACAjd,EAAA,aAAAxN,IACA,IAAAA,KAKA,IAAAyK,EAAAoiC,YAAApiC,EAAAmiC,QAAAoD,GAAAvlC,EAAAoiC,WAAA,IAAA,IAAAx1C,EAAAoT,EAAAmiC,MAAAoD,MAAAa,IACArjC,EAAA,8BAAA/C,EAAAgjC,YACAhjC,EAAAgjC,cAEA7pC,EAAAotC,QAEA,CAIA,SAAA9J,EAAAz7B,GACA+B,EAAA,UAAA/B,GACA4kC,IACAL,EAAAtnC,eAAA,QAAAw+B,GACA,IAAAsE,EAAAwE,EAAA,UAAAzD,EAAAyD,EAAAvkC,EACA,CAMA,SAAAglC,IACAT,EAAAtnC,eAAA,SAAAgoC,GACAL,GACA,CAEA,SAAAK,IACAljC,EAAA,YACAwiC,EAAAtnC,eAAA,QAAA+nC,GACAJ,GACA,CAEA,SAAAA,IACA7iC,EAAA,UACA5J,EAAAysC,OAAAL,EACA,CAUA,OAvDApsC,EAAAmF,GAAA,OAAA6nC,GAniBA,SAAAvoC,EAAA4oC,EAAAh+C,GAGA,GAAA,mBAAAoV,EAAAyD,gBAAA,OAAAzD,EAAAyD,gBAAAmlC,EAAAh+C,GAMAoV,EAAAY,SAAAZ,EAAAY,QAAAgoC,GAAA18C,MAAAC,QAAA6T,EAAAY,QAAAgoC,IAAA5oC,EAAAY,QAAAgoC,GAAAjnC,QAAA/W,GAAAoV,EAAAY,QAAAgoC,GAAA,CAAAh+C,EAAAoV,EAAAY,QAAAgoC,IAAA5oC,EAAAU,GAAAkoC,EAAAh+C,EACA,CAqjBA6Y,CAAAkkC,EAAA,QAAA9I,GAOA8I,EAAA38C,KAAA,QAAAo9C,GAMAT,EAAA38C,KAAA,SAAAq9C,GAOAV,EAAAjmC,KAAA,OAAAnG,GAGA6G,EAAAqiC,UACAt/B,EAAA,eACA5J,EAAAk+B,UAEAkO,CACA,EAYAjI,EAAAtzC,UAAA47C,OAAA,SAAAL,GACA,IAAAvlC,EAAAjZ,KAAA05C,eACAqF,EAAA,CACAC,YAAA,GAIA,GAAA,IAAA/lC,EAAAoiC,WAAA,OAAAr7C,KAGA,GAAA,IAAAiZ,EAAAoiC,WAEA,OAAAmD,GAAAA,IAAAvlC,EAAAmiC,QACAoD,IAAAA,EAAAvlC,EAAAmiC,OAGAniC,EAAAmiC,MAAA,KACAniC,EAAAoiC,WAAA,EACApiC,EAAAqiC,SAAA,EACAkD,GAAAA,EAAAjmC,KAAA,SAAAvY,KAAA++C,IAPA/+C,KAaA,IAAAw+C,EAAA,CAEA,IAAAkB,EAAAzmC,EAAAmiC,MACA93C,EAAA2V,EAAAoiC,WACApiC,EAAAmiC,MAAA,KACAniC,EAAAoiC,WAAA,EACApiC,EAAAqiC,SAAA,EACA,IAAA,IAAA/6C,EAAA,EAAAA,EAAA+C,EAAA/C,IAAAm/C,EAAAn/C,GAAAgY,KAAA,SAAAvY,KAAA,CACAg/C,YAAA,IAEA,OAAAh/C,IACA,CAGA,IAAAwB,EAAAqE,EAAAoT,EAAAmiC,MAAAoD,GACA,OAAA,IAAAh9C,IACAyX,EAAAmiC,MAAA5hB,OAAAh4B,EAAA,GACAyX,EAAAoiC,YAAA,EACA,IAAApiC,EAAAoiC,aAAApiC,EAAAmiC,MAAAniC,EAAAmiC,MAAA,IACAoD,EAAAjmC,KAAA,SAAAvY,KAAA++C,IAJA/+C,IAMA,EAIAu2C,EAAAtzC,UAAAsU,GAAA,SAAAooC,EAAAl+C,GACA,IAAArC,EAAA66C,EAAAh3C,UAAAsU,GAAAlY,KAAAW,KAAA2/C,EAAAl+C,GACAwX,EAAAjZ,KAAA05C,eAqBA,MApBA,SAAAiG,GAGA1mC,EAAA0iC,kBAAA37C,KAAAyZ,cAAA,YAAA,GAGA,IAAAR,EAAAqiC,SAAAt7C,KAAAswC,UACA,aAAAqP,IACA1mC,EAAAsiC,YAAAtiC,EAAA0iC,oBACA1iC,EAAA0iC,kBAAA1iC,EAAAwiC,cAAA,EACAxiC,EAAAqiC,SAAA,EACAriC,EAAAyiC,iBAAA,EACA1/B,EAAA,cAAA/C,EAAAlY,OAAAkY,EAAAuiC,SACAviC,EAAAlY,OACAy7C,EAAAx8C,MACAiZ,EAAAuiC,SACAr4B,EAAAmnB,SAAAsT,EAAA59C,QAIAZ,CACA,EACAm3C,EAAAtzC,UAAAoX,YAAAk8B,EAAAtzC,UAAAsU,GACAg/B,EAAAtzC,UAAAiU,eAAA,SAAAyoC,EAAAl+C,GACA,IAAArC,EAAA66C,EAAAh3C,UAAAiU,eAAA7X,KAAAW,KAAA2/C,EAAAl+C,GAUA,MATA,aAAAk+C,GAOAx8B,EAAAmnB,SAAAqT,EAAA39C,MAEAZ,CACA,EACAm3C,EAAAtzC,UAAA4X,mBAAA,SAAA8kC,GACA,IAAAvgD,EAAA66C,EAAAh3C,UAAA4X,mBAAAnZ,MAAA1B,KAAA2B,WAUA,MATA,aAAAg+C,QAAAxgD,IAAAwgD,GAOAx8B,EAAAmnB,SAAAqT,EAAA39C,MAEAZ,CACA,EAqBAm3C,EAAAtzC,UAAAqtC,OAAA,WACA,IAAAr3B,EAAAjZ,KAAA05C,eAUA,OATAzgC,EAAAqiC,UACAt/B,EAAA,UAIA/C,EAAAqiC,SAAAriC,EAAA0iC,kBAMA,SAAA1M,EAAAh2B,GACAA,EAAA2iC,kBACA3iC,EAAA2iC,iBAAA,EACAz4B,EAAAmnB,SAAAuT,EAAA5O,EAAAh2B,GAEA,CAVAq3B,CAAAtwC,KAAAiZ,IAEAA,EAAA4iC,QAAA,EACA77C,IACA,EAiBAu2C,EAAAtzC,UAAAu8C,MAAA,WAQA,OAPAxjC,EAAA,wBAAAhc,KAAA05C,eAAA4B,UACA,IAAAt7C,KAAA05C,eAAA4B,UACAt/B,EAAA,SACAhc,KAAA05C,eAAA4B,SAAA,EACAt7C,KAAAuY,KAAA,UAEAvY,KAAA05C,eAAAmC,QAAA,EACA77C,IACA,EAUAu2C,EAAAtzC,UAAA28C,KAAA,SAAA3Q,GACA,IAAA4Q,EAAA7/C,KACAiZ,EAAAjZ,KAAA05C,eACAmC,GAAA,EAwBA,IAAA,IAAAt7C,KAvBA0uC,EAAA13B,GAAA,OAAA,WAEA,GADAyE,EAAA,eACA/C,EAAAkjC,UAAAljC,EAAAqgC,MAAA,CACA,IAAArgB,EAAAhgB,EAAAkjC,QAAAp2C,MACAkzB,GAAAA,EAAAl4B,QAAA8+C,EAAAj9C,KAAAq2B,EACA,CACA4mB,EAAAj9C,KAAA,KACA,IACAqsC,EAAA13B,GAAA,QAAA,SAAA0hB,IACAjd,EAAA,gBACA/C,EAAAkjC,UAAAljB,EAAAhgB,EAAAkjC,QAAA90C,MAAA4xB,IAGAhgB,EAAAiiC,YAAA,MAAAjiB,KAAAhgB,EAAAiiC,YAAAjiB,GAAAA,EAAAl4B,UACA8+C,EAAAj9C,KAAAq2B,KAEA4iB,GAAA,EACA5M,EAAAuQ,SAEA,IAIAvQ,OACA9vC,IAAAa,KAAAO,IAAA,mBAAA0uC,EAAA1uC,KACAP,KAAAO,GAAA,SAAAq1B,GACA,OAAA,WACA,OAAAqZ,EAAArZ,GAAAl0B,MAAAutC,EAAAttC,UACA,CACA,CAJA,CAIApB,IAKA,IAAA,IAAAH,EAAA,EAAAA,EAAA46C,EAAAj6C,OAAAX,IACA6uC,EAAA13B,GAAAyjC,EAAA56C,GAAAJ,KAAAuY,KAAAY,KAAAnZ,KAAAg7C,EAAA56C,KAYA,OAPAJ,KAAA03C,MAAA,SAAAt3C,GACA4b,EAAA,gBAAA5b,GACAy7C,IACAA,GAAA,EACA5M,EAAAqB,SAEA,EACAtwC,IACA,EACA,mBAAAf,SACAs3C,EAAAtzC,UAAAhE,OAAA6gD,eAAA,WAIA,YAHA3gD,IAAAm7C,IACAA,EAAA75C,EAAA,sCAEA65C,EAAAt6C,KACA,GAEA1B,OAAAC,eAAAg4C,EAAAtzC,UAAA,wBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAA05C,eAAAF,aACA,IAEAl7C,OAAAC,eAAAg4C,EAAAtzC,UAAA,iBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAA05C,gBAAA15C,KAAA05C,eAAA9xC,MACA,IAEAtJ,OAAAC,eAAAg4C,EAAAtzC,UAAA,kBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAA05C,eAAA4B,OACA,EACAxpC,IAAA,SAAAmH,GACAjZ,KAAA05C,iBACA15C,KAAA05C,eAAA4B,QAAAriC,EAEA,IAIAs9B,EAAAwJ,UAAAjC,EACAx/C,OAAAC,eAAAg4C,EAAAtzC,UAAA,iBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAA05C,eAAA34C,MACA,IA+CA,mBAAA9B,SACAs3C,EAAAvvC,KAAA,SAAAg5C,EAAAxQ,GAIA,YAHArwC,IAAA6H,IACAA,EAAAvG,EAAA,4BAEAuG,EAAAuvC,EAAAyJ,EAAAxQ,EACA,ErF2lXC,GAAEnwC,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAA8B,oBAAXX,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAEtK,EAAE,CAAC,YAAY,GAAG,mBAAmB,GAAG,oCAAoC,GAAG,iCAAiC,GAAG,6BAA6B,GAAG,0BAA0B,GAAG,2BAA2B,GAAG,4BAA4B,GAAGqkB,SAAW,GAAGtc,OAAS,GAAGsQ,OAAS,GAAGy6B,SAAW,GAAG,kBAAkB,GAAGsN,KAAO,KAAK,GAAG,CAAC,SAASx/C,EAAQf,EAAOD,GsFvhZ9VC,EAAAD,QAAAo6C,EACA,IAAAa,EAAAj6C,EAAA,aAAAu3C,MACA6C,EAAAH,EAAAG,2BACAqF,EAAAxF,EAAAwF,sBACAC,EAAAzF,EAAAyF,mCACAC,EAAA1F,EAAA0F,4BACAnH,EAAAx4C,EAAA,oBAEA,SAAA4/C,EAAApmC,EAAA1R,GACA,IAAA+3C,EAAAtgD,KAAAugD,gBACAD,EAAAE,cAAA,EACA,IAAAn/C,EAAAi/C,EAAAG,QACA,GAAA,OAAAp/C,EACA,OAAArB,KAAAuY,KAAA,QAAA,IAAA2nC,GAEAI,EAAAI,WAAA,KACAJ,EAAAG,QAAA,KACA,MAAAl4C,GAEAvI,KAAA4C,KAAA2F,GACAlH,EAAA4Y,GACA,IAAA0mC,EAAA3gD,KAAA05C,eACAiH,EAAAnF,SAAA,GACAmF,EAAAlF,cAAAkF,EAAA5/C,OAAA4/C,EAAAnH,gBACAx5C,KAAA03C,MAAAiJ,EAAAnH,cAEA,CACA,SAAAK,EAAAl3B,GACA,KAAA3iB,gBAAA65C,GAAA,OAAA,IAAAA,EAAAl3B,GACAs2B,EAAA55C,KAAAW,KAAA2iB,GACA3iB,KAAAugD,gBAAA,CACAF,eAAAA,EAAAlnC,KAAAnZ,MACA4gD,eAAA,EACAJ,cAAA,EACAC,QAAA,KACAC,WAAA,KACAG,cAAA,MAIA7gD,KAAA05C,eAAA+B,cAAA,EAKAz7C,KAAA05C,eAAA52C,MAAA,EACA6f,IACA,mBAAAA,EAAAm+B,YAAA9gD,KAAA85C,WAAAn3B,EAAAm+B,WACA,mBAAAn+B,EAAAo+B,QAAA/gD,KAAAghD,OAAAr+B,EAAAo+B,QAIA/gD,KAAAuX,GAAA,YAAA0pC,EACA,CACA,SAAAA,IACA,IAAApB,EAAA7/C,KACA,mBAAAA,KAAAghD,QAAAhhD,KAAA05C,eAAAC,UAKAz3C,EAAAlC,KAAA,KAAA,MAJAA,KAAAghD,QAAA,SAAA/mC,EAAA1R,GACArG,EAAA29C,EAAA5lC,EAAA1R,EACA,GAIA,CAiDA,SAAArG,EAAA+sC,EAAAh1B,EAAA1R,GACA,GAAA0R,EAAA,OAAAg1B,EAAA12B,KAAA,QAAA0B,GAQA,GAPA,MAAA1R,GAEA0mC,EAAArsC,KAAA2F,GAKA0mC,EAAAoK,eAAAt4C,OAAA,MAAA,IAAAq/C,EACA,GAAAnR,EAAAsR,gBAAAC,aAAA,MAAA,IAAAL,EACA,OAAAlR,EAAArsC,KAAA,KACA,CArHAnC,EAAA,WAAAA,CAAAo5C,EAAAZ,GAyDAY,EAAA52C,UAAAL,KAAA,SAAAq2B,EAAA/xB,GAEA,OADAlH,KAAAugD,gBAAAK,eAAA,EACA3H,EAAAh2C,UAAAL,KAAAvD,KAAAW,KAAAi5B,EAAA/xB,EACA,EAYA2yC,EAAA52C,UAAA62C,WAAA,SAAA7gB,EAAA/xB,EAAA7F,GACAA,EAAA,IAAAw5C,EAAA,gBACA,EACAhB,EAAA52C,UAAA6yC,OAAA,SAAA7c,EAAA/xB,EAAA7F,GACA,IAAAi/C,EAAAtgD,KAAAugD,gBAIA,GAHAD,EAAAG,QAAAp/C,EACAi/C,EAAAI,WAAAznB,EACAqnB,EAAAO,cAAA35C,GACAo5C,EAAAE,aAAA,CACA,IAAAG,EAAA3gD,KAAA05C,gBACA4G,EAAAM,eAAAD,EAAAlF,cAAAkF,EAAA5/C,OAAA4/C,EAAAnH,gBAAAx5C,KAAA03C,MAAAiJ,EAAAnH,cACA,CACA,EAKAK,EAAA52C,UAAAy0C,MAAA,SAAAt3C,GACA,IAAAkgD,EAAAtgD,KAAAugD,gBACA,OAAAD,EAAAI,YAAAJ,EAAAE,aAMAF,EAAAM,eAAA,GALAN,EAAAE,cAAA,EACAxgD,KAAA85C,WAAAwG,EAAAI,WAAAJ,EAAAO,cAAAP,EAAAD,gBAMA,EACAxG,EAAA52C,UAAAm5C,SAAA,SAAA95C,EAAAjB,GACA43C,EAAAh2C,UAAAm5C,SAAA/8C,KAAAW,KAAAsC,GAAA,SAAA4+C,GACA7/C,EAAA6/C,EACA,GACA,CtFumZA,EAAE,CAAC,YAAY,GAAG,mBAAmB,GAAGvO,SAAW,KAAK,GAAG,CAAC,SAASlyC,EAAQf,EAAOD,IACpF,SAAW0jB,EAAQrjB,IAAQ,WuFjvZ3B,SAAAqhD,EAAAloC,GACA,IAAA4mC,EAAA7/C,KACAA,KAAA4B,KAAA,KACA5B,KAAAohD,MAAA,KACAphD,KAAAqhD,OAAA,YA6iBA,SAAAC,EAAAroC,EAAA3W,GACA,IAAA8+C,EAAAE,EAAAF,MACAE,EAAAF,MAAA,KACA,KAAAA,GAAA,CACA,IAAA//C,EAAA+/C,EAAA1+C,SACAuW,EAAAsoC,YACAlgD,EAAAiB,GACA8+C,EAAAA,EAAAx/C,IACA,CAGAqX,EAAAuoC,mBAAA5/C,KAAA0/C,CACA,CAxjBAG,CAAA5B,EAAA5mC,EACA,CACA,CAIA,IAAAggC,EAvBAv5C,EAAAD,QAAAszC,EA0BAA,EAAA2O,cAAAA,EAGA,IAAAC,EAAA,CACAC,UAAAnhD,EAAA,mBAKAw5C,EAAAx5C,EAAA,6BAGA0F,EAAA1F,EAAA,UAAA0F,OACA+zC,QAAA,IAAAp6C,EAAAA,EAAA,oBAAAD,OAAAA,OAAA,oBAAAE,KAAAA,KAAA,CAAA,GAAA6F,YAAA,WAAA,EAOA,IA8IAi8C,EA9IArH,EAAA/5C,EAAA,8BAEAg6C,EADAh6C,EAAA,4BACAg6C,iBACAC,EAAAj6C,EAAA,aAAAu3C,MACA2C,EAAAD,EAAAC,qBACAE,EAAAH,EAAAG,2BACAqF,EAAAxF,EAAAwF,sBACA4B,EAAApH,EAAAoH,uBACAC,EAAArH,EAAAqH,qBACAC,EAAAtH,EAAAsH,uBACAC,EAAAvH,EAAAuH,2BACAC,EAAAxH,EAAAwH,qBACAnH,EAAAP,EAAAO,eAEA,SAAAoH,IAAA,CACA,SAAAT,EAAA/+B,EAAAssB,EAAAgM,GACAhC,EAAAA,GAAAx4C,EAAA,oBACAkiB,EAAAA,GAAA,CAAA,EAOA,kBAAAs4B,IAAAA,EAAAhM,aAAAgK,GAIAj5C,KAAAk7C,aAAAv4B,EAAAu4B,WACAD,IAAAj7C,KAAAk7C,WAAAl7C,KAAAk7C,cAAAv4B,EAAAy/B,oBAKApiD,KAAAw5C,cAAAiB,EAAAz6C,KAAA2iB,EAAA,wBAAAs4B,GAGAj7C,KAAAqiD,aAAA,EAGAriD,KAAAs/C,WAAA,EAEAt/C,KAAAsiD,QAAA,EAEAtiD,KAAAs5C,OAAA,EAEAt5C,KAAAo+C,UAAA,EAGAp+C,KAAA25C,WAAA,EAKA,IAAA4I,GAAA,IAAA5/B,EAAA6/B,cACAxiD,KAAAwiD,eAAAD,EAKAviD,KAAAg8C,gBAAAr5B,EAAAq5B,iBAAA,OAKAh8C,KAAAe,OAAA,EAGAf,KAAAyiD,SAAA,EAGAziD,KAAA0iD,OAAA,EAMA1iD,KAAA8C,MAAA,EAKA9C,KAAA2iD,kBAAA,EAGA3iD,KAAA4iD,QAAA,SAAA3oC,IAsQA,SAAAg1B,EAAAh1B,GACA,IAAAhB,EAAAg2B,EAAAoK,eACAv2C,EAAAmW,EAAAnW,KACAzB,EAAA4X,EAAAwnC,QACA,GAAA,mBAAAp/C,EAAA,MAAA,IAAA6+C,EAEA,GAZA,SAAAjnC,GACAA,EAAAwpC,SAAA,EACAxpC,EAAAwnC,QAAA,KACAxnC,EAAAlY,QAAAkY,EAAA4pC,SACA5pC,EAAA4pC,SAAA,CACA,CAMAC,CAAA7pC,GACAgB,GAlCA,SAAAg1B,EAAAh2B,EAAAnW,EAAAmX,EAAA5Y,KACA4X,EAAAsoC,UACAz+C,GAGAqgB,EAAAmnB,SAAAjpC,EAAA4Y,GAGAkJ,EAAAmnB,SAAAyY,EAAA9T,EAAAh2B,GACAg2B,EAAAoK,eAAA2J,cAAA,EACAjI,EAAA9L,EAAAh1B,KAIA5Y,EAAA4Y,GACAg1B,EAAAoK,eAAA2J,cAAA,EACAjI,EAAA9L,EAAAh1B,GAGA8oC,EAAA9T,EAAAh2B,GAEA,CAaAgqC,CAAAhU,EAAAh2B,EAAAnW,EAAAmX,EAAA5Y,OAAA,CAEA,IAAA+8C,EAAA8E,EAAAjqC,IAAAg2B,EAAA0K,UACAyE,GAAAnlC,EAAAypC,QAAAzpC,EAAA0pC,mBAAA1pC,EAAAkqC,iBACAC,EAAAnU,EAAAh2B,GAEAnW,EACAqgB,EAAAmnB,SAAA+Y,EAAApU,EAAAh2B,EAAAmlC,EAAA/8C,GAEAgiD,EAAApU,EAAAh2B,EAAAmlC,EAAA/8C,EAEA,CACA,CAvRAuhD,CAAA3T,EAAAh1B,EACA,EAGAja,KAAAygD,QAAA,KAGAzgD,KAAA6iD,SAAA,EACA7iD,KAAAmjD,gBAAA,KACAnjD,KAAAsjD,oBAAA,KAIAtjD,KAAAuhD,UAAA,EAIAvhD,KAAAujD,aAAA,EAGAvjD,KAAAgjD,cAAA,EAGAhjD,KAAA87C,WAAA,IAAAn5B,EAAAm5B,UAGA97C,KAAA+7C,cAAAp5B,EAAAo5B,YAGA/7C,KAAAwjD,qBAAA,EAIAxjD,KAAAwhD,mBAAA,IAAAL,EAAAnhD,KACA,CAqCA,SAAA+yC,EAAApwB,GAaA,IAAAs4B,EAAAj7C,gBAZAi5C,EAAAA,GAAAx4C,EAAA,qBAaA,IAAAw6C,IAAA4G,EAAAxiD,KAAA0zC,EAAA/yC,MAAA,OAAA,IAAA+yC,EAAApwB,GACA3iB,KAAAq5C,eAAA,IAAAqI,EAAA/+B,EAAA3iB,KAAAi7C,GAGAj7C,KAAAtB,UAAA,EACAikB,IACA,mBAAAA,EAAAtb,QAAArH,KAAA81C,OAAAnzB,EAAAtb,OACA,mBAAAsb,EAAA8gC,SAAAzjD,KAAA0jD,QAAA/gC,EAAA8gC,QACA,mBAAA9gC,EAAAozB,UAAA/1C,KAAAo8C,SAAAz5B,EAAAozB,SACA,mBAAApzB,EAAAghC,QAAA3jD,KAAA4jD,OAAAjhC,EAAAghC,QAEA1J,EAAA56C,KAAAW,KACA,CAgIA,SAAA6jD,EAAA5U,EAAAh2B,EAAAwqC,EAAAngD,EAAA21B,EAAA/xB,EAAA7F,GACA4X,EAAA4pC,SAAAv/C,EACA2V,EAAAwnC,QAAAp/C,EACA4X,EAAAwpC,SAAA,EACAxpC,EAAAnW,MAAA,EACAmW,EAAA0gC,UAAA1gC,EAAA2pC,QAAA,IAAAb,EAAA,UAAA0B,EAAAxU,EAAAyU,QAAAzqB,EAAAhgB,EAAA2pC,SAAA3T,EAAA6G,OAAA7c,EAAA/xB,EAAA+R,EAAA2pC,SACA3pC,EAAAnW,MAAA,CACA,CAgDA,SAAAugD,EAAApU,EAAAh2B,EAAAmlC,EAAA/8C,GACA+8C,GASA,SAAAnP,EAAAh2B,GACA,IAAAA,EAAAlY,QAAAkY,EAAAqmC,YACArmC,EAAAqmC,WAAA,EACArQ,EAAA12B,KAAA,SAEA,CAdAurC,CAAA7U,EAAAh2B,GACAA,EAAAsoC,YACAlgD,IACA0hD,EAAA9T,EAAAh2B,EACA,CAaA,SAAAmqC,EAAAnU,EAAAh2B,GACAA,EAAA0pC,kBAAA,EACA,IAAAvB,EAAAnoC,EAAAkqC,gBACA,GAAAlU,EAAAyU,SAAAtC,GAAAA,EAAAx/C,KAAA,CAEA,IAAAy8C,EAAAplC,EAAAuqC,qBACA57C,EAAA,IAAA7E,MAAAs7C,GACA0F,EAAA9qC,EAAAuoC,mBACAuC,EAAA3C,MAAAA,EAGA,IAFA,IAAAzoC,EAAA,EACAqrC,GAAA,EACA5C,GACAx5C,EAAA+Q,GAAAyoC,EACAA,EAAA6C,QAAAD,GAAA,GACA5C,EAAAA,EAAAx/C,KACA+W,GAAA,EAEA/Q,EAAAo8C,WAAAA,EACAH,EAAA5U,EAAAh2B,GAAA,EAAAA,EAAAlY,OAAA6G,EAAA,GAAAm8C,EAAA1C,QAIApoC,EAAAsoC,YACAtoC,EAAAqqC,oBAAA,KACAS,EAAAniD,MACAqX,EAAAuoC,mBAAAuC,EAAAniD,KACAmiD,EAAAniD,KAAA,MAEAqX,EAAAuoC,mBAAA,IAAAL,EAAAloC,GAEAA,EAAAuqC,qBAAA,CACA,KAAA,CAEA,KAAApC,GAAA,CACA,IAAAnoB,EAAAmoB,EAAAnoB,MACA/xB,EAAAk6C,EAAAl6C,SACA7F,EAAA+/C,EAAA1+C,SASA,GAPAmhD,EAAA5U,EAAAh2B,GAAA,EADAA,EAAAiiC,WAAA,EAAAjiB,EAAAl4B,OACAk4B,EAAA/xB,EAAA7F,GACA+/C,EAAAA,EAAAx/C,KACAqX,EAAAuqC,uBAKAvqC,EAAAwpC,QACA,KAEA,CACA,OAAArB,IAAAnoC,EAAAqqC,oBAAA,KACA,CACArqC,EAAAkqC,gBAAA/B,EACAnoC,EAAA0pC,kBAAA,CACA,CAoCA,SAAAO,EAAAjqC,GACA,OAAAA,EAAAqpC,QAAA,IAAArpC,EAAAlY,QAAA,OAAAkY,EAAAkqC,kBAAAlqC,EAAAmlC,WAAAnlC,EAAAwpC,OACA,CACA,SAAAyB,EAAAjV,EAAAh2B,GACAg2B,EAAA2U,QAAA,SAAAthD,GACA2W,EAAAsoC,YACAj/C,GACAy4C,EAAA9L,EAAA3sC,GAEA2W,EAAAsqC,aAAA,EACAtU,EAAA12B,KAAA,aACAwqC,EAAA9T,EAAAh2B,EACA,GACA,CAaA,SAAA8pC,EAAA9T,EAAAh2B,GACA,IAAAkrC,EAAAjB,EAAAjqC,GACA,GAAAkrC,IAdA,SAAAlV,EAAAh2B,GACAA,EAAAsqC,aAAAtqC,EAAAopC,cACA,mBAAApT,EAAA2U,QAAA3qC,EAAA0gC,WAKA1gC,EAAAsqC,aAAA,EACAtU,EAAA12B,KAAA,eALAU,EAAAsoC,YACAtoC,EAAAopC,aAAA,EACAl/B,EAAAmnB,SAAA4Z,EAAAjV,EAAAh2B,IAMA,CAIAgoC,CAAAhS,EAAAh2B,GACA,IAAAA,EAAAsoC,YACAtoC,EAAAmlC,UAAA,EACAnP,EAAA12B,KAAA,UACAU,EAAA8iC,cAAA,CAGA,IAAAqI,EAAAnV,EAAAyK,iBACA0K,GAAAA,EAAArI,aAAAqI,EAAA7I,aACAtM,EAAA8G,SAEA,CAGA,OAAAoO,CACA,CAxfA1jD,EAAA,WAAAA,CAAAsyC,EAAAkH,GA4GAyH,EAAAz+C,UAAAw2C,UAAA,WAGA,IAFA,IAAA4K,EAAArkD,KAAAmjD,gBACA10C,EAAA,GACA41C,GACA51C,EAAA7L,KAAAyhD,GACAA,EAAAA,EAAAziD,KAEA,OAAA6M,CACA,EACA,WACA,IACAnQ,OAAAC,eAAAmjD,EAAAz+C,UAAA,SAAA,CACA2J,IAAA+0C,EAAAC,WAAA,WACA,OAAA5hD,KAAAy5C,WACA,GAAA,6EAAA,YAEA,CAAA,MAAA6K,GAAA,CACA,CARA,GAaA,mBAAArlD,QAAAA,OAAAslD,aAAA,mBAAAluC,SAAApT,UAAAhE,OAAAslD,cACA1C,EAAAxrC,SAAApT,UAAAhE,OAAAslD,aACAjmD,OAAAC,eAAAw0C,EAAA9zC,OAAAslD,YAAA,CACAnmD,MAAA,SAAAomD,GACA,QAAA3C,EAAAxiD,KAAAW,KAAAwkD,IACAxkD,OAAA+yC,IACAyR,GAAAA,EAAAnL,0BAAAqI,EACA,KAGAG,EAAA,SAAA2C,GACA,OAAAA,aAAAxkD,IACA,EA+BA+yC,EAAA9vC,UAAAssC,KAAA,WACAwL,EAAA/6C,KAAA,IAAA8hD,EACA,EAyBA/O,EAAA9vC,UAAAoE,MAAA,SAAA4xB,EAAA/xB,EAAA7F,GACA,IAzNAnD,EAyNA+a,EAAAjZ,KAAAq5C,eACA7qC,GAAA,EACAy1C,GAAAhrC,EAAAiiC,aA3NAh9C,EA2NA+6B,EA1NA9yB,EAAA+B,SAAAhK,IAAAA,aAAAg8C,GAwOA,OAbA+J,IAAA99C,EAAA+B,SAAA+wB,KACAA,EAhOA,SAAAA,GACA,OAAA9yB,EAAAa,KAAAiyB,EACA,CA8NA2jB,CAAA3jB,IAEA,mBAAA/xB,IACA7F,EAAA6F,EACAA,EAAA,MAEA+8C,EAAA/8C,EAAA,SAAAA,IAAAA,EAAA+R,EAAA+iC,iBACA,mBAAA36C,IAAAA,EAAA8gD,GACAlpC,EAAAqpC,OArCA,SAAArT,EAAA5tC,GACA,IAAA4Y,EAAA,IAAAgoC,EAEAlH,EAAA9L,EAAAh1B,GACAkJ,EAAAmnB,SAAAjpC,EAAA4Y,EACA,CAgCAwqC,CAAAzkD,KAAAqB,IAAA4iD,GA3BA,SAAAhV,EAAAh2B,EAAAggB,EAAA53B,GACA,IAAA4Y,EAMA,OALA,OAAAgf,EACAhf,EAAA,IAAA+nC,EACA,iBAAA/oB,GAAAhgB,EAAAiiC,aACAjhC,EAAA,IAAA0gC,EAAA,QAAA,CAAA,SAAA,UAAA1hB,KAEAhf,IACA8gC,EAAA9L,EAAAh1B,GACAkJ,EAAAmnB,SAAAjpC,EAAA4Y,IACA,EAGA,CAcAyqC,CAAA1kD,KAAAiZ,EAAAggB,EAAA53B,MACA4X,EAAAsoC,YACA/yC,EAiDA,SAAAygC,EAAAh2B,EAAAgrC,EAAAhrB,EAAA/xB,EAAA7F,GACA,IAAA4iD,EAAA,CACA,IAAAU,EArBA,SAAA1rC,EAAAggB,EAAA/xB,GACA+R,EAAAiiC,aAAA,IAAAjiC,EAAAupC,eAAA,iBAAAvpB,IACAA,EAAA9yB,EAAAa,KAAAiyB,EAAA/xB,IAEA,OAAA+xB,CACA,CAgBA2rB,CAAA3rC,EAAAggB,EAAA/xB,GACA+xB,IAAA0rB,IACAV,GAAA,EACA/8C,EAAA,SACA+xB,EAAA0rB,EAEA,CACA,IAAArhD,EAAA2V,EAAAiiC,WAAA,EAAAjiB,EAAAl4B,OACAkY,EAAAlY,QAAAuC,EACA,IAAAkL,EAAAyK,EAAAlY,OAAAkY,EAAAugC,cAEAhrC,IAAAyK,EAAAqmC,WAAA,GACA,GAAArmC,EAAAwpC,SAAAxpC,EAAAypC,OAAA,CACA,IAAAmC,EAAA5rC,EAAAqqC,oBACArqC,EAAAqqC,oBAAA,CACArqB,MAAAA,EACA/xB,SAAAA,EACA+8C,MAAAA,EACAvhD,SAAArB,EACAO,KAAA,MAEAijD,EACAA,EAAAjjD,KAAAqX,EAAAqqC,oBAEArqC,EAAAkqC,gBAAAlqC,EAAAqqC,oBAEArqC,EAAAuqC,sBAAA,CACA,MACAK,EAAA5U,EAAAh2B,GAAA,EAAA3V,EAAA21B,EAAA/xB,EAAA7F,GAEA,OAAAmN,CACA,CAlFAs2C,CAAA9kD,KAAAiZ,EAAAgrC,EAAAhrB,EAAA/xB,EAAA7F,IAEAmN,CACA,EACAukC,EAAA9vC,UAAA8hD,KAAA,WACA/kD,KAAAq5C,eAAAqJ,QACA,EACA3P,EAAA9vC,UAAA+hD,OAAA,WACA,IAAA/rC,EAAAjZ,KAAAq5C,eACApgC,EAAAypC,SACAzpC,EAAAypC,SACAzpC,EAAAwpC,SAAAxpC,EAAAypC,QAAAzpC,EAAA0pC,mBAAA1pC,EAAAkqC,iBAAAC,EAAApjD,KAAAiZ,GAEA,EACA85B,EAAA9vC,UAAAgiD,mBAAA,SAAA/9C,GAGA,GADA,iBAAAA,IAAAA,EAAAA,EAAA6B,iBACA,CAAA,MAAA,OAAA,QAAA,QAAA,SAAA,SAAA,OAAA,QAAA,UAAA,WAAA,OAAAlD,SAAAqB,EAAA,IAAA6B,gBAAA,GAAA,MAAA,IAAAm5C,EAAAh7C,GAEA,OADAlH,KAAAq5C,eAAA2C,gBAAA90C,EACAlH,IACA,EACA1B,OAAAC,eAAAw0C,EAAA9vC,UAAA,iBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAAq5C,gBAAAr5C,KAAAq5C,eAAAI,WACA,IAQAn7C,OAAAC,eAAAw0C,EAAA9vC,UAAA,wBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAAq5C,eAAAG,aACA,IAuKAzG,EAAA9vC,UAAA6yC,OAAA,SAAA7c,EAAA/xB,EAAA7F,GACAA,EAAA,IAAAw5C,EAAA,YACA,EACA9H,EAAA9vC,UAAAygD,QAAA,KACA3Q,EAAA9vC,UAAA8C,IAAA,SAAAkzB,EAAA/xB,EAAA7F,GACA,IAAA4X,EAAAjZ,KAAAq5C,eAmBA,MAlBA,mBAAApgB,GACA53B,EAAA43B,EACAA,EAAA,KACA/xB,EAAA,MACA,mBAAAA,IACA7F,EAAA6F,EACAA,EAAA,MAEA+xB,SAAAj5B,KAAAqH,MAAA4xB,EAAA/xB,GAGA+R,EAAAypC,SACAzpC,EAAAypC,OAAA,EACA1iD,KAAAglD,UAIA/rC,EAAAqpC,QAyDA,SAAArT,EAAAh2B,EAAA5X,GACA4X,EAAAqpC,QAAA,EACAS,EAAA9T,EAAAh2B,GACA5X,IACA4X,EAAAmlC,SAAAj7B,EAAAmnB,SAAAjpC,GAAA4tC,EAAAptC,KAAA,SAAAR,IAEA4X,EAAAqgC,OAAA,EACArK,EAAAvwC,UAAA,CACA,CAjEAwmD,CAAAllD,KAAAiZ,EAAA5X,GACArB,IACA,EACA1B,OAAAC,eAAAw0C,EAAA9vC,UAAA,iBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAAq5C,eAAAt4C,MACA,IAqEAzC,OAAAC,eAAAw0C,EAAA9vC,UAAA,YAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,YAAAzN,IAAAa,KAAAq5C,gBAGAr5C,KAAAq5C,eAAAM,SACA,EACA7nC,IAAA,SAAA1T,GAGA4B,KAAAq5C,iBAMAr5C,KAAAq5C,eAAAM,UAAAv7C,EACA,IAEA20C,EAAA9vC,UAAA8yC,QAAAyE,EAAAzE,QACAhD,EAAA9vC,UAAA85C,WAAAvC,EAAAwC,UACAjK,EAAA9vC,UAAAm5C,SAAA,SAAA95C,EAAAjB,GACAA,EAAAiB,EACA,CvF0xZC,GAAEjD,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAA8B,oBAAXX,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAEtK,EAAE,CAAC,YAAY,GAAG,mBAAmB,GAAG,6BAA6B,GAAG,2BAA2B,GAAG,4BAA4B,GAAGqkB,SAAW,GAAGtc,OAAS,GAAG+qC,SAAW,GAAG,iBAAiB,MAAM,GAAG,CAAC,SAASlyC,EAAQf,EAAOD,IAChO,SAAW0jB,IAAS,WwF35apB,IAAAgiC,EACA,SAAAC,EAAAlnD,EAAAC,EAAAC,GAAA,OAAAD,EACA,SAAAQ,GAAA,IAAAR,EACA,SAAAW,EAAAC,GAAA,GAAA,iBAAAD,GAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAAG,OAAAC,aAAA,QAAAC,IAAAH,EAAA,CAAA,IAAAI,EAAAJ,EAAAK,KAAAP,EAAAC,GAAA,WAAA,GAAA,iBAAAK,EAAA,OAAAA,EAAA,MAAA,IAAAE,UAAA,+CAAA,CAAA,OAAA,WAAAP,EAAAF,OAAAU,QAAAT,EAAA,CADAumD,CAAA1mD,EAAA,UAAA,MAAA,iBAAAR,EAAAA,EAAAU,OAAAV,EAAA,CADAmnD,CAAAnnD,MAAAD,EAAAI,OAAAC,eAAAL,EAAAC,EAAA,CAAAC,MAAAA,EAAAI,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAR,EAAAC,GAAAC,EAAAF,CAAA,CAGA,IAAAkgD,EAAA39C,EAAA,mBACA8kD,EAAAtmD,OAAA,eACAumD,EAAAvmD,OAAA,cACAwmD,EAAAxmD,OAAA,SACAymD,EAAAzmD,OAAA,SACA0mD,EAAA1mD,OAAA,eACA2mD,EAAA3mD,OAAA,iBACA4mD,EAAA5mD,OAAA,UACA,SAAA6mD,EAAA1nD,EAAA8D,GACA,MAAA,CACA9D,MAAAA,EACA8D,KAAAA,EAEA,CACA,SAAA6jD,EAAAC,GACA,IAAAjvC,EAAAivC,EAAAT,GACA,GAAA,OAAAxuC,EAAA,CACA,IAAAxO,EAAAy9C,EAAAH,GAAA57C,OAIA,OAAA1B,IACAy9C,EAAAL,GAAA,KACAK,EAAAT,GAAA,KACAS,EAAAR,GAAA,KACAzuC,EAAA+uC,EAAAv9C,GAAA,IAEA,CACA,CACA,SAAA09C,EAAAD,GAGA7iC,EAAAmnB,SAAAyb,EAAAC,EACA,CAYA,IAAAE,EAAA5nD,OAAAub,gBAAA,WAAA,IACAssC,EAAA7nD,OAAA8nD,gBAmDAhB,EAnDAD,EAAA,CACAlW,aACA,OAAAjvC,KAAA6lD,EACA,EACAjkD,KAAA,WACA,IAAAi+C,EAAA7/C,KAGA2M,EAAA3M,KAAAylD,GACA,GAAA,OAAA94C,EACA,OAAAmK,QAAAE,OAAArK,GAEA,GAAA3M,KAAA0lD,GACA,OAAA5uC,QAAAC,QAAA+uC,OAAA3mD,GAAA,IAEA,GAAAa,KAAA6lD,GAAAlM,UAKA,OAAA,IAAA7iC,SAAA,SAAAC,EAAAC,GACAmM,EAAAmnB,UAAA,WACAuV,EAAA4F,GACAzuC,EAAA6oC,EAAA4F,IAEA1uC,EAAA+uC,OAAA3mD,GAAA,GAEA,GACA,IAOA,IACAknD,EADAC,EAAAtmD,KAAA2lD,GAEA,GAAAW,EACAD,EAAA,IAAAvvC,QAlDA,SAAAwvC,EAAAN,GACA,OAAA,SAAAjvC,EAAAC,GACAsvC,EAAA3R,MAAA,WACAqR,EAAAN,GACA3uC,EAAA+uC,OAAA3mD,GAAA,IAGA6mD,EAAAJ,GAAA7uC,EAAAC,EACA,GAAAA,EACA,CACA,CAwCAuvC,CAAAD,EAAAtmD,WACA,CAGA,IAAAuI,EAAAvI,KAAA6lD,GAAA57C,OACA,GAAA,OAAA1B,EACA,OAAAuO,QAAAC,QAAA+uC,EAAAv9C,GAAA,IAEA89C,EAAA,IAAAvvC,QAAA9W,KAAA4lD,GACA,CAEA,OADA5lD,KAAA2lD,GAAAU,EACAA,CACA,GACApnD,OAAA6gD,eAAA,WACA,OAAA9/C,IACA,IAAAolD,EAAAD,EAAA,UAAA,WACA,IAAAqB,EAAAxmD,KAIA,OAAA,IAAA8W,SAAA,SAAAC,EAAAC,GACAwvC,EAAAX,GAAA9P,QAAA,MAAA,SAAAzzC,GACAA,EACA0U,EAAA1U,GAGAyU,EAAA+uC,OAAA3mD,GAAA,GACA,GACA,GACA,IAAAgmD,GAAAe,GA4DAxmD,EAAAD,QA3DA,SAAAwvC,GACA,IAAAwX,EACArlD,EAAA9C,OAAA+Z,OAAA8tC,GAAAf,EAAAqB,EAAA,CAAA,EAAAZ,EAAA,CACAznD,MAAA6wC,EACAvwC,UAAA,IACA0mD,EAAAqB,EAAAlB,EAAA,CACAnnD,MAAA,KACAM,UAAA,IACA0mD,EAAAqB,EAAAjB,EAAA,CACApnD,MAAA,KACAM,UAAA,IACA0mD,EAAAqB,EAAAhB,EAAA,CACArnD,MAAA,KACAM,UAAA,IACA0mD,EAAAqB,EAAAf,EAAA,CACAtnD,MAAA6wC,EAAAyK,eAAA6B,WACA78C,UAAA,IACA0mD,EAAAqB,EAAAb,EAAA,CACAxnD,MAAA,SAAA2Y,EAAAC,GACA,IAAAzO,EAAAnH,EAAAykD,GAAA57C,OACA1B,GACAnH,EAAAukD,GAAA,KACAvkD,EAAAmkD,GAAA,KACAnkD,EAAAokD,GAAA,KACAzuC,EAAA+uC,EAAAv9C,GAAA,MAEAnH,EAAAmkD,GAAAxuC,EACA3V,EAAAokD,GAAAxuC,EAEA,EACAtY,UAAA,IACA+nD,IA0BA,OAzBArlD,EAAAukD,GAAA,KACAvH,EAAAnP,GAAA,SAAA3sC,GACA,GAAAA,GAAA,+BAAAA,EAAAzB,KAAA,CACA,IAAAmW,EAAA5V,EAAAokD,GAUA,OAPA,OAAAxuC,IACA5V,EAAAukD,GAAA,KACAvkD,EAAAmkD,GAAA,KACAnkD,EAAAokD,GAAA,KACAxuC,EAAA1U,SAEAlB,EAAAqkD,GAAAnjD,EAEA,CACA,IAAAyU,EAAA3V,EAAAmkD,GACA,OAAAxuC,IACA3V,EAAAukD,GAAA,KACAvkD,EAAAmkD,GAAA,KACAnkD,EAAAokD,GAAA,KACAzuC,EAAA+uC,OAAA3mD,GAAA,KAEAiC,EAAAskD,IAAA,CACA,IACAzW,EAAA13B,GAAA,WAAA0uC,EAAA9sC,KAAA,KAAA/X,IACAA,CACA,CxFg6aC,GAAE/B,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAElC,EAAE,CAAC,kBAAkB,GAAGyjB,SAAW,KAAK,GAAG,CAAC,SAASzjB,EAAQf,EAAOD,GyFllbpE,SAAA6W,EAAAkuC,EAAAkC,GAAA,IAAAnjD,EAAAjF,OAAAiF,KAAAihD,GAAA,GAAAlmD,OAAAiY,sBAAA,CAAA,IAAAowC,EAAAroD,OAAAiY,sBAAAiuC,GAAAkC,IAAAC,EAAAA,EAAAC,QAAA,SAAAC,GAAA,OAAAvoD,OAAAwoD,yBAAAtC,EAAAqC,GAAAroD,UAAA,KAAA+E,EAAAX,KAAAlB,MAAA6B,EAAAojD,EAAA,CAAA,OAAApjD,CAAA,CACA,SAAAwjD,EAAAh5C,GAAA,IAAA,IAAAxN,EAAA,EAAAA,EAAAoB,UAAAZ,OAAAR,IAAA,CAAA,IAAAymD,EAAA,MAAArlD,UAAApB,GAAAoB,UAAApB,GAAA,CAAA,EAAAA,EAAA,EAAA+V,EAAAhY,OAAA0oD,IAAA,GAAA1hC,SAAA,SAAAnnB,GAAAinD,EAAAr3C,EAAA5P,EAAA6oD,EAAA7oD,GAAA,IAAAG,OAAA2oD,0BAAA3oD,OAAA4oD,iBAAAn5C,EAAAzP,OAAA2oD,0BAAAD,IAAA1wC,EAAAhY,OAAA0oD,IAAA1hC,SAAA,SAAAnnB,GAAAG,OAAAC,eAAAwP,EAAA5P,EAAAG,OAAAwoD,yBAAAE,EAAA7oD,GAAA,GAAA,CAAA,OAAA4P,CAAA,CACA,SAAAq3C,EAAAlnD,EAAAC,EAAAC,GAAA,OAAAD,EAAAmnD,EAAAnnD,MAAAD,EAAAI,OAAAC,eAAAL,EAAAC,EAAA,CAAAC,MAAAA,EAAAI,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAR,EAAAC,GAAAC,EAAAF,CAAA,CAEA,SAAAipD,EAAAp5C,EAAAq5C,GAAA,IAAA,IAAA7mD,EAAA,EAAAA,EAAA6mD,EAAArmD,OAAAR,IAAA,CAAA,IAAA8mD,EAAAD,EAAA7mD,GAAA8mD,EAAA7oD,WAAA6oD,EAAA7oD,aAAA,EAAA6oD,EAAA5oD,cAAA,EAAA,UAAA4oD,IAAAA,EAAA3oD,UAAA,GAAAJ,OAAAC,eAAAwP,EAAAu3C,EAAA+B,EAAAlpD,KAAAkpD,EAAA,CAAA,CAEA,SAAA/B,EAAA3mD,GAAA,IAAAR,EACA,SAAAW,EAAAC,GAAA,GAAA,iBAAAD,GAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAAG,OAAAC,aAAA,QAAAC,IAAAH,EAAA,CAAA,IAAAI,EAAAJ,EAAAK,KAAAP,EAAAC,GAAA,WAAA,GAAA,iBAAAK,EAAA,OAAAA,EAAA,MAAA,IAAAE,UAAA,+CAAA,CAAA,OAAA,WAAAP,EAAAF,OAAAU,QAAAT,EAAA,CADAumD,CAAA1mD,EAAA,UAAA,MAAA,iBAAAR,EAAAA,EAAAU,OAAAV,EAAA,CAEA,IACAgI,EADA1F,EAAA,UACA0F,OAEAyH,EADAnN,EAAA,QACAmN,QACA05C,EAAA15C,GAAAA,EAAA05C,QAAA,UAIA5nD,EAAAD,QAAA,WACA,SAAA86C,KAdA,SAAAgN,EAAAC,GAAA,KAAAD,aAAAC,GAAA,MAAA,IAAAloD,UAAA,oCAAA,CAeAmoD,CAAAznD,KAAAu6C,GACAv6C,KAAAkV,KAAA,KACAlV,KAAAmV,KAAA,KACAnV,KAAAe,OAAA,CACA,CAjBA,IAAAymD,EAAAE,EAAAC,EA8KA,OA9KAH,EAkBAjN,GAlBAmN,EAkBA,CAAA,CACAvpD,IAAA,OACAC,MAAA,SAAAowC,GACA,IAAA4S,EAAA,CACA74C,KAAAimC,EACA5sC,KAAA,MAEA5B,KAAAe,OAAA,EAAAf,KAAAmV,KAAAvT,KAAAw/C,EAAAphD,KAAAkV,KAAAksC,EACAphD,KAAAmV,KAAAisC,IACAphD,KAAAe,MACA,GACA,CACA5C,IAAA,UACAC,MAAA,SAAAowC,GACA,IAAA4S,EAAA,CACA74C,KAAAimC,EACA5sC,KAAA5B,KAAAkV,MAEA,IAAAlV,KAAAe,SAAAf,KAAAmV,KAAAisC,GACAphD,KAAAkV,KAAAksC,IACAphD,KAAAe,MACA,GACA,CACA5C,IAAA,QACAC,MAAA,WACA,GAAA,IAAA4B,KAAAe,OAAA,CACA,IAAAyN,EAAAxO,KAAAkV,KAAA3M,KAGA,OAFA,IAAAvI,KAAAe,OAAAf,KAAAkV,KAAAlV,KAAAmV,KAAA,KAAAnV,KAAAkV,KAAAlV,KAAAkV,KAAAtT,OACA5B,KAAAe,OACAyN,CAJA,CAKA,GACA,CACArQ,IAAA,QACAC,MAAA,WACA4B,KAAAkV,KAAAlV,KAAAmV,KAAA,KACAnV,KAAAe,OAAA,CACA,GACA,CACA5C,IAAA,OACAC,MAAA,SAAAk9B,GACA,GAAA,IAAAt7B,KAAAe,OAAA,MAAA,GAGA,IAFA,IAAAD,EAAAd,KAAAkV,KACA1G,EAAA,GAAA1N,EAAAyH,KACAzH,EAAAA,EAAAc,MAAA4M,GAAA8sB,EAAAx6B,EAAAyH,KACA,OAAAiG,CACA,GACA,CACArQ,IAAA,SACAC,MAAA,SAAAgC,GACA,GAAA,IAAAJ,KAAAe,OAAA,OAAAoF,EAAAI,MAAA,GAIA,IAHA,IA5DA6L,EAAArE,EAAAxD,EA4DAiE,EAAArI,EAAAY,YAAA3G,IAAA,GACAU,EAAAd,KAAAkV,KACA3U,EAAA,EACAO,GA/DAsR,EAgEAtR,EAAAyH,KAhEAwF,EAgEAS,EAhEAjE,EAgEAhK,EA/DA4F,EAAAlD,UAAAmF,KAAA/I,KAAA+S,EAAArE,EAAAxD,GAgEAhK,GAAAO,EAAAyH,KAAAxH,OACAD,EAAAA,EAAAc,KAEA,OAAA4M,CACA,GAGA,CACArQ,IAAA,UACAC,MAAA,SAAAgC,EAAAwnD,GACA,IAAAp5C,EAYA,OAXApO,EAAAJ,KAAAkV,KAAA3M,KAAAxH,QAEAyN,EAAAxO,KAAAkV,KAAA3M,KAAAjB,MAAA,EAAAlH,GACAJ,KAAAkV,KAAA3M,KAAAvI,KAAAkV,KAAA3M,KAAAjB,MAAAlH,IAGAoO,EAFApO,IAAAJ,KAAAkV,KAAA3M,KAAAxH,OAEAf,KAAA0a,QAGAktC,EAAA5nD,KAAA6nD,WAAAznD,GAAAJ,KAAA8nD,WAAA1nD,GAEAoO,CACA,GACA,CACArQ,IAAA,QACAC,MAAA,WACA,OAAA4B,KAAAkV,KAAA3M,IACA,GAGA,CACApK,IAAA,aACAC,MAAA,SAAAgC,GACA,IAAAU,EAAAd,KAAAkV,KACA1U,EAAA,EACAgO,EAAA1N,EAAAyH,KAEA,IADAnI,GAAAoO,EAAAzN,OACAD,EAAAA,EAAAc,MAAA,CACA,IAAAoJ,EAAAlK,EAAAyH,KACAw/C,EAAA3nD,EAAA4K,EAAAjK,OAAAiK,EAAAjK,OAAAX,EAGA,GAFA2nD,IAAA/8C,EAAAjK,OAAAyN,GAAAxD,EAAAwD,GAAAxD,EAAA1D,MAAA,EAAAlH,GAEA,IADAA,GAAA2nD,GACA,CACAA,IAAA/8C,EAAAjK,UACAP,EACAM,EAAAc,KAAA5B,KAAAkV,KAAApU,EAAAc,KAAA5B,KAAAkV,KAAAlV,KAAAmV,KAAA,OAEAnV,KAAAkV,KAAApU,EACAA,EAAAyH,KAAAyC,EAAA1D,MAAAygD,IAEA,KACA,GACAvnD,CACA,CAEA,OADAR,KAAAe,QAAAP,EACAgO,CACA,GAGA,CACArQ,IAAA,aACAC,MAAA,SAAAgC,GACA,IAAAoO,EAAArI,EAAAY,YAAA3G,GACAU,EAAAd,KAAAkV,KACA1U,EAAA,EAGA,IAFAM,EAAAyH,KAAAH,KAAAoG,GACApO,GAAAU,EAAAyH,KAAAxH,OACAD,EAAAA,EAAAc,MAAA,CACA,IAAAgF,EAAA9F,EAAAyH,KACAw/C,EAAA3nD,EAAAwG,EAAA7F,OAAA6F,EAAA7F,OAAAX,EAGA,GAFAwG,EAAAwB,KAAAoG,EAAAA,EAAAzN,OAAAX,EAAA,EAAA2nD,GAEA,IADA3nD,GAAA2nD,GACA,CACAA,IAAAnhD,EAAA7F,UACAP,EACAM,EAAAc,KAAA5B,KAAAkV,KAAApU,EAAAc,KAAA5B,KAAAkV,KAAAlV,KAAAmV,KAAA,OAEAnV,KAAAkV,KAAApU,EACAA,EAAAyH,KAAA3B,EAAAU,MAAAygD,IAEA,KACA,GACAvnD,CACA,CAEA,OADAR,KAAAe,QAAAP,EACAgO,CACA,GAGA,CACArQ,IAAAmpD,EACAlpD,MAAA,SAAAkmD,EAAA3hC,GACA,OAAA/U,EAAA5N,KAAA+mD,EAAAA,EAAA,CAAA,EAAApkC,GAAA,CAAA,EAAA,CAEAqlC,MAAA,EAEAC,eAAA,IAEA,MA5KAd,EAAAK,EAAAvkD,UAAAykD,GAAAC,GAAAR,EAAAK,EAAAG,GAAArpD,OAAAC,eAAAipD,EAAA,YAAA,CAAA9oD,UAAA,IA8KA67C,CACA,CApKA,EzF0vbA,EAAE,CAAC3yC,OAAS,GAAGq4C,KAAO,KAAK,GAAG,CAAC,SAASx/C,EAAQf,EAAOD,IACvD,SAAW0jB,IAAS,W0F1tbpB,SAAA+kC,EAAAnoD,EAAAuC,GACA6lD,EAAApoD,EAAAuC,GACA8lD,EAAAroD,EACA,CACA,SAAAqoD,EAAAroD,GACAA,EAAAs5C,iBAAAt5C,EAAAs5C,eAAAyC,WACA/7C,EAAA25C,iBAAA35C,EAAA25C,eAAAoC,WACA/7C,EAAAwY,KAAA,QACA,CAkBA,SAAA4vC,EAAApoD,EAAAuC,GACAvC,EAAAwY,KAAA,QAAAjW,EACA,CAYA5C,EAAAD,QAAA,CACAs2C,QAzFA,SAAAzzC,EAAAjB,GACA,IAAAw+C,EAAA7/C,KACAqoD,EAAAroD,KAAA05C,gBAAA15C,KAAA05C,eAAAC,UACA2O,EAAAtoD,KAAAq5C,gBAAAr5C,KAAAq5C,eAAAM,UACA,OAAA0O,GAAAC,GACAjnD,EACAA,EAAAiB,GACAA,IACAtC,KAAAq5C,eAEAr5C,KAAAq5C,eAAA2J,eACAhjD,KAAAq5C,eAAA2J,cAAA,EACA7/B,EAAAmnB,SAAA6d,EAAAnoD,KAAAsC,IAHA6gB,EAAAmnB,SAAA6d,EAAAnoD,KAAAsC,IAMAtC,OAMAA,KAAA05C,iBACA15C,KAAA05C,eAAAC,WAAA,GAIA35C,KAAAq5C,iBACAr5C,KAAAq5C,eAAAM,WAAA,GAEA35C,KAAAo8C,SAAA95C,GAAA,MAAA,SAAAA,IACAjB,GAAAiB,EACAu9C,EAAAxG,eAEAwG,EAAAxG,eAAA2J,aAIA7/B,EAAAmnB,SAAA8d,EAAAvI,IAHAA,EAAAxG,eAAA2J,cAAA,EACA7/B,EAAAmnB,SAAA4d,EAAArI,EAAAv9C,IAHA6gB,EAAAmnB,SAAA4d,EAAArI,EAAAv9C,GAOAjB,GACA8hB,EAAAmnB,SAAA8d,EAAAvI,GACAx+C,EAAAiB,IAEA6gB,EAAAmnB,SAAA8d,EAAAvI,EAEA,IACA7/C,KACA,EA2CAg9C,UAjCA,WACAh9C,KAAA05C,iBACA15C,KAAA05C,eAAAC,WAAA,EACA35C,KAAA05C,eAAA8B,SAAA,EACAx7C,KAAA05C,eAAAJ,OAAA,EACAt5C,KAAA05C,eAAA6B,YAAA,GAEAv7C,KAAAq5C,iBACAr5C,KAAAq5C,eAAAM,WAAA,EACA35C,KAAAq5C,eAAAC,OAAA,EACAt5C,KAAAq5C,eAAAiJ,QAAA,EACAtiD,KAAAq5C,eAAAgJ,aAAA,EACAriD,KAAAq5C,eAAAkK,aAAA,EACAvjD,KAAAq5C,eAAA+E,UAAA,EACAp+C,KAAAq5C,eAAA2J,cAAA,EAEA,EAkBAjI,eAdA,SAAA9L,EAAA3sC,GAOA,IAAA8hD,EAAAnV,EAAAyK,eACAyE,EAAAlP,EAAAoK,eACA+K,GAAAA,EAAArI,aAAAoC,GAAAA,EAAApC,YAAA9M,EAAA8G,QAAAzzC,GAAA2sC,EAAA12B,KAAA,QAAAjW,EACA,E1FoxbC,GAAEjD,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAElC,EAAE,CAACyjB,SAAW,KAAK,GAAG,CAAC,SAASzjB,EAAQf,EAAOD,G2F32b/C,IAAA8oD,EAAA9nD,EAAA,mBAAAu3C,MAAAuQ,2BAYA,SAAAzmD,IAAA,CAoEApC,EAAAD,QAhEA,SAAA+oD,EAAAvZ,EAAAO,EAAA9sC,GACA,GAAA,mBAAA8sC,EAAA,OAAAgZ,EAAAvZ,EAAA,KAAAO,GACAA,IAAAA,EAAA,CAAA,GACA9sC,EAlBA,SAAAA,GACA,IAAA6jC,GAAA,EACA,OAAA,WACA,IAAAA,EAAA,CACAA,GAAA,EACA,IAAA,IAAAkiB,EAAA9mD,UAAAZ,OAAA0B,EAAA,IAAAM,MAAA0lD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IACAjmD,EAAAimD,GAAA/mD,UAAA+mD,GAEAhmD,EAAAhB,MAAA1B,KAAAyC,EALA,CAMA,CACA,CAQAZ,CAAAa,GAAAZ,GACA,IAAAq3C,EAAA3J,EAAA2J,WAAA,IAAA3J,EAAA2J,UAAAlK,EAAAkK,SACAz6C,EAAA8wC,EAAA9wC,WAAA,IAAA8wC,EAAA9wC,UAAAuwC,EAAAvwC,SACAiqD,EAAA,WACA1Z,EAAAvwC,UAAAwgD,GACA,EACA0J,EAAA3Z,EAAAoK,gBAAApK,EAAAoK,eAAA+E,SACAc,EAAA,WACAxgD,GAAA,EACAkqD,GAAA,EACAzP,GAAAz2C,EAAArD,KAAA4vC,EACA,EACA4Z,EAAA5Z,EAAAyK,gBAAAzK,EAAAyK,eAAA6B,WACAnC,EAAA,WACAD,GAAA,EACA0P,GAAA,EACAnqD,GAAAgE,EAAArD,KAAA4vC,EACA,EACAyG,EAAA,SAAApzC,GACAI,EAAArD,KAAA4vC,EAAA3sC,EACA,EACA28C,EAAA,WACA,IAAA38C,EACA,OAAA62C,IAAA0P,GACA5Z,EAAAyK,gBAAAzK,EAAAyK,eAAAJ,QAAAh3C,EAAA,IAAAimD,GACA7lD,EAAArD,KAAA4vC,EAAA3sC,IAEA5D,IAAAkqD,GACA3Z,EAAAoK,gBAAApK,EAAAoK,eAAAC,QAAAh3C,EAAA,IAAAimD,GACA7lD,EAAArD,KAAA4vC,EAAA3sC,SAFA,CAIA,EACAwmD,EAAA,WACA7Z,EAAAiB,IAAA34B,GAAA,SAAA2nC,EACA,EAcA,OAtDA,SAAAjQ,GACA,OAAAA,EAAAlkB,WAAA,mBAAAkkB,EAAA0B,KACA,CAuCAoY,CAAA9Z,GAIAvwC,IAAAuwC,EAAAoK,iBAEApK,EAAA13B,GAAA,MAAAoxC,GACA1Z,EAAA13B,GAAA,QAAAoxC,KANA1Z,EAAA13B,GAAA,WAAA2nC,GACAjQ,EAAA13B,GAAA,QAAA0nC,GACAhQ,EAAAiB,IAAA4Y,IAAA7Z,EAAA13B,GAAA,UAAAuxC,IAMA7Z,EAAA13B,GAAA,MAAA6hC,GACAnK,EAAA13B,GAAA,SAAA2nC,IACA,IAAA1P,EAAA7iC,OAAAsiC,EAAA13B,GAAA,QAAAm+B,GACAzG,EAAA13B,GAAA,QAAA0nC,GACA,WACAhQ,EAAA/3B,eAAA,WAAAgoC,GACAjQ,EAAA/3B,eAAA,QAAA+nC,GACAhQ,EAAA/3B,eAAA,UAAA4xC,GACA7Z,EAAAiB,KAAAjB,EAAAiB,IAAAh5B,eAAA,SAAAgoC,GACAjQ,EAAA/3B,eAAA,MAAAyxC,GACA1Z,EAAA/3B,eAAA,QAAAyxC,GACA1Z,EAAA/3B,eAAA,SAAAgoC,GACAjQ,EAAA/3B,eAAA,MAAAkiC,GACAnK,EAAA/3B,eAAA,QAAAw+B,GACAzG,EAAA/3B,eAAA,QAAA+nC,EACA,CACA,C3Fm3bA,EAAE,CAAC,kBAAkB,KAAK,GAAG,CAAC,SAASx+C,EAAQf,EAAOD,G4Fv8btDC,EAAAD,QAAA,WACA,MAAA,IAAAmB,MAAA,gDACA,C5F08bA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASH,EAAQf,EAAOD,G6Fv8blC,IAAA+oD,EASA,IAAA9N,EAAAj6C,EAAA,mBAAAu3C,MACAgR,EAAAtO,EAAAsO,iBACAjH,EAAArH,EAAAqH,qBACA,SAAAjgD,EAAAQ,GAEA,GAAAA,EAAA,MAAAA,CACA,CA+BA,SAAAjD,EAAAoC,GACAA,GACA,CACA,SAAA8tC,EAAAvoC,EAAA0gC,GACA,OAAA1gC,EAAAuoC,KAAA7H,EACA,CA6BAhoC,EAAAD,QAvBA,WACA,IAAA,IAAAgpD,EAAA9mD,UAAAZ,OAAAkoD,EAAA,IAAAlmD,MAAA0lD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IACAO,EAAAP,GAAA/mD,UAAA+mD,GAEA,IAKA/7C,EALAjK,EATA,SAAAumD,GACA,OAAAA,EAAAloD,OACA,mBAAAkoD,EAAAA,EAAAloD,OAAA,GAAAe,EACAmnD,EAAAtmD,MAFAb,CAGA,CAKAonD,CAAAD,GAEA,GADAlmD,MAAAC,QAAAimD,EAAA,MAAAA,EAAAA,EAAA,IACAA,EAAAloD,OAAA,EACA,MAAA,IAAAioD,EAAA,WAGA,IAAAG,EAAAF,EAAA/c,KAAA,SAAA+C,EAAA1uC,GACA,IAAAi7C,EAAAj7C,EAAA0oD,EAAAloD,OAAA,EAEA,OAnDA,SAAAkuC,EAAAuM,EAAAiH,EAAA//C,GACAA,EAnBA,SAAAA,GACA,IAAA6jC,GAAA,EACA,OAAA,WACAA,IACAA,GAAA,EACA7jC,EAAAhB,WAAA,EAAAC,WACA,CACA,CAYAE,CAAAa,GACA,IAAA0mD,GAAA,EACAna,EAAA13B,GAAA,SAAA,WACA6xC,GAAA,CACA,SACAjqD,IAAAqpD,IAAAA,EAAA/nD,EAAA,oBACA+nD,EAAAvZ,EAAA,CACAkK,SAAAqC,EACA98C,SAAA+jD,IACA,SAAAngD,GACA,GAAAA,EAAA,OAAAI,EAAAJ,GACA8mD,GAAA,EACA1mD,GACA,IACA,IAAAi3C,GAAA,EACA,OAAA,SAAAr3C,GACA,IAAA8mD,IACAzP,EAIA,OAHAA,GAAA,EAtBA,SAAA1K,GACA,OAAAA,EAAAlkB,WAAA,mBAAAkkB,EAAA0B,KACA,CAuBAoY,CAAA9Z,GAAAA,EAAA0B,QACA,mBAAA1B,EAAA8G,QAAA9G,EAAA8G,eACArzC,EAAAJ,GAAA,IAAAy/C,EAAA,QACA,CACA,CAyBAsH,CAAApa,EAAAuM,EADAj7C,EAAA,GACA,SAAA+B,GACAqK,IAAAA,EAAArK,GACAA,GAAA6mD,EAAA7jC,QAAAjmB,GACAm8C,IACA2N,EAAA7jC,QAAAjmB,GACAqD,EAAAiK,GACA,GACA,IACA,OAAAs8C,EAAAK,OAAA/Z,EACA,C7F+8bA,EAAE,CAAC,kBAAkB,GAAG,kBAAkB,KAAK,GAAG,CAAC,SAAS9uC,EAAQf,EAAOD,G8Fjic3E,IAAA8pD,EAAA9oD,EAAA,mBAAAu3C,MAAAuR,sBAiBA7pD,EAAAD,QAAA,CACAg7C,iBAdA,SAAAxhC,EAAA0J,EAAA6mC,EAAAvO,GACA,IAAAwO,EAJA,SAAA9mC,EAAAs4B,EAAAuO,GACA,OAAA,MAAA7mC,EAAA62B,cAAA72B,EAAA62B,cAAAyB,EAAAt4B,EAAA6mC,GAAA,IACA,CAEAE,CAAA/mC,EAAAs4B,EAAAuO,GACA,GAAA,MAAAC,EAAA,CACA,IAAAp7C,SAAAo7C,IAAA7lD,KAAA+X,MAAA8tC,KAAAA,GAAAA,EAAA,EAEA,MAAA,IAAAF,EADAtO,EAAAuO,EAAA,gBACAC,GAEA,OAAA7lD,KAAA+X,MAAA8tC,EACA,CAGA,OAAAxwC,EAAAiiC,WAAA,GAAA,KACA,E9FwicA,EAAE,CAAC,kBAAkB,KAAK,GAAG,CAAC,SAASz6C,EAAQf,EAAOD,G+F1jctDC,EAAAD,QAAAgB,EAAA,UAAAkW,Y/F6jcA,EAAE,CAACuB,OAAS,KAAK,GAAG,CAAC,SAASzX,EAAQf,EAAOD,IgG7jc7CA,EAAAC,EAAAD,QAAAgB,EAAA,8BACAw5C,OAAAx6C,EACAA,EAAA82C,SAAA92C,EACAA,EAAAszC,SAAAtyC,EAAA,6BACAhB,EAAAw5C,OAAAx4C,EAAA,2BACAhB,EAAAo6C,UAAAp5C,EAAA,8BACAhB,EAAAm6C,YAAAn5C,EAAA,gCACAhB,EAAA2+C,SAAA39C,EAAA,2CACAhB,EAAAkqD,SAAAlpD,EAAA,qChGgkcA,EAAE,CAAC,0BAA0B,GAAG,+BAA+B,GAAG,4BAA4B,GAAG,6BAA6B,GAAG,4BAA4B,GAAG,0CAA0C,GAAG,qCAAqC,KAAK,GAAG,CAAC,SAASA,EAAQf,EAAOD,GiG/icnR,IAAA0G,EAAA1F,EAAA,eAAA0F,OAGAgB,EAAAhB,EAAAgB,YAAA,SAAAD,GAEA,QADAA,EAAA,GAAAA,IACAA,EAAA6B,eACA,IAAA,MAAA,IAAA,OAAA,IAAA,QAAA,IAAA,QAAA,IAAA,SAAA,IAAA,SAAA,IAAA,OAAA,IAAA,QAAA,IAAA,UAAA,IAAA,WAAA,IAAA,MACA,OAAA,EACA,QACA,OAAA,EAEA,EA0CA,SAAAsxC,EAAAnzC,GAEA,IAAA6gD,EACA,OAFA/nD,KAAAkH,SAXA,SAAAi2C,GACA,IAAAyM,EA/BA,SAAAzM,GACA,IAAAA,EAAA,MAAA,OAEA,IADA,IAAA0M,IAEA,OAAA1M,GACA,IAAA,OACA,IAAA,QACA,MAAA,OACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,MAAA,UACA,IAAA,SACA,IAAA,SACA,MAAA,SACA,IAAA,SACA,IAAA,QACA,IAAA,MACA,OAAAA,EACA,QACA,GAAA0M,EAAA,OACA1M,GAAA,GAAAA,GAAAp0C,cACA8gD,GAAA,EAGA,CAKAC,CAAA3M,GACA,GAAA,iBAAAyM,IAAAzjD,EAAAgB,aAAAA,IAAAA,EAAAg2C,IAAA,MAAA,IAAAv8C,MAAA,qBAAAu8C,GACA,OAAAyM,GAAAzM,CACA,CAOA4M,CAAA7iD,GAEAlH,KAAAkH,UACA,IAAA,UACAlH,KAAAgqD,KAAAC,EACAjqD,KAAA+F,IAAAmkD,EACAnC,EAAA,EACA,MACA,IAAA,OACA/nD,KAAAmqD,SAAAC,EACArC,EAAA,EACA,MACA,IAAA,SACA/nD,KAAAgqD,KAAAK,EACArqD,KAAA+F,IAAAukD,EACAvC,EAAA,EACA,MACA,QAGA,OAFA/nD,KAAAqH,MAAAkjD,OACAvqD,KAAA+F,IAAAykD,GAGAxqD,KAAAyqD,SAAA,EACAzqD,KAAA0qD,UAAA,EACA1qD,KAAA2qD,SAAAxkD,EAAAY,YAAAghD,EACA,CAmCA,SAAA6C,EAAAC,GACA,OAAAA,GAAA,IAAA,EAAAA,GAAA,GAAA,EAAA,EAAAA,GAAA,GAAA,GAAA,EAAAA,GAAA,GAAA,GAAA,EACAA,GAAA,GAAA,GAAA,GAAA,CACA,CA0DA,SAAAT,EAAAxjD,GACA,IAAA9F,EAAAd,KAAA0qD,UAAA1qD,KAAAyqD,SACAvqD,EAtBA,SAAAH,EAAA6G,EAAA9F,GACA,GAAA,MAAA,IAAA8F,EAAA,IAEA,OADA7G,EAAA0qD,SAAA,EACA,IAEA,GAAA1qD,EAAA0qD,SAAA,GAAA7jD,EAAA7F,OAAA,EAAA,CACA,GAAA,MAAA,IAAA6F,EAAA,IAEA,OADA7G,EAAA0qD,SAAA,EACA,IAEA,GAAA1qD,EAAA0qD,SAAA,GAAA7jD,EAAA7F,OAAA,GACA,MAAA,IAAA6F,EAAA,IAEA,OADA7G,EAAA0qD,SAAA,EACA,GAGA,CACA,CAKAK,CAAA9qD,KAAA4G,GACA,YAAAzH,IAAAe,EAAAA,EACAF,KAAAyqD,UAAA7jD,EAAA7F,QACA6F,EAAAwB,KAAApI,KAAA2qD,SAAA7pD,EAAA,EAAAd,KAAAyqD,UACAzqD,KAAA2qD,SAAAznD,SAAAlD,KAAAkH,SAAA,EAAAlH,KAAA0qD,aAEA9jD,EAAAwB,KAAApI,KAAA2qD,SAAA7pD,EAAA,EAAA8F,EAAA7F,aACAf,KAAAyqD,UAAA7jD,EAAA7F,QACA,CA0BA,SAAAkpD,EAAArjD,EAAArG,GACA,IAAAqG,EAAA7F,OAAAR,GAAA,GAAA,EAAA,CACA,IAAAL,EAAA0G,EAAA1D,SAAA,UAAA3C,GACA,GAAAL,EAAA,CACA,IAAAM,EAAAN,EAAAgF,WAAAhF,EAAAa,OAAA,GACA,GAAAP,GAAA,OAAAA,GAAA,MAKA,OAJAR,KAAAyqD,SAAA,EACAzqD,KAAA0qD,UAAA,EACA1qD,KAAA2qD,SAAA,GAAA/jD,EAAAA,EAAA7F,OAAA,GACAf,KAAA2qD,SAAA,GAAA/jD,EAAAA,EAAA7F,OAAA,GACAb,EAAAoH,MAAA,GAAA,EAEA,CACA,OAAApH,CACA,CAIA,OAHAF,KAAAyqD,SAAA,EACAzqD,KAAA0qD,UAAA,EACA1qD,KAAA2qD,SAAA,GAAA/jD,EAAAA,EAAA7F,OAAA,GACA6F,EAAA1D,SAAA,UAAA3C,EAAAqG,EAAA7F,OAAA,EACA,CAIA,SAAAmpD,EAAAtjD,GACA,IAAA1G,EAAA0G,GAAAA,EAAA7F,OAAAf,KAAAqH,MAAAT,GAAA,GACA,GAAA5G,KAAAyqD,SAAA,CACA,IAAA1kD,EAAA/F,KAAA0qD,UAAA1qD,KAAAyqD,SACA,OAAAvqD,EAAAF,KAAA2qD,SAAAznD,SAAA,UAAA,EAAA6C,EACA,CACA,OAAA7F,CACA,CAEA,SAAAmqD,EAAAzjD,EAAArG,GACA,IAAAH,GAAAwG,EAAA7F,OAAAR,GAAA,EACA,OAAA,IAAAH,EAAAwG,EAAA1D,SAAA,SAAA3C,IACAP,KAAAyqD,SAAA,EAAArqD,EACAJ,KAAA0qD,UAAA,EACA,IAAAtqD,EACAJ,KAAA2qD,SAAA,GAAA/jD,EAAAA,EAAA7F,OAAA,IAEAf,KAAA2qD,SAAA,GAAA/jD,EAAAA,EAAA7F,OAAA,GACAf,KAAA2qD,SAAA,GAAA/jD,EAAAA,EAAA7F,OAAA,IAEA6F,EAAA1D,SAAA,SAAA3C,EAAAqG,EAAA7F,OAAAX,GACA,CAEA,SAAAkqD,EAAA1jD,GACA,IAAA1G,EAAA0G,GAAAA,EAAA7F,OAAAf,KAAAqH,MAAAT,GAAA,GACA,OAAA5G,KAAAyqD,SAAAvqD,EAAAF,KAAA2qD,SAAAznD,SAAA,SAAA,EAAA,EAAAlD,KAAAyqD,UACAvqD,CACA,CAGA,SAAAqqD,EAAA3jD,GACA,OAAAA,EAAA1D,SAAAlD,KAAAkH,SACA,CAEA,SAAAsjD,EAAA5jD,GACA,OAAAA,GAAAA,EAAA7F,OAAAf,KAAAqH,MAAAT,GAAA,EACA,CA1NAnH,EAAA46C,cAAAA,EA6BAA,EAAAp3C,UAAAoE,MAAA,SAAAT,GACA,GAAA,IAAAA,EAAA7F,OAAA,MAAA,GACA,IAAAb,EACAK,EACA,GAAAP,KAAAyqD,SAAA,CAEA,QAAAtrD,KADAe,EAAAF,KAAAmqD,SAAAvjD,IACA,MAAA,GACArG,EAAAP,KAAAyqD,SACAzqD,KAAAyqD,SAAA,CACA,MACAlqD,EAAA,EAEA,OAAAA,EAAAqG,EAAA7F,OAAAb,EAAAA,EAAAF,KAAAgqD,KAAApjD,EAAArG,GAAAP,KAAAgqD,KAAApjD,EAAArG,GACAL,GAAA,EACA,EAEAm6C,EAAAp3C,UAAA8C,IAwGA,SAAAa,GACA,IAAA1G,EAAA0G,GAAAA,EAAA7F,OAAAf,KAAAqH,MAAAT,GAAA,GACA,OAAA5G,KAAAyqD,SAAAvqD,EAAA,IACAA,CACA,EAzGAm6C,EAAAp3C,UAAA+mD,KA0FA,SAAApjD,EAAArG,GACA,IAAAwqD,EArEA,SAAAhrD,EAAA6G,EAAArG,GACA,IAAA8J,EAAAzD,EAAA7F,OAAA,EACA,GAAAsJ,EAAA9J,EAAA,OAAA,EACA,IAAAwnD,EAAA6C,EAAAhkD,EAAAyD,IACA,GAAA09C,GAAA,EAEA,OADAA,EAAA,IAAAhoD,EAAA0qD,SAAA1C,EAAA,GACAA,EAEA,KAAA19C,EAAA9J,IAAA,IAAAwnD,EAAA,OAAA,EAEA,GADAA,EAAA6C,EAAAhkD,EAAAyD,IACA09C,GAAA,EAEA,OADAA,EAAA,IAAAhoD,EAAA0qD,SAAA1C,EAAA,GACAA,EAEA,KAAA19C,EAAA9J,IAAA,IAAAwnD,EAAA,OAAA,EAEA,GADAA,EAAA6C,EAAAhkD,EAAAyD,IACA09C,GAAA,EAIA,OAHAA,EAAA,IACA,IAAAA,EAAAA,EAAA,EAAAhoD,EAAA0qD,SAAA1C,EAAA,GAEAA,EAEA,OAAA,CACA,CA8CAiD,CAAAhrD,KAAA4G,EAAArG,GACA,IAAAP,KAAAyqD,SAAA,OAAA7jD,EAAA1D,SAAA,OAAA3C,GACAP,KAAA0qD,UAAAK,EACA,IAAAhlD,EAAAa,EAAA7F,QAAAgqD,EAAA/qD,KAAAyqD,UAEA,OADA7jD,EAAAwB,KAAApI,KAAA2qD,SAAA,EAAA5kD,GACAa,EAAA1D,SAAA,OAAA3C,EAAAwF,EACA,EA9FAs0C,EAAAp3C,UAAAknD,SAAA,SAAAvjD,GACA,GAAA5G,KAAAyqD,UAAA7jD,EAAA7F,OAEA,OADA6F,EAAAwB,KAAApI,KAAA2qD,SAAA3qD,KAAA0qD,UAAA1qD,KAAAyqD,SAAA,EAAAzqD,KAAAyqD,UACAzqD,KAAA2qD,SAAAznD,SAAAlD,KAAAkH,SAAA,EAAAlH,KAAA0qD,WAEA9jD,EAAAwB,KAAApI,KAAA2qD,SAAA3qD,KAAA0qD,UAAA1qD,KAAAyqD,SAAA,EAAA7jD,EAAA7F,QACAf,KAAAyqD,UAAA7jD,EAAA7F,MACA,CjG0ucA,EAAE,CAAC,cAAc,KAAK,IAAI,CAAC,SAASN,EAAQf,EAAOD,IACnD,SAAW8C,EAAa0oD,IAAgB,WkGl3cxC,IAAA3gB,EAAA7pC,EAAA,sBAAA6pC,SACA5oC,EAAA2U,SAAApT,UAAAvB,MACA4F,EAAAvE,MAAAE,UAAAqE,MACA4jD,EAAA,CAAA,EACAC,EAAA,EAaA,SAAAC,EAAAC,EAAAC,GACAtrD,KAAAurD,IAAAF,EACArrD,KAAAwrD,SAAAF,CACA,CAZA7rD,EAAAwE,WAAA,WACA,OAAA,IAAAmnD,EAAA1pD,EAAArC,KAAA4E,WAAApE,OAAA8B,WAAA+nC,aACA,EACAjqC,EAAAgsD,YAAA,WACA,OAAA,IAAAL,EAAA1pD,EAAArC,KAAAosD,YAAA5rD,OAAA8B,WAAA+pD,cACA,EACAjsD,EAAAiqC,aACAjqC,EAAAisD,cAAA,SAAAzhB,GAAAA,EAAA6M,OAAA,EAMAsU,EAAAnoD,UAAA0oD,MAAAP,EAAAnoD,UAAA2oD,IAAA,WAAA,EACAR,EAAAnoD,UAAA6zC,MAAA,WACA92C,KAAAwrD,SAAAnsD,KAAAQ,OAAAG,KAAAurD,IACA,EAGA9rD,EAAAosD,OAAA,SAAAC,EAAAC,GACAriB,aAAAoiB,EAAAE,gBACAF,EAAAG,aAAAF,CACA,EAEAtsD,EAAAysD,SAAA,SAAAJ,GACApiB,aAAAoiB,EAAAE,gBACAF,EAAAG,cAAA,CACA,EAEAxsD,EAAA0sD,aAAA1sD,EAAA2sD,OAAA,SAAAN,GACApiB,aAAAoiB,EAAAE,gBAEA,IAAAD,EAAAD,EAAAG,aACAF,GAAA,IACAD,EAAAE,eAAA/nD,YAAA,WACA6nD,EAAAO,YACAP,EAAAO,YACA,GAAAN,GAEA,EAGAtsD,EAAA8C,aAAA,mBAAAA,EAAAA,EAAA,SAAAd,GACA,IAAA4pD,EAAAF,IACA1oD,IAAAd,UAAAZ,OAAA,IAAAuG,EAAAjI,KAAAsC,UAAA,GAkBA,OAhBAupD,EAAAG,IAAA,EAEA/gB,GAAA,WACA4gB,EAAAG,KAGA5oD,EACAhB,EAAAC,MAAA,KAAAe,GAEAhB,EAAApC,KAAA,MAGAI,EAAAwrD,eAAAI,GAEA,IAEAA,CACA,EAEA5rD,EAAAwrD,eAAA,mBAAAA,EAAAA,EAAA,SAAAI,UACAH,EAAAG,EACA,ClGo3cC,GAAEhsD,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,UAAU8B,aAAa9B,EAAQ,UAAUwqD,eAE3E,EAAE,CAAC,qBAAqB,GAAG/mD,OAAS,MAAM,IAAI,CAAC,SAASzD,EAAQf,EAAOD,GmG16cvE,IAAA0rC,EAAA1qC,EAAA,YACAw/C,EAAAx/C,EAAA,UASA,SAAA6rD,IACAtsD,KAAA46B,SAAA,KACA56B,KAAAusD,QAAA,KACAvsD,KAAA4vC,KAAA,KACA5vC,KAAAqwC,KAAA,KACArwC,KAAA2vC,KAAA,KACA3vC,KAAA0vC,SAAA,KACA1vC,KAAAwsD,KAAA,KACAxsD,KAAAgxC,OAAA,KACAhxC,KAAAysD,MAAA,KACAzsD,KAAA0sD,SAAA,KACA1sD,KAAAme,KAAA,KACAne,KAAA2sD,KAAA,IACA,CApBAltD,EAAAklB,MAAAioC,EACAntD,EAAAsX,QA0ZA,SAAAiwC,EAAAvf,GACA,OAAAmlB,EAAA5F,GAAA,GAAA,GAAAjwC,QAAA0wB,EACA,EA3ZAhoC,EAAAotD,cAiaA,SAAA7F,EAAAvf,GACA,OAAAuf,EACA4F,EAAA5F,GAAA,GAAA,GAAA6F,cAAAplB,GADAA,CAEA,EAnaAhoC,EAAAopC,OAsVA,SAAA3qC,GAKA+hD,EAAA6M,SAAA5uD,KAAAA,EAAA0uD,EAAA1uD,IACA,OAAAA,aAAAouD,EACApuD,EAAA2qC,SADAyjB,EAAArpD,UAAA4lC,OAAAxpC,KAAAnB,EAEA,EA5VAuB,EAAA6sD,IAAAA,EAqBA,IAAAS,EAAA,oBACAC,EAAA,WAGAC,EAAA,qCAOAC,EAAA,CAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA7oD,OAHA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,OAMA8oD,EAAA,CAAA,KAAA9oD,OAAA6oD,GAKAE,EAAA,CAAA,IAAA,IAAA,IAAA,IAAA,KAAA/oD,OAAA8oD,GACAE,EAAA,CAAA,IAAA,IAAA,KAEAC,EAAA,yBACAC,EAAA,+BAEAC,EAAA,CACAC,YAAA,EACA,eAAA,GAGAC,EAAA,CACAD,YAAA,EACA,eAAA,GAGAE,EAAA,CACAnzB,MAAA,EACAC,OAAA,EACAmzB,KAAA,EACAC,QAAA,EACAC,MAAA,EACA,SAAA,EACA,UAAA,EACA,QAAA,EACA,WAAA,EACA,SAAA,GAEAze,EAAA5uC,EAAA,eAEA,SAAAmsD,EAAA/2B,EAAAk4B,EAAAC,GACA,GAAAn4B,GAAAoqB,EAAAgO,SAAAp4B,IAAAA,aAAAy2B,EAAA,OAAAz2B,EAEA,IAAAn1B,EAAA,IAAA4rD,EAEA,OADA5rD,EAAAikB,MAAAkR,EAAAk4B,EAAAC,GACAttD,CACA,CAEA4rD,EAAArpD,UAAA0hB,MAAA,SAAAkR,EAAAk4B,EAAAC,GACA,IAAA/N,EAAA6M,SAAAj3B,GACA,MAAA,IAAAv2B,UAAA,gDAAAu2B,GAMA,IAAAq4B,EAAAr4B,EAAAhwB,QAAA,KACAsoD,GACA,IAAAD,GAAAA,EAAAr4B,EAAAhwB,QAAA,KAAA,IAAA,IACAuoD,EAAAv4B,EAAA3jB,MAAAi8C,GAEAC,EAAA,GAAAA,EAAA,GAAAvgD,QADA,MACA,KAGA,IAAA/J,EAFA+xB,EAAAu4B,EAAAzoD,KAAAwoD,GAQA,GAFArqD,EAAAA,EAAAgK,QAEAkgD,GAAA,IAAAn4B,EAAA3jB,MAAA,KAAAnR,OAAA,CAEA,IAAAstD,EAAApB,EAAAqB,KAAAxqD,GACA,GAAAuqD,EAeA,OAdAruD,KAAAme,KAAAra,EACA9D,KAAA2sD,KAAA7oD,EACA9D,KAAA0sD,SAAA2B,EAAA,GACAA,EAAA,IACAruD,KAAAgxC,OAAAqd,EAAA,GAEAruD,KAAAysD,MADAsB,EACA1e,EAAA1qB,MAAA3kB,KAAAgxC,OAAApmC,OAAA,IAEA5K,KAAAgxC,OAAApmC,OAAA,IAEAmjD,IACA/tD,KAAAgxC,OAAA,GACAhxC,KAAAysD,MAAA,CAAA,GAEAzsD,IAEA,CAEA,IAAA0mC,EAAAqmB,EAAAuB,KAAAxqD,GACA,GAAA4iC,EAAA,CAEA,IAAA6nB,GADA7nB,EAAAA,EAAA,IACA39B,cACA/I,KAAA46B,SAAA2zB,EACAzqD,EAAAA,EAAA8G,OAAA87B,EAAA3lC,OACA,CAMA,GAAAitD,GAAAtnB,GAAA5iC,EAAA6pB,MAAA,wBAAA,CACA,IAAA4+B,EAAA,OAAAzoD,EAAA8G,OAAA,EAAA,IACA2hD,GAAA7lB,GAAAgnB,EAAAhnB,KACA5iC,EAAAA,EAAA8G,OAAA,GACA5K,KAAAusD,SAAA,EAEA,CAEA,IAAAmB,EAAAhnB,KACA6lB,GAAA7lB,IAAAinB,EAAAjnB,IAAA,CAmBA,IADA,IASAkJ,EAAA4e,EATAC,GAAA,EACAluD,EAAA,EAAAA,EAAA8sD,EAAAtsD,OAAAR,IAAA,EAEA,KADAmuD,EAAA5qD,EAAA+B,QAAAwnD,EAAA9sD,QACA,IAAAkuD,GAAAC,EAAAD,KACAA,EAAAC,EACA,EAgBA,KATAF,GAFA,IAAAC,EAEA3qD,EAAA+F,YAAA,KAIA/F,EAAA+F,YAAA,IAAA4kD,MAMA7e,EAAA9rC,EAAAwD,MAAA,EAAAknD,GACA1qD,EAAAA,EAAAwD,MAAAknD,EAAA,GACAxuD,KAAA4vC,KAAA1X,mBAAA0X,IAIA6e,GAAA,EACA,IAAAluD,EAAA,EAAAA,EAAA6sD,EAAArsD,OAAAR,IAAA,CACA,IAAAmuD,GACA,KADAA,EAAA5qD,EAAA+B,QAAAunD,EAAA7sD,QACA,IAAAkuD,GAAAC,EAAAD,KACAA,EAAAC,EACA,EAEA,IAAAD,IACAA,EAAA3qD,EAAA/C,QAEAf,KAAAqwC,KAAAvsC,EAAAwD,MAAA,EAAAmnD,GACA3qD,EAAAA,EAAAwD,MAAAmnD,GAGAzuD,KAAA2uD,YAIA3uD,KAAA0vC,SAAA1vC,KAAA0vC,UAAA,GAIA,IAAAkf,EAAA,MAAA5uD,KAAA0vC,SAAA,IACA,MAAA1vC,KAAA0vC,SAAA1vC,KAAA0vC,SAAA3uC,OAAA,GAGA,IAAA6tD,EAEA,IADA,IAAAC,EAAA7uD,KAAA0vC,SAAAx9B,MAAA,MACAmsC,GAAA99C,EAAA,EAAAsuD,EAAA9tD,QAAAR,EAAA89C,EAAA99C,IAAA,CACA,IAAAuuD,EAAAD,EAAAtuD,GACA,GAAAuuD,IACAA,EAAAnhC,MAAA2/B,GAAA,CAEA,IADA,IAAAyB,EAAA,GACA1kD,EAAA,EAAA7G,EAAAsrD,EAAA/tD,OAAAsJ,EAAA7G,EAAA6G,IACAykD,EAAA5pD,WAAAmF,GAAA,IAIA0kD,GAAA,IAEAA,GAAAD,EAAAzkD,GAIA,IAAA0kD,EAAAphC,MAAA2/B,GAAA,CACA,IAAA0B,EAAAH,EAAAvnD,MAAA,EAAA/G,GACA0uD,EAAAJ,EAAAvnD,MAAA/G,EAAA,GACA2uD,EAAAJ,EAAAnhC,MAAA4/B,GACA2B,IACAF,EAAApsD,KAAAssD,EAAA,IACAD,EAAAz2C,QAAA02C,EAAA,KAEAD,EAAAluD,SACA+C,EAAA,IAAAmrD,EAAAtpD,KAAA,KAAA7B,GAEA9D,KAAA0vC,SAAAsf,EAAArpD,KAAA,KACA,KACA,CACA,CACA,CAGA3F,KAAA0vC,SAAA3uC,OAjNA,IAkNAf,KAAA0vC,SAAA,GAGA1vC,KAAA0vC,SAAA1vC,KAAA0vC,SAAA3mC,cAGA6lD,IAKA5uD,KAAA0vC,SAAAvE,EAAA2C,QAAA9tC,KAAA0vC,WAGA,IAAA5uC,EAAAd,KAAA2vC,KAAA,IAAA3vC,KAAA2vC,KAAA,GACAwf,EAAAnvD,KAAA0vC,UAAA,GACA1vC,KAAAqwC,KAAA8e,EAAAruD,EACAd,KAAA2sD,MAAA3sD,KAAAqwC,KAIAue,IACA5uD,KAAA0vC,SAAA1vC,KAAA0vC,SAAA9kC,OAAA,EAAA5K,KAAA0vC,SAAA3uC,OAAA,GACA,MAAA+C,EAAA,KACAA,EAAA,IAAAA,GAGA,CAIA,IAAA0pD,EAAAe,GAKA,IAAAhuD,EAAA,EAAA89C,EAAA8O,EAAApsD,OAAAR,EAAA89C,EAAA99C,IAAA,CACA,IAAA6uD,EAAAjC,EAAA5sD,GACA,IAAA,IAAAuD,EAAA+B,QAAAupD,GAAA,CAEA,IAAAC,EAAAvgB,mBAAAsgB,GACAC,IAAAD,IACAC,EAAAC,OAAAF,IAEAtrD,EAAAA,EAAAoO,MAAAk9C,GAAAzpD,KAAA0pD,EALA,CAMA,CAKA,IAAA7C,EAAA1oD,EAAA+B,QAAA,MACA,IAAA2mD,IAEAxsD,KAAAwsD,KAAA1oD,EAAA8G,OAAA4hD,GACA1oD,EAAAA,EAAAwD,MAAA,EAAAklD,IAEA,IAAA+C,EAAAzrD,EAAA+B,QAAA,KAoBA,IAnBA,IAAA0pD,GACAvvD,KAAAgxC,OAAAltC,EAAA8G,OAAA2kD,GACAvvD,KAAAysD,MAAA3oD,EAAA8G,OAAA2kD,EAAA,GACAxB,IACA/tD,KAAAysD,MAAApd,EAAA1qB,MAAA3kB,KAAAysD,QAEA3oD,EAAAA,EAAAwD,MAAA,EAAAioD,IACAxB,IAEA/tD,KAAAgxC,OAAA,GACAhxC,KAAAysD,MAAA,CAAA,GAEA3oD,IAAA9D,KAAA0sD,SAAA5oD,GACA6pD,EAAAY,IACAvuD,KAAA0vC,WAAA1vC,KAAA0sD,WACA1sD,KAAA0sD,SAAA,KAIA1sD,KAAA0sD,UAAA1sD,KAAAgxC,OAAA,CACAlwC,EAAAd,KAAA0sD,UAAA,GAAA,IACApxB,EAAAt7B,KAAAgxC,QAAA,GACAhxC,KAAAme,KAAArd,EAAAw6B,CACA,CAIA,OADAt7B,KAAA2sD,KAAA3sD,KAAA6oC,SACA7oC,IACA,EAaAssD,EAAArpD,UAAA4lC,OAAA,WACA,IAAA+G,EAAA5vC,KAAA4vC,MAAA,GACAA,IAEAA,GADAA,EAAAd,mBAAAc,IACA/hC,QAAA,OAAA,KACA+hC,GAAA,KAGA,IAAAhV,EAAA56B,KAAA46B,UAAA,GACA8xB,EAAA1sD,KAAA0sD,UAAA,GACAF,EAAAxsD,KAAAwsD,MAAA,GACAnc,GAAA,EACAoc,EAAA,GAEAzsD,KAAAqwC,KACAA,EAAAT,EAAA5vC,KAAAqwC,KACArwC,KAAA0vC,WACAW,EAAAT,IAAA,IAAA5vC,KAAA0vC,SAAA7pC,QAAA,KACA7F,KAAA0vC,SACA,IAAA1vC,KAAA0vC,SAAA,KACA1vC,KAAA2vC,OACAU,GAAA,IAAArwC,KAAA2vC,OAIA3vC,KAAAysD,OACAxM,EAAAgO,SAAAjuD,KAAAysD,QACAnuD,OAAAiF,KAAAvD,KAAAysD,OAAA1rD,SACA0rD,EAAApd,EAAAvxB,UAAA9d,KAAAysD,QAGA,IAAAzb,EAAAhxC,KAAAgxC,QAAAyb,GAAA,IAAAA,GAAA,GAsBA,OApBA7xB,GAAA,MAAAA,EAAAhwB,QAAA,KAAAgwB,GAAA,KAIA56B,KAAAusD,WACA3xB,GAAA+yB,EAAA/yB,MAAA,IAAAyV,GACAA,EAAA,MAAAA,GAAA,IACAqc,GAAA,MAAAA,EAAAplC,OAAA,KAAAolC,EAAA,IAAAA,IACArc,IACAA,EAAA,IAGAmc,GAAA,MAAAA,EAAAllC,OAAA,KAAAklC,EAAA,IAAAA,GACAxb,GAAA,MAAAA,EAAA1pB,OAAA,KAAA0pB,EAAA,IAAAA,GAOApW,EAAAyV,GALAqc,EAAAA,EAAA7+C,QAAA,SAAA,SAAA8f,GACA,OAAAmhB,mBAAAnhB,EACA,MACAqjB,EAAAA,EAAAnjC,QAAA,IAAA,QAEA2+C,CACA,EAMAF,EAAArpD,UAAA8T,QAAA,SAAA0wB,GACA,OAAAznC,KAAA6sD,cAAAD,EAAAnlB,GAAA,GAAA,IAAAoB,QACA,EAOAyjB,EAAArpD,UAAA4pD,cAAA,SAAAplB,GACA,GAAAwY,EAAA6M,SAAArlB,GAAA,CACA,IAAA+nB,EAAA,IAAAlD,EACAkD,EAAA7qC,MAAA8iB,GAAA,GAAA,GACAA,EAAA+nB,CACA,CAIA,IAFA,IAAArjB,EAAA,IAAAmgB,EACAmD,EAAAnxD,OAAAiF,KAAAvD,MACA0vD,EAAA,EAAAA,EAAAD,EAAA1uD,OAAA2uD,IAAA,CACA,IAAAC,EAAAF,EAAAC,GACAvjB,EAAAwjB,GAAA3vD,KAAA2vD,EACA,CAOA,GAHAxjB,EAAAqgB,KAAA/kB,EAAA+kB,KAGA,KAAA/kB,EAAAklB,KAEA,OADAxgB,EAAAwgB,KAAAxgB,EAAAtD,SACAsD,EAIA,GAAA1E,EAAA8kB,UAAA9kB,EAAA7M,SAAA,CAGA,IADA,IAAAg1B,EAAAtxD,OAAAiF,KAAAkkC,GACAooB,EAAA,EAAAA,EAAAD,EAAA7uD,OAAA8uD,IAAA,CACA,IAAAC,EAAAF,EAAAC,GACA,aAAAC,IACA3jB,EAAA2jB,GAAAroB,EAAAqoB,GACA,CASA,OANAnC,EAAAxhB,EAAAvR,WACAuR,EAAAuD,WAAAvD,EAAAugB,WACAvgB,EAAAhuB,KAAAguB,EAAAugB,SAAA,KAGAvgB,EAAAwgB,KAAAxgB,EAAAtD,SACAsD,CACA,CAEA,GAAA1E,EAAA7M,UAAA6M,EAAA7M,WAAAuR,EAAAvR,SAAA,CASA,IAAA+yB,EAAAlmB,EAAA7M,UAAA,CAEA,IADA,IAAAr3B,EAAAjF,OAAAiF,KAAAkkC,GACA+G,EAAA,EAAAA,EAAAjrC,EAAAxC,OAAAytC,IAAA,CACA,IAAAhrC,EAAAD,EAAAirC,GACArC,EAAA3oC,GAAAikC,EAAAjkC,EACA,CAEA,OADA2oC,EAAAwgB,KAAAxgB,EAAAtD,SACAsD,CACA,CAGA,GADAA,EAAAvR,SAAA6M,EAAA7M,SACA6M,EAAA4I,MAAAqd,EAAAjmB,EAAA7M,UASAuR,EAAAugB,SAAAjlB,EAAAilB,aATA,CAEA,IADA,IAAAqD,GAAAtoB,EAAAilB,UAAA,IAAAx6C,MAAA,KACA69C,EAAAhvD,UAAA0mC,EAAA4I,KAAA0f,EAAAr1C,WACA+sB,EAAA4I,OAAA5I,EAAA4I,KAAA,IACA5I,EAAAiI,WAAAjI,EAAAiI,SAAA,IACA,KAAAqgB,EAAA,IAAAA,EAAAv3C,QAAA,IACAu3C,EAAAhvD,OAAA,GAAAgvD,EAAAv3C,QAAA,IACA2zB,EAAAugB,SAAAqD,EAAApqD,KAAA,IACA,CAUA,GAPAwmC,EAAA6E,OAAAvJ,EAAAuJ,OACA7E,EAAAsgB,MAAAhlB,EAAAglB,MACAtgB,EAAAkE,KAAA5I,EAAA4I,MAAA,GACAlE,EAAAyD,KAAAnI,EAAAmI,KACAzD,EAAAuD,SAAAjI,EAAAiI,UAAAjI,EAAA4I,KACAlE,EAAAwD,KAAAlI,EAAAkI,KAEAxD,EAAAugB,UAAAvgB,EAAA6E,OAAA,CACA,IAAAlwC,EAAAqrC,EAAAugB,UAAA,GACApxB,EAAA6Q,EAAA6E,QAAA,GACA7E,EAAAhuB,KAAArd,EAAAw6B,CACA,CAGA,OAFA6Q,EAAAogB,QAAApgB,EAAAogB,SAAA9kB,EAAA8kB,QACApgB,EAAAwgB,KAAAxgB,EAAAtD,SACAsD,CACA,CAEA,IAAA6jB,EAAA7jB,EAAAugB,UAAA,MAAAvgB,EAAAugB,SAAAplC,OAAA,GACA2oC,EACAxoB,EAAA4I,MACA5I,EAAAilB,UAAA,MAAAjlB,EAAAilB,SAAAplC,OAAA,GAEA4oC,EAAAD,GAAAD,GACA7jB,EAAAkE,MAAA5I,EAAAilB,SACAyD,EAAAD,EACAE,EAAAjkB,EAAAugB,UAAAvgB,EAAAugB,SAAAx6C,MAAA,MAAA,GAEAm+C,GADAN,EAAAtoB,EAAAilB,UAAAjlB,EAAAilB,SAAAx6C,MAAA,MAAA,GACAi6B,EAAAvR,WAAA+yB,EAAAxhB,EAAAvR,WA2BA,GApBAy1B,IACAlkB,EAAAuD,SAAA,GACAvD,EAAAwD,KAAA,KACAxD,EAAAkE,OACA,KAAA+f,EAAA,GAAAA,EAAA,GAAAjkB,EAAAkE,KACA+f,EAAA53C,QAAA2zB,EAAAkE,OAEAlE,EAAAkE,KAAA,GACA5I,EAAA7M,WACA6M,EAAAiI,SAAA,KACAjI,EAAAkI,KAAA,KACAlI,EAAA4I,OACA,KAAA0f,EAAA,GAAAA,EAAA,GAAAtoB,EAAA4I,KACA0f,EAAAv3C,QAAAivB,EAAA4I,OAEA5I,EAAA4I,KAAA,MAEA6f,EAAAA,IAAA,KAAAH,EAAA,IAAA,KAAAK,EAAA,KAGAH,EAEA9jB,EAAAkE,KAAA5I,EAAA4I,MAAA,KAAA5I,EAAA4I,KACA5I,EAAA4I,KAAAlE,EAAAkE,KACAlE,EAAAuD,SAAAjI,EAAAiI,UAAA,KAAAjI,EAAAiI,SACAjI,EAAAiI,SAAAvD,EAAAuD,SACAvD,EAAA6E,OAAAvJ,EAAAuJ,OACA7E,EAAAsgB,MAAAhlB,EAAAglB,MACA2D,EAAAL,OAEA,GAAAA,EAAAhvD,OAGAqvD,IAAAA,EAAA,IACAA,EAAAztD,MACAytD,EAAAA,EAAA/rD,OAAA0rD,GACA5jB,EAAA6E,OAAAvJ,EAAAuJ,OACA7E,EAAAsgB,MAAAhlB,EAAAglB,WACA,IAAAxM,EAAAqQ,kBAAA7oB,EAAAuJ,QAAA,CAIA,GAAAqf,EACAlkB,EAAAuD,SAAAvD,EAAAkE,KAAA+f,EAAA11C,SAIA61C,KAAApkB,EAAAkE,MAAAlE,EAAAkE,KAAAxqC,QAAA,KAAA,IACAsmC,EAAAkE,KAAAn+B,MAAA,QAEAi6B,EAAAyD,KAAA2gB,EAAA71C,QACAyxB,EAAAkE,KAAAlE,EAAAuD,SAAA6gB,EAAA71C,SAWA,OARAyxB,EAAA6E,OAAAvJ,EAAAuJ,OACA7E,EAAAsgB,MAAAhlB,EAAAglB,MAEAxM,EAAAuQ,OAAArkB,EAAAugB,WAAAzM,EAAAuQ,OAAArkB,EAAA6E,UACA7E,EAAAhuB,MAAAguB,EAAAugB,SAAAvgB,EAAAugB,SAAA,KACAvgB,EAAA6E,OAAA7E,EAAA6E,OAAA,KAEA7E,EAAAwgB,KAAAxgB,EAAAtD,SACAsD,CACA,CAEA,IAAAikB,EAAArvD,OAWA,OARAorC,EAAAugB,SAAA,KAEAvgB,EAAA6E,OACA7E,EAAAhuB,KAAA,IAAAguB,EAAA6E,OAEA7E,EAAAhuB,KAAA,KAEAguB,EAAAwgB,KAAAxgB,EAAAtD,SACAsD,EAcA,IARA,IAAA0Y,EAAAuL,EAAA9oD,OAAA,GAAA,GACAmpD,GACAtkB,EAAAkE,MAAA5I,EAAA4I,MAAA+f,EAAArvD,OAAA,KACA,MAAA8jD,GAAA,OAAAA,IAAA,KAAAA,EAIA6L,EAAA,EACAnwD,EAAA6vD,EAAArvD,OAAAR,GAAA,EAAAA,IAEA,OADAskD,EAAAuL,EAAA7vD,IAEA6vD,EAAA52B,OAAAj5B,EAAA,GACA,OAAAskD,GACAuL,EAAA52B,OAAAj5B,EAAA,GACAmwD,KACAA,IACAN,EAAA52B,OAAAj5B,EAAA,GACAmwD,KAKA,IAAAR,IAAAC,EACA,KAAAO,IAAAA,EACAN,EAAA53C,QAAA,OAIA03C,GAAA,KAAAE,EAAA,IACAA,EAAA,IAAA,MAAAA,EAAA,GAAA9oC,OAAA,IACA8oC,EAAA53C,QAAA,IAGAi4C,GAAA,MAAAL,EAAAzqD,KAAA,KAAAiF,QAAA,IACAwlD,EAAAxtD,KAAA,IAGA,IAUA2tD,EAVAjpB,EAAA,KAAA8oB,EAAA,IACAA,EAAA,IAAA,MAAAA,EAAA,GAAA9oC,OAAA,GAGA+oC,IACAlkB,EAAAuD,SAAAvD,EAAAkE,KAAA/I,EAAA,GACA8oB,EAAArvD,OAAAqvD,EAAA11C,QAAA,IAIA61C,KAAApkB,EAAAkE,MAAAlE,EAAAkE,KAAAxqC,QAAA,KAAA,IACAsmC,EAAAkE,KAAAn+B,MAAA,QAEAi6B,EAAAyD,KAAA2gB,EAAA71C,QACAyxB,EAAAkE,KAAAlE,EAAAuD,SAAA6gB,EAAA71C,UAyBA,OArBAw1C,EAAAA,GAAA/jB,EAAAkE,MAAA+f,EAAArvD,UAEAumC,GACA8oB,EAAA53C,QAAA,IAGA43C,EAAArvD,OAIAorC,EAAAugB,SAAA0D,EAAAzqD,KAAA,MAHAwmC,EAAAugB,SAAA,KACAvgB,EAAAhuB,KAAA,MAMA8hC,EAAAuQ,OAAArkB,EAAAugB,WAAAzM,EAAAuQ,OAAArkB,EAAA6E,UACA7E,EAAAhuB,MAAAguB,EAAAugB,SAAAvgB,EAAAugB,SAAA,KACAvgB,EAAA6E,OAAA7E,EAAA6E,OAAA,KAEA7E,EAAAyD,KAAAnI,EAAAmI,MAAAzD,EAAAyD,KACAzD,EAAAogB,QAAApgB,EAAAogB,SAAA9kB,EAAA8kB,QACApgB,EAAAwgB,KAAAxgB,EAAAtD,SACAsD,CACA,EAEAmgB,EAAArpD,UAAA0rD,UAAA,WACA,IAAAte,EAAArwC,KAAAqwC,KACAV,EAAAqd,EAAAsB,KAAAje,GACAV,IAEA,OADAA,EAAAA,EAAA,MAEA3vC,KAAA2vC,KAAAA,EAAA/kC,OAAA,IAEAylC,EAAAA,EAAAzlC,OAAA,EAAAylC,EAAAtvC,OAAA4uC,EAAA5uC,SAEAsvC,IAAArwC,KAAA0vC,SAAAW,EACA,CnGo8cA,EAAE,CAAC,SAAS,IAAIlF,SAAW,GAAGkE,YAAc,KAAK,IAAI,CAAC,SAAS5uC,EAAQf,EAAOD,GoG7pe9EC,EAAAD,QAAA,CACAqtD,SAAA,SAAAnuD,GACA,MAAA,iBAAAA,CACA,EACAsvD,SAAA,SAAAtvD,GACA,MAAA,iBAAAA,GAAA,OAAAA,CACA,EACA6xD,OAAA,SAAA7xD,GACA,OAAA,OAAAA,CACA,EACA2xD,kBAAA,SAAA3xD,GACA,OAAA,MAAAA,CACA,EpGmqeA,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS8B,EAAQf,EAAOD,IACnC,SAAWK,IAAQ,WqG1nenB,SAAA6wD,EAAAp+C,GAEA,IACA,IAAAzS,EAAA8wD,aAAA,OAAA,CACA,CAAA,MAAAtM,GACA,OAAA,CACA,CACA,IAAA56C,EAAA5J,EAAA8wD,aAAAr+C,GACA,OAAA,MAAA7I,GACA,SAAA7K,OAAA6K,GAAAX,aACA,CA7DArJ,EAAAD,QAoBA,SAAAgC,EAAAs3C,GACA,GAAA4X,EAAA,iBACA,OAAAlvD,EAGA,IAAAgX,GAAA,EAeA,OAdA,WACA,IAAAA,EAAA,CACA,GAAAk4C,EAAA,oBACA,MAAA,IAAA/vD,MAAAm4C,GACA4X,EAAA,oBACAjkD,QAAAmP,MAAAk9B,GAEArsC,QAAAkM,KAAAmgC,GAEAtgC,GAAA,CACA,CACA,OAAAhX,EAAAC,MAAA1B,KAAA2B,UACA,CAGA,CrGyseC,GAAEtC,KAAKW,KAAM,GAAEX,KAAKW,KAAuB,oBAAXF,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAElJ,EAAE,CAAC,GAAG,IAAI,CAAC,SAASY,EAAQf,EAAOD,GsGpvenCC,EAAAD,QACA,SAAA6mC,EAAA7kC,EAAAJ,GACA,GAAAI,GAAAJ,EAAA,OAAAilC,EAAA7kC,EAAA6kC,CAAAjlC,GAEA,GAAA,mBAAAI,EACA,MAAA,IAAAnC,UAAA,yBAMA,OAJAhB,OAAAiF,KAAA9B,GAAA6jB,SAAA,SAAA9hB,GACAqtD,EAAArtD,GAAA/B,EAAA+B,EACA,IAEAqtD,EAEA,SAAAA,IAEA,IADA,IAAApuD,EAAA,IAAAM,MAAApB,UAAAZ,QACAR,EAAA,EAAAA,EAAAkC,EAAA1B,OAAAR,IACAkC,EAAAlC,GAAAoB,UAAApB,GAEA,IAAAiO,EAAA/M,EAAAC,MAAA1B,KAAAyC,GACApB,EAAAoB,EAAAA,EAAA1B,OAAA,GAMA,MALA,mBAAAyN,GAAAA,IAAAnN,GACA/C,OAAAiF,KAAAlC,GAAAikB,SAAA,SAAA9hB,GACAgL,EAAAhL,GAAAnC,EAAAmC,EACA,IAEAgL,CACA,CACA,CtG4veA,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS/N,EAAQf,EAAOD,GuG5xenCC,EAAAD,QAIA,WAGA,IAFA,IAAAsO,EAAA,CAAA,EAEAxN,EAAA,EAAAA,EAAAoB,UAAAZ,OAAAR,IAAA,CACA,IAAAymD,EAAArlD,UAAApB,GAEA,IAAA,IAAApC,KAAA6oD,EACAvjD,EAAApE,KAAA2nD,EAAA7oD,KACA4P,EAAA5P,GAAA6oD,EAAA7oD,GAGA,CAEA,OAAA4P,CACA,EAhBA,IAAAtK,EAAAnF,OAAA2E,UAAAQ,cvG+yeA,EAAE,CAAC,GAAG,IAAI,CAAC,SAAShD,EAAQf,EAAOD,GwG3yenC,MAAAqxD,EAAArwD,EAAA,aAEA,iBAAAZ,SAEAA,OAAAI,KAAA6wD,GAGApxD,EAAAD,QAAAqxD,CxGmzeA,EAAE,CAAC,YAAY,MAAM,IAAI,CAAC,SAASrwD,EAAQf,EAAOD,GyGh0elD,MAAAgoB,EAAAhnB,EAAA,SAAAooB,oBAmGAnpB,EAAAD,QAjGA,cAAAgoB,EAEAnV,YAAAI,EAAA+P,EAAA7P,GAEAC,MAAAH,EAAA+P,EAAA7P,GAEA5S,KAAA8S,YAAA,wBAGA9S,KAAA+wD,WAAA,EACA/wD,KAAAgxD,aAAA,EACA,iBAAAnxD,SAEAG,KAAA+wD,WAAA,OAEA,IAAAlxD,OAAAoxD,UAAA,mBAAApxD,OAAAoxD,SAAAC,mBAEAlxD,KAAAgxD,aAAA,IAKAhxD,KAAAmxD,WAAA,EACAnxD,KAAAoxD,QAAA,EACApxD,KAAA+wD,gBAAA,IAAAlxD,OAAAuxD,SAEApxD,KAAAmxD,WAAA,GAIAnxD,KAAAqxD,sBAAA,EAGArxD,KAAAsxD,sBAAA,CACA,CAEAC,cAAAr0B,EAAAs0B,GAEA,GAAAxxD,KAAAqxD,qBAEA,OAAArxD,KAAAqxD,qBAAAn0B,EAAAs0B,GAEA,GAAAxxD,KAAAmxD,UACA,CAEAtxD,OAAAuxD,OAAAl0B,GAMAu0B,KAAAD,EAEA,MACA,GAAAxxD,KAAA+wD,WAAA/wD,KAAAgxD,YACA,CACA,IAAAU,EAAA7xD,OAAAoxD,SAAAC,iBAAAh0B,GAEA,IAAA,IAAA38B,EAAA,EAAAA,EAAAmxD,EAAA3wD,OAAAR,IAEAmxD,EAAAnxD,GAAAoxD,UAAAH,CAEA,MAIAxxD,KAAA4d,IAAA/B,MAAA,2BAAAxX,OAAA64B,EAAA,MAAAs0B,EAEA,CAEAI,cAAA10B,EAAAs0B,GAEA,GAAAxxD,KAAAsxD,qBAEA,OAAAtxD,KAAAsxD,qBAAAp0B,EAAAs0B,GAEA,GAAAxxD,KAAAmxD,UACA,CACAtxD,OAAAuxD,OAAAl0B,GACA3nB,OAAAi8C,EACA,MACA,GAAAxxD,KAAA+wD,WAAA/wD,KAAAgxD,YACA,CACA,IAAAU,EAAA7xD,OAAAoxD,SAAAC,iBAAAh0B,GACA,IAAA,IAAA38B,EAAA,EAAAA,EAAAmxD,EAAA3wD,OAAAR,IAEAmxD,EAAAnxD,GAAAsxD,mBAAA,YAAAL,EAEA,MAIAxxD,KAAA4d,IAAA/B,MAAA,2BAAAxX,OAAA64B,EAAA,MAAAs0B,EAEA,EzGq0eA,EAAE,CAAC9uC,MAAQ,KAAK,IAAI,CAAC,SAASjiB,EAAQf,EAAOD,G0Gr6e7C,MAAAgoB,EAAAhnB,EAAA,SAAAooB,oBAoJAnpB,EAAAD,QAlJA,cAAAgoB,EAEAnV,YAAAI,EAAA+P,EAAA7P,GAEAC,MAAAH,EAAA+P,EAAA7P,GAAA3U,iBAAA+B,KAAA,gBA6EA,SAAA8xD,EAAAC,EAAA9/B,GAEAjyB,KAAAgyD,gBAAAF,GAIA9xD,KAAAiyD,MAAAH,GAAAp9C,OACA,KAEA,IAAAw9C,EACA,CACAr8B,IAAA,GAAAxxB,OAAArE,KAAA2iB,QAAAwvC,WAAA9tD,OAAAytD,EAAA,uBAAAztD,OAAA0tD,IAIA,OAFAG,EAAAlyD,KAAAu1B,sBAAA28B,GAEAlyD,KAAAoyD,WAAA77B,QAAA27B,GACA,CAAAr8C,EAAAigB,EAAAu8B,KAEA,GAAAx8C,EAGA,OADA7V,KAAA4d,IAAAjR,MAAA,uCAAAtI,OAAAytD,EAAA,mBAAAztD,OAAA0tD,EAAA,mBAAA1tD,OAAA6tD,EAAAr8B,IAAA,OAAAxxB,OAAAwR,IACAoc,EAAApc,GAEA,IAAAy8C,EAAA,EACAD,EAAAE,QAEAD,EAAAD,EAAAE,OAGA,IAAAC,EAAA,GACAC,EAAAzyD,KAAA2iB,QAAA+vC,kBACA,IAAA,IAAAnyD,EAAA,EAAAA,EAAA+xD,EAAAG,EAAAlyD,IAGAiyD,EAAA5vD,KAAA,GAAAyB,OAAArE,KAAA2iB,QAAAwvC,WAAA9tD,OAAAytD,EAAA,iBAAAztD,OAAA0tD,EAAA,KAAA1tD,OAAA9D,EAAAkyD,EAAA,KAAApuD,OAAAouD,IAGA,IAAAE,EAAA,GAEA3yD,KAAA0iB,MAAA+O,QAAAC,UAAA8gC,EAAA,GACA,CAAAI,EAAAC,KAEA,IAAAn9B,EACA,CACAG,IAAA,GAAAxxB,OAAArE,KAAA2iB,QAAAwvC,WAAA9tD,OAAAuuD,IAEAl9B,EAAA11B,KAAAu1B,sBAAAG,GAEA11B,KAAAoyD,WAAA77B,QAAAq8B,GACA,CAAAE,EAAAC,EAAAC,KAEAL,EAAAA,EAAAtuD,OAAA2uD,GAEAH,EAAAC,KACA,IAEAG,GAEAhhC,EAAAghC,EAAAN,IACA,GACA,GAEA,IAzIA3yD,KAAA8S,YAAA,qBAEA9S,KAAA0iB,MAAAoC,SAAAouC,qBAEAlzD,KAAA2iB,QAAAwvC,UAAAnyD,KAAA0iB,MAAAoC,SAAAouC,qBAEAlzD,KAAA2iB,QAAAwvC,YAEAnyD,KAAA2iB,QAAAwvC,UAAA,SAGAnyD,KAAA0iB,MAAAoC,SAAAquC,6BAEAnzD,KAAA2iB,QAAA+vC,kBAAA1yD,KAAA0iB,MAAAoC,SAAAquC,6BAEAnzD,KAAA2iB,QAAA+vC,oBAEA1yD,KAAA2iB,QAAA+vC,kBAAA,KAGA1yD,KAAAoyD,WAAApyD,KAAA0iB,MAAA6G,eAAAf,8CAAA,cAEAxoB,KAAAiyD,MAAA,CAAA,EAEAjyD,KAAAu1B,sBAAA9S,GAAAA,CACA,CAEAuvC,gBAAAF,GAGA9xD,KAAAiyD,MAAAxuD,eAAAquD,KAEA9xD,KAAAiyD,MAAAH,GAAA9xD,KAAA0iB,MAAA6G,eAAAf,8CAAA,eAGAxoB,KAAAiyD,MAAAH,GAAA3+C,OAAA,IACAnT,KAAAiyD,MAAAH,GAAA5+C,UAAA,IAEAlT,KAAA0iB,MAAA0wC,OAAAtB,GAAA9xD,KAAAiyD,MAAAH,GAAA1+C,UAEA,CAEAigD,UAAAvB,EAAAwB,EAAArhC,GAEAjyB,KAAAgyD,gBAAAF,GAEA9xD,KAAAiyD,MAAAH,GAAAp9C,OACA,KAEA,IAAA6+C,EAAAvzD,KAAAiyD,MAAAH,GAAA7nD,KAAAqpD,GAEA,GAAAC,EAEA,OAAAA,EAGA,IAAA79B,EACA,CACAG,IAAA,GAAAxxB,OAAArE,KAAA2iB,QAAAwvC,WAAA9tD,OAAAytD,EAAA,KAAAztD,OAAAivD,IAIA,OAFA59B,EAAA11B,KAAAu1B,sBAAAG,GAEA11B,KAAAoyD,WAAA77B,QAAAb,GACA,CAAA7f,EAAAigB,EAAAu8B,KAEAA,GAEAryD,KAAAiyD,MAAAH,GAAAz+C,IAAAg/C,EAAAiB,GAEArhC,EAAApc,EAAAw8C,KACA,GAGA,E1G0+eA,EAAE,CAAC3vC,MAAQ,KAAK,IAAI,CAAC,SAASjiB,EAAQf,EAAOD,G2G3jf7C,MAAAgoB,EAAAhnB,EAAA,SAAAooB,oBAmHAnpB,EAAAD,QAjHA,cAAAgoB,EAEAnV,YAAAI,EAAA+P,EAAA7P,GAEAC,MAAAH,EAAA+P,EAAA7P,GAEA5S,KAAA8S,YAAA,uBAEA9S,KAAAs4B,UAAA,CAAA,EACAt4B,KAAAwzD,gBAAA,CAAA,EAKAxzD,KAAAyzD,iBAAA,GAGAzzD,KAAA0zD,qBAAA36B,IAAA,CACA,CAEA46B,YAAA56B,EAAA66B,EAAAC,GAEA7zD,KAAAs4B,UAAAS,GAAA66B,EAIA5zD,KAAAwzD,gBAAAz6B,GAFA,iBAAA86B,EAEAA,EAIA,uBAAAxvD,OAAA00B,EAAA,gDAAA10B,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,IAEA,CAEAogD,mBAAAC,EAAAC,EAAAJ,EAAAK,GAEA,IACAC,EAAA,CACAC,OAAAJ,EACAK,QAAAJ,EACAn7B,SAAA+6B,EACA5M,OALA,iBAAAiN,EAAAA,EAAA,8BAAA5vD,OAAA0vD,EAAA,OAAA1vD,OAAA2vD,EAAA,mDAAA3vD,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAOA,iBAAAkgD,GAEA5zD,KAAA4d,IAAAjR,MAAA,uEAEA3M,KAAAyzD,iBAAA7wD,KAAAsxD,EACA,CAEAG,yBAAAt7B,GAYA,IAAA,IAAAx4B,EAAA,EAAAA,EAAAP,KAAAyzD,iBAAA1yD,OAAAR,IAEA,GAAAw4B,EAAAlzB,QAAA7F,KAAAyzD,iBAAAlzD,GAAA6zD,UAAAr7B,EAAAh4B,OAAAf,KAAAyzD,iBAAAlzD,GAAA6zD,QAAArzD,QACA,GAAAg4B,EAAAlzB,QAAA7F,KAAAyzD,iBAAAlzD,GAAA4zD,QAIA,OAFAn0D,KAAAs4B,UAAAS,GAAA/4B,KAAAyzD,iBAAAlzD,GAAAs4B,SACA74B,KAAAwzD,gBAAAz6B,GAAA,6CAAA10B,OAAA00B,EAAA,yCAAA10B,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,YAAArP,OAAArE,KAAAyzD,iBAAAlzD,GAAA4zD,OAAA,SAAA9vD,OAAArE,KAAAyzD,iBAAAlzD,GAAA6zD,QAAA,KACAp0D,KAAAs4B,UAAAS,GAGA,OAAA,CACA,CAEAu7B,YAAAv7B,GAaA,OATA/4B,KAAAs4B,UAAA70B,eAAAs1B,IAEA/4B,KAAAu0D,aAAAx7B,GAGA/4B,KAAAs4B,UAAA70B,eAAAs1B,IAEA/4B,KAAAq0D,yBAAAt7B,KAEA/4B,KAAAs4B,UAAA70B,eAAAs1B,IAEA/4B,KAAAs4B,UAAAS,EAMA,CAEAw7B,aAAAx7B,GAEA,IAAAC,EAAAh5B,KAAA0zD,qBAAA36B,GASA,OAPAC,IAEAh5B,KAAAs4B,UAAAS,GAAAC,EAAAH,SACA74B,KAAAwzD,gBAAAz6B,GAAA,2BAAA10B,OAAA00B,EAAA,yCAAA10B,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,YAAArP,OAAA20B,EAAAguB,OAAA,MAIAhuB,CACA,E3GgkfA,EAAE,CAACtW,MAAQ,KAAK,IAAI,CAAC,SAASjiB,EAAQf,EAAOD,G4Ghrf7C,MAAAgoB,EAAAhnB,EAAA,SAAAooB,oBAEA2rC,EACA,CACAC,mBAAA,EACAC,2BAAA,EACAC,8BAAA,EAEAC,eAAA,UAEAC,kBAAA,EACAC,cAAA,EAEAC,UAAA,GAEAC,iBAAA,GAEAC,YAAA,GAEAC,UAAA,CAAA,GA0NAx1D,EAAAD,QAvNA,cAAAgoB,EAEAnV,YAAAI,EAAA+P,EAAA7P,GAEAC,MAAAH,EAAA+P,EAAA7P,GACA5S,KAAA2iB,QAAA3iB,KAAA0iB,MAAA+O,QAAA+G,OAAAg8B,EAAAx0D,KAAA2iB,SACA3iB,KAAA8S,YAAA,WAIA,IAAA,IAAAvS,EAAA,EAAAA,EAAAP,KAAA2iB,QAAAoyC,UAAAh0D,OAAAR,IACA,CACA,IAAAy4B,EAAAh5B,KAAA2iB,QAAAoyC,UAAAx0D,GAEAy4B,EAAAv1B,eAAA,SAAAu1B,EAAAv1B,eAAA,aAMAu1B,EAAAm8B,SAEAn8B,EAAAm8B,OAAA,aAAA9wD,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,qBAEA50D,KAAA0iB,MAAA0yC,iBAAAzB,YAAA36B,EAAAtlB,KAAAslB,EAAAq8B,SAAAr8B,EAAAm8B,SARAn1D,KAAA4d,IAAAjR,MAAA,aAAAtI,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,6BAAAvwD,OAAA9D,EAAA,0BAAAy4B,EAUA,CAIA,IAAA,IAAAz4B,EAAA,EAAAA,EAAAP,KAAA2iB,QAAAqyC,iBAAAj0D,OAAAR,IACA,CACA,IAAA2zD,EAAAl0D,KAAA2iB,QAAAqyC,iBAAAz0D,GAEA2zD,EAAAzwD,eAAA,YAAAywD,EAAAzwD,eAAA,aAMAywD,EAAAiB,SAEAjB,EAAAiB,OAAA,aAAA9wD,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,qBAEA50D,KAAA0iB,MAAA0yC,iBAAAtB,mBAAAI,EAAAoB,OAAApB,EAAAqB,QAAArB,EAAAmB,SAAAnB,EAAAiB,SARAn1D,KAAA4d,IAAAjR,MAAA,aAAAtI,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,qCAAAvwD,OAAA9D,EAAA,0BAAA2zD,EAUA,CAOAl0D,KAAAw1D,YAAA,CAAA,EACA,IAAA,IAAAj1D,EAAA,EAAAA,EAAAP,KAAA2iB,QAAAsyC,YAAAl0D,OAAAR,IACA,CACA,IAAAk1D,EAAAz1D,KAAA2iB,QAAAsyC,YAAA10D,GAEAk1D,EAAAhyD,eAAA,mBAAAgyD,EAAAhyD,eAAA,gBAMAzD,KAAAw1D,YAAAC,EAAAC,gBAAAD,EAJAz1D,KAAA4d,IAAAjR,MAAA,aAAAtI,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,+BAAAvwD,OAAA9D,EAAA,0BAAAk1D,EAMA,CAGAz1D,KAAA21D,0BAAA,GAEA31D,KAAA41D,mBAAAC,GAAAA,IAEA71D,KAAA0iB,MAAA+O,QAAA8G,UACA,CACAs9B,GAEA71D,KAAA2iB,QAAAkyC,iBAEA70D,KAAA4b,WAAAi6C,GAGAA,IAEAA,IAEA,GAAA71D,KAAA2iB,QAAAmyC,aAEA,OAAA90D,KAAA81D,YAAA91D,KAAA2iB,QAAA8xC,kBAAA,KAAA,KAAAoB,EACA,IAGAhgD,IAEAA,IAEA7V,KAAA4d,IAAAjR,MAAA,aAAAtI,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,8CAAAvwD,OAAAwR,GAAAA,IACA,IAKA,CAEA+F,WAAAqW,GAEAjyB,KAAA0iB,MAAA+O,QAAA8G,UACA,CACAs9B,IAEA71D,KAAA4d,IAAA3B,KAAA,aAAA5X,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,iCACAiB,KAEA71D,KAAA41D,sBACA51D,KAAA21D,0BACAE,IAEA71D,KAAA4d,IAAA3B,KAAA,aAAA5X,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,8BACAiB,OAGAhgD,IAEAA,GAEA7V,KAAA4d,IAAAjR,MAAA,aAAAtI,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,kCAAAvwD,OAAAwR,GAAAA,GAEAoc,EAAApc,KAGA,CAEAkgD,OAAAC,EAAAC,EAAAC,GAEA,IAAAC,EAAA,iBAAAH,EAAAA,EACA,iBAAAh2D,KAAA2iB,QAAA8xC,mBAAAz0D,KAAA2iB,QAAA8xC,kBACA,IAAA0B,EAGA,OADAn2D,KAAA4d,IAAAjR,MAAA,aAAAtI,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,sBAAAvwD,OAAA8xD,EAAA,YAAA9xD,OAAA2xD,EAAA,6CACA,EAGA,IAAAP,EAAAz1D,KAAAw1D,YAAAW,GAEA,IAAAV,EAGA,OADAz1D,KAAA4d,IAAAjR,MAAA,aAAAtI,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,sBAAAvwD,OAAA8xD,EAAA,YAAA9xD,OAAA2xD,EAAA,kCACA,EAGA,IAAAI,EAAA,iBAAAH,EAAAA,EACA,iBAAAR,EAAAY,0BAAAZ,EAAAY,0BACA,iBAAAr2D,KAAA2iB,QAAA+xC,2BAAA10D,KAAA2iB,QAAA+xC,0BAEA,IAAA0B,EAGA,OADAp2D,KAAA4d,IAAAjR,MAAA,aAAAtI,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,sBAAAvwD,OAAA8xD,EAAA,YAAA9xD,OAAA2xD,EAAA,6DACA,EAGA,IAAAM,EAAA,iBAAAJ,EAAAA,EACA,iBAAAT,EAAAc,cAAAd,EAAAc,cACA,iBAAAv2D,KAAA2iB,QAAAgyC,8BAAA30D,KAAA2iB,QAAAgyC,6BAEA1+B,EAAA,iBAAAqgC,EAAAt2D,KAAA0iB,MAAA8zC,aAAAC,iBAAAH,QAAAn3D,EACAu3D,EAAA12D,KAAA0iB,MAAAi0C,oBAAAlB,EAAAmB,aAAA3gC,GACA,OAAAj2B,KAAA0iB,MAAAm0C,kBAAAtF,cAAA6E,EAAAM,EACA,CAEAZ,YAAAE,EAAAC,EAAAC,EAAAjkC,GAEA,IAAAkkC,EAAA,iBAAAH,GAAAA,EACA,IAAAG,EAGA,OADAn2D,KAAA4d,IAAAjR,MAAA,aAAAtI,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,qCAAAvwD,OAAA8xD,EAAA,YAAA9xD,OAAA2xD,EAAA,0CACA/jC,EAAArxB,MAAA,aAAAyD,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,qCAAAvwD,OAAA8xD,EAAA,YAAA9xD,OAAA2xD,EAAA,2CAGA,IAAAP,EAAAz1D,KAAAw1D,YAAAW,GAEA,IAAAV,EAGA,OADAz1D,KAAA4d,IAAAjR,MAAA,aAAAtI,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,sBAAAvwD,OAAA8xD,EAAA,YAAA9xD,OAAA2xD,EAAA,iCACA/jC,EAAArxB,MAAA,aAAAyD,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,sBAAAvwD,OAAA8xD,EAAA,YAAA9xD,OAAA2xD,EAAA,kCAGA,IAAAI,EAAA,iBAAAH,EAAAA,EACA,iBAAAR,EAAAY,0BAAAZ,EAAAY,0BACA,iBAAAr2D,KAAA2iB,QAAA+xC,2BAAA10D,KAAA2iB,QAAA+xC,0BAEA,IAAA0B,EAGA,OADAp2D,KAAA4d,IAAAjR,MAAA,aAAAtI,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,sBAAAvwD,OAAA8xD,EAAA,YAAA9xD,OAAA2xD,EAAA,4DACA/jC,EAAArxB,MAAA,oBAAAyD,OAAA8xD,KAGA,IAAAG,EAAA,iBAAAJ,EAAAA,EACA,iBAAAT,EAAAc,cAAAd,EAAAc,cACA,iBAAAv2D,KAAA2iB,QAAAgyC,8BAAA30D,KAAA2iB,QAAAgyC,6BAEA1+B,EAAA,iBAAAqgC,EAAAt2D,KAAA0iB,MAAA8zC,aAAAC,iBAAAH,QAAAn3D,EACAa,KAAA0iB,MAAAi0C,oBAAAlB,EAAAmB,aAAA3gC,GACA,CAAApgB,EAAA27C,IAEA37C,GAEA7V,KAAA4d,IAAAjR,MAAA,aAAAtI,OAAArE,KAAA4iB,KAAA,QAAAve,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAA2iB,QAAAiyC,eAAA,uCAAAvwD,OAAA8xD,EAAA,YAAA9xD,OAAA2xD,EAAA,4CAAAngD,GACAoc,EAAApc,KAEA7V,KAAA0iB,MAAAm0C,kBAAAtF,cAAA6E,EAAA5E,GACAv/B,EAAA,KAAAu/B,KAEA,E5GqrfA,EAAE,CAAC9uC,MAAQ,KAAK,IAAI,CAAC,SAASjiB,EAAQf,EAAOD,G6G55f7C,MAAAq3D,EAAAr2D,EAAA,SAEAs2D,EACA,CAEAC,gBAAA,mBAGAC,4BAAA,EAGAC,wBAAA,SAqWAx3D,EAAAD,QAlWA,cAAAq3D,EAEAxkD,YAAAsN,GAEA/M,MAAA+M,GAGA5f,KAAAwpB,gBAAAzc,KAAAgqD,GAGA/2D,KAAAupB,eAAAtB,6BAAA,mBAAAxnB,EAAA,gCACAT,KAAAupB,eAAAtB,6BAAA,iBAAAxnB,EAAA,oCACAT,KAAAupB,eAAAtB,6BAAA,oBAAAxnB,EAAA,iCACAT,KAAAupB,eAAA1B,eAAA,WAAApnB,EAAA,mBAEAT,KAAAupB,eAAArB,2BAAA,gBAEAloB,KAAAm3D,SAAAn3D,KAAAupB,eAAArB,2BAAA,YAEAloB,KAAAo3D,QAAA,CAAA,EAEAp3D,KAAAozD,OAAA,CAAA,EAEApzD,KAAAq3D,kCAAA,EACAr3D,KAAAs3D,yBACA,CAKAC,QAAA90C,EAAA+0C,EAAAC,GAEA,IAAA/hC,EAAA,iBAAAjT,EAAAA,EAAA,CAAA,EACAi1C,EAAA,iBAAAnkD,MAAAA,MAAAvT,KAAA0iB,MAAAM,UAEA,YAAA,IAAAy0C,EAEAz3D,KAAAupB,eAAApB,wCAAA,WAAAuN,EAAAgiC,EAAAD,GAIAz3D,KAAAupB,eAAArB,2BAAA,WAAAwN,EAAAgiC,EAEA,CAEAJ,wBAAAK,GAQA,IAAA33D,KAAAq3D,iCACA,CAQA,IAAAO,EAAAA,CAAArkD,EAAAD,EAAA2e,KAEA,IAAA3c,EAAA/B,EAAAzF,OAEA+pD,GAAA,EACAC,GAAA,EACAC,GAAA,EAKA,GAFAziD,EAAAzP,QAAA,KAEA,EACA,CAEA,IAAAmyD,EAAA1iD,EAAAzP,QAAA,KACAgyD,EAAAviD,EAAAsO,UAAA,EAAAo0C,GACAF,EAAAxiD,EAAAsO,UAAAo0C,EAAA,EACA,KAEA,CAEA,IAAAA,EAAA1iD,EAAAzP,QAAA,KACAgyD,EAAAviD,EAAAsO,UAAA,EAAAo0C,GAEA,IAAAC,EAAA3iD,EAAAzP,QAAA,KACAiyD,EAAAxiD,EAAAsO,UAAAo0C,EAAA,EAAAC,GAEAF,EAAAziD,EAAAsO,UAAAq0C,EAAA,EACA,CAaA,GAJAH,EAPAphD,MAAAohD,GAOA93D,KAAAm3D,SAAAhyB,eAAA,CAAAiyB,QAAAp3D,KAAAo3D,QAAAhE,OAAApzD,KAAAozD,OAAA8E,OAAA5kD,GAAAwkD,GALAntD,SAAAmtD,IASAD,IAAAC,EAGA,OADA93D,KAAA4d,IAAAhF,KAAA,8DAAAvU,OAAAiR,EAAA,MACA2c,EAAArxB,MAAA,8DAAAyD,OAAAiR,EAAA,MAAA,IAIAtV,KAAAm4D,eAAA9E,UAAAwE,EAAAC,GACA,CAAAjiD,EAAAgoB,IAEAhoB,GAEA7V,KAAA4d,IAAAjR,MAAA,8CAAAtI,OAAAwzD,EAAA,eAAAxzD,OAAAyzD,EAAA,WAAAzzD,OAAAiR,EAAA,OAAAjR,OAAAwR,GAAAA,GACAoc,EAAApc,EAAA,KAMAoc,EAAA,KAFA8lC,EAEA/3D,KAAA22D,oBAAAoB,EAAAl6B,GAIA,KAEA,EAEA79B,KAAAwnB,gBAAA4wC,aAAArmC,gBAAA,OAAA,KAAA6lC,GACA53D,KAAAwnB,gBAAA4wC,aAAArmC,gBAAA,YAAA,KAAA6lC,GAGA,IAAAS,EAAAA,CAAA9kD,EAAAD,KAEA,IAEAglD,EAFA/kD,EAAAzF,OAEAoE,MAAA,KAGA,OAAAlS,KAAAm3D,SAAAhyB,eAAA,CAAAiyB,QAAAp3D,KAAAo3D,QAAAhE,OAAApzD,KAAAozD,OAAA8E,OAAA5kD,GAAAglD,EAAA,IAEAA,EAAA,GAIA,EACA,EAEAt4D,KAAAwnB,gBAAA4wC,aAAA70C,WAAA,cAAA,KAAA80C,GACAr4D,KAAAwnB,gBAAA4wC,aAAA70C,WAAA,QAAA,KAAA80C,GAGA,IAAAE,EAAAA,CAAAhlD,EAAAD,KAEA,IAAAgC,EAAA/B,EAAAzF,OAEA0qD,GAAA,EACAC,GAAA,EAGAR,EAAA3iD,EAAAzP,QAAA,KAYA,OAXA2yD,EAAAljD,EAAAsO,UAAA,EAAAq0C,GACAA,GAAA,EAEAQ,EAAAnjD,EAAAsO,UAAAq0C,EAAA,GAIAO,EAAAljD,EAIAkjD,EAMAC,EAOAz4D,KAAA22D,oBAAA6B,EAAAx4D,KAAAm3D,SAAAhyB,eAAA,CAAAiyB,QAAAp3D,KAAAo3D,QAAAhE,OAAApzD,KAAAozD,OAAA8E,OAAA5kD,GAAAmlD,IAJAz4D,KAAA22D,oBAAA6B,EAAAllD,IAPAtT,KAAA4d,IAAAhF,KAAA,yDAAAvU,OAAAiR,EAAA,MACA,yDAAAjR,OAAAiR,EAAA,KAWA,EAEAtV,KAAAwnB,gBAAA4wC,aAAA70C,WAAA,OAAA,KAAAg1C,GACAv4D,KAAAwnB,gBAAA4wC,aAAA70C,WAAA,cAAA,KAAAg1C,GAGA,IAAAG,EAAAA,CAAAnlD,EAAAD,KAEA,IAAAgC,EAAA/B,EAAAzF,OAEA0qD,GAAA,EACAC,GAAA,EAGAR,EAAA3iD,EAAAzP,QAAA,KAYA,OAXA2yD,EAAAljD,EAAAsO,UAAA,EAAAq0C,GACAA,GAAA,EAEAQ,EAAAnjD,EAAAsO,UAAAq0C,EAAA,GAIAO,EAAAljD,EAIAkjD,EAMAC,EAOAz4D,KAAA24D,uBAAAH,EAAAx4D,KAAAm3D,SAAAhyB,eAAA,CAAAiyB,QAAAp3D,KAAAo3D,QAAAhE,OAAApzD,KAAAozD,OAAA8E,OAAA5kD,GAAAmlD,IAJAz4D,KAAA24D,uBAAAH,EAAAllD,IAPAtT,KAAA4d,IAAAhF,KAAA,yDAAAvU,OAAAiR,EAAA,MACA,yDAAAjR,OAAAiR,EAAA,KAWA,EAEAtV,KAAAwnB,gBAAA4wC,aAAA70C,WAAA,QAAA,KAAAm1C,GACA14D,KAAAwnB,gBAAA4wC,aAAA70C,WAAA,iBAAA,KAAAm1C,GAGA,IAAAE,EAAAA,CAAArlD,EAAAD,KAEA,IAAAgC,EAAA/B,EAAAzF,OACAsY,EAAApmB,KAAAm3D,SAAAhyB,eAAA,CAAAiyB,QAAAp3D,KAAAo3D,QAAAhE,OAAApzD,KAAAozD,OAAA8E,OAAA5kD,GAAAgC,GACA,OAAA,MAAA8Q,GAAA,aAAAA,QAAA,IAAAA,EAEA,GAEAA,CAAA,EAEApmB,KAAAwnB,gBAAA4wC,aAAA70C,WAAA,OAAA,KAAAq1C,GACA54D,KAAAwnB,gBAAA4wC,aAAA70C,WAAA,UAAA,KAAAq1C,GAEA54D,KAAAwnB,gBAAA4wC,aAAA70C,WAAA,aAAA,MACA,CAAAhQ,EAAAD,KAEA,IAAAgC,EAAA/B,EAAAzF,OACA+qD,EAAA74D,KAAAm3D,SAAAhyB,eAAA,CAAAiyB,QAAAp3D,KAAAo3D,QAAAhE,OAAApzD,KAAAozD,OAAA8E,OAAA5kD,GAAAgC,GACA,OAAAtV,KAAAwnB,gBAAA8N,WAAAjH,iBAAAwqC,EAAA,IAGA74D,KAAAwnB,gBAAA4wC,aAAA70C,WAAA,YAAA,MACA,CAAAhQ,EAAAD,KAEA,IAAAgC,EAAA/B,EAAAzF,OACA+qD,EAAA74D,KAAAm3D,SAAAhyB,eAAA,CAAAiyB,QAAAp3D,KAAAo3D,QAAAhE,OAAApzD,KAAAozD,OAAA8E,OAAA5kD,GAAAgC,GACA,OAAAtV,KAAAwnB,gBAAA8N,WAAAnH,2BAAAnuB,KAAAwnB,gBAAA8N,WAAA5G,qBAAAmqC,EAAA,GAAA,IAGA74D,KAAAq3D,kCAAA,CACA,CACA,CAEAyB,cAAAC,EAAAzlD,EAAA2e,GAEA,OAAAjyB,KAAAwnB,gBAAA4wC,aAAAn0C,YAAA80C,EAAAzlD,EAAA2e,EACA,CAEA0kC,oBAAA59B,EAAAzlB,EAAA2e,GAEA,IAAA+mC,EAAAh5D,KAAAwnB,gBAAA4tC,iBAAAd,YAAAv7B,GAGA,OAAAigC,EAIAh5D,KAAA84D,cAAAE,EAAA1lD,EAAA2e,GAFA,EAGA,CAEAgnC,iBAAAF,EAAAG,EAAAjnC,GAGA,IAAA7L,EAAA,GACA,GAAA,mBAAA6L,EAyBA,CACA,GAAAlvB,MAAAC,QAAAk2D,IAAA,iBAAAA,EACA,CACA,GAAAn2D,MAAAC,QAAAk2D,GAEA,IAAA,IAAA34D,EAAA,EAAAA,EAAA24D,EAAAn4D,OAAAR,IAEA6lB,GAAApmB,KAAA84D,cAAAC,EAAAG,EAAA34D,QAIA,CACA,IAAA+T,EAAAhW,OAAAiF,KAAA21D,GACA,IAAA,IAAA34D,EAAA,EAAAA,EAAA+T,EAAAvT,OAAAR,IAEA6lB,GAAApmB,KAAA84D,cAAAC,EAAAG,EAAA5kD,EAAA/T,IAEA,CAEA,OAAA6lB,CACA,CAGA,MAAA,EAEA,CAhDA,IAAArjB,MAAAC,QAAAk2D,IAAA,iBAAAA,EAmBA,OAAAjnC,EAAArxB,MAAA,2DAAA,IAjBAZ,KAAAwnB,gBAAAiK,QAAAC,UAAAwnC,EAAA,GACA,CAAAr7B,EAAAs7B,IAEAn5D,KAAA84D,cAAAC,EAAAl7B,GACA,CAAAhoB,EAAAujD,KAEAhzC,GAAAgzC,EACAD,SAGAtjD,GAEAoc,EAAApc,EAAAuQ,IAmCA,CAEAuyC,uBAAA5/B,EAAAmgC,EAAAjnC,GAEA,IAAA+mC,EAAAh5D,KAAAwnB,gBAAA4tC,iBAAAd,YAAAv7B,GAGA,OAAAigC,EAIAh5D,KAAAi5D,iBAAAD,EAAAE,EAAAjnC,GAFA,EAGA,GAIAvyB,EAAAD,QAAA45D,cAAA54D,EAAA,iB7Gk6fA,EAAE,CAAC,+BAA+B,IAAI,kCAAkC,IAAI,8BAA8B,IAAI,iBAAiB,IAAIiiB,MAAQ,MAAM,CAAC,EAAE,CAAC,KCtxgBrJ,CDsxgB2J,IAC3J","file":"pict.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Pict = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nvar eachOfLimit = require('async.util.eachoflimit');\nvar withoutIndex = require('async.util.withoutindex');\n\nmodule.exports = function eachLimit(arr, limit, iterator, cb) {\n    return eachOfLimit(limit)(arr, withoutIndex(iterator), cb);\n};\n\n},{\"async.util.eachoflimit\":3,\"async.util.withoutindex\":14}],2:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(tasks) {\n    function makeCallback(index) {\n        function fn() {\n            if (tasks.length) {\n                tasks[index].apply(null, arguments);\n            }\n            return fn.next();\n        }\n        fn.next = function() {\n            return (index < tasks.length - 1) ? makeCallback(index + 1) : null;\n        };\n        return fn;\n    }\n    return makeCallback(0);\n};\n\n},{}],3:[function(require,module,exports){\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar onlyOnce = require('async.util.onlyonce');\nvar keyIterator = require('async.util.keyiterator');\n\nmodule.exports = function eachOfLimit(limit) {\n    return function(obj, iterator, cb) {\n        cb = once(cb || noop);\n        obj = obj || [];\n        var nextKey = keyIterator(obj);\n        if (limit <= 0) {\n            return cb(null);\n        }\n        var done = false;\n        var running = 0;\n        var errored = false;\n\n        (function replenish() {\n            if (done && running <= 0) {\n                return cb(null);\n            }\n\n            while (running < limit && !errored) {\n                var key = nextKey();\n                if (key === null) {\n                    done = true;\n                    if (running <= 0) {\n                        cb(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iterator(obj[key], key, onlyOnce(function(err) {\n                    running -= 1;\n                    if (err) {\n                        cb(err);\n                        errored = true;\n                    } else {\n                        replenish();\n                    }\n                }));\n            }\n        })();\n    };\n};\n\n},{\"async.util.keyiterator\":7,\"async.util.noop\":9,\"async.util.once\":10,\"async.util.onlyonce\":11}],4:[function(require,module,exports){\n'use strict';\nvar setImmediate = require('async.util.setimmediate');\nvar restParam = require('async.util.restparam');\n\nmodule.exports = function(fn) {\n    return restParam(function(args) {\n        var callback = args.pop();\n        args.push(function() {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate(function() {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        var sync = true;\n        fn.apply(this, args);\n        sync = false;\n    });\n};\n\n},{\"async.util.restparam\":12,\"async.util.setimmediate\":13}],5:[function(require,module,exports){\n'use strict';\n\nmodule.exports = Array.isArray || function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar isArray = require('async.util.isarray');\n\nmodule.exports = function isArrayLike(arr) {\n    return isArray(arr) || (\n        // has a positive integer length property\n        typeof arr.length === 'number' &&\n        arr.length >= 0 &&\n        arr.length % 1 === 0\n    );\n};\n\n},{\"async.util.isarray\":5}],7:[function(require,module,exports){\n'use strict';\n\nvar _keys = require('async.util.keys');\nvar isArrayLike = require('async.util.isarraylike');\n\nmodule.exports = function keyIterator(coll) {\n    var i = -1;\n    var len;\n    var keys;\n    if (isArrayLike(coll)) {\n        len = coll.length;\n        return function next() {\n            i++;\n            return i < len ? i : null;\n        };\n    } else {\n        keys = _keys(coll);\n        len = keys.length;\n        return function next() {\n            i++;\n            return i < len ? keys[i] : null;\n        };\n    }\n};\n\n},{\"async.util.isarraylike\":6,\"async.util.keys\":8}],8:[function(require,module,exports){\n'use strict';\n\nmodule.exports = Object.keys || function keys(obj) {\n    var _keys = [];\n    for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            _keys.push(k);\n        }\n    }\n    return _keys;\n};\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function noop () {};\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function once(fn) {\n    return function() {\n        if (fn === null) return;\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function only_once(fn) {\n    return function() {\n        if (fn === null) throw new Error('Callback was already called.');\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n\n},{}],12:[function(require,module,exports){\n'use strict';\nmodule.exports = function restParam(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n        var length = Math.max(arguments.length - startIndex, 0);\n        var rest = new Array(length);\n        for (var index = 0; index < length; index++) {\n            rest[index] = arguments[index + startIndex];\n        }\n        switch (startIndex) {\n            case 0:\n                return func.call(this, rest);\n            case 1:\n                return func.call(this, arguments[0], rest);\n        }\n    };\n};\n\n},{}],13:[function(require,module,exports){\n(function (setImmediate){(function (){\n'use strict';\n\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\nvar fallback = function(fn) {\n    setTimeout(fn, 0);\n};\n\nmodule.exports = function setImmediate(fn) {\n    // not a direct alias for IE10 compatibility\n    return (_setImmediate || fallback)(fn);\n};\n\n}).call(this)}).call(this,require(\"timers\").setImmediate)\n\n},{\"timers\":100}],14:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function withoutIndex(iterator) {\n    return function(value, index, callback) {\n        return iterator(value, callback);\n    };\n};\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar isArray = require('async.util.isarray');\nvar restParam = require('async.util.restparam');\nvar ensureAsync = require('async.util.ensureasync');\nvar iterator = require('async.iterator');\n\nmodule.exports = function(tasks, cb) {\n    cb = once(cb || noop);\n    if (!isArray(tasks)) return cb(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return cb();\n\n    function wrapIterator(iterator) {\n        return restParam(function(err, args) {\n            if (err) {\n                cb.apply(null, [err].concat(args));\n            } else {\n                var next = iterator.next();\n                if (next) {\n                    args.push(wrapIterator(next));\n                } else {\n                    args.push(cb);\n                }\n                ensureAsync(iterator).apply(null, args);\n            }\n        });\n    }\n    wrapIterator(iterator(tasks))();\n};\n\n},{\"async.iterator\":2,\"async.util.ensureasync\":4,\"async.util.isarray\":5,\"async.util.noop\":9,\"async.util.once\":10,\"async.util.restparam\":12}],16:[function(require,module,exports){\n'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n},{}],17:[function(require,module,exports){\n\n},{}],18:[function(require,module,exports){\narguments[4][17][0].apply(exports,arguments)\n},{\"dup\":17}],19:[function(require,module,exports){\n(function (Buffer){(function (){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"base64-js\":16,\"buffer\":19,\"ieee754\":54}],20:[function(require,module,exports){\nmodule.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n\n},{}],21:[function(require,module,exports){\n/**\n* Cache data structure with:\n*  - enumerable items\n*  - unique hash item access (if none is passed in, one is generated)\n*  - size (length) expiration\n*  - controllable expiration (e.g. keep in cache longer if older/less likely to change)\n*  - time-based expiration\n*  - custom expiration based on passed-in function\n*\n* Also:\n*  - built to work well with browserify\n*  - no dependencies at all\n*  - pet friendly\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nconst libLinkedList = require(`./LinkedList.js`);\n\nclass CashMoney extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'ObjectCache';\n\n\t\t// The map of node objects by hash because Reasons.\n\t\tthis._HashMap = {};\n\n\t\tthis._RecordMap = {};\n\n\t\tthis._List = new libLinkedList();\n\n\t\t// If the list gets over maxLength, we will automatically remove nodes on insertion.\n\t\tthis.maxLength = 0;\n\n\t\t// If cache entries get over this age, they are removed with prune\n\t\tthis.maxAge = 0;\n\t}\n\n\tget RecordMap()\n\t{\n\t\treturn this._RecordMap;\n\t}\n\n\t// Add (or update) a node in the cache\n\tput(pData, pHash)\n\t{\n\t\t// If the hash of the record exists\n\t\tif (this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\t// Just update the hashed records datum\n\t\t\tthis._HashMap[pHash].Datum = pData;\n\t\t\tthis._RecordMap[pHash] = pData;\n\t\t\treturn this._HashMap[pHash].Datum;\n\t\t}\n\n\t\tlet tmpNode = this._List.push(pData, pHash);\n\t\tthis._HashMap[tmpNode.Hash] = tmpNode;\n\t\tthis._RecordMap[pHash] = pData;\n\n\t\t// Automatically prune if over length, but only prune this nodes worth.\n\t\tif (this.maxLength > 0   &&   this._List.length > this.maxLength)\n\t\t{\n\t\t\t// Pop it off the head of the list\n\t\t\ttmpNode = this._List.pop();\n\t\t\t// Also remove it from the hashmap\n\t\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\t\tdelete this._HashMap[tmpNode.Hash];\n\t\t}\n\n\t\t// Now some expiration properties on the node metadata... namely the birthdate in ms of the node\n\t\ttmpNode.Metadata.Created = +new Date();\n\n\t\treturn tmpNode.Datum;\n\t}\n\n\t// Read a datum by hash from the cache\n\tread(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._HashMap[pHash].Datum;\n\t}\n\n\t// Reinvigorate a node based on hash, updating the timestamp and moving it to the head of the list (also removes custom metadata)\n\ttouch(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get the old node out of the list\n\t\tlet tmpNode = this._List.remove(this._HashMap[pHash]);\n\t\t// Remove it from the hash map\n\t\tdelete this._RecordMap[pHash];\n\t\tdelete this._HashMap[pHash];\n\n\t\t// Now put it back, fresh.\n\t\treturn this.put(tmpNode.Datum, tmpNode.Hash);\n\t}\n\n\t// Expire a cached record based on hash\n\texpire(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpNode = this._HashMap[pHash];\n\n\t\t// Remove it from the list of cached records\n\t\ttmpNode = this._List.remove(tmpNode);\n\t\t// Also remove it from the hashmap\n\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\tdelete this._HashMap[tmpNode.Hash];\n\n\t\t// Return it in case the consumer wants to do anything with it\n\t\treturn tmpNode;\n\t}\n\n\t// Prune records from the cached set based on maxAge\n\tpruneBasedOnExpiration(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tif (this.maxAge < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now enumerate each record and remove any that are expired\n\t\tlet tmpNow = +new Date();\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\t// Expire the node if it is older than max age milliseconds\n\t\t\tif (tmpNow - this._HashMap[tmpKeys[i]].Metadata.Created >= this.maxAge)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on maxLength\n\tpruneBasedOnLength(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\t// Pop records off until we have reached maxLength unless it's 0\n\t\tif (this.maxLength > 0)\n\t\t{\n\t\t\twhile (this._List.length > this.maxLength)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this._List.pop());\n\t\t\t}\n\t\t}\n\n\t\treturn fComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on passed in pPruneFunction(pDatum, pHash, pNode) -- returning true expires it\n\tpruneCustom(fComplete, fPruneFunction, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\tlet tmpNode = this._HashMap[tmpKeys[i]];\n\t\t\t// Expire the node if the passed in function returns true\n\t\t\tif (fPruneFunction(tmpNode.Datum, tmpNode.Hash, tmpNode))\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune the list down to the asserted rules (max age then max length if still too long)\n\tprune(fComplete)\n\t{\n\t\tlet tmpRemovedRecords = [];\n\n\t\t// If there are no cached records, we are done.\n\t\tif (this._List.length < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now prune based on expiration time\n\t\tthis.pruneBasedOnExpiration((fExpirationPruneComplete)=>\n\t\t\t{\n\t\t\t\t// Now prune based on length, then return the removed records in the callback.\n\t\t\t\tthis.pruneBasedOnLength(fComplete, tmpRemovedRecords);\n\t\t\t}, tmpRemovedRecords);\n\t}\n\n\t// Get a low level node (including metadata statistics) by hash from the cache\n\tgetNode(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\n\t\treturn this._HashMap[pHash];\n\t}\n}\n\nmodule.exports = CashMoney;\n},{\"./LinkedList.js\":23,\"fable-serviceproviderbase\":32}],22:[function(require,module,exports){\n/**\n* Double Linked List Node\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Linked List Node Prototype\n*\n* @class LinkedListNode\n* @constructor\n*/\n\nclass LinkedListNode\n{\n\tconstructor()\n\t{\n\t\tthis.Hash = false;\n\t\tthis.Datum = false;\n\n\t\t// This is where expiration and other elements are stored;\n\t\tthis.Metadata = {};\n\n\t\tthis.LeftNode = false;\n\t\tthis.RightNode = false;\n\n\t\t// To allow safe specialty operations on nodes\n\t\tthis.__ISNODE = true;\n\t}\n}\n\nmodule.exports = LinkedListNode;\n},{}],23:[function(require,module,exports){\n\"use strict\"\n/**\n* Simple double linked list to hold the cache entries in, in order.\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module FeeFiFo\n*/\n\nconst libLinkedListNode = require('./LinkedList-Node.js');\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nclass LinkedList\n{\n\tconstructor()\n\t{\n\t\t// Total number of nodes ever processed by this ADT\n\t\tthis.totalNodes = 0;\n\n\t\t// The length of the set of nodes currently in the list\n\t\tthis.length = 0;\n\n\t\tthis.head = false;\n\t\tthis.tail = false;\n\t}\n\n\t// Create a node object.\n\tinitializeNode(pDatum, pHash)\n\t{\n\t\t// Don't allow undefined to be added to the list because of reasons\n\t\tif (typeof(pDatum) === 'undefined')\n\t\t\treturn false;\n\n\t\tthis.totalNodes++;\n\n\t\t// Get (or create) a unique hash\n\t\tlet tmpHash = (typeof(pHash) != 'undefined') ? pHash : `NODE[${this.totalNodes}]`;\n\n\t\tlet tmpNode = new libLinkedListNode();\n\n\t\ttmpNode.Hash = tmpHash;\n\t\ttmpNode.Datum = pDatum;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Add a node to the end (right of tail) of the list.\n\tappend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.tail.RightNode = tmpNode;\n\t\ttmpNode.LeftNode = this.tail;\n\t\tthis.tail = tmpNode;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Append to tail of list (FIFO)\n\tpush(pDatum, pHash)\n\t{\n\t\treturn this.append(pDatum, pHash);\n\t}\n\n\t// Add a node to the beginning (left of head) of the list.\n\tprepend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.head.LeftNode = tmpNode;\n\t\ttmpNode.RightNode = this.head;\n\t\tthis.head = tmpNode;\n\t\treturn tmpNode;\n\t}\n\n\t// Remove a node from the list\n\tremove(pNode)\n\t{\n\t\tif (typeof(pNode) === 'undefined')\n\t\t\treturn false;\n\n\t\tif (!pNode.__ISNODE)\n\t\t\treturn false;\n\n\t\tthis.length--;\n\n\t\t// Last element in list.  Empty it out.\n\t\tif (this.length < 1)\n\t\t{\n\t\t\tthis.head = false;\n\t\t\tthis.tail = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's somewhere in the middle, surgically remove it.\n\t\tif (pNode.LeftNode && pNode.RightNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = pNode.RightNode;\n\t\t\tpNode.RightNode.LeftNode = pNode.LeftNode;\n\n\t\t\tpNode.RightNode = false;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's the tail\n\t\tif (pNode.LeftNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = false;\n\t\t\tthis.tail = pNode.LeftNode;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It must be the head\n\t\tpNode.RightNode.LeftNode = false;\n\t\tthis.head = pNode.RightNode;\n\t\tpNode.RightNode = false;\n\t\treturn pNode;\n\t}\n\n\t// Remove the head of the list (FIFO)\n\tpop()\n\t{\n\t\treturn this.remove(this.head);\n\t}\n\n\t// Enumerate over each node IN ORDER, running the function fAction(pDatum, pHash, fCallback) then calling the function fComplete callback when done\n\teach(fAction, fComplete)\n\t{\n\t\tif (this.length < 1)\n\t\t\treturn fComplete();\n\n\t\tlet tmpNode = false;\n\n\t\tlet fIterator = (pError)=>\n\t\t{\n\t\t\t// If the user passed in a callback with an error, call their callback with the error\n\t\t\tif (pError)\n\t\t\t\treturn fComplete(pError);\n\n\t\t\t// If there is no node, this must be the initial run.\n\t\t\tif (!tmpNode)\n\t\t\t\ttmpNode = this.head;\n\t\t\t// Check if we are at the tail of the list\n\t\t\telse if (!tmpNode.RightNode)\n\t\t\t\treturn fComplete();\n\t\t\t// Proceed to the next node\n\t\t\telse\n\t\t\t\ttmpNode = tmpNode.RightNode;\n\n\t\t\t// Call the actual action\n\t\t\t// I hate this pattern because long tails eventually cause stack overflows.\n\t\t\tfAction(tmpNode.Datum, tmpNode.Hash, fIterator);\n\t\t};\n\n\t\t// Now kick off the iterator\n\t\treturn fIterator();\n\t}\n\n\t// Seek a specific node, 0 is the index of the first node.\n\tseek(pNodeIndex)\n\t{\n\t\tif (!pNodeIndex)\n\t\t\treturn false;\n\t\tif (this.length < 1)\n\t\t\treturn false;\n\t\tif (pNodeIndex >= this.length)\n\t\t\treturn false;\n\n\t\tlet tmpNode = this.head;\n\t\tfor (let i = 0; i < pNodeIndex; i++)\n\t\t{\n\t\t\ttmpNode = tmpNode.RightNode;\n\t\t}\n\n\t\treturn tmpNode;\n\t}\n}\n\nmodule.exports = LinkedList;\n},{\"./LinkedList-Node.js\":22}],24:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n\n},{}],25:[function(require,module,exports){\n/**\n* Base Logger Class\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\nclass BaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = (typeof(pLogStreamSettings) == 'object') ? pLogStreamSettings : {};\n\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\t// We added this as the mechanism for tracking loggers to allow multiple simultaneous streams\n\t\t// to the same provider.\n\t\tthis.loggerUUID = this.generateInsecureUUID();\n\n\t\t// Eventually we can use this array to ompute which levels the provider allows.\n\t\t// For now it's just used to precompute some string concatenations.\n\t\tthis.levels = (\n\t\t\t[\n\t\t\t\t\"trace\",\n\t\t\t\t\"debug\",\n\t\t\t\t\"info\",\n\t\t\t\t\"warn\",\n\t\t\t\t\"error\",\n\t\t\t\t\"fatal\"\n\t\t\t]);\n\t}\n\n\t// This is meant to generate programmatically insecure UUIDs to identify loggers\n\tgenerateInsecureUUID()\n\t{\n\t\tlet tmpDate = new Date().getTime();\n\t\tlet tmpUUID = 'LOGSTREAM-xxxxxx-yxxxxx'.replace(/[xy]/g,\n\t\t\t\t(pCharacter) =>\n\t\t\t\t{\n\t\t\t\t\t// Funny algorithm from w3resource that is twister-ish without the deep math and security\n\t\t\t\t\t// ..but good enough for unique log stream identifiers\n\t\t\t\t\tlet tmpRandomData = (tmpDate + Math.random()*16)%16 | 0;\n\t\t\t\t\ttmpDate = Math.floor(tmpDate/16);\n\n\t\t\t\t\treturn (pCharacter =='x' ? tmpRandomData : (tmpRandomData&0x3|0x8)).toString(16);\n\t\t\t\t});\n\t\treturn tmpUUID;\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n\n},{}],26:[function(require,module,exports){\n/**\n* Default Logger Provider Function\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\nvar getDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\ttmpDefaultProviders.default = tmpDefaultProviders.console;\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();\n},{\"./Fable-Log-Logger-Console.js\":28}],27:[function(require,module,exports){\nmodule.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]\n},{}],28:[function(require,module,exports){\nlet libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings);\n\n\t\tthis._ShowTimeStamps = this._Settings.hasOwnProperty('showtimestamps') ? (this._Settings.showtimestamps == true) : true;\n\t\tthis._FormattedTimeStamps = this._Settings.hasOwnProperty('formattedtimestamps') ? (this._Settings.formattedtimestamps == true) : true;\n\n\t\tthis._ContextMessage = this._Settings.hasOwnProperty('Context') ? `(${this._Settings.Context})` : \n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? `(${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'Unnamed_Log_Context';\n\n\t\t// Allow the user to decide what gets output to the console\n\t\tthis._OutputLogLinesToConsole = this._Settings.hasOwnProperty('outputloglinestoconsole') ? this._Settings.outputloglinestoconsole : true;\n\t\tthis._OutputObjectsToConsole = this._Settings.hasOwnProperty('outputobjectstoconsole') ? this._Settings.outputobjectstoconsole : true;\n\n\t\t// Precompute the prefix for each level\n\t\tthis.prefixCache = {};\n\t\tfor (let i = 0; i <= this.levels.length; i++)\n\t\t{\n\t\t\tthis.prefixCache[this.levels[i]] = `[${this.levels[i]}] ${this._ContextMessage}: `;\n\n\t\t\tif (this._ShowTimeStamps)\n\t\t\t{\n\t\t\t\t// If there is a timestamp we need a to prepend space before the prefixcache string, since the timestamp comes first\n\t\t\t\tthis.prefixCache[this.levels[i]] = ' '+this.prefixCache[this.levels[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpTimeStamp = '';\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = (new Date()).toISOString();\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = +new Date();\n\t\t}\n\n\t\tlet tmpLogLine = `${tmpTimeStamp}${this.prefixCache[pLevel]}${pLogText}`;\n\n\t\tif (this._OutputLogLinesToConsole)\n\t\t{\n\t\t\tconsole.log(tmpLogLine);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (this._OutputObjectsToConsole && (typeof(pObject) !== 'undefined'))\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 2));\n\t\t}\n\n\t\t// Provide an easy way to be overridden and be consistent\n\t\treturn tmpLogLine;\n\t}\n}\n\nmodule.exports = ConsoleLogger;\n},{\"./Fable-Log-BaseLogger.js\":25}],29:[function(require,module,exports){\nconst libConsoleLog = require('./Fable-Log-Logger-Console.js');\nconst libFS = require('fs');\nconst libPath = require('path');\n\nclass SimpleFlatFileLogger extends libConsoleLog\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings, pFableLog);\n\n\t\t// If a path isn't provided for the logfile, it tries to use the ProductName or Context\n\t\tthis.logFileRawPath = (this._Settings.hasOwnProperty('path')) ? this._Settings.path : `./${this._ContextMessage}.log`;\n\t\tthis.logFilePath = libPath.normalize(this.logFileRawPath);\n\n\t\tthis.logFileStreamOptions = (this._Settings.hasOwnProperty('fileStreamoptions')) ? this._Settings.fileStreamOptions : (\n\t\t\t{\n\t\t\t\t\"flags\": \"a\",\n\t\t\t\t\"encoding\": \"utf8\"\n\t\t\t})\n\n\t\tthis.fileWriter = libFS.createWriteStream(this.logFilePath, this.logFileStreamOptions);\n\n\t\tthis.activelyWriting = false;\n\n\t\tthis.logLineStrings = [];\n\t\tthis.logObjectStrings = [];\n\n\t\tthis.defaultWriteCompleteCallback = ()=>{};\n\t\tthis.defaultBufferFlushCallback = ()=>{};\n\t}\n\n\tcloseWriter(fCloseComplete)\n\t{\n\t\tlet tmpCloseComplete = (typeof(fCloseComplete) == 'function') ? fCloseComplete : ()=>{};\n\t\tif (this.fileWriter)\n\t\t{\n\t\t\tthis.fileWriter.end('\\n');\n\t\t\treturn this.fileWriter.once('finish', tmpCloseComplete.bind(this));\n\t\t}\n\t};\n\n\tcompleteBufferFlushToLogFile(fFlushComplete)\n\t{\n\t\tthis.activelyWriting = false;\n\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\tif (this.logLineStrings.length > 0)\n\t\t{\n\t\t\tthis.flushBufferToLogFile(tmpFlushComplete);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpFlushComplete();\n\t\t}\n\t}\n\n\tflushBufferToLogFile(fFlushComplete)\n\t{\n\t\tif (!this.activelyWriting)\n\t\t{\n\t\t\t// Only want to be writing one thing at a time....\n\t\t\tthis.activelyWriting = true;\n\n\t\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\t\t// Get the current buffer arrays.  These should always have matching number of elements.\n\t\t\tlet tmpLineStrings = this.logLineStrings;\n\t\t\tlet tmpObjectStrings = this.logObjectStrings;\n\n\t\t\t// Reset these to be filled while we process this queue...\n\t\t\tthis.logLineStrings = [];\n\t\t\tthis.logObjectStrings = [];\n\n\t\t\t// This is where we will put each line before writing it to the file...\n\t\t\tlet tmpConstructedBufferOutputString = '';\n\n\t\t\tfor (let i = 0; i < tmpLineStrings.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: Windows Newline?   ....... yo no se!\n\t\t\t\ttmpConstructedBufferOutputString += `${tmpLineStrings[i]}\\n`;\n\t\t\t\tif (tmpObjectStrings[i] !== false)\n\t\t\t\t{\n\t\t\t\t\ttmpConstructedBufferOutputString += `${tmpObjectStrings[i]}\\n`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.fileWriter.write(tmpConstructedBufferOutputString, 'utf8'))\n\t\t\t{\n\t\t\t\t// If the streamwriter returns false, we need to wait for it to drain.\n\t\t\t\tthis.fileWriter.once('drain', this.completeBufferFlushToLogFile.bind(this, tmpFlushComplete));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.completeBufferFlushToLogFile(tmpFlushComplete);\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpLogLine = super.write(pLevel, pLogText, pObject);\n\n\t\t// Use a very simple array as the write buffer\n\t\tthis.logLineStrings.push(tmpLogLine);\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tthis.logObjectStrings.push(JSON.stringify(pObject, null, 4));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logObjectStrings.push(false);\n\t\t}\n\n\t\tthis.flushBufferToLogFile();\n\t}\n}\n\nmodule.exports = SimpleFlatFileLogger;\n},{\"./Fable-Log-Logger-Console.js\":28,\"fs\":18,\"path\":68}],30:[function(require,module,exports){\n/**\n* Fable Logging Service\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass FableLog extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'Logging';\n\n\t\tlet tmpSettings = (typeof(pSettings) === 'object') ? pSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders-Node.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.datumDecorator = (pDatum) => pDatum;\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetDatumDecorator(fDatumDecorator)\n\t{\n\t\tif (typeof(fDatumDecorator) === 'function')\n\t\t{\n\t\t\tthis.datumDecorator = fDatumDecorator;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.datumDecorator = (pDatum) => pDatum;\n\t\t}\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'default',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableLog(pSettings);\n}\n\n\nmodule.exports = FableLog;\nmodule.exports.new = autoConstruct;\nmodule.exports.LogProviderBase = require('./Fable-Log-BaseLogger.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-Console.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-SimpleFlatFile.js');\n\n},{\"./Fable-Log-BaseLogger.js\":25,\"./Fable-Log-DefaultProviders-Node.js\":26,\"./Fable-Log-DefaultStreams.json\":27,\"./Fable-Log-Logger-Console.js\":28,\"./Fable-Log-Logger-SimpleFlatFile.js\":29,\"fable-serviceproviderbase\":32}],31:[function(require,module,exports){\n/**\n* Fable Core Pre-initialization Service Base\n*\n* For a couple services, we need to be able to instantiate them before the Fable object is fully initialized.\n* This is a base class for those services.\n*\n* @author <steven@velozo.com>\n*/\n\nclass FableCoreServiceProviderBase\n{\n\tconstructor(pOptions, pServiceHash)\n\t{\n\t\tthis.fable = false;\n\n\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions : {};\n\n        this.serviceType = 'Unknown';\n\n\t\t// The hash will be a non-standard UUID ... the UUID service uses this base class!\n        this.UUID = `CORESVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`;\n\n        this.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash : `${this.UUID}`;\n\t}\n\n\n    static isFableService = true;\n\n\t// After fable is initialized, it would be expected to be wired in as a normal service.\n\tconnectFable(pFable)\n\t{\n\t\tthis.fable = pFable;\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = FableCoreServiceProviderBase;\n\n},{}],32:[function(require,module,exports){\n/**\n* Fable Service Base\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tthis.fable = pFable;\n\n\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t: ((typeof(pFable) === 'object') && !pFable.isFable) ? pFable\n\t\t\t\t\t\t: {};\n\n\t\tthis.serviceType = 'Unknown';\n\n\t\tif (typeof(pFable.getUUID) == 'function')\n\t\t{\n\t\t\tthis.UUID = pFable.getUUID();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.UUID = `NoFABLESVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`\n\t\t}\n\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash : `${this.UUID}`;\n\t}\n\n\tstatic isFableService = true;\n}\n\nmodule.exports = FableServiceProviderBase;\n\nmodule.exports.CoreServiceProviderBase = require('./Fable-ServiceProviderBase-Preinit.js');\n},{\"./Fable-ServiceProviderBase-Preinit.js\":31}],33:[function(require,module,exports){\nmodule.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n\n},{}],34:[function(require,module,exports){\n(function (process){(function (){\n/**\n* Fable Settings Template Processor\n*\n* This class allows environment variables to come in via templated expressions, and defaults to be set.\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\nconst libPrecedent = require('precedent');\n\nclass FableSettingsTemplateProcessor\n{\n\tconstructor(pDependencies)\n\t{\n        // Use a no-dependencies templating engine to parse out environment variables\n\t\tthis.templateProcessor = new libPrecedent();\n\n        // TODO: Make the environment variable wrap expression demarcation characters configurable?\n\t\tthis.templateProcessor.addPattern('${', '}',\n\t\t\t(pTemplateValue)=>\n\t\t\t{\n\t\t\t\tlet tmpTemplateValue = pTemplateValue.trim();\n\n\t\t\t\tlet tmpSeparatorIndex = tmpTemplateValue.indexOf('|');\n\n\t\t\t\t// If there is no pipe, the default value will end up being whatever the variable name is.\n\t\t\t\tlet tmpDefaultValue = tmpTemplateValue.substring(tmpSeparatorIndex+1);\n\n\t\t\t\tlet tmpEnvironmentVariableName = (tmpSeparatorIndex > -1) ? tmpTemplateValue.substring(0, tmpSeparatorIndex) : tmpTemplateValue;\n\n\t\t\t\tif (process.env.hasOwnProperty(tmpEnvironmentVariableName))\n\t\t\t\t{\n\t\t\t\t\treturn process.env[tmpEnvironmentVariableName];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpDefaultValue;\n\t\t\t\t}\n\t\t\t});\n    }\n\n    parseSetting(pString)\n    {\n        return this.templateProcessor.parseString(pString);\n    }\n}\n\nmodule.exports = FableSettingsTemplateProcessor;\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":72,\"precedent\":69}],35:[function(require,module,exports){\n/**\n* Fable Settings Add-on\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nconst libFableSettingsTemplateProcessor = require('./Fable-Settings-TemplateProcessor.js');\n\nclass FableSettings extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'SettingsManager';\n\n\t\t// Initialize the settings value template processor\n\t\tthis.settingsTemplateProcessor = new libFableSettingsTemplateProcessor();\n\n\t\t// set straight away so anything that uses it respects the initial setting\n\t\tthis._configureEnvTemplating(pSettings);\n\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')));\n\t}\n\n\t// Update the configuration for environment variable templating based on the current settings object\n\t_configureEnvTemplating(pSettings)\n\t{\n\t\t// default environment variable templating to on\n\t\tthis._PerformEnvTemplating = !pSettings || pSettings.NoEnvReplacement !== true;\n\t}\n\n\t// Resolve (recursive) any environment variables found in settings object.\n\t_resolveEnv(pSettings)\n\t{\n\t\tfor (const tmpKey in pSettings)\n\t\t{\n\t\t\tif (typeof(pSettings[tmpKey]) === 'object')\n\t\t\t{\n\t\t\t\tthis._resolveEnv(pSettings[tmpKey]);\n\t\t\t}\n\t\t\telse if (typeof(pSettings[tmpKey]) === 'string')\n\t\t\t{\n\t\t\t\tpSettings[tmpKey] = this.settingsTemplateProcessor.parseSetting(pSettings[tmpKey]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if a value is an object (but not an array).\n\t */\n\t_isObject(value)\n\t{\n\t\treturn typeof(value) === 'object' && !Array.isArray(value);\n\t}\n\n\t/**\n\t * Merge two plain objects. Keys that are objects in both will be merged property-wise.\n\t */\n\t_deepMergeObjects(toObject, fromObject)\n\t{\n\t\tif (!fromObject || !this._isObject(fromObject))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject.keys(fromObject).forEach((key) =>\n\t\t{\n\t\t\tconst fromValue = fromObject[key];\n\t\t\tif (this._isObject(fromValue))\n\t\t\t{\n\t\t\t\tconst toValue = toObject[key];\n\t\t\t\tif (toValue && this._isObject(toValue))\n\t\t\t\t{\n\t\t\t\t\t// both are objects, so do a recursive merge\n\t\t\t\t\tthis._deepMergeObjects(toValue, fromValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoObject[key] = fromValue;\n\t\t});\n\t\treturn toObject;\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\t\ttmpSettingsTo = this._deepMergeObjects(tmpSettingsTo, tmpSettingsFromCopy);\n\n\t\tif (this._PerformEnvTemplating)\n\t\t{\n\t\t\tthis._resolveEnv(tmpSettingsTo);\n\t\t}\n\t\t// Update env tempating config, since we just updated the config object, and it may have changed\n\t\tthis._configureEnvTemplating(tmpSettingsTo);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\n\t\tthis.settings = this._deepMergeObjects(tmpSettingsFromCopy, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = FableSettings;\nmodule.exports.new = autoConstruct;\n},{\"./Fable-Settings-Default\":33,\"./Fable-Settings-TemplateProcessor.js\":34,\"fable-serviceproviderbase\":32}],36:[function(require,module,exports){\n/**\n* Random Byte Generator - Browser version\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn this.generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n\n},{}],37:[function(require,module,exports){\n/**\n* Fable UUID Generator\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;0\n\nconst libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'UUID';\n\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = FableUUID;\nmodule.exports.new = autoConstruct;\n\n},{\"./Fable-UUID-Random.js\":36,\"fable-serviceproviderbase\":32}],38:[function(require,module,exports){\narguments[4][31][0].apply(exports,arguments)\n},{\"dup\":31}],39:[function(require,module,exports){\n/**\n* Fable Service Base\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tthis.fable = pFable;\n\n\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t: ((typeof(pFable) === 'object') && !pFable.isFable) ? pFable\n\t\t\t\t\t\t: {};\n\n\t\tthis.serviceType = 'Unknown';\n\n\t\tif (typeof(pFable.getUUID) == 'function')\n\t\t{\n\t\t\tthis.UUID = pFable.getUUID();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.UUID = `NoFABLESVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`\n\t\t}\n\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash : `${this.UUID}`;\n\n\t\t// Pull back a few things\n\t\tthis.log = this.fable.log;\n\t\tthis.services = this.fable.services;\n\t\tthis.defaultServices = this.fable.defaultServices;\n\t}\n\n\tstatic isFableService = true;\n}\n\nmodule.exports = FableServiceProviderBase;\n\nmodule.exports.CoreServiceProviderBase = require('./Fable-ServiceProviderBase-Preinit.js');\n},{\"./Fable-ServiceProviderBase-Preinit.js\":38}],40:[function(require,module,exports){\n/**\n* Fable Application Services Management\n* @author <steven@velozo.com>\n*/\n\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableService extends libFableServiceBase.CoreServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'ServiceManager';\n\n\t\tthis.serviceTypes = [];\n\n\t\t// A map of instantiated services\n\t\tthis.services = {};\n\n\t\t// A map of the default instantiated service by type\n\t\tthis.defaultServices = {};\n\n\t\t// A map of class constructors for services\n\t\tthis.serviceClasses = {};\n\t}\n\n\taddServiceType(pServiceType, pServiceClass)\n\t{\n\t\t// Add the type to the list of types\n\t\tthis.serviceTypes.push(pServiceType);\n\n\t\t// Add the container for instantiated services to go in\n\t\tthis.services[pServiceType] = {};\n\n\t\t// Using the static member of the class is a much more reliable way to check if it is a service class than instanceof\n\t\tif ((typeof(pServiceClass) == 'function') && (pServiceClass.isFableService))\n\t\t{\n\t\t\t// Add the class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = pServiceClass;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the base class to the list of classes\n\t\t\tthis.fable.log.error(`Attempted to add service type [${pServiceType}] with an invalid class.  Using base service class, which will not crash but won't provide meaningful services.`);\n\t\t\tthis.serviceClasses[pServiceType] = libFableServiceBase;\n\t\t}\n\t}\n\n\t// This is for the services that are meant to run mostly single-instance so need a default at initialization\n\taddAndInstantiateServiceType(pServiceType, pServiceClass)\n\t{\n\t\tthis.addServiceType(pServiceType, pServiceClass);\n\t\tthis.instantiateServiceProvider(pServiceType, {}, `${pServiceType}-Default`);\n\t}\n\n\t// Some servicds expect to be overloaded / customized class.\n\tinstantiateServiceProviderFromPrototype(pServiceType, pOptions, pCustomServiceHash, pServicePrototype)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new pServicePrototype(this.fable, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.services[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.defaultServices.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\n\tinstantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = this.instantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.services[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.defaultServices.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\t// Create a service provider but don't register it to live forever in fable.services\n\tinstantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new this.serviceClasses[pServiceType](this.fable, pOptions, pCustomServiceHash);\n\t\treturn tmpService;\n\t}\n\n\t// Connect an initialized service provider that came before Fable was initialized\n\tconnectPreinitServiceProviderInstance(pServiceInstance)\n\t{\n\t\tlet tmpServiceType = pServiceInstance.serviceType;\n\t\tlet tmpServiceHash = pServiceInstance.Hash;\n\n\t\t// The service should already be instantiated, so just connect it to fable\n\t\tpServiceInstance.connectFable(this.fable);\n\n\t\tif (!this.services.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\t// If the core service hasn't registered itself yet, create the service container for it.\n\t\t\t// This means you couldn't register another with this type unless it was later registered with a constructor class.\n\t\t\tthis.services[tmpServiceType] = {};\n\t\t}\n\t\t// Add the service to the service map\n\t\tthis.services[tmpServiceType][tmpServiceHash] = pServiceInstance;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.defaultServices.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(tmpServiceType, tmpServiceHash)\n\t\t}\n\n\t\treturn pServiceInstance;\n\t}\n\n\tsetDefaultServiceInstantiation(pServiceType, pServiceHash)\n\t{\n\t\tif (this.services[pServiceType].hasOwnProperty(pServiceHash))\n\t\t{\n\t\t\tthis.fable[pServiceType] = this.services[pServiceType][pServiceHash];\n\t\t\tthis.defaultServices[pServiceType] = this.services[pServiceType][pServiceHash];\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nmodule.exports = FableService;\n\nmodule.exports.ServiceProviderBase = libFableServiceBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceBase.CoreServiceProviderBase;\n},{\"fable-serviceproviderbase\":39}],41:[function(require,module,exports){\n/**\n* Fable Application Services Support Library\n* @author <steven@velozo.com>\n*/\n// Pre-init services\nconst libFableSettings = require('fable-settings');\nconst libFableUUID = require('fable-uuid');\nconst libFableLog = require('fable-log');\n\nconst libFableServiceManager = require('./Fable-ServiceManager.js');\n\nclass Fable\n{\n\tconstructor(pSettings)\n\t{\n\t\t// Initialization Phase 0: Set up the lowest level state (core services)\n\t\t// Container for the core services prototypes.\n\t\t// This is here so if an API consumer changes the default for a core service,\n\t\t// fable still runs with what was initialized.\n\t\tthis._coreServices = {};\n\n\t\t// Instantiate the default Settings Manager\n\t\tthis._coreServices.SettingsManager = new libFableSettings(pSettings);\n\t\t// Instantiate the UUID generator\n\t\tthis._coreServices.UUID = new libFableUUID(this._coreServices.SettingsManager.settings);\n\t\t// Instantiate the logging system\n\t\tthis._coreServices.Logging = new libFableLog(this._coreServices.SettingsManager.settings);\n\t\tthis._coreServices.Logging.initialize();\n\n\t\t// Initialization Phase 1: Instantiate the service manager\n\t\t// This is the start actual bootstrapping point for fable\n\t\tthis._coreServices.ServiceManager = new libFableServiceManager(this);\n\t\tthis.serviceManager = this._coreServices.ServiceManager;\n\t\tthis.serviceManager.connectFable(this);\n\t\t// Bootstrapping of fable into the Service Manager is complete\n\n\t\t// Initialization Phase 2: Map in the default services.\n\t\t// They will then be available in the Default service provider set as well.\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.ServiceManager);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.UUID);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.Logging);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.SettingsManager);\n\n\t\t// Initialize and instantiate the default baked-in Data Arithmatic service\n\t\tthis.serviceManager.addAndInstantiateServiceType('EnvironmentData', require('./services/Fable-Service-EnvironmentData.js'));\n\t\tthis.serviceManager.addServiceType('Template', require('./services/Fable-Service-Template.js'));\n\t\tthis.serviceManager.addServiceType('MetaTemplate', require('./services/Fable-Service-MetaTemplate.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('DataFormat', require('./services/Fable-Service-DataFormat.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('Utility', require('./services/Fable-Service-Utility.js'));\n\t\tthis.serviceManager.addServiceType('Operation', require('./services/Fable-Service-Operation.js'));\n\t\tthis.serviceManager.addServiceType('RestClient', require('./services/Fable-Service-RestClient.js'));\n\t\tthis.serviceManager.addServiceType('CSVParser', require('./services/Fable-Service-CSVParser.js'));\n\t\tthis.serviceManager.addServiceType('Manifest', require('manyfest'));\n\t\tthis.serviceManager.addServiceType('ObjectCache', require('cachetrax'));\n\t}\n\n\tget isFable()\n\t{\n\t\treturn true;\n\t}\n\n\tget settings()\n\t{\n\t\treturn this._coreServices.SettingsManager.settings;\n\t}\n\n\tget settingsManager()\n\t{\n\t\treturn this._coreServices.SettingsManager;\n\t}\n\n\tget log()\n\t{\n\t\treturn this._coreServices.Logging;\n\t}\n\n\tget services()\n\t{\n\t\treturn this._coreServices.ServiceManager.services;\n\t}\n\n\tget defaultServices()\n\t{\n\t\treturn this._coreServices.ServiceManager.defaultServices;\n\t}\n\n\tgetUUID()\n\t{\n\t\treturn this._coreServices.UUID.getUUID();\n\t}\n\n\tget fable()\n\t{\n\t\treturn this;\n\t};\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new Fable(pSettings);\n}\n\nmodule.exports = Fable;\nmodule.exports.new = autoConstruct;\n\nmodule.exports.LogProviderBase = libFableLog.LogProviderBase;\nmodule.exports.ServiceProviderBase = libFableServiceManager.ServiceProviderBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceManager.CoreServiceProviderBase;\n\nmodule.exports.precedent = libFableSettings.precedent;\n},{\"./Fable-ServiceManager.js\":40,\"./services/Fable-Service-CSVParser.js\":42,\"./services/Fable-Service-DataFormat.js\":43,\"./services/Fable-Service-EnvironmentData.js\":44,\"./services/Fable-Service-MetaTemplate.js\":45,\"./services/Fable-Service-Operation.js\":49,\"./services/Fable-Service-RestClient.js\":50,\"./services/Fable-Service-Template.js\":51,\"./services/Fable-Service-Utility.js\":52,\"cachetrax\":21,\"fable-log\":30,\"fable-settings\":35,\"fable-uuid\":37,\"manyfest\":66}],42:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Parsing CSVs.  Why?  Because it's a thing that needs to be done.\n*\n* 1. And the other node CSV parsers had issues with the really messy files we had.\n* \n*\n* 2. None of the CSV parsers dealt with and multi-line quoted string columns\n*    which are apparently a-ok according to the official spec.\n* Plus a lot of them are asynchronous because apparently that's the best way to\n* do anything; unfortunately some files have a sequence issue with that.\n*\n* @class CSVParser\n*/\nclass CSVParser extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'CSVParser';\n\n        this.Header = [];\n        this.HeaderFieldNames = [];\n\n        this.Delimiter = ',';\n        this.QuoteCharacter = '\"';\n\n        this.CleanCharacters = ['\\r'];\n\n        this.HeaderLineIndex = 0;\n        this.HasHeader = true;\n        this.HasSetHeader = false;\n        this.EmitHeader = false;\n\n        this.EmitJSON = true;\n\n        this.EscapedQuoteString = '&quot;';\n\n        // Current Line Parsing State\n        this.CurrentLine = '';\n        this.CurrentRecord = [];\n\n        this.InQuote = false;\n        this.InEscapedQuote = false;\n\n        this.LinesParsed = 0;\n        this.RowsEmitted = 0;\n    }\n\n    marshalRowToJSON(pRowArray)\n    {\n        if (!Array.isArray(pRowArray))\n        {\n            return false;\n        }\n\n        for (let i = this.HeaderFieldNames.length; i < pRowArray.length; i++)\n        {\n            this.HeaderFieldNames[i] = `${i}`;\n        }\n\n        let tmpObject = {};\n\n        for (let i = 0; i < pRowArray.length; i++)\n        {\n            tmpObject[this.HeaderFieldNames[i]] = pRowArray[i];\n        }\n\n        return tmpObject;\n    }\n\n    // Set the header data, for use in marshalling to JSON.\n    setHeader (pHeaderArray)\n    {\n        this.Header = pHeaderArray;\n\n        for (let i = 0; i < this.Header.length; i++)\n        {\n            if (typeof(this.Header[i]) == 'undefined')\n            {\n                this.HeaderFieldNames[i] = `${i}`;\n            }\n            else\n            {\n                this.HeaderFieldNames[i] = this.Header[i].toString();\n            }\n        }\n    }\n\n    resetRowState()\n    {\n        this.CurrentRecord = [];\n    }\n\n    pushLine()\n    {\n        for (let i = 0; i < this.CleanCharacters.length; i++)\n        {\n            this.CurrentLine = this.CurrentLine.replace(this.CleanCharacters[i],'');\n        }\n        this.CurrentRecord.push(this.CurrentLine);\n        this.CurrentLine = '';\n    }\n\n    emitRow(pFormatAsJSON)\n    {\n        let tmpFormatAsJSON = (typeof(pFormatAsJSON) == 'undefined') ? this.EmitJSON : pFormatAsJSON;\n\n        this.RowsEmitted++;\n        let tmpCompletedRecord = this.CurrentRecord;\n        this.CurrentRecord = [];\n\n        if (tmpFormatAsJSON)\n        {\n            return this.marshalRowToJSON(tmpCompletedRecord);\n        }\n        else\n        {\n            return tmpCompletedRecord;\n        }\n    }\n\n    parseCSVLine (pLineString)\n    {\n        this.LinesParsed++;\n\n        for (let i = 0; i < pLineString.length; i++)\n        {\n            if ((!this.InQuote) && (pLineString[i] == this.Delimiter))\n            {\n                this.pushLine();\n            }\n            else if (pLineString[i] == this.QuoteCharacter)\n            {\n                // If we are in the second part of an escaped quote, ignore it.\n                if (this.InEscapedQuote)\n                {\n                    this.InEscapedQuote = false;\n                }\n                // If we aren't in a quote, enter quote\n                else if (!this.InQuote)\n                {\n                    this.InQuote = true;\n                }\n                // We are in a quote, so peek forward to see if this is an \"escaped\" quote pair\n                else if ((i < pLineString.length) && (pLineString[i+1] == this.QuoteCharacter))\n                {\n                    this.CurrentLine += this.EscapedQuoteString;\n                    this.InEscapedQuote = true;\n                }\n                // We are in a quote, this isn't an \"escaped\" quote pair, so go out of quote mode\n                else\n                {\n                    this.InQuote = false;\n                }\n            }\n            else\n            {\n                this.CurrentLine += pLineString[i];\n            }\n        }\n\n        // See if we are in a multiline quoted entry -- if not, emit the row.\n        if (!this.InQuote)\n        {\n            // Push the last remaining column from the buffer to the current line.\n            this.pushLine();\n\n            // Check to see if there is a header -- and if so, if this is the header row\n            if (this.HasHeader && !this.HasSetHeader && (this.RowsEmitted == this.HeaderLineIndex))\n            {\n                this.HasSetHeader = true;\n                // Override the format as json bit\n                this.setHeader(this.emitRow(false));\n\n                // No matter what, formatting this as JSON is silly and we don't want to go there anyway.\n                if (this.EmitHeader)\n                {\n                    return this.Header;\n                }\n                else\n                {\n                    return false;\n                }\n            }\n            else\n            {\n                return this.emitRow();\n            }\n        }\n        else\n        {\n            return false;\n        }\n    };\n}\n\nmodule.exports = CSVParser;\n},{\"fable-serviceproviderbase\":39}],43:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Data Formatting and Translation Functions\n*\n* @class DataFormat\n*/\nclass DataFormat extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'DataArithmatic';\n\n\t\t// Regular Expressions (so they don't have to be recompiled every time)\n\t\t// These could be defined as static, but I'm not sure if that will work with browserify ... and specifically the QT browser.\n\t\tthis._Regex_formatterInsertCommas = /.{1,3}/g;\n\t\t// Match Function:\n\t\t// function(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t\t// Thoughts about below:   /^([+-]?)(0*)(\\d+)(\\.(\\d+))?$/;\n\t\tthis._Regex_formatterAddCommasToNumber = /^([-+]?)(0?)(\\d+)(.?)(\\d+)$/g;\n\t\tthis._Regex_formatterDollarsRemoveCommas = /,/gi;\n\t\tthis._Regex_formatterCleanNonAlpha = /[^a-z0-9]/gi;\n\n\t\t// TODO: Potentially pull these in from a configuration.\n\t\t// TODO: Use locale data for this if it's defaults all the way down.\n\t\tthis._Value_MoneySign_Currency = '$';\n\t\tthis._Value_NaN_Currency = '--';\n\t\tthis._Value_GroupSeparator_Number = ',';\n\n\t\tthis._Value_Prefix_StringHash = 'HSH';\n\t\tthis._Value_Clean_formatterCleanNonAlpha = '_';\n\n\t\tthis._UseEngineStringStartsWith = (typeof(String.prototype.startsWith) === 'function');\n\t\tthis._UseEngineStringEndsWith = (typeof(String.prototype.endsWith) === 'function');\n\t}\n\n\n\t/*************************************************************************\n\t * String Manipulation and Comparison Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Reverse a string\n\t *\n\t * @param {string} pString - The string to reverse\n\t * @returns {string}\n\t */\n\tstringReverse (pString)\n\t{\n\t\t// TODO: Benchmark if there are faster ways we want to do this with all the newer JS stuff\n\t\t//       ... and if it will work with browserify in a clean way.\n\t\treturn pString.split('').reverse().join('');\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pStartIndex\n\t * @returns {*}\n\t */\n\tstringStartsWith (pString, pSearchString, pStartIndex)\n\t{\n\t\tif (this._UseEngineStringStartsWith)\n\t\t{\n\t\t\treturn pString.startsWith(pSearchString, pStartIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringStartsWith_Polyfill.call(pString, pSearchString, pStartIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pStartIndex - The index to start the search at\n\t * @returns {boolean}\n\t */\n\tstringStartsWith_Polyfill (pSearchString, pStartIndex)\n\t{\n\t\treturn this.slice(pStartIndex || 0, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pEndIndex\n\t * @returns {*}\n\t */\n\tstringEndsWith (pString, pSearchString, pEndIndex)\n\t{\n\t\tif (this._UseEngineStringEndsWith)\n\t\t{\n\t\t\treturn pString.endsWith(pSearchString, pEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringEndsWith_Polyfill.call(pString, pSearchString, pEndIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pEndIndex - The index to end the search at\n\t * @returns {boolean}\n\t */\n\tstringEndsWith_Polyfill (pSearchString, pEndIndex)\n\t{\n\t\t// This works much better than >= because\n\t\t// it compensates for NaN:\n\t\tif (!(pEndIndex < this.length))\n\t\t{\n\t\t\tpEndIndex = this.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpEndIndex |= 0; // round position\n\t\t}\n\t\treturn this.substr(pEndIndex - pSearchString.length, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Generate an insecure string hash.  Not meant to be secure, just a quick way to generate a hash for a string.  This is not a cryptographic hash.  Additional warranty and disclaimer ... this is not for passwords!\n\t *\n\t * @param {string} pString\n\t * @returns {string}\n\t */\n\tinsecureStringHash (pString)\n\t{\n\t\tlet tmpHash = 0;\n\t\tlet tmpStringLength = pString.length;\n\t\tlet tmpCharacterIndex = 0;\n\n\t\twhile (tmpCharacterIndex < tmpStringLength)\n\t\t{\n\t\t\ttmpHash = (tmpHash << 5) - tmpHash + pString.charCodeAt(tmpCharacterIndex++) | 0;\n\t\t}\n\n\t\treturn `${this._Value_Prefix_StringHash}${tmpHash}`;\n\t}\n\n\t/**\n\t * Clean wrapping characters if they exist consistently around the string.  If they do not, the string is returned unchanged.\n\t *\n\t * @param {string} pWrapCharacter - The character expected as the wrapping character\n\t * @param {string} pString - the string to clean\n\t * @returns {string}\n\t */\n\tcleanEnclosureWrapCharacters (pWrapCharacter, pString)\n\t{\n\t\t// # Use case from ManyFest DSL:\n\t\t//\n\t\t// When a boxed property is passed in, it should have quotes of some\n\t\t// kind around it.\n\t\t//\n\t\t// For instance:\n\t\t// \t\tMyValues['Name']\n\t\t// \t\tMyValues[\"Age\"]\n\t\t// \t\tMyValues[`Cost`]\n\t\t//\n\t\t// This function is necessary to remove the wrapping quotes before object\n\t\t// resolution can occur.\n\t\tif (pString.startsWith(pWrapCharacter) && pString.endsWith(pWrapCharacter))\n\t\t{\n\t\t\treturn pString.substring(1, pString.length - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn pString;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {*} pString\n\t * @returns\n\t */\n\tcleanNonAlphaCharacters (pString)\n\t{\n\t\tif ((typeof(pString) == 'string') && (pString != ''))\n\t\t{\n\t\t\treturn pString.replace(this._Regex_formatterCleanNonAlpha, this._Value_Clean_formatterCleanNonAlpha);\n\t\t}\n\t}\n\n\n\t/*************************************************************************\n\t * Number Formatting Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Insert commas every 3 characters from the right.  Used by formatterAddCommasToNumber().\n\t *\n\t * @param {*} pString\n\t * @returns {*}\n\t */\n\tformatterInsertCommas (pString)\n\t{\n\t\t// Reverse, because it's easier to do things from the left, given arbitrary digit counts\n\t\tlet tmpReversed = this.stringReverse(pString);\n\t\t// Add commas every three characters\n\t\tlet tmpReversedWithCommas = tmpReversed.match(this._Regex_formatterInsertCommas).join(',');\n\t\t// Reverse again (back to normal direction)\n\t\treturn this.stringReverse(tmpReversedWithCommas);\n\t}\n\n\tprocessAddCommasToNumberRegex(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t{\n\t\t// If there was no decimal, the last capture grabs the final digit, so\n\t\t// we have to put it back together with the 'before' substring\n\t\treturn pSign + (pDecimal ? this.formatterInsertCommas(pBefore) + pDecimal + pAfter : this.formatterInsertCommas(pBefore + pAfter));\n\t}\n\n\t/**\n\t * Add Commas to a Number for readability.\n\t *\n\t * @param {*} pNumber\n\t * @returns {string}\n\t */\n\tformatterAddCommasToNumber (pNumber)\n\t{\n\t\t// If the regex doesn't match, `replace` returns the string unmodified\n\t\treturn (pNumber.toString()).replace\n\t\t(\n\t\t\tthis._Regex_formatterAddCommasToNumber,\n\t\t\tthis.processAddCommasToNumberRegex.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * This will take a number and format it as a dollar string.  It will also add commas to the number.  If the number is not a number, it will return '--'.\n\t *\n\t * @param {*} pValue\n\t * @returns {string}\n\t */\n\tformatterDollars (pValue)\n\t{\n\t\tlet tmpDollarAmount = parseFloat(pValue).toFixed(2);\n\n\t\tif (isNaN(tmpDollarAmount))\n\t\t{\n\t\t\t// Try again and see if what was passed in was a dollars string.\n\t\t\tif (typeof(pValue) == 'string')\n\t\t\t{\n\t\t\t\t// TODO: Better rounding function?  This is a hack to get rid of the currency symbol and commas.\n\t\t\t\ttmpDollarAmount = parseFloat(pValue.replace(this._Value_MoneySign_Currency,'').replace(this._Regex_formatterDollarsRemoveCommas,'')).toFixed(2);\n\t\t\t}\n\t\t\t// If we didn't get a number, return the \"not a number\" string.\n\t\t\tif (isNaN(tmpDollarAmount))\n\t\t\t{\n\t\t\t\treturn this._Value_NaN_Currency;\n\t\t\t}\n\t\t}\n\n\t\t// TODO: Get locale data and use that for this stuff.\n\t\treturn `$${this.formatterAddCommasToNumber(tmpDollarAmount)}`;\n\t}\n\n\t/**\n\t * Round a number to a certain number of digits.  If the number is not a number, it will return 0.  If no digits are specified, it will default to 2 significant digits.\n\t *\n\t * @param {*} pValue\n\t * @param {number} pDigits\n\t * @returns {string}\n\t */\n\tformatterRoundNumber (pValue, pDigits)\n\t{\n\t\tlet tmpDigits = (typeof(pDigits) == 'undefined') ? 2 : pDigits;\n\n\t\tlet tmpValue = parseFloat(pValue).toFixed(tmpDigits);\n\t\tif (isNaN(tmpValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpValue;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate a reapeating padding string to be appended before or after depending on \n\t * which padding function it uses.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringGeneratePaddingString(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpTargetLength = pTargetLength >> 0;\n\t\tlet tmpPadString = String((typeof pPadString !== 'undefined' ? pPadString : ' '));\n\t\tif (pString.length > pTargetLength)\n\t\t{\n\t\t\t// No padding string if the source string is already longer than the target length, return an empty string\n\t\t\treturn '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpPadLength = pTargetLength - pString.length;\n\t\t\tif (tmpPadLength > pPadString.length)\n\t\t\t{\n\t\t\t\tpPadString += pPadString.repeat(tmpTargetLength / pPadString.length);\n\t\t\t}\n\t\t\treturn pPadString.slice(0,tmpPadLength);\n\t\t}\n\t}\n\n\t/**\n\t * Pad the start of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadStart = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString) + tmpString;\n\t}\n\n\t/**\n\t * Pad the end of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadEnd = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn tmpString + this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString);\n\t}\n\n\t/*************************************************************************\n\t * Time Formatting Functions (milliseconds)\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Format a time length in milliseconds into a human readable string.\n\t * @param {number} pTimeSpan \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeSpan(pTimeSpan)\n\t{\n\t\tif (typeof(pTimeSpan) != 'number')\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpMs = parseInt(pTimeSpan%1000);\n\t\tlet tmpSeconds = parseInt((pTimeSpan/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeSpan/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeSpan/(1000*60*60));\n\n\t\treturn `${this.stringPadStart(tmpHours,2,'0')}:${this.stringPadStart(tmpMinutes,2,'0')}:${this.stringPadStart(tmpSeconds,2,'0')}.${this.stringPadStart(tmpMs,3,'0')}`;\n\t}\n\n\t/**\n\t * Format the time delta between two times in milliseconds into a human readable string.\n\t * \n\t * @param {number} pTimeStart \n\t * @param {number} pTimeEnd \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeDelta(pTimeStart, pTimeEnd)\n\t{\n\t\tif ((typeof(pTimeStart) != 'number') || (typeof(pTimeEnd) != 'number'))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.formatTimeSpan(pTimeEnd-pTimeStart);\n\t}\n\n\t// THE FOLLOWING TERRIBLE FUNCTIONS ARE FOR QT / WKHTMLTOPDF when luxon and moment don't work so well\n\tgetMonthFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tgetMonthAbbreviatedFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tformatSortableStringFromDate (pDate)\n\t{\n\t\treturn pDate.getFullYear()+this.stringPadStart(pDate.getMonth(),2,'0')+this.stringPadStart(pDate.getDate(),2,'0');\n\t}\n\n\t/*************************************************************************\n\t * String Tokenization Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Return the string before the matched substring.\n\t *\n\t * If the substring is not found, the entire string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringBeforeMatch (pString, pMatch)\n\t{\n\t\treturn pString.split(pMatch)[0];\n\t}\n\n\t/**\n\t * Return the string after the matched substring.\n\t *\n\t * If the substring is not found, an empty string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringAfterMatch (pString, pMatch)\n\t{\n\t\tlet tmpStringSplitLocation = pString.indexOf(pMatch);\n\n\t\tif ((tmpStringSplitLocation < 0) || ((tmpStringSplitLocation + pMatch.length) >= pString.length))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn pString.substring(tmpStringSplitLocation + pMatch.length);\n\t}\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures (pString, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\tif (tmpEnclosureDepth == 0)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t}\n\t\t\t\ttmpEnclosureDepth++;\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpEnclosureCount;\n\t}\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosedValueStartIndex = 0;\n\t\tlet tmpEnclosedValueEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This is the end of an enclosure\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t\t{\n\t\t\t// Return an empty string if the enclosure is not found\n\t\t\treturn '';\n\t\t}\n\n\t\tif ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t\t}\n\t}\n\n\n\t/**\n\t * Remove an enclosure from a string based on the index of the enclosure.\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToRemove\n\t * @param {number} pEnclosureStart\n\t * @param {number} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringRemoveEnclosureByIndex (pString, pEnclosureIndexToRemove, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToRemove = (typeof(pEnclosureIndexToRemove) == 'number') ? pEnclosureIndexToRemove : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosureStartIndex = 0;\n\t\tlet tmpEnclosureEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToRemove == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosureStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosureEndIndex <= tmpEnclosureStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToRemove)\n\t\t{\n\t\t\treturn tmpString;\n\t\t}\n\n\t\tlet tmpReturnString = '';\n\n\t\tif (tmpEnclosureStartIndex > 1)\n\t\t{\n\t\t\ttmpReturnString = tmpString.substring(0, tmpEnclosureStartIndex);\n\t\t}\n\n\t\tif ((tmpString.length > (tmpEnclosureEndIndex + 1)) && (tmpEnclosureEndIndex > tmpEnclosureStartIndex))\n\t\t{\n\t\t\ttmpReturnString += tmpString.substring(tmpEnclosureEndIndex+1);\n\t\t}\n\n\t\treturn tmpReturnString;\n\t}\n}\n\nmodule.exports = DataFormat;\n},{\"fable-serviceproviderbase\":39}],44:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceEnvironmentData extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'EnvironmentData';\n\n\t\tthis.Environment = `node.js`;\n\t}\n}\n\nmodule.exports = FableServiceEnvironmentData;\n},{\"../Fable-ServiceManager.js\":40}],45:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\n/**\n* Precedent Meta-Templating\n* @author      Steven Velozo <steven@velozo.com>\n* @description Process text stream trie and postfix tree, parsing out meta-template expression functions.\n*/\nconst libWordTree = require(`./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js`);\nconst libStringParser = require(`./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js`);\n\n\nclass FableServiceMetaTemplate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'MetaTemplate';\n\n\t\tthis.WordTree = new libWordTree();\n\n\t\t// In order to allow asynchronous template processing we need to use the async.eachLimit function\n\t\tthis.StringParser = new libStringParser(this.fable.defaultServices.Utility.eachLimit);\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\taddPatternAsync(pPatternStart, pPatternEnd, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternAsync(pPatternStart, pPatternEnd, pParserPromise);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData, fCallback)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceMetaTemplate;\n},{\"../Fable-ServiceManager.js\":40,\"./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js\":46,\"./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js\":47}],46:[function(require,module,exports){\n/**\n* MetaTemplate String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor(fEachLimit)\n\t{\n\t\tthis.eachLimit = fEachLimit;\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: false,\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchOutputBuffer: ''\n\t\t});\n\t}\n\n\t/**\n\t * Assign a node of the parser tree to be the next potential match.\n\t * If the node has a PatternEnd property, it is a valid match and supercedes the last valid match (or becomes the initial match).\n\t * @method assignNode\n\t * @param {Object} pNode - A node on the parse tree to assign\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tassignNode (pNode, pParserState)\n\t{\n\t\tpParserState.PatternMatch = pNode;\n\n\t\t// If the pattern has a END we can assume it has a parse function...\n\t\tif (pParserState.PatternMatch.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\t// ... this is the legitimate start of a pattern.\n\t\t\tpParserState.Pattern = pParserState.PatternMatch;\n\t\t}\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\t/**\n\t * Check if the pattern has ended.  If it has, properly flush the buffer and start looking for new patterns.\n\t * @method checkPatternEnd\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tcheckPatternEnd (pParserState, pData)\n\t{\n\t\tif ((pParserState.OutputBuffer.length >= pParserState.Pattern.PatternEnd.length+pParserState.Pattern.PatternStart.length) &&\n\t\t\t(pParserState.OutputBuffer.substr(-pParserState.Pattern.PatternEnd.length) === pParserState.Pattern.PatternEnd))\n\t\t{\n\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t{\n\t\t\t\tconsole.log(`Precedent ERROR: Async template detected for pattern ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd} but the template engine is being run in non-async mode.`);\n\t\t\t\tthis.OutputBuffer = '';\n\t\t\t\t// Flush the output buffer.\n\t\t\t\tthis.flushOutputBuffer(pParserState);\n\t\t\t\t// End pattern mode\n\t\t\t\tpParserState.Pattern = false;\n\t\t\t\tpParserState.PatternMatch = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStart.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStart.length+pParserState.Pattern.PatternEnd.length)), pData);\n\t\t\t\t// Flush the output buffer.\n\t\t\t\tthis.flushOutputBuffer(pParserState);\n\t\t\t\t// End pattern mode\n\t\t\t\tpParserState.Pattern = false;\n\t\t\t\tpParserState.PatternMatch = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckPatternEndAsync (pParserState, pData, fCallback)\n\t{\n\t\tif ((pParserState.OutputBuffer.length >= pParserState.Pattern.PatternEnd.length+pParserState.Pattern.PatternStart.length) &&\n\t\t\t(pParserState.OutputBuffer.substr(-pParserState.Pattern.PatternEnd.length) === pParserState.Pattern.PatternEnd))\n\t\t{\n\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t{\n\t\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStart.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStart.length+pParserState.Pattern.PatternEnd.length)), pData,\n\t\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\t\tthis.flushOutputBuffer(pParserState);\n\t\t\t\t\t\t// End pattern mode\n\t\t\t\t\t\tpParserState.Pattern = false;\n\t\t\t\t\t\tpParserState.PatternMatch = false;\n\n\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStart.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStart.length+pParserState.Pattern.PatternEnd.length)), pData);\n\t\t\t\t// Flush the output buffer.\n\t\t\t\tthis.flushOutputBuffer(pParserState);\n\t\t\t\t// End pattern mode\n\t\t\t\tpParserState.Pattern = false;\n\t\t\t\tpParserState.PatternMatch = false;\n\t\t\t}\n\t\t}\n\n\t\treturn fCallback();\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// (1) If we aren't in a pattern match, and we aren't potentially matching, and this may be the start of a new pattern....\n\t\tif (!pParserState.PatternMatch && pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t{\n\t\t\t// ... assign the node as the matched node.\n\t\t\tthis.assignNode(pParserState.ParseTree[pCharacter], pParserState);\n\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t}\n\t\t// (2) If we are in a pattern match (actively seeing if this is part of a new pattern token)\n\t\telse if (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern has a subpattern with this key\n\t\t\tif (pParserState.PatternMatch.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// Continue matching patterns.\n\t\t\t\tthis.assignNode(pParserState.PatternMatch[pCharacter], pParserState);\n\t\t\t}\n\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\tif (pParserState.Pattern)\n\t\t\t{\n\t\t\t\t// ... Check if this is the end of the pattern (if we are matching a valid pattern)...\n\t\t\t\tthis.checkPatternEnd(pParserState, pData);\n\t\t\t}\n\t\t}\n\t\t// (3) If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\telse\n\t\t{\n\t\t\tpParserState.Output += pCharacter;\n\t\t}\n\t}\n\n\tparseCharacterAsync (pCharacter, pParserState, pData, fCallback)\n\t{\n\t\t// (1) If we aren't in a pattern match, and we aren't potentially matching, and this may be the start of a new pattern....\n\t\tif (!pParserState.PatternMatch && pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t{\n\t\t\t// ... assign the node as the matched node.\n\t\t\tthis.assignNode(pParserState.ParseTree[pCharacter], pParserState);\n\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t}\n\t\t// (2) If we are in a pattern match (actively seeing if this is part of a new pattern token)\n\t\telse if (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern has a subpattern with this key\n\t\t\tif (pParserState.PatternMatch.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// Continue matching patterns.\n\t\t\t\tthis.assignNode(pParserState.PatternMatch[pCharacter], pParserState);\n\t\t\t}\n\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\tif (pParserState.Pattern)\n\t\t\t{\n\t\t\t\t// ... Check if this is the end of the pattern (if we are matching a valid pattern)...\n\t\t\t\treturn this.checkPatternEndAsync(pParserState, pData, fCallback);\n\t\t\t}\n\t\t}\n\t\t// (3) If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\telse\n\t\t{\n\t\t\tpParserState.Output += pCharacter;\n\t\t}\n\n\t\treturn fCallback(null);\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t * @param {function} fCallback - The callback function to call when the parse is complete\n\t */\n\tparseString (pString, pParseTree, pData, fCallback)\n\t{\n\t\tif (typeof(fCallback) !== 'function')\n\t\t{\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\t\tfor (var i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: This is not fast.\n\t\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData, fCallback);\n\t\t\t}\n\n\t\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\t\treturn tmpParserState.Output;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is the async mode\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\t\tthis.eachLimit(pString, 1,\n\t\t\t\t(pCharacter, fCharacterCallback) =>\n\t\t\t\t{\n\t\t\t\t\tthis.parseCharacterAsync(pCharacter, tmpParserState, pData, fCharacterCallback);\n\t\t\t\t},\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\t// Flush the remaining data\n\t\t\t\t\tthis.flushOutputBuffer(tmpParserState);\n\t\t\t\t\tfCallback(pError, tmpParserState.Output);\n\t\t\t\t});\n\n\t\t}\n\t}\n}\n\nmodule.exports = StringParser;\n\n},{}],47:[function(require,module,exports){\n/**\n* MetaTemplate Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - The index of the character in the pattern\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern, pIndex)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern[pIndex]))\n\t\t\tpTree[pPattern[pIndex]] = {};\n\n\t\treturn pTree[pPattern[pIndex]];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {number} pParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, pParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t\treturn false;\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t\treturn false;\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart, i);\n\n\t\ttmpLeaf.PatternStart = pPatternStart;\n\t\ttmpLeaf.PatternEnd = ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length > 0)) ? pPatternEnd : pPatternStart;\n\t\ttmpLeaf.Parse = (typeof(pParser) === 'function') ? pParser :\n\t\t\t\t\t\t(typeof(pParser) === 'string') ? () => { return pParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\t\ttmpLeaf.isPromise = false;\n\n\t\treturn true;\n\t}\n\n\t/** Add a Pattern to the Parse Tree (asynchronous)\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {number} pParserAsync - The function (with an asynchronous callback) to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternAsync (pPatternStart, pPatternEnd, pParserAsync)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t\treturn false;\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t\treturn false;\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart, i);\n\n\t\ttmpLeaf.PatternStart = pPatternStart;\n\t\ttmpLeaf.PatternEnd = ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length > 0)) ? pPatternEnd : pPatternStart;\n\t\ttmpLeaf.Parse = (typeof(pParserAsync) === 'function') ? pParserAsync :\n\t\t\t\t\t\t(typeof(pParserAsync) === 'string') ? (pHash, pData, fCallback) => { fCallback(pParserPromise); } :\n\t\t\t\t\t\t(pHash, pData, fCallback) => { return fCallback(pHash); };\n\t\ttmpLeaf.isAsync = true;\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n\n},{}],48:[function(require,module,exports){\nmodule.exports = (\n    {\n        \"Metadata\": {\n            \"UUID\": false,\n            \"Hash\": false,\n\n            \"Title\": \"\",\n            \"Summary\": \"\",\n\n            \"Version\": 0\n        },\n        \"Status\": {\n            \"Completed\": false,\n\n            \"CompletionProgress\": 0,\n            \"CompletionTimeElapsed\": 0,\n\n            \"Steps\": 1,\n            \"StepsCompleted\": 0,\n\n            \"StartTime\": 0,\n            \"EndTime\": 0\n        },\n        \"Errors\": [],\n        \"Log\": []\n    }\n);\n},{}],49:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nconst _OperationStatePrototypeString = JSON.stringify(require('./Fable-Service-Operation-DefaultSettings.js'));\n\nclass FableOperation extends libFableServiceBase\n{\n\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PhasedOperation';\n\n\t\tthis.state = JSON.parse(_OperationStatePrototypeString);\n\n\t\t// Match the service instantiation to the operation.\n\t\tthis.state.Metadata.Hash = this.Hash;\n\t\tthis.state.Metadata.UUID = this.UUID;\n\n\t\tthis.name = (typeof(this.options.Name) == 'string') ? this.options.Name : `Unnamed Operation ${this.state.Metadata.UUID}`;\n\n\t\tthis.log = this;\n\t}\n\n\twriteOperationLog(pLogLevel, pLogText, pLogObject)\n\t{\n\t\tthis.state.Log.push(`${new Date().toUTCString()} [${pLogLevel}]: ${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Log.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\twriteOperationErrors(pLogText, pLogObject)\n\t{\n\t\tthis.state.Errors.push(`${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Errors.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('TRACE', pLogText, pLogObject);\n\t\tthis.fable.log.trace(pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('DEBUG', pLogText, pLogObject);\n\t\tthis.fable.log.debug(pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('INFO', pLogText, pLogObject);\n\t\tthis.fable.log.info(pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('WARN', pLogText, pLogObject);\n\t\tthis.fable.log.warn(pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('ERROR', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.error(pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('FATAL', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.fatal(pLogText, pLogObject);\n\t}\n}\n\nmodule.exports = FableOperation;\n},{\"../Fable-ServiceManager.js\":40,\"./Fable-Service-Operation-DefaultSettings.js\":48}],50:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nconst libSimpleGet = require('simple-get');\n\nclass FableServiceRestClient extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.TraceLog = false;\n\t\tif (this.options.TraceLog || this.fable.TraceLog)\n\t\t{\n\t\t\tthis.TraceLog = true;\n\t\t}\n\n\t\tthis.dataFormat = this.fable.defaultServices.DataFormat;\n\n\t\tthis.serviceType = 'RestClient';\n\n\t\t// This is a function that can be overridden, to allow the management\n\t\t// of the request options before they are passed to the request library.\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tpreRequest(pOptions)\n\t{\n\t\t// Validate the options object\n\t\treturn this.prepareRequestOptions(pOptions);\n\t}\n\n\texecuteChunkedRequest(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpData.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpData);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteJSONRequest(pOptions, fCallback)\n\t{\n\t\tpOptions.json = true;\n\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} JSON request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// In a JSON request, the chunk is the serialized method.\n\t\t\t\t\t\treturn fCallback(pError, pResponse, JSON.parse(pChunk));\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> JSON ${tmpOptions.method} completed - received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetJSON(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeJSONRequest(tmpRequestOptions, fCallback);\n\t}\n\n\tputJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PUT JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PUT';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpostJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`POST JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'POST';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpatchJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PATCH JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PATCH';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\theadJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`HEAD JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'HEAD';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tdelJSON(pOptions, fCallback)\n\t{\n\t\tpOptions.method = 'DELETE';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tgetRawText(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeChunkedRequest(tmpRequestOptions, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceRestClient;\n},{\"../Fable-ServiceManager.js\":40,\"simple-get\":79}],51:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceTemplate extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Template';\n\n\t\t// These are the exact regex's used in lodash/underscore\n\t\t// TODO: Switch this to precedent\n\t\tthis.Matchers = (\n\t\t\t{\n\t\t\t\tEvaluate: /<%([\\s\\S]+?)%>/g,\n\t\t\t\tInterpolate: /<%=([\\s\\S]+?)%>/g,\n\t\t\t\tEscaper: /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g,\n\t\t\t\tUnescaper: /\\\\(\\\\|'|r|n|t|u2028|u2029)/g,\n\t\t\t\t// This is how underscore does it, so we are keeping it for now.\n\t\t\t\tGuaranteedNonMatch: /.^/\n\t\t\t});\n\n\t\t// This is a helper for the escaper and unescaper functions.\n\t\t// Right now we are going to keep what underscore is doing, but, not forever.\n\t\tthis.templateEscapes = {\n\t\t\t'\\\\': '\\\\',\n\t\t\t\"'\": \"'\",\n\t\t\t'r': '\\r',\n\t\t\t'\\r': 'r',\n\t\t\t'n': '\\n',\n\t\t\t'\\n': 'n',\n\t\t\t't': '\\t',\n\t\t\t'\\t': 't',\n\t\t\t'u2028': '\\u2028',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'u2029': '\\u2029',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\t// This is defined as such to underscore that it is a dynamic programming\n\t\t// function on this class.\n\t\tthis.renderFunction = false;\n        this.templateString = false;\n\t}\n\n\trenderTemplate(pData)\n\t{\n\t\treturn this.renderFunction(pData);\n\t}\n\n\ttemplateFunction(pData)\n\t{\n\t\tlet fRenderTemplateBound = this.renderTemplate.bind(this);\n\t\treturn fRenderTemplateBound;\n\t}\n\n\tbuildTemplateFunction(pTemplateText, pData)\n\t{\n\t\t// For now this is being kept in a weird form ... this is to mimic the old\n\t\t// underscore code until this is rewritten using precedent.\n\t\tthis.TemplateSource = \"__p+='\" + pTemplateText\n\t\t\t.replace(this.Matchers.Escaper,\n\t\t\t\t(pMatch)=>\n\t\t\t\t{\n\t\t\t\t\treturn `\\\\${this.templateEscapes[pMatch]}`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Interpolate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `'+\\n(${decodeURIComponent(pCode)})+\\n'`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Evaluate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `';\\n${decodeURIComponent(pCode)}\\n;__p+='`;\n\t\t\t\t}) + `';\\n`;\n\n\n\t\tthis.TemplateSource = `with(pTemplateDataObject||{}){\\n${this.TemplateSource}}\\n`;\n\t\tthis.TemplateSource = `var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n${this.TemplateSource}return __p;\\n`;\n\n\t\tthis.renderFunction = new Function('pTemplateDataObject', this.TemplateSource);\n\n\t\tif (typeof(pData) != 'undefined')\n\t\t{\n\t\t\treturn this.renderFunction(pData);\n\t\t}\n\n\t\t// Provide the compiled function source as a convenience for build time\n\t\t// precompilation.\n\t\tthis.TemplateSourceCompiled = 'function(obj){\\n' + this.TemplateSource + '}';\n\n\t\treturn this.templateFunction();\n\t}\n}\n\nmodule.exports = FableServiceTemplate;\n},{\"../Fable-ServiceManager.js\":40}],52:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\n// TODO: These are still pretty big -- consider the smaller polyfills\nconst libAsyncWaterfall = require('async.waterfall');\nconst libAsyncEachLimit = require('async.eachlimit');\n\nclass FableServiceUtility extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\tthis.templates = {};\n\n\t\t// These two functions are used extensively throughout\n\t\tthis.waterfall = libAsyncWaterfall;\n\t\tthis.eachLimit = libAsyncEachLimit;\n\t}\n\n\t// Underscore and lodash have a behavior, _.extend, which merges objects.\n\t// Now that es6 gives us this, use the native thingy.\n\textend(pDestinationObject, ...pSourceObjects)\n\t{\n\t\treturn Object.assign(pDestinationObject, ...pSourceObjects);\n\t}\n\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\ttemplate(pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Template');\n\n\t\treturn tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t}\n\n\t// Build a template function from a template hash, and, register it with the service provider\n\tbuildHashedTemplate(pTemplateHash, pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.serviceManager.instantiateServiceProvider('Template', {}, pTemplateHash);\n\n\t\tthis.templates[pTemplateHash] = tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\n\t\treturn this.templates[pTemplateHash];\n\t}\n\n\t// This is a safe, modern version of chunk from underscore\n\t// Algorithm pulled from a mix of these two polyfills:\n\t// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\n\t// https://youmightnotneed.com/lodash\n\t// This implementation was most tolerant in browsers.  Uglify can fix the rest.\n\tchunk (pInput, pChunkSize, pChunkCache)\n\t{\n\t\tlet tmpInputArray = [...pInput];\n\t\t// Note lodash defaults to 1, underscore defaults to 0\n\t\tlet tmpChunkSize = (typeof(pChunkSize) == 'number') ? pChunkSize : 0;\n\t\tlet tmpChunkCache = (typeof(pChunkCache) != 'undefined') ? pChunkCache : [];\n\n\t\tif (tmpChunkSize <= 0)\n\t\t{\n\t\t\treturn tmpChunkCache;\n\t\t}\n\n\t\twhile (tmpInputArray.length)\n\t\t{\n\t\t\ttmpChunkCache.push(tmpInputArray.splice(0, tmpChunkSize));\n\t\t}\n\n\t\treturn tmpChunkCache;\n\t}\n\n\t// Convert an ISO string to a javascript date object\n\t// Adapted from https://stackoverflow.com/a/54751179\n\t//\n\t// Takes strings like: 2022-11-04T11:34:45.000Z\n\t//                and: 1986-06-11T09:34:46.012Z+0200\n\t// ... and converts them into javascript timestamps, following the directions of the timezone stuff.\n\t//\n\t// This is not meant to replace the more complex libraries such as moment or luxon.\n\t// This *is* meant to be a simple, small, and fast way to convert ISO strings to dates in engines\n\t// with ultra limited JS capabilities where those don't work.\n\tisoStringToDate (pISOString)\n\t{\n\n\t\t// Split the string into an array based on the digit groups.\n\t\tvar tmpDateParts = pISOString.split( /\\D+/ );\n\n\t\t// Set up a date object with the current time.\n\t\tvar tmpReturnDate = new Date();\n\n\t\t// Manually parse the parts of the string and set each part for the\n\t\t// date. Note: Using the UTC versions of these functions is necessary\n\t\t// because we're manually adjusting for time zones stored in the\n\t\t// string.\n\t\ttmpReturnDate.setUTCFullYear( parseInt( tmpDateParts[ 0 ] ) );\n\n\t\t// The month numbers are one \"off\" from what normal humans would expect\n\t\t// because January == 0.\n\t\ttmpReturnDate.setUTCMonth( parseInt( tmpDateParts[ 1 ] - 1 ) );\n\t\ttmpReturnDate.setUTCDate( parseInt( tmpDateParts[ 2 ] ) );\n\n\t\t// Set the time parts of the date object.\n\t\ttmpReturnDate.setUTCHours( parseInt( tmpDateParts[ 3 ] ) );\n\t\ttmpReturnDate.setUTCMinutes( parseInt( tmpDateParts[ 4 ] ) );\n\t\ttmpReturnDate.setUTCSeconds( parseInt( tmpDateParts[ 5 ] ) );\n\t\ttmpReturnDate.setUTCMilliseconds( parseInt( tmpDateParts[ 6 ] ) );\n\n\t\t// Track the number of hours we need to adjust the date by based on the timezone.\n\t\tvar tmpTimeZoneOffsetInHours = 0;\n\n\t\t// If there's a value for either the hours or minutes offset.\n\t\tif (tmpDateParts[ 7 ] || tmpDateParts[ 8 ])\n\t\t{\n\n\t\t\t// Track the number of minutes we need to adjust the date by based on the timezone.\n\t\t\tvar tmpTimeZoneOffsetInMinutes = 0;\n\n\t\t\t// If there's a value for the minutes offset.\n\t\t\tif (tmpDateParts[8])\n\t\t\t{\n\t\t\t\t// Convert the minutes value into an hours value.\n\t\t\t\ttmpTimeZoneOffsetInMinutes = parseInt(tmpDateParts[8]) / 60;\n\t\t\t}\n\n\t\t\t// Add the hours and minutes values to get the total offset in hours.\n\t\t\ttmpTimeZoneOffsetInHours = parseInt(tmpDateParts[7]) + tmpTimeZoneOffsetInMinutes;\n\n\t\t\t// If the sign for the timezone is a plus to indicate the timezone is ahead of UTC time.\n\t\t\tif (pISOString.substr( -6, 1 ) == \"+\")\n\t\t\t{\n\t\t\t\t// Make the offset negative since the hours will need to be subtracted from the date.\n\t\t\t\ttmpTimeZoneOffsetInHours *= -1;\n\t\t\t}\n\t\t}\n\n\t\t// Get the current hours for the date and add the offset to get the correct time adjusted for timezone.\n\t\ttmpReturnDate.setHours( tmpReturnDate.getHours() + tmpTimeZoneOffsetInHours );\n\n\t\t// Return the Date object calculated from the string.\n\t\treturn tmpReturnDate;\n\t}\n}\n\nmodule.exports = FableServiceUtility;\n},{\"../Fable-ServiceManager.js\":40,\"async.eachlimit\":1,\"async.waterfall\":15}],53:[function(require,module,exports){\nvar http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n\n},{\"http\":80,\"url\":101}],54:[function(require,module,exports){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],55:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n\n},{}],56:[function(require,module,exports){\n// When a boxed property is passed in, it should have quotes of some\n// kind around it.\n//\n// For instance:\n// \t\tMyValues['Name']\n// \t\tMyValues[\"Age\"]\n// \t\tMyValues[`Cost`]\n//\n// This function removes the wrapping quotes.\n//\n// Please note it *DOES NOT PARSE* template literals, so backticks just\n// end up doing the same thing as other quote types.\n//\n// TODO: Should template literals be processed?  If so what state do they have access to?  That should happen here if so.\n// TODO: Make a simple class include library with these\nconst cleanWrapCharacters = (pCharacter, pString) =>\n{\n\tif (pString.startsWith(pCharacter) && pString.endsWith(pCharacter))\n\t{\n\t\treturn pString.substring(1, pString.length - 1);\n\t}\n\telse\n\t{\n\t\treturn pString;\n\t}\n};\n\nmodule.exports = cleanWrapCharacters;\n},{}],57:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Hash Translation\n*\n* This is a very simple translation table for hashes, which allows the same schema to resolve\n* differently based on a loaded translation table.\n*\n* This is to prevent the requirement for mutating schemas over and over again when we want to\n* reuse the structure but look up data elements by different addresses.\n*\n* One side-effect of this is that a translation table can \"override\" the built-in hashes, since\n* this is always used to resolve hashes before any of the functionCallByHash(pHash, ...) perform\n* their lookups by hash.\n*\n* @class ManyfestHashTranslation\n*/\nclass ManyfestHashTranslation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n        this.translationTable = {};\n\t}\n\n    translationCount()\n    {\n        return Object.keys(this.translationTable).length;\n    }\n\n    addTranslation(pTranslation)\n    {\n        // This adds a translation in the form of:\n        // { \"SourceHash\": \"DestinationHash\", \"SecondSourceHash\":\"SecondDestinationHash\" }\n        if (typeof(pTranslation) != 'object')\n        {\n            this.logError(`Hash translation addTranslation expected a translation be type object but was passed in ${typeof(pTranslation)}`);\n            return false;\n        }\n\n        let tmpTranslationSources = Object.keys(pTranslation)\n\n        tmpTranslationSources.forEach(\n            (pTranslationSource) =>\n            {\n                if (typeof(pTranslation[pTranslationSource]) != 'string')\n                {\n                    this.logError(`Hash translation addTranslation expected a translation destination hash for [${pTranslationSource}] to be a string but the referrant was a ${typeof(pTranslation[pTranslationSource])}`);\n                }\n                else\n                {\n                    this.translationTable[pTranslationSource] = pTranslation[pTranslationSource];\n                }\n            });\n    }\n\n    removeTranslationHash(pTranslationHash)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslationHash))\n        {\n            delete this.translationTable[pTranslationHash];\n        }\n    }\n\n    // This removes translations.\n    // If passed a string, just removes the single one.\n    // If passed an object, it does all the source keys.\n    removeTranslation(pTranslation)\n    {\n        if (typeof(pTranslation) == 'string')\n        {\n            this.removeTranslationHash(pTranslation);\n            return true;\n        }\n        else if (typeof(pTranslation) == 'object')\n        {\n            let tmpTranslationSources = Object.keys(pTranslation)\n\n            tmpTranslationSources.forEach(\n                (pTranslationSource) =>\n                {\n                    this.removeTranslation(pTranslationSource);\n                });\n            return true;\n        }\n        else\n        {\n            this.logError(`Hash translation removeTranslation expected either a string or an object but the passed-in translation was type ${typeof(pTranslation)}`);\n            return false;\n        }\n    }\n\n    clearTranslations()\n    {\n        this.translationTable = {};\n    }\n\n    translate(pTranslation)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslation))\n        {\n            return this.translationTable[pTranslation];\n        }\n        else\n        {\n            return pTranslation;\n        }\n    }\n}\n\nmodule.exports = ManyfestHashTranslation;\n},{\"./Manyfest-LogToConsole.js\":58}],58:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\n\n/**\n* Manyfest simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n\n    console.log(`[Manyfest] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject));\n};\n\nmodule.exports = logToConsole;\n},{}],59:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Resolver\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressResolverCheckAddressExists\n*/\nclass ManyfestObjectAddressResolverCheckAddressExists\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// Check if an address exists.\n\t//\n\t// This is necessary because the getValueAtAddress function is ambiguous on\n\t// whether the element/property is actually there or not (it returns\n\t// undefined whether the property exists or not).  This function checks for\n\t// existance and returns true or false dependent.\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\t// TODO: Should these throw an error?\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Check if the property exists.\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName].hasOwnProperty(tmpBoxedPropertyReference);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Use the new in operator to see if the element is in the array\n\t\t\t\t\treturn (tmpBoxedPropertyNumber in pObject[tmpBoxedPropertyName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Check if the property exists\n\t\t\t\treturn pObject.hasOwnProperty(pAddress);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// Because this is an impossible address, the property doesn't exist\n\t\t\t\t\t// TODO: Should we throw an error in this condition?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverCheckAddressExists;\n},{\"./Manyfest-LogToConsole.js\":58}],60:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - DeleteValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverDeleteValue\n*/\nclass ManyfestObjectAddressResolverDeleteValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// TODO: Dry me\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Count from the end to the beginning so splice doesn't %&%#$ up the array\n\t\t\t\tfor (let i = tmpInputArray.length - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Delete elements end to beginning\n\t\t\t\t\t\ttmpInputArray.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tdelete pObject[tmpObjectPropertyName];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tdelete pObject[pAddress];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverDeleteValue;\n},{\"../source/Manyfest-ParseConditionals.js\":64,\"./Manyfest-CleanWrapCharacters.js\":56,\"./Manyfest-LogToConsole.js\":58}],61:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - GetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverGetValue\n*/\nclass ManyfestObjectAddressResolverGetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress, pParentAddress, pRootObject)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// Set the root object to the passed-in object if it isn't set yet.  This is expected to be the root object.\n\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// Adding simple back-navigation in objects\n\t\tif (tmpSeparatorIndex == 0)\n\t\t{\n\t\t\t// Given an address of \"Bundle.Contract.IDContract...Project.IDProject\" the ... would be interpreted as two back-navigations from IDContract.\n\t\t\t// When the address is passed in, though, the first . is already eliminated.  So we can count the dots.\n\t\t\tlet tmpParentAddressParts = tmpParentAddress.split('.');\n\n\t\t\tlet tmpBackNavigationCount = 0;\n\n\t\t\t// Count the number of dots\n\t\t\tfor (let i = 0; i < pAddress.length; i++)\n\t\t\t{\n\t\t\t\tif (pAddress.charAt(i) != '.')\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttmpBackNavigationCount++;\n\t\t\t}\n\n\t\t\tlet tmpParentAddressLength = tmpParentAddressParts.length - tmpBackNavigationCount;\n\n\t\t\tif (tmpParentAddressLength < 0)\n\t\t\t{\n\t\t\t\t// We are trying to back navigate more than we can.\n\t\t\t\t// TODO: Should this be undefined or should we bank out at the bottom and try to go forward?\n\t\t\t\t// This seems safest for now.\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are trying to back navigate to a parent object.\n\t\t\t\t// Recurse with the back-propagated parent address, and, the new address without the back-navigation dots.\n\t\t\t\tlet tmpRecurseAddress = pAddress.slice(tmpBackNavigationCount);\n\t\t\t\tif (tmpParentAddressLength > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpRecurseAddress = `${tmpParentAddressParts.slice(0, tmpParentAddressLength).join('.')}.${tmpRecurseAddress}`;\n\t\t\t\t}\n\t\t\t\tthis.logInfo(`Back-navigation detected.  Recursing back to address [${tmpRecurseAddress}]`);\n\t\t\t\treturn this.getValueAtAddress(tmpRootObject, tmpRecurseAddress);\n\t\t\t}\n\t\t}\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\tlet tmpOutputArray = [];\n\t\t\t\tfor (let i = 0; i < tmpInputArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOutputArray.push(tmpInputArray[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpOutputArray;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn pObject[tmpObjectPropertyName];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\treturn pObject[pAddress];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverGetValue;\n},{\"../source/Manyfest-ParseConditionals.js\":64,\"./Manyfest-CleanWrapCharacters.js\":56,\"./Manyfest-LogToConsole.js\":58}],62:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - SetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressSetValue\n*/\nclass ManyfestObjectAddressSetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyReference] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the time in recursion to set the value in the object\n\t\t\t\tpObject[pAddress] = pValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressSetValue;\n},{\"./Manyfest-CleanWrapCharacters.js\":56,\"./Manyfest-LogToConsole.js\":58}],63:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Generation\n*\n* Automagically generate addresses and properties based on a passed-in object,\n* to be used for easy creation of schemas.  Meant to simplify the lives of\n* developers wanting to create schemas without typing a bunch of stuff.\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressGeneration\n*/\nclass ManyfestObjectAddressGeneration\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// generateAddressses\n\t//\n\t// This flattens an object into a set of key:value pairs for *EVERY SINGLE\n\t// POSSIBLE ADDRESS* in the object.  It can get ... really insane really\n\t// quickly.  This is not meant to be used directly to generate schemas, but\n\t// instead as a starting point for scripts or UIs.\n\t//\n\t// This will return a mega set of key:value pairs with all possible schema\n\t// permutations and default values (when not an object) and everything else.\n\tgenerateAddressses (pObject, pBaseAddress, pSchema)\n\t{\n\t\tlet tmpBaseAddress = (typeof(pBaseAddress) == 'string') ? pBaseAddress : '';\n\t\tlet tmpSchema = (typeof(pSchema) == 'object') ? pSchema : {};\n\n\t\tlet tmpObjectType = typeof(pObject);\n\n\t\tlet tmpSchemaObjectEntry = (\n\t\t\t{\n\t\t\t\tAddress: tmpBaseAddress,\n\t\t\t\tHash: tmpBaseAddress,\n\t\t\t\tName: tmpBaseAddress,\n\t\t\t\t// This is so scripts and UI controls can force a developer to opt-in.\n\t\t\t\tInSchema: false\n\t\t\t}\n\t\t)\n\n\t\tif ((tmpObjectType == 'object') && (pObject == null))\n\t\t{\n\t\t\ttmpObjectType = 'null';\n\t\t}\n\n\t\tswitch(tmpObjectType)\n\t\t{\n\t\t\tcase 'string':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'String';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\tcase 'bigint':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Number';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\tcase 'null':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Any';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif (Array.isArray(pObject))\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Array';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < pObject.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[i], `${tmpBaseAddress}[${i}]`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Object';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t\ttmpBaseAddress += '.';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectProperties = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectProperties.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[tmpObjectProperties[i]], `${tmpBaseAddress}${tmpObjectProperties[i]}`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'symbol':\n\t\t\tcase 'function':\n\t\t\t\t// Symbols and functions neither recurse nor get added to the schema\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tmpSchema;\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressGeneration;\n},{\"./Manyfest-LogToConsole.js\":58}],64:[function(require,module,exports){\n// Given a string, parse out any conditional expressions and set whether or not to keep the record.\n//\n// For instance:\n// \t\t'files[]<<~?format,==,Thumbnail?~>>'\n//      'files[]<<~?format,==,Metadata?~>>'\n//      'files[]<<~?size,>,4000?~>>'\n//\n// The wrapping parts are the <<~? and ?~>> megabrackets.\n//\n// The function does not need to alter the string -- just check the conditionals within.\n\n// TODO: Consider making this an es6 class\n\n// Let's use indexOf since it is apparently the fastest.\nconst _ConditionalStanzaStart = '<<~?';\nconst _ConditionalStanzaStartLength = _ConditionalStanzaStart.length;\nconst _ConditionalStanzaEnd = '?~>>';\nconst _ConditionalStanzaEndLength = _ConditionalStanzaEnd.length;\n\n// Test the condition of a value in a record\nconst testCondition = (pManyfest, pRecord, pSearchAddress, pSearchComparator, pValue) =>\n{\n\tswitch(pSearchComparator)\n\t{\n\t\tcase '!=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) != pValue);\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) < pValue);\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) > pValue);\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) <= pValue);\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) >= pValue);\n\t\t\tbreak;\n\t\tcase '===':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === pValue);\n\t\t\tbreak;\n\t\tcase '==':\n\t\tdefault:\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) == pValue);\n\t\t\tbreak;\n\t}\n};\n\nconst parseConditionals = (pManyfest, pAddress, pRecord) =>\n{\n\tlet tmpKeepRecord = true;\n\n\t/*\n\t\tAlgorithm is simple:\n\n\t\t1.  Enuerate start points\n\n\t\t2.  Find stop points within each start point\n\t\t3. Check the conditional\n\t*/\n\n\tlet tmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart);\n\n\twhile (tmpStartIndex != -1)\n\t{\n\t\tlet tmpStopIndex = pAddress.indexOf(_ConditionalStanzaEnd, tmpStartIndex+_ConditionalStanzaStartLength);\n\n\t\tif (tmpStopIndex != -1)\n\t\t{\n\t\t\tlet tmpMagicComparisonPatternSet = pAddress.substring(tmpStartIndex+_ConditionalStanzaStartLength, tmpStopIndex).split(',');\n\n\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\t\t\tlet tmpSearchComparator = tmpMagicComparisonPatternSet[1];\n\t\t\tlet tmpSearchValue = tmpMagicComparisonPatternSet[2];\n\n\t\t\t// Process the piece\n\t\t\ttmpKeepRecord = tmpKeepRecord && testCondition(pManyfest, pRecord, tmpSearchAddress, tmpSearchComparator, tmpSearchValue);\n\t\t\ttmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart, tmpStopIndex+_ConditionalStanzaEndLength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpStartIndex = -1;\n\t\t}\n\t\t\n\t}\n\n\treturn tmpKeepRecord;\n}\n\nmodule.exports = parseConditionals;\n},{}],65:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Schema Manipulation Functions\n*\n* @class ManyfestSchemaManipulation\n*/\nclass ManyfestSchemaManipulation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n    // This translates the default address mappings to something different.\n    //\n    // For instance you can pass in manyfest schema descriptor object:\n    // \t{\n\t//\t  \"Address.Of.a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t//\t  \"Address.Of.b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t//  }\n    //\n    //\n    // And then an address mapping (basically a Hash->Address map)\n    //  {\n    //    \"a\": \"New.Address.Of.a\",\n    //    \"b\": \"New.Address.Of.b\"\n    //  }\n    //\n    // NOTE: This mutates the schema object permanently, altering the base hash.\n    //       If there is a collision with an existing address, it can lead to overwrites.\n    // TODO: Discuss what should happen on collisions.\n\tresolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\tif (typeof(pManyfestSchemaDescriptors) != 'object')\n\t\t{\n\t\t\tthis.logError(`Attempted to resolve address mapping but the descriptor was not an object.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof(pAddressMapping) != 'object')\n\t\t{\n\t\t\t// No mappings were passed in\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the arrays of both the schema definition and the hash mapping\n\t\tlet tmpManyfestAddresses = Object.keys(pManyfestSchemaDescriptors);\n\t\tlet tmpHashMapping = {};\n\t\ttmpManyfestAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tif (pManyfestSchemaDescriptors[pAddress].hasOwnProperty('Hash'))\n\t\t\t\t{\n\t\t\t\t\ttmpHashMapping[pManyfestSchemaDescriptors[pAddress].Hash] = pAddress;\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet tmpAddressMappingSet = Object.keys(pAddressMapping);\n\n\t\ttmpAddressMappingSet.forEach(\n\t\t\t(pInputAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpNewDescriptorAddress = pAddressMapping[pInputAddress];\n\t\t\t\tlet tmpOldDescriptorAddress = false;\n\t\t\t\tlet tmpDescriptor = false;\n\n\t\t\t\t// See if there is a matching descriptor either by Address directly or Hash\n\t\t\t\tif (pManyfestSchemaDescriptors.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = pInputAddress;\n\t\t\t\t}\n\t\t\t\telse if (tmpHashMapping.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = tmpHashMapping[pInputAddress];\n\t\t\t\t}\n\n\t\t\t\t// If there was a matching descriptor in the manifest, store it in the temporary descriptor\n\t\t\t\tif (tmpOldDescriptorAddress)\n\t\t\t\t{\n\t\t\t\t\ttmpDescriptor = pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t\tdelete pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Create a new descriptor!  Map it to the input address.\n\t\t\t\t\ttmpDescriptor = { Hash:pInputAddress };\n\t\t\t\t}\n\n\t\t\t\t// Now re-add the descriptor to the manyfest schema\n\t\t\t\tpManyfestSchemaDescriptors[tmpNewDescriptorAddress] = tmpDescriptor;\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tsafeResolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\t// This returns the descriptors as a new object, safely remapping without mutating the original schema Descriptors\n\t\tlet tmpManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptors));\n\t\tthis.resolveAddressMappings(tmpManyfestSchemaDescriptors, pAddressMapping);\n\t\treturn tmpManyfestSchemaDescriptors;\n\t}\n\n\tmergeAddressMappings(pManyfestSchemaDescriptorsDestination, pManyfestSchemaDescriptorsSource)\n\t{\n\t\tif ((typeof(pManyfestSchemaDescriptorsSource) != 'object') || (typeof(pManyfestSchemaDescriptorsDestination) != 'object'))\n\t\t{\n\t\t\tthis.logError(`Attempted to merge two schema descriptors but both were not objects.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpSource = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsSource));\n\t\tlet tmpNewManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsDestination));\n\n\t\t// The first passed-in set of descriptors takes precedence.\n\t\tlet tmpDescriptorAddresses = Object.keys(tmpSource);\n\n\t\ttmpDescriptorAddresses.forEach(\n\t\t\t(pDescriptorAddress) =>\n\t\t\t{\n\t\t\t\tif (!tmpNewManyfestSchemaDescriptors.hasOwnProperty(pDescriptorAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpNewManyfestSchemaDescriptors[pDescriptorAddress] = tmpSource[pDescriptorAddress];\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpNewManyfestSchemaDescriptors;\n\t}\n}\n\nmodule.exports = ManyfestSchemaManipulation;\n},{\"./Manyfest-LogToConsole.js\":58}],66:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\nlet libHashTranslation = require('./Manyfest-HashTranslation.js');\nlet libObjectAddressCheckAddressExists = require('./Manyfest-ObjectAddress-CheckAddressExists.js');\nlet libObjectAddressGetValue = require('./Manyfest-ObjectAddress-GetValue.js');\nlet libObjectAddressSetValue = require('./Manyfest-ObjectAddress-SetValue.js');\nlet libObjectAddressDeleteValue = require('./Manyfest-ObjectAddress-DeleteValue.js');\nlet libObjectAddressGeneration = require('./Manyfest-ObjectAddressGeneration.js');\nlet libSchemaManipulation = require('./Manyfest-SchemaManipulation.js');\n\nconst _DefaultConfiguration = { Scope:'DEFAULT', Descriptors: {} }\n\n/**\n* Manyfest object address-based descriptions and manipulations.\n*\n* @class Manyfest\n*/\nclass Manyfest extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'Manifest';\n\n\t\t// Wire in logging\n\t\tthis.logInfo = libSimpleLog;\n\t\tthis.logError = libSimpleLog;\n\n\t\t// Create an object address resolver and map in the functions\n\t\tthis.objectAddressCheckAddressExists = new libObjectAddressCheckAddressExists(this.logInfo, this.logError);\n\t\tthis.objectAddressGetValue = new libObjectAddressGetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressSetValue = new libObjectAddressSetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressDeleteValue = new libObjectAddressDeleteValue(this.logInfo, this.logError);\n\n\t\tif (!this.options.hasOwnProperty('defaultValues'))\n\t\t{\n\t\t\tthis.options.defaultValues = (\n\t\t\t\t{\n\t\t\t\t\t\"String\": \"\",\n\t\t\t\t\t\"Number\": 0,\n\t\t\t\t\t\"Float\": 0.0,\n\t\t\t\t\t\"Integer\": 0,\n\t\t\t\t\t\"Boolean\": false,\n\t\t\t\t\t\"Binary\": 0,\n\t\t\t\t\t\"DateTime\": 0,\n\t\t\t\t\t\"Array\": [],\n\t\t\t\t\t\"Object\": {},\n\t\t\t\t\t\"Null\": null\n\t\t\t\t});\n\t\t}\n\t\tif (!this.options.hasOwnProperty('strict'))\n\t\t{\n\t\t\tthis.options.strict = false;\n\t\t}\n\n\t\tthis.scope = undefined;\n\t\tthis.elementAddresses = undefined;\n\t\tthis.elementHashes = undefined;\n\t\tthis.elementDescriptors = undefined;\n\t\t// This can cause a circular dependency chain, so it only gets initialized if the schema specifically calls for it.\n\t\tthis.dataSolvers = undefined;\n\t\t// So solvers can use their own state\n\t\tthis.dataSolverState = undefined;\n\n\t\tthis.reset();\n\n\t\tif (typeof(this.options) === 'object')\n\t\t{\n\t\t\tthis.loadManifest(this.options);\n\t\t}\n\n\t\tthis.schemaManipulations = new libSchemaManipulation(this.logInfo, this.logError);\n\t\tthis.objectAddressGeneration = new libObjectAddressGeneration(this.logInfo, this.logError);\n\n\t\tthis.hashTranslations = new libHashTranslation(this.logInfo, this.logError);\n\t}\n\n\t/*************************************************************************\n\t * Schema Manifest Loading, Reading, Manipulation and Serialization Functions\n\t */\n\n\t// Reset critical manifest properties\n\treset()\n\t{\n\t\tthis.scope = 'DEFAULT';\n\t\tthis.elementAddresses = [];\n\t\tthis.elementHashes = {};\n\t\tthis.elementDescriptors = {};\n\t\tthis.dataSolvers = undefined;\n\t\tthis.dataSolverState = {};\n\t}\n\n\tclone()\n\t{\n\t\t// Make a copy of the options in-place\n\t\tlet tmpNewOptions = JSON.parse(JSON.stringify(this.options));\n\n\t\tlet tmpNewManyfest = new Manyfest(this.getManifest(), this.logInfo, this.logError, tmpNewOptions);\n\n\t\t// Import the hash translations\n\t\ttmpNewManyfest.hashTranslations.addTranslation(this.hashTranslations.translationTable);\n\n\t\treturn tmpNewManyfest;\n\t}\n\n\t// Deserialize a Manifest from a string\n\tdeserialize(pManifestString)\n\t{\n\t\t// TODO: Add guards for bad manifest string\n\t\treturn this.loadManifest(JSON.parse(pManifestString));\n\t}\n\n\t// Load a manifest from an object\n\tloadManifest(pManifest)\n\t{\n\t\tif (typeof(pManifest) !== 'object')\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading manifest; expecting an object but parameter was type ${typeof(pManifest)}.`);\n\t\t}\n\n\t\tlet tmpManifest = (typeof(pManifest) == 'object') ? pManifest : {};\n\n\t\tlet tmpDescriptorKeys = Object.keys(_DefaultConfiguration);\n\n\t\tfor (let i = 0; i < tmpDescriptorKeys.length; i++)\n\t\t{\n\t\t\tif (!tmpManifest.hasOwnProperty(tmpDescriptorKeys[i]))\n\t\t\t{\n\t\t\t\ttmpManifest[tmpDescriptorKeys[i]] = JSON.parse(JSON.stringify(_DefaultConfiguration[tmpDescriptorKeys[i]]));\n\t\t\t}\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Scope'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Scope) === 'string')\n\t\t\t{\n\t\t\t\tthis.scope = tmpManifest.Scope;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest; expecting a string but property was type ${typeof(tmpManifest.Scope)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest object.  Property \"Scope\" does not exist in the root of the object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Descriptors'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Descriptors) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpDescriptionAddresses = Object.keys(tmpManifest.Descriptors);\n\t\t\t\tfor (let i = 0; i < tmpDescriptionAddresses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.addDescriptor(tmpDescriptionAddresses[i], tmpManifest.Descriptors[tmpDescriptionAddresses[i]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading description object from manifest object.  Expecting an object in 'Manifest.Descriptors' but the property was type ${typeof(tmpManifest.Descriptors)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object description from manifest object.  Property \"Descriptors\" does not exist in the root of the Manifest object.`, tmpManifest);\n\t\t}\n\t}\n\n\t// Serialize the Manifest to a string\n\t// TODO: Should this also serialize the translation table?\n\tserialize()\n\t{\n\t\treturn JSON.stringify(this.getManifest());\n\t}\n\n\tgetManifest()\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tScope: this.scope,\n\t\t\t\tDescriptors: JSON.parse(JSON.stringify(this.elementDescriptors))\n\t\t\t});\n\t}\n\n\t// Add a descriptor to the manifest\n\taddDescriptor(pAddress, pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) === 'object')\n\t\t{\n\t\t\t// Add the Address into the Descriptor if it doesn't exist:\n\t\t\tif (!pDescriptor.hasOwnProperty('Address'))\n\t\t\t{\n\t\t\t\tpDescriptor.Address = pAddress;\n\t\t\t}\n\n\t\t\tif (!this.elementDescriptors.hasOwnProperty(pAddress))\n\t\t\t{\n\t\t\t\tthis.elementAddresses.push(pAddress);\n\t\t\t}\n\n\t\t\t// Add the element descriptor to the schema\n\t\t\tthis.elementDescriptors[pAddress] = pDescriptor;\n\n\t\t\t// Always add the address as a hash\n\t\t\tthis.elementHashes[pAddress] = pAddress;\n\n\t\t\tif (pDescriptor.hasOwnProperty('Hash'))\n\t\t\t{\n\t\t\t\t// TODO: Check if this is a good idea or not..\n\t\t\t\t//       Collisions are bound to happen with both representations of the address/hash in here and developers being able to create their own hashes.\n\t\t\t\tthis.elementHashes[pDescriptor.Hash] = pAddress;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpDescriptor.Hash = pAddress;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object descriptor for address '${pAddress}' from manifest object.  Expecting an object but property was type ${typeof(pDescriptor)}.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetDescriptorByHash(pHash)\n\t{\n\t\treturn this.getDescriptor(this.resolveHashAddress(pHash));\n\t}\n\n\tgetDescriptor(pAddress)\n\t{\n\t\treturn this.elementDescriptors[pAddress];\n\t}\n\n\t// execute an action function for each descriptor\n\teachDescriptor(fAction)\n\t{\n        let tmpDescriptorAddresses = Object.keys(this.elementDescriptors);\n        for (let i = 0; i < tmpDescriptorAddresses.length; i++)\n        {\n            fAction(this.elementDescriptors[tmpDescriptorAddresses[i]]);\n        }\n\n\t}\n\n\t/*************************************************************************\n\t * Beginning of Object Manipulation (read & write) Functions\n\t */\n\t// Check if an element exists by its hash\n\tcheckAddressExistsByHash (pObject, pHash)\n\t{\n\t\treturn this.checkAddressExists(pObject,this.resolveHashAddress(pHash));\n\t}\n\n\t// Check if an element exists at an address\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\treturn this.objectAddressCheckAddressExists.checkAddressExists(pObject, pAddress);\n\t}\n\n\t// Turn a hash into an address, factoring in the translation table.\n\tresolveHashAddress(pHash)\n\t{\n\t\tlet tmpAddress = undefined;\n\n\t\tlet tmpInElementHashTable = this.elementHashes.hasOwnProperty(pHash);\n\t\tlet tmpInTranslationTable = this.hashTranslations.translationTable.hasOwnProperty(pHash);\n\n\t\t// The most straightforward: the hash exists, no translations.\n\t\tif (tmpInElementHashTable && !tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[pHash];\n\t\t}\n\t\t// There is a translation from one hash to another, and, the elementHashes contains the pointer end\n\t\telse if (tmpInTranslationTable && this.elementHashes.hasOwnProperty(this.hashTranslations.translate(pHash)))\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[this.hashTranslations.translate(pHash)];\n\t\t}\n\t\t// Use the level of indirection only in the Translation Table\n\t\telse if (tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.hashTranslations.translate(pHash);\n\t\t}\n\t\t// Just treat the hash as an address.\n\t\t// TODO: Discuss this ... it is magic but controversial\n\t\telse\n\t\t{\n\t\t\ttmpAddress = pHash;\n\t\t}\n\n\t\treturn tmpAddress;\n\t}\n\n\t// Get the value of an element by its hash\n\tgetValueByHash (pObject, pHash)\n\t{\n\t\tlet tmpValue = this.getValueAtAddress(pObject, this.resolveHashAddress(pHash));\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptorByHash(pHash));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\tlet tmpValue = this.objectAddressGetValue.getValueAtAddress(pObject, pAddress);\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptor(pAddress));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Set the value of an element by its hash\n\tsetValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.setValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressSetValue.setValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Delete the value of an element by its hash\n\tdeleteValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.deleteValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressDeleteValue.deleteValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Validate the consistency of an object against the schema\n\tvalidate(pObject)\n\t{\n\t\tlet tmpValidationData =\n\t\t{\n\t\t\tError: null,\n\t\t\tErrors: [],\n\t\t\tMissingElements:[]\n\t\t};\n\n\t\tif (typeof(pObject) !== 'object')\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Expected passed in object to be type object but was passed in ${typeof(pObject)}`);\n\t\t}\n\n\t\tlet addValidationError = (pAddress, pErrorMessage) =>\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Element at address \"${pAddress}\" ${pErrorMessage}.`);\n\t\t};\n\n\t\t// Now enumerate through the values and check for anomalies based on the schema\n\t\tfor (let i = 0; i < this.elementAddresses.length; i++)\n\t\t{\n\t\t\tlet tmpDescriptor = this.getDescriptor(this.elementAddresses[i]);\n\t\t\tlet tmpValueExists = this.checkAddressExists(pObject, tmpDescriptor.Address);\n\t\t\tlet tmpValue = this.getValueAtAddress(pObject, tmpDescriptor.Address);\n\n\t\t\tif ((typeof(tmpValue) == 'undefined') || !tmpValueExists)\n\t\t\t{\n\t\t\t\t// This will technically mean that `Object.Some.Value = undefined` will end up showing as \"missing\"\n\t\t\t\t// TODO: Do we want to do a different message based on if the property exists but is undefined?\n\t\t\t\ttmpValidationData.MissingElements.push(tmpDescriptor.Address);\n\t\t\t\tif (tmpDescriptor.Required || this.options.strict)\n\t\t\t\t{\n\t\t\t\t\taddValidationError(tmpDescriptor.Address, 'is flagged REQUIRED but is not set in the object');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now see if there is a data type specified for this element\n\t\t\tif (tmpDescriptor.DataType)\n\t\t\t{\n\t\t\t\tlet tmpElementType = typeof(tmpValue);\n\t\t\t\tswitch(tmpDescriptor.DataType.toString().trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpValueString = tmpValue.toString();\n\t\t\t\t\t\t\tif (tmpValueString.indexOf('.') > -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// TODO: Is this an error?\n\t\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but has a decimal point in the number.`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DateTime':\n\t\t\t\t\t\tlet tmpValueDate = new Date(tmpValue);\n\t\t\t\t\t\tif (tmpValueDate.toString() == 'Invalid Date')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is not parsable as a Date by Javascript`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Check if this is a string, in the default case\n\t\t\t\t\t\t// Note this is only when a DataType is specified and it is an unrecognized data type.\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} (which auto-converted to String because it was unrecognized) but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpValidationData;\n\t}\n\n\t// Returns a default value, or, the default value for the data type (which is overridable with configuration)\n\tgetDefaultValue(pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) != 'object')\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (pDescriptor.hasOwnProperty('Default'))\n\t\t{\n\t\t\treturn pDescriptor.Default;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Default to a null if it doesn't have a type specified.\n\t\t\t// This will ensure a placeholder is created but isn't misinterpreted.\n\t\t\tlet tmpDataType = (pDescriptor.hasOwnProperty('DataType')) ? pDescriptor.DataType : 'String';\n\t\t\tif (this.options.defaultValues.hasOwnProperty(tmpDataType))\n\t\t\t{\n\t\t\t\treturn this.options.defaultValues[tmpDataType];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// give up and return null\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enumerate through the schema and populate default values if they don't exist.\n\tpopulateDefaults(pObject, pOverwriteProperties)\n\t{\n\t\treturn this.populateObject(pObject, pOverwriteProperties,\n\t\t\t// This just sets up a simple filter to see if there is a default set.\n\t\t\t(pDescriptor) =>\n\t\t\t{\n\t\t\t\treturn pDescriptor.hasOwnProperty('Default');\n\t\t\t});\n\t}\n\n\t// Forcefully populate all values even if they don't have defaults.\n\t// Based on type, this can do unexpected things.\n\tpopulateObject(pObject, pOverwriteProperties, fFilter)\n\t{\n\t\t// Automatically create an object if one isn't passed in.\n\t\tlet tmpObject = (typeof(pObject) === 'object') ? pObject : {};\n\t\t// Default to *NOT OVERWRITING* properties\n\t\tlet tmpOverwriteProperties = (typeof(pOverwriteProperties) == 'undefined') ? false : pOverwriteProperties;\n\t\t// This is a filter function, which is passed the schema and allows complex filtering of population\n\t\t// The default filter function just returns true, populating everything.\n\t\tlet tmpFilterFunction = (typeof(fFilter) == 'function') ? fFilter : (pDescriptor) => { return true; };\n\n\t\tthis.elementAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpDescriptor = this.getDescriptor(pAddress);\n\t\t\t\t// Check the filter function to see if this is an address we want to set the value for.\n\t\t\t\tif (tmpFilterFunction(tmpDescriptor))\n\t\t\t\t{\n\t\t\t\t\t// If we are overwriting properties OR the property does not exist\n\t\t\t\t\tif (tmpOverwriteProperties || !this.checkAddressExists(tmpObject, pAddress))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setValueAtAddress(tmpObject, pAddress, this.getDefaultValue(tmpDescriptor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpObject;\n\t}\n};\n\nmodule.exports = Manyfest;\n},{\"./Manyfest-HashTranslation.js\":57,\"./Manyfest-LogToConsole.js\":58,\"./Manyfest-ObjectAddress-CheckAddressExists.js\":59,\"./Manyfest-ObjectAddress-DeleteValue.js\":60,\"./Manyfest-ObjectAddress-GetValue.js\":61,\"./Manyfest-ObjectAddress-SetValue.js\":62,\"./Manyfest-ObjectAddressGeneration.js\":63,\"./Manyfest-SchemaManipulation.js\":65,\"fable-serviceproviderbase\":32}],67:[function(require,module,exports){\nvar wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n\n},{\"wrappy\":104}],68:[function(require,module,exports){\n(function (process){(function (){\n// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":72}],69:[function(require,module,exports){\n/**\n* Precedent Meta-Templating\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Process text streams, parsing out meta-template expressions.\n*/\nvar libWordTree = require(`./WordTree.js`);\nvar libStringParser = require(`./StringParser.js`);\n\nclass Precedent\n{\n\t/**\n\t * Precedent Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser();\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData);\n\t}\n}\n\nmodule.exports = Precedent;\n\n},{\"./StringParser.js\":70,\"./WordTree.js\":71}],70:[function(require,module,exports){\n/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: false,\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchOutputBuffer: ''\n\t\t});\n\t}\n\n\t/**\n\t * Assign a node of the parser tree to be the next potential match.\n\t * If the node has a PatternEnd property, it is a valid match and supercedes the last valid match (or becomes the initial match).\n\t * @method assignNode\n\t * @param {Object} pNode - A node on the parse tree to assign\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tassignNode (pNode, pParserState)\n\t{\n\t\tpParserState.PatternMatch = pNode;\n\n\t\t// If the pattern has a END we can assume it has a parse function...\n\t\tif (pParserState.PatternMatch.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\t// ... this is the legitimate start of a pattern.\n\t\t\tpParserState.Pattern = pParserState.PatternMatch;\n\t\t}\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\t/**\n\t * Check if the pattern has ended.  If it has, properly flush the buffer and start looking for new patterns.\n\t * @method checkPatternEnd\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tcheckPatternEnd (pParserState, pData)\n\t{\n\t\tif ((pParserState.OutputBuffer.length >= pParserState.Pattern.PatternEnd.length+pParserState.Pattern.PatternStart.length) &&\n\t\t\t(pParserState.OutputBuffer.substr(-pParserState.Pattern.PatternEnd.length) === pParserState.Pattern.PatternEnd))\n\t\t{\n\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStart.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStart.length+pParserState.Pattern.PatternEnd.length)), pData);\n\t\t\t// Flush the output buffer.\n\t\t\tthis.flushOutputBuffer(pParserState);\n\t\t\t// End pattern mode\n\t\t\tpParserState.Pattern = false;\n\t\t\tpParserState.PatternMatch = false;\n\t\t}\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// (1) If we aren't in a pattern match, and we aren't potentially matching, and this may be the start of a new pattern....\n\t\tif (!pParserState.PatternMatch && pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t{\n\t\t\t// ... assign the node as the matched node.\n\t\t\tthis.assignNode(pParserState.ParseTree[pCharacter], pParserState);\n\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t}\n\t\t// (2) If we are in a pattern match (actively seeing if this is part of a new pattern token)\n\t\telse if (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern has a subpattern with this key\n\t\t\tif (pParserState.PatternMatch.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// Continue matching patterns.\n\t\t\t\tthis.assignNode(pParserState.PatternMatch[pCharacter], pParserState);\n\t\t\t}\n\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\tif (pParserState.Pattern)\n\t\t\t{\n\t\t\t\t// ... Check if this is the end of the pattern (if we are matching a valid pattern)...\n\t\t\t\tthis.checkPatternEnd(pParserState, pData);\n\t\t\t}\n\t\t}\n\t\t// (3) If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\telse\n\t\t{\n\t\t\tpParserState.Output += pCharacter;\n\t\t}\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t */\n\tparseString (pString, pParseTree, pData)\n\t{\n\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\tfor (var i = 0; i < pString.length; i++)\n\t\t{\n\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData);\n\t\t}\n\n\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\treturn tmpParserState.Output;\n\t}\n}\n\nmodule.exports = StringParser;\n\n},{}],71:[function(require,module,exports){\n/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - The index of the character in the pattern\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern, pIndex)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern[pIndex]))\n\t\t\tpTree[pPattern[pIndex]] = {};\n\n\t\treturn pTree[pPattern[pIndex]];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {number} pParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, pParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t\treturn false;\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t\treturn false;\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart, i);\n\n\t\ttmpLeaf.PatternStart = pPatternStart;\n\t\ttmpLeaf.PatternEnd = ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length > 0)) ? pPatternEnd : pPatternStart;\n\t\ttmpLeaf.Parse = (typeof(pParser) === 'function') ? pParser :\n\t\t\t\t\t\t(typeof(pParser) === 'string') ? () => { return pParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n\n},{}],72:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],73:[function(require,module,exports){\n(function (global){(function (){\n/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],74:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],75:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],76:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":74,\"./encode\":75}],77:[function(require,module,exports){\n/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n},{\"buffer\":19}],78:[function(require,module,exports){\n(function (Buffer){(function (){\n/*! simple-concat. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function (stream, cb) {\n  var chunks = []\n  stream.on('data', function (chunk) {\n    chunks.push(chunk)\n  })\n  stream.once('end', function () {\n    if (cb) cb(null, Buffer.concat(chunks))\n    cb = null\n  })\n  stream.once('error', function (err) {\n    if (cb) cb(err)\n    cb = null\n  })\n}\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":19}],79:[function(require,module,exports){\n(function (Buffer){(function (){\n/*! simple-get. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = simpleGet\n\nconst concat = require('simple-concat')\nconst decompressResponse = require('decompress-response') // excluded from browser build\nconst http = require('http')\nconst https = require('https')\nconst once = require('once')\nconst querystring = require('querystring')\nconst url = require('url')\n\nconst isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'\n\nfunction simpleGet (opts, cb) {\n  opts = Object.assign({ maxRedirects: 10 }, typeof opts === 'string' ? { url: opts } : opts)\n  cb = once(cb)\n\n  if (opts.url) {\n    const { hostname, port, protocol, auth, path } = url.parse(opts.url) // eslint-disable-line node/no-deprecated-api\n    delete opts.url\n    if (!hostname && !port && !protocol && !auth) opts.path = path // Relative redirect\n    else Object.assign(opts, { hostname, port, protocol, auth, path }) // Absolute redirect\n  }\n\n  const headers = { 'accept-encoding': 'gzip, deflate' }\n  if (opts.headers) Object.keys(opts.headers).forEach(k => (headers[k.toLowerCase()] = opts.headers[k]))\n  opts.headers = headers\n\n  let body\n  if (opts.body) {\n    body = opts.json && !isStream(opts.body) ? JSON.stringify(opts.body) : opts.body\n  } else if (opts.form) {\n    body = typeof opts.form === 'string' ? opts.form : querystring.stringify(opts.form)\n    opts.headers['content-type'] = 'application/x-www-form-urlencoded'\n  }\n\n  if (body) {\n    if (!opts.method) opts.method = 'POST'\n    if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)\n    if (opts.json && !opts.form) opts.headers['content-type'] = 'application/json'\n  }\n  delete opts.body; delete opts.form\n\n  if (opts.json) opts.headers.accept = 'application/json'\n  if (opts.method) opts.method = opts.method.toUpperCase()\n\n  const originalHost = opts.hostname // hostname before potential redirect\n  const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls\n  const req = protocol.request(opts, res => {\n    if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      opts.url = res.headers.location // Follow 3xx redirects\n      delete opts.headers.host // Discard `host` header on redirect (see #32)\n      res.resume() // Discard response\n\n      const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api\n      // If redirected host is different than original host, drop headers to prevent cookie leak (#73)\n      if (redirectHost !== null && redirectHost !== originalHost) {\n        delete opts.headers.cookie\n        delete opts.headers.authorization\n      }\n\n      if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {\n        opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)\n        delete opts.headers['content-length']; delete opts.headers['content-type']\n      }\n\n      if (opts.maxRedirects-- === 0) return cb(new Error('too many redirects'))\n      else return simpleGet(opts, cb)\n    }\n\n    const tryUnzip = typeof decompressResponse === 'function' && opts.method !== 'HEAD'\n    cb(null, tryUnzip ? decompressResponse(res) : res)\n  })\n  req.on('timeout', () => {\n    req.abort()\n    cb(new Error('Request timed out'))\n  })\n  req.on('error', cb)\n\n  if (isStream(body)) body.on('error', cb).pipe(req)\n  else req.end(body)\n\n  return req\n}\n\nsimpleGet.concat = (opts, cb) => {\n  return simpleGet(opts, (err, res) => {\n    if (err) return cb(err)\n    concat(res, (err, data) => {\n      if (err) return cb(err)\n      if (opts.json) {\n        try {\n          data = JSON.parse(data.toString())\n        } catch (err) {\n          return cb(err, res, data)\n        }\n      }\n      cb(null, res, data)\n    })\n  })\n}\n\n;['get', 'post', 'put', 'patch', 'head', 'delete'].forEach(method => {\n  simpleGet[method] = (opts, cb) => {\n    if (typeof opts === 'string') opts = { url: opts }\n    return simpleGet(Object.assign({ method: method.toUpperCase() }, opts), cb)\n  }\n})\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":19,\"decompress-response\":17,\"http\":80,\"https\":53,\"once\":67,\"querystring\":76,\"simple-concat\":78,\"url\":101}],80:[function(require,module,exports){\n(function (global){(function (){\nvar ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./lib/request\":82,\"./lib/response\":83,\"builtin-status-codes\":20,\"url\":101,\"xtend\":105}],81:[function(require,module,exports){\n(function (global){(function (){\nexports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],82:[function(require,module,exports){\n(function (process,global,Buffer){(function (){\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer)\n\n},{\"./capability\":81,\"./response\":83,\"_process\":72,\"buffer\":19,\"inherits\":55,\"readable-stream\":98}],83:[function(require,module,exports){\n(function (process,global,Buffer){(function (){\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer)\n\n},{\"./capability\":81,\"_process\":72,\"buffer\":19,\"inherits\":55,\"readable-stream\":98}],84:[function(require,module,exports){\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n\n},{}],85:[function(require,module,exports){\n(function (process){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n}).call(this)}).call(this,require('_process'))\n\n},{\"./_stream_readable\":87,\"./_stream_writable\":89,\"_process\":72,\"inherits\":55}],86:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n},{\"./_stream_transform\":88,\"inherits\":55}],87:[function(require,module,exports){\n(function (process,global){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../errors\":84,\"./_stream_duplex\":85,\"./internal/streams/async_iterator\":90,\"./internal/streams/buffer_list\":91,\"./internal/streams/destroy\":92,\"./internal/streams/from\":94,\"./internal/streams/state\":96,\"./internal/streams/stream\":97,\"_process\":72,\"buffer\":19,\"events\":24,\"inherits\":55,\"string_decoder/\":99,\"util\":17}],88:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}\n},{\"../errors\":84,\"./_stream_duplex\":85,\"inherits\":55}],89:[function(require,module,exports){\n(function (process,global){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../errors\":84,\"./_stream_duplex\":85,\"./internal/streams/destroy\":92,\"./internal/streams/state\":96,\"./internal/streams/stream\":97,\"_process\":72,\"buffer\":19,\"inherits\":55,\"util-deprecate\":103}],90:[function(require,module,exports){\n(function (process){(function (){\n'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;\n}).call(this)}).call(this,require('_process'))\n\n},{\"./end-of-stream\":93,\"_process\":72}],91:[function(require,module,exports){\n'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();\n},{\"buffer\":19,\"util\":17}],92:[function(require,module,exports){\n(function (process){(function (){\n'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":72}],93:[function(require,module,exports){\n// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;\n},{\"../../../errors\":84}],94:[function(require,module,exports){\nmodule.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n\n},{}],95:[function(require,module,exports){\n// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;\n},{\"../../../errors\":84,\"./end-of-stream\":93}],96:[function(require,module,exports){\n'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};\n},{\"../../../errors\":84}],97:[function(require,module,exports){\nmodule.exports = require('events').EventEmitter;\n\n},{\"events\":24}],98:[function(require,module,exports){\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n\n},{\"./lib/_stream_duplex.js\":85,\"./lib/_stream_passthrough.js\":86,\"./lib/_stream_readable.js\":87,\"./lib/_stream_transform.js\":88,\"./lib/_stream_writable.js\":89,\"./lib/internal/streams/end-of-stream.js\":93,\"./lib/internal/streams/pipeline.js\":95}],99:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n},{\"safe-buffer\":77}],100:[function(require,module,exports){\n(function (setImmediate,clearImmediate){(function (){\nvar nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n}).call(this)}).call(this,require(\"timers\").setImmediate,require(\"timers\").clearImmediate)\n\n},{\"process/browser.js\":72,\"timers\":100}],101:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n},{\"./util\":102,\"punycode\":73,\"querystring\":76}],102:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n},{}],103:[function(require,module,exports){\n(function (global){(function (){\n\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],104:[function(require,module,exports){\n// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n\n},{}],105:[function(require,module,exports){\nmodule.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n},{}],106:[function(require,module,exports){\n/**\n* Pict browser shim loader\n* @author <steven@velozo.com>\n*/\n\n// Load the pict module into the browser global automatically.\nconst libPict = require('./Pict.js');\n\nif (typeof(window) === 'object')\n{\n    window.Pict = libPict;\n}\n\nmodule.exports = libPict;\n},{\"./Pict.js\":111}],107:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictContentAssignment extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictContentAssignment';\n\n        // Check to see if we are running in a browser\n        this.inBrowser = false;\n        this.hasDocument = false;\n        if (typeof(window) == 'object')\n        {\n            this.inBrowser = true;\n            // Now check that the browser has a document object\n            if ((typeof(window.document) != 'undefined') && (typeof(window.document.querySelectorAll) == 'function'))\n            {\n                this.hasDocument = true;\n            }\n        }\n\n        // If we're in a browser, check to see if jQuery is available.\n        this.hasJquery = false;\n        this.jQuery = false;\n        if (this.inBrowser && typeof(window.jQuery) !== 'undefined')\n        {\n            this.hasJquery = true;\n        }\n\n        // API Consumers can also craft their own assign function\n        this.customAssignFunction = false;\n\n        // API Consumers can also craft their own append function\n        this.customAppendFunction = false;\n\t}\n\n    assignContent(pAddress, pContent)\n    {\n        if (this.customAssignFunction)\n        {\n            return this.customAssignFunction(pAddress, pContent);\n        }\n        else if (this.hasJquery)\n        {\n            // Get the element\n            let tmpTargetElement = window.jQuery(pAddress);\n\n            // Should we ensure we matched 1 and exactly 1 element?\n            //if (tmpTargetElement && tmpTargetElement.length == 1)\n            //{\n            // Set the content\n            tmpTargetElement.html(pContent);\n            //}\n        }\n        else if (this.inBrowser && this.hasDocument)\n        {\n            let tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n            for (let i = 0; i < tmpTargetElementSet.length; i++)\n            {\n                tmpTargetElementSet[i].innerHTML = pContent;\n            }\n        }\n        else\n        {\n            // Just log it out for now\n            this.log.trace(`PICT Content ASSIGN to [${pAddress}]:`, pContent);\n        }\n    }\n\n    appendContent(pAddress, pContent)\n    {\n        if (this.customAppendFunction)\n        {\n            return this.customAppendFunction(pAddress, pContent);\n        }\n        else if (this.hasJquery)\n        {\n            let tmpTargetElement = window.jQuery(pAddress);\n            tmpTargetElement.append(pContent);\n        }\n        else if (this.inBrowser && this.hasDocument)\n        {\n            let tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n            for (let i = 0; i < tmpTargetElementSet.length; i++)\n            {\n                tmpTargetElementSet[i].insertAdjacentHTML(\"beforeend\", pContent);\n            }\n        }\n        else\n        {\n            // Just log it out for now -- nothing browser in our mix.\n            this.log.trace(`PICT Content APPEND to [${pAddress}]:`, pContent);\n        }\n    }\n}\n\nmodule.exports = PictContentAssignment;\n},{\"fable\":41}],108:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictMeadowEntityProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictMeadowProvider';\n\n\t\tif (this.fable.settings.PictDefaultURLPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = this.fable.settings.PictDefaultURLPrefix;\n\t\t}\n\t\telse if (!this.options.urlPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = '/1.0/';\n\t\t}\n\n\t\tif (this.fable.settings.PictDefaultDownloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = this.fable.settings.PictDefaultDownloadBatchSize;\n\t\t}\n\t\telse if (!this.options.downloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = 100;\n\t\t}\n\n\t\tthis.restClient = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('RestClient');\n\n\t\tthis.cache = {};\n\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tinitializeCache(pEntity)\n\t{\n\t\t// This should not be happening as often as it's happening.\n\t\tif (!this.cache.hasOwnProperty(pEntity))\n\t\t{\n\t\t\tthis.cache[pEntity] = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('ObjectCache');\n\t\t\t// TODO: Make this a configuration?\n\t\t\t// For now cache for 30 seconds.\n\t\t\tthis.cache[pEntity].maxAge = 30000;\n\t\t\tthis.cache[pEntity].maxLength = 10000;\n\n\t\t\tthis.fable.Bundle[pEntity] = this.cache[pEntity].RecordMap;\n\t\t}\n\t}\n\t\n\tgetEntity (pEntity, pIDRecord, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tlet tmpPossibleRecord = this.cache[pEntity].read(pIDRecord);\n\t\t\t\t\n\t\t\t\tif (tmpPossibleRecord)\n\t\t\t\t{\n\t\t\t\t\treturn tmpPossibleRecord;\n\t\t\t\t}\n\n\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}/${pIDRecord}`\n\t\t\t\t\t});\n\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pBody)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.cache[pEntity].put(pBody, pIDRecord);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pBody);\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tgetEntitySet = function (pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// TODO: Should we test for too many record IDs here by string length?\n\t\t// FBL~ID${pDestinationEntity}~INN~${tmpIDRecordsCommaSeparated}\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tlet tmpCountOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}s/Count/FilteredTo/${pMeadowFilterExpression}`\n\t\t\t\t\t});\n\t\t\t\ttmpCountOptions = this.prepareRequestOptions(tmpCountOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpCountOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Error getting bulk entity count of [${pEntity}] filtered to [${pMeadowFilterExpression}] from server [${tmpCountOptions.url}]: ${pError}`);\n\t\t\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet tmpRecordCount = 0;\n\t\t\t\t\t\tif (pBody.Count)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpRecordCount = pBody.Count;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpDownloadURIFragments = [];\n\t\t\t\t\t\tlet tmpDownloadBatchSize = this.options.downloadBatchSize;\n\t\t\t\t\t\tfor (let i = 0; i < (tmpRecordCount / tmpDownloadBatchSize); i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Generate each of the URI fragments to download\n\t\t\t\t\t\t\ttmpDownloadURIFragments.push(`${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${i*tmpDownloadBatchSize}/${tmpDownloadBatchSize}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpEntitySet = [];\n\t\t\t\t\t\t// Now run these in series (it's possible to parallelize but no reason to)\n\t\t\t\t\t\tthis.fable.Utility.eachLimit(tmpDownloadURIFragments, 1, \n\t\t\t\t\t\t\t(pURIFragment, fDownloadCallback)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\turl: `${this.options.urlPrefix}${pURIFragment}`\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\t\t\t\t\tthis.restClient.getJSON(pURIFragment,\n\t\t\t\t\t\t\t\t\t(pDownloadError, pDownloadResponse, pDownloadBody)=>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttmpEntitySet = tmpEntitySet.concat(pDownloadBody);\n\t\t\t\t\t\t\t\t\t\t// Should we be caching each record?\n\t\t\t\t\t\t\t\t\t\treturn fDownloadCallback(pDownloadError);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(pFullDownloadError)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(pFullDownloadError, tmpEntitySet);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t});\n\t}\n}\n\nmodule.exports = PictMeadowEntityProvider;\n},{\"fable\":41}],109:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictTemplateProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictTemplateProvider';\n\n        this.templates = {};\n        this.templateSources = {};\n\n        // Default templates are stored by prefix.\n        // The longest prefix match is used.\n        // Case sensitive.\n        this.defaultTemplates = [];\n\n        // This function can be overloaded to load templates from a database, in a page or other source.\n        this.loadTemplateFunction = (pTemplateHash) => { return false; };\n\t}\n\n    addTemplate(pTemplateHash, pTemplate, pTemplateSource)\n    {\n        this.templates[pTemplateHash] = pTemplate;\n\n        if (typeof(pTemplateSource) == 'string')\n        {\n            this.templateSources[pTemplateHash] = pTemplateSource;\n        }\n        else\n        {\n            this.templateSources[pTemplateHash] = `Direct addTemplate('${pTemplateHash}') function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`;\n        }\n    }\n\n    addDefaultTemplate(pPrefix, pPostfix, pTemplate, pSource)\n    {\n        let tmpSource = (typeof(pSource) == 'string') ? pSource : `Direct addDefaultTemplate('${pPrefix}','${pPostfix}',..) function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`\n        let tmpDefaultTemplate = {\n            prefix: pPrefix,\n            postfix: pPostfix,\n            template: pTemplate,\n            source: tmpSource\n        };\n        if (typeof(pTemplate) != 'string')\n        {\n            this.log.error('PictTemplateProvider.addDefaultTemplate: pTemplate is not a string.');\n        }\n        this.defaultTemplates.push(tmpDefaultTemplate);\n    }\n\n    checkDefaultTemplateHash(pTemplateHash)\n    {\n        /*\n         * Default templates are managed by postfix and prefix.  The use case is things like titles, headers, list \n         * wrappers, rows, etc.\n         *\n         * So we might have a default template for a list wrapper and it should expect \"-ListWrap\" as the postfix.\n         * And we might have a default template for a list row and it should expect \"-ListRow\" as the postfix.\n         * The list might have a \"-ListTitle\", or we might have shared titles and it would just be \"-Title\".\n         * \n         * The idea is to allow fallbacks on defaults.\n         */\n        for (let i = 0; i < this.defaultTemplates.length; i++)\n        {\n            if ((pTemplateHash.indexOf(this.defaultTemplates[i].postfix) == pTemplateHash.length - this.defaultTemplates[i].postfix.length)\n                && (pTemplateHash.indexOf(this.defaultTemplates[i].prefix) == 0))\n            {\n                this.templates[pTemplateHash] = this.defaultTemplates[i].template;\n                this.templateSources[pTemplateHash] = `Auto created in checkDefaultTemplateHash('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${this.defaultTemplates[i].prefix}]...[${this.defaultTemplates[i].postfix}]`;\n                return this.templates[pTemplateHash];\n            }\n        }\n        return false;\n    }\n\n    getTemplate(pTemplateHash)\n    {\n        // TODO: Optimize this.\n        // If the template doesn't exist, try to load it with the loading function\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.loadTemplate(pTemplateHash);\n        }\n        // If the loading function fails, try to load it from the default templates\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.checkDefaultTemplateHash(pTemplateHash);\n        }\n        if (this.templates.hasOwnProperty(pTemplateHash))\n        {\n            return this.templates[pTemplateHash];\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    loadTemplate(pTemplateHash)\n    {\n        let tmpTemplate = this.loadTemplateFunction(pTemplateHash);\n\n        if (tmpTemplate)\n        {\n            this.templates[pTemplateHash] = tmpTemplate.template;\n            this.templateSources[pTemplateHash] = `Loaded in loadTemplate('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${tmpTemplate.source}]`;\n\n        }\n\n        return tmpTemplate;\n    }\n}\n\nmodule.exports = PictTemplateProvider;\n},{\"fable\":41}],110:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst defaultPictViewSettings = (\n\t{\n\t\tDefaultRenderable: false,\n        DefaultDestinationAddress: false,\n        DefaultTemplateRecordAddress: false,\n\n        ViewIdentifier: 'DEFAULT',\n\n        InitializeOnLoad: true,\n        RenderOnLoad: false,\n\n        Templates: [],\n\n        DefaultTemplates: [],\n\n        Renderables: [],\n\n        Manifests: {}\n\t});\n\nclass PictView extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n        this.options = this.fable.Utility.extend(defaultPictViewSettings, this.options);\n        this.serviceType = 'PictView';\n\n        // Load all templates from the array in the options\n        // Templates are in the form of {Hash:'Some-Template-Hash',Template:'Template content',Source:'TemplateSource'}\n        for (let i = 0; i < this.options.Templates.length; i++)\n        {\n            let tmpTemplate = this.options.Templates[i];\n\n            if (!tmpTemplate.hasOwnProperty('Hash') || !tmpTemplate.hasOwnProperty('Template'))\n            {\n                this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Template ${i} in the options array.`, tmpTemplate);\n            }\n            else\n            {\n                if (!tmpTemplate.Source)\n                {\n                    tmpTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n                }\n                this.fable.TemplateProvider.addTemplate(tmpTemplate.Hash, tmpTemplate.Template, tmpTemplate.Source);\n            }\n        }\n\n        // Load all default templates from the array in the options\n        // Templates are in the form of {Prefix:'',Postfix:'-List-Row',Template:'Template content',Source:'TemplateSourceString'}\n        for (let i = 0; i < this.options.DefaultTemplates.length; i++)\n        {\n            let tmpDefaultTemplate = this.options.DefaultTemplates[i];\n\n            if (!tmpDefaultTemplate.hasOwnProperty('Postfix') || !tmpDefaultTemplate.hasOwnProperty('Template'))\n            {\n                this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Default Template ${i} in the options array.`, tmpDefaultTemplate);\n            }\n            else\n            {\n                if (!tmpDefaultTemplate.Source)\n                {\n                    tmpDefaultTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n                }\n                this.fable.TemplateProvider.addDefaultTemplate(tmpDefaultTemplate.Prefix, tmpDefaultTemplate.Postfix, tmpDefaultTemplate.Template, tmpDefaultTemplate.Source);\n            }\n        }\n\n        // Load all renderables\n        // Renderables are launchable renderable instructions with templates\n        // They look as such: {Identifier:'ContentEntry', TemplateHash:'Content-Entry-Section-Main', ContentDestinationAddress:'#ContentSection', RecordAddress:'AppData.Content.DefaultText', ManifestTransformation:'ManyfestHash', ManifestDestinationAddress:'AppData.Content.DataToTransformContent'}\n        // The only parts that are necessary are Identifier and Template\n        // A developer can then do render('ContentEntry') and it just kinda works.  Or they can override the ContentDestinationAddress\n        this.renderables = {};\n        for (let i = 0; i < this.options.Renderables.length; i++)\n        {\n            let tmpRenderable = this.options.Renderables[i];\n\n            if (!tmpRenderable.hasOwnProperty('RenderableHash') || !tmpRenderable.hasOwnProperty('TemplateHash'))\n            {\n                this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Renderable ${i} in the options array.`, tmpRenderable);\n            }\n            else\n            {\n                this.renderables[tmpRenderable.RenderableHash] = tmpRenderable;\n            }\n        }\n\n        // Array of Initialization Functions\n        this.initializationFunctionSet = [];\n        // This is here so we can easily have an inline initialize override\n        this.internalInitialize = (fStageComplete) => { return fStageComplete(); };\n\n        this.fable.Utility.waterfall(\n            [\n                (fStageComplete) =>\n                {\n                    if (this.options.InitializeOnLoad)\n                    {\n                        return this.initialize(fStageComplete);\n                    }\n\n                    return fStageComplete();\n                },\n                (fStageComplete) =>\n                {\n                    if (this.options.RenderOnLoad)\n                    {\n                        return this.renderAsync(this.options.DefaultRenderable, null, null, fStageComplete);\n                    }\n                }\n            ],\n            (pError) =>\n            {\n                if (pError)\n                {\n                    this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} did not auto initialize/render properly: ${pError}`, pError);\n                    return false;\n                }\n                return true;\n            }\n        )\n\t}\n\n    initialize(fCallback)\n    {\n        this.fable.Utility.waterfall(\n            [\n                ...[(fStageComplete) =>\n                {\n                    this.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} beginning initialization...`);\n                    return fStageComplete();\n                },\n                this.internalInitialize],\n                ...this.initializationFunctionSet,\n                ...[(fStageComplete) =>\n                {\n                    this.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialization complete.`);\n                    return fStageComplete();\n                }]\n            ],\n            (pError) =>\n            {\n                if (pError)\n                {\n                    this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} did not initialize properly: ${pError}`, pError);\n                }\n                return fCallback(pError);\n            }\n        )\n    }\n\n    render(pRenderable, pRenderDestinationAddress, pTemplateDataAddress)\n    {\n        let tmpRenderableHash = (typeof(pRenderable) === 'string') ? pRenderable : \n            (typeof(this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n        if (!tmpRenderableHash)\n        {\n            this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it is not a valid renderable.`);\n            return false;\n        }\n\n        let tmpRenderable = this.renderables[tmpRenderableHash];\n\n        if (!tmpRenderable)\n        {\n            this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n            return false;\n        }\n\n        let tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress : \n            (typeof(tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n            (typeof(this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n        if (!tmpRenderDestinationAddress)\n        {\n            this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n            return false;\n        }\n\n        let tmpDataAddress = (typeof(pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n            (typeof(tmpRenderable.RecordAddress) === 'string') ? tmpRenderable.RecordAddress :\n            (typeof(this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n        let tmpData = (typeof(tmpDataAddress) === 'string') ? this.fable.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n        let tmpContent = this.fable.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData)\n        return this.fable.ContentAssignment.assignContent(tmpRenderDestinationAddress, tmpContent);\n    }\n\n    renderAsync(pRenderable, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n    {\n        let tmpRenderableHash = (typeof(pRenderable) === 'string') ? pRenderable : false;\n        if (!tmpRenderableHash)\n        {\n            this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`);\n            return fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`));\n        }\n\n        let tmpRenderable = this.renderables[tmpRenderableHash];\n\n        if (!tmpRenderable)\n        {\n            this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n            return fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`));\n        }\n\n        let tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress : \n            (typeof(tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n            (typeof(this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n        if (!tmpRenderDestinationAddress)\n        {\n            this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n            return fCallback(Error(`Could not render ${tmpRenderableHash}`));\n        }\n\n        let tmpDataAddress = (typeof(pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n            (typeof(tmpRenderable.RecordAddress) === 'string') ? tmpRenderable.RecordAddress :\n            (typeof(this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n        let tmpData = (typeof(tmpDataAddress) === 'string') ? this.fable.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n        this.fable.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData,\n            (pError, pContent) =>\n            {\n                if (pError)\n                {\n                    this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render (asynchronously) ${tmpRenderableHash} (param ${pRenderable}) because it did not parse the template.`, pError);\n                    return fCallback(pError);\n                }\n                this.fable.ContentAssignment.assignContent(tmpRenderDestinationAddress, pContent);\n                return fCallback(null, pContent);\n            });\n    }\n}\n\nmodule.exports = PictView;\n},{\"fable\":41}],111:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nconst libFable = require('fable');\n\nconst defaultPictSettings = (\n\t{\n\t\t// The main \"viewport\" is the view that is used to launch the entire application\n\t\tMainViewportVew: 'Default-Viewport',\n\n\t\t// Whether or not we should automatically render the main viewport when appropriate\n\t\tAutoRenderMainViewportView: false,\n\n\t\t// The prefix to prepend on all template destination hashes\n\t\tIdentifierAddressPrefix: 'PICT-'\n\t});\n\nclass Pict extends libFable\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\t// Fill in any default Pict settings that are not in the settings object.\n\t\tthis.settingsManager.fill(defaultPictSettings);\n\n\t\t// The templateProvider provides a basic key->template mapping with default fallback capabilities\n\t\tthis.serviceManager.addAndInstantiateServiceType('TemplateProvider', require('./Pict-Template-Provider.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('EntityProvider',  require('./Pict-Meadow-EntityProvider.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('ContentAssignment',  require('./Pict-Content-Assignment.js'));\n\t\tthis.serviceManager.addServiceType('PictView',  require('./Pict-View.js'));\n\n\t\tthis.serviceManager.instantiateServiceProvider('MetaTemplate');\n\n\t\tthis.manifest = this.serviceManager.instantiateServiceProvider('Manifest');\n\n\t\tthis.AppData = {};\n\n\t\tthis.Bundle = {};\n\n\t\tthis._DefaultPictTemplatesInitialized = false;\n\t\tthis.initializePictTemplates();\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddView(pOptions, pViewHash, pViewPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpViewHash = (typeof(pHash) == 'string') ? pHash : this.fable.getUUID();\n\n\t\tif (typeof(pViewPrototype) != 'undefined')\n\t\t{\n\t\t\treturn this.serviceManager.instantiateServiceProviderFromPrototype('PictView', tmpOptions, tmpViewHash, pViewPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.serviceManager.instantiateServiceProvider('PictView', tmpOptions, tmpViewHash);\n\t\t}\n\t}\n\n\tinitializePictTemplates(fExtraTemplateMethods)\n\t{\n\t\t/*\n\t\t *\n\t\t * To stave off madness, these are inefficient for now.  The wkhtmltopdf renderer leaves much to be desired\n\t\t * in the way of feedback with regards to javascript compatibility.\n\t\t *\n\t\t */\n\t\tif (!this._DefaultPictTemplatesInitialized)\n\t\t{\n\t\t\t// Expects one of the following:\n\t\t\t// \t\t{~Entity:Book:1~}\n\t\t\t//          ...meaning GET BOOK 1\n\t\t\t// \t\t{~Entity:Book:AppData.Some.Address.IDBook~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook\n\t\t\t// \t\t{~E:Book:AppData.Some.Address.IDBook:Render-Book-Template~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook and render it to Render-Book-Template\n\t\t\tlet fEntityRender = (pHash, pData, fCallback) =>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tlet tmpEntity = false;\n\t\t\t\t\tlet tmpEntityID = false;\n\t\t\t\t\tlet tmpEntityTemplate = false;\n\n\t\t\t\t\t// This expression requires 2 parts -- a third is optional, and, if present, is the template to render to.\n\t\t\t\t\tlet tmpHashSeparator = tmpHash.indexOf('|');\n\n\t\t\t\t\tif (tmpHashSeparator < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\t\tlet tmpHashEntitySeparator = tmpHash.indexOf(':');\n\t\t\t\t\t\ttmpEntity = tmpHash.substring(0, tmpHashEntitySeparator);\n\t\t\t\t\t\ttmpEntityID = tmpHash.substring(tmpHashEntitySeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is a 3 part hash (the entity, the ID, and the template)\n\t\t\t\t\t\tlet tmpHashEntitySeparator = tmpHash.indexOf(':');\n\t\t\t\t\t\ttmpEntity = tmpHash.substring(0, tmpHashEntitySeparator);\n\n\t\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf('|');\n\t\t\t\t\t\ttmpEntityID = tmpHash.substring(tmpHashEntitySeparator + 1, tmpHashTemplateSeparator);\n\n\t\t\t\t\t\ttmpEntityTemplate = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isNaN(tmpEntityID))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpEntityID = parseInt(tmpEntityID);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is an address, so we need to get the value at the address\n\t\t\t\t\t\ttmpEntityID = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:pData}, tmpEntityID);\n\t\t\t\t\t}\n\n\t\t\t\t\t// No Entity or EntityID\n\t\t\t\t\tif (!tmpEntity || !tmpEntityID)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to get the entity\n\t\t\t\t\tthis.EntityProvider.getEntity(tmpEntity, tmpEntityID,\n\t\t\t\t\t\t(pError, pRecord) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Pict: Entity Render: Error getting entity [${tmpEntity}] with ID [${tmpEntityID}] for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\t\t\treturn fCallback(pError, '');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Now render the template\n\t\t\t\t\t\t\tif (tmpEntityTemplate)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(null, this.parseTemplateByHash(tmpEntityTemplate, pRecord));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t};\n\t\t\tthis.defaultServices.MetaTemplate.addPatternAsync('{~E:', '~}', fEntityRender);\n\t\t\tthis.defaultServices.MetaTemplate.addPatternAsync('{~Entity:', '~}', fEntityRender);\n\n\t\t\t// {NE~Some.Address|If the left value is truthy, render this value.~}\n\t\t\tlet fNotEmptyRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\t// Should switch this to indexOf so pipes can be in the content.\n\t\t\t\t\tlet tmpHashParts = tmpHash.split('|');\n\n\t\t\t\t\t// For now just check truthiness\n\t\t\t\t\tif (this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:pData}, tmpHashParts[0]))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpHashParts[1];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~NotEmpty:', '~}', fNotEmptyRender);\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~NE:', '~}', fNotEmptyRender);\n\n\t\t\t// {~T:Template:AddressOfData~}\n\t\t\tlet fTemplateRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:pData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~T:', '~}', fTemplateRender);\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~Template:', '~}', fTemplateRender);\n\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:pData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~TS:', '~}', fTemplateSetRender);\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~TemplateSet:', '~}', fTemplateSetRender);\n\n\t\t\t//{~Data:AppData.Some.Value.to.Render~}\n\t\t\tlet fDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:pData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn tmpValue;\n\t\t\t\t};\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~D:', '~}', fDataRender);\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~Data:', '~}', fDataRender);\n\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~Dollars:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:pData}, tmpHash);\n\t\t\t\t\treturn this.defaultServices.DataFormat.formatterDollars(tmpColumnData);\n\t\t\t\t});\n\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~Digits:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:pData}, tmpHash);\n\t\t\t\t\treturn this.defaultServices.DataFormat.formatterAddCommasToNumber(this.defaultServices.DataFormat.formatterRoundNumber(tmpColumnData, 2));\n\t\t\t\t});\n\n\t\t\tthis._DefaultPictTemplatesInitialized = true;\n\t\t}\n\t}\n\n\tparseTemplate (pTemplateString, pData, fCallback)\n\t{\n\t\treturn this.defaultServices.MetaTemplate.parseString(pTemplateString, pData, fCallback);\n\t}\n\n\tparseTemplateByHash (pTemplateHash, pData, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.defaultServices.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\treturn this.parseTemplate(tmpTemplateString, pData, fCallback);\n\t}\n\n\tparseTemplateSet (pTemplateString, pDataSet, fCallback)\n\t{\n\t\t// TODO: This will need streaming -- for now janky old string append does the trick\n\t\tlet tmpValue = '';\n\t\tif (typeof(fCallback) == 'function')\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tthis.defaultServices.Utility.eachLimit(pDataSet, 1,\n\t\t\t\t\t(pRecord, fRecordTemplateCallback)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplate(pTemplateString, pRecord,\n\t\t\t\t\t\t\t(pError, pTemplateResult)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValue += pTemplateResult;\n\t\t\t\t\t\t\t\treturn fRecordTemplateCallback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t(pError)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fCallback(pError, tmpValue);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn fCallback(Error('Pict: Template Set: pDataSet is not an array or object.'), '');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tif (Array.isArray(pDataSet))\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < pDataSet.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpKeys = Object.keys(pDataSet);\n\t\t\t\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[tmpKeys[i]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpValue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\tparseTemplateSetByHash (pTemplateHash, pDataSet, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.defaultServices.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\treturn this.parseTemplateSet(tmpTemplateString, pDataSet, fCallback);\n\t}\n};\n\nmodule.exports = Pict;\nmodule.exports.PictViewClass = require('./Pict-View.js');\n\n},{\"./Pict-Content-Assignment.js\":107,\"./Pict-Meadow-EntityProvider.js\":108,\"./Pict-Template-Provider.js\":109,\"./Pict-View.js\":110,\"fable\":41}]},{},[106])(106)\n});\n\n","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\nvar eachOfLimit = require('async.util.eachoflimit');\nvar withoutIndex = require('async.util.withoutindex');\n\nmodule.exports = function eachLimit(arr, limit, iterator, cb) {\n    return eachOfLimit(limit)(arr, withoutIndex(iterator), cb);\n};\n","'use strict';\n\nmodule.exports = function(tasks) {\n    function makeCallback(index) {\n        function fn() {\n            if (tasks.length) {\n                tasks[index].apply(null, arguments);\n            }\n            return fn.next();\n        }\n        fn.next = function() {\n            return (index < tasks.length - 1) ? makeCallback(index + 1) : null;\n        };\n        return fn;\n    }\n    return makeCallback(0);\n};\n","var once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar onlyOnce = require('async.util.onlyonce');\nvar keyIterator = require('async.util.keyiterator');\n\nmodule.exports = function eachOfLimit(limit) {\n    return function(obj, iterator, cb) {\n        cb = once(cb || noop);\n        obj = obj || [];\n        var nextKey = keyIterator(obj);\n        if (limit <= 0) {\n            return cb(null);\n        }\n        var done = false;\n        var running = 0;\n        var errored = false;\n\n        (function replenish() {\n            if (done && running <= 0) {\n                return cb(null);\n            }\n\n            while (running < limit && !errored) {\n                var key = nextKey();\n                if (key === null) {\n                    done = true;\n                    if (running <= 0) {\n                        cb(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iterator(obj[key], key, onlyOnce(function(err) {\n                    running -= 1;\n                    if (err) {\n                        cb(err);\n                        errored = true;\n                    } else {\n                        replenish();\n                    }\n                }));\n            }\n        })();\n    };\n};\n","'use strict';\nvar setImmediate = require('async.util.setimmediate');\nvar restParam = require('async.util.restparam');\n\nmodule.exports = function(fn) {\n    return restParam(function(args) {\n        var callback = args.pop();\n        args.push(function() {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate(function() {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        var sync = true;\n        fn.apply(this, args);\n        sync = false;\n    });\n};\n","'use strict';\n\nmodule.exports = Array.isArray || function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n","'use strict';\n\nvar isArray = require('async.util.isarray');\n\nmodule.exports = function isArrayLike(arr) {\n    return isArray(arr) || (\n        // has a positive integer length property\n        typeof arr.length === 'number' &&\n        arr.length >= 0 &&\n        arr.length % 1 === 0\n    );\n};\n","'use strict';\n\nvar _keys = require('async.util.keys');\nvar isArrayLike = require('async.util.isarraylike');\n\nmodule.exports = function keyIterator(coll) {\n    var i = -1;\n    var len;\n    var keys;\n    if (isArrayLike(coll)) {\n        len = coll.length;\n        return function next() {\n            i++;\n            return i < len ? i : null;\n        };\n    } else {\n        keys = _keys(coll);\n        len = keys.length;\n        return function next() {\n            i++;\n            return i < len ? keys[i] : null;\n        };\n    }\n};\n","'use strict';\n\nmodule.exports = Object.keys || function keys(obj) {\n    var _keys = [];\n    for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            _keys.push(k);\n        }\n    }\n    return _keys;\n};\n","'use strict';\n\nmodule.exports = function noop () {};\n","'use strict';\n\nmodule.exports = function once(fn) {\n    return function() {\n        if (fn === null) return;\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n","'use strict';\n\nmodule.exports = function only_once(fn) {\n    return function() {\n        if (fn === null) throw new Error('Callback was already called.');\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n","'use strict';\nmodule.exports = function restParam(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n        var length = Math.max(arguments.length - startIndex, 0);\n        var rest = new Array(length);\n        for (var index = 0; index < length; index++) {\n            rest[index] = arguments[index + startIndex];\n        }\n        switch (startIndex) {\n            case 0:\n                return func.call(this, rest);\n            case 1:\n                return func.call(this, arguments[0], rest);\n        }\n    };\n};\n","'use strict';\n\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\nvar fallback = function(fn) {\n    setTimeout(fn, 0);\n};\n\nmodule.exports = function setImmediate(fn) {\n    // not a direct alias for IE10 compatibility\n    return (_setImmediate || fallback)(fn);\n};\n","'use strict';\n\nmodule.exports = function withoutIndex(iterator) {\n    return function(value, index, callback) {\n        return iterator(value, callback);\n    };\n};\n","'use strict';\n\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar isArray = require('async.util.isarray');\nvar restParam = require('async.util.restparam');\nvar ensureAsync = require('async.util.ensureasync');\nvar iterator = require('async.iterator');\n\nmodule.exports = function(tasks, cb) {\n    cb = once(cb || noop);\n    if (!isArray(tasks)) return cb(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return cb();\n\n    function wrapIterator(iterator) {\n        return restParam(function(err, args) {\n            if (err) {\n                cb.apply(null, [err].concat(args));\n            } else {\n                var next = iterator.next();\n                if (next) {\n                    args.push(wrapIterator(next));\n                } else {\n                    args.push(cb);\n                }\n                ensureAsync(iterator).apply(null, args);\n            }\n        });\n    }\n    wrapIterator(iterator(tasks))();\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n","/**\n* Cache data structure with:\n*  - enumerable items\n*  - unique hash item access (if none is passed in, one is generated)\n*  - size (length) expiration\n*  - controllable expiration (e.g. keep in cache longer if older/less likely to change)\n*  - time-based expiration\n*  - custom expiration based on passed-in function\n*\n* Also:\n*  - built to work well with browserify\n*  - no dependencies at all\n*  - pet friendly\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nconst libLinkedList = require(`./LinkedList.js`);\n\nclass CashMoney extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'ObjectCache';\n\n\t\t// The map of node objects by hash because Reasons.\n\t\tthis._HashMap = {};\n\n\t\tthis._RecordMap = {};\n\n\t\tthis._List = new libLinkedList();\n\n\t\t// If the list gets over maxLength, we will automatically remove nodes on insertion.\n\t\tthis.maxLength = 0;\n\n\t\t// If cache entries get over this age, they are removed with prune\n\t\tthis.maxAge = 0;\n\t}\n\n\tget RecordMap()\n\t{\n\t\treturn this._RecordMap;\n\t}\n\n\t// Add (or update) a node in the cache\n\tput(pData, pHash)\n\t{\n\t\t// If the hash of the record exists\n\t\tif (this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\t// Just update the hashed records datum\n\t\t\tthis._HashMap[pHash].Datum = pData;\n\t\t\tthis._RecordMap[pHash] = pData;\n\t\t\treturn this._HashMap[pHash].Datum;\n\t\t}\n\n\t\tlet tmpNode = this._List.push(pData, pHash);\n\t\tthis._HashMap[tmpNode.Hash] = tmpNode;\n\t\tthis._RecordMap[pHash] = pData;\n\n\t\t// Automatically prune if over length, but only prune this nodes worth.\n\t\tif (this.maxLength > 0   &&   this._List.length > this.maxLength)\n\t\t{\n\t\t\t// Pop it off the head of the list\n\t\t\ttmpNode = this._List.pop();\n\t\t\t// Also remove it from the hashmap\n\t\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\t\tdelete this._HashMap[tmpNode.Hash];\n\t\t}\n\n\t\t// Now some expiration properties on the node metadata... namely the birthdate in ms of the node\n\t\ttmpNode.Metadata.Created = +new Date();\n\n\t\treturn tmpNode.Datum;\n\t}\n\n\t// Read a datum by hash from the cache\n\tread(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._HashMap[pHash].Datum;\n\t}\n\n\t// Reinvigorate a node based on hash, updating the timestamp and moving it to the head of the list (also removes custom metadata)\n\ttouch(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get the old node out of the list\n\t\tlet tmpNode = this._List.remove(this._HashMap[pHash]);\n\t\t// Remove it from the hash map\n\t\tdelete this._RecordMap[pHash];\n\t\tdelete this._HashMap[pHash];\n\n\t\t// Now put it back, fresh.\n\t\treturn this.put(tmpNode.Datum, tmpNode.Hash);\n\t}\n\n\t// Expire a cached record based on hash\n\texpire(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpNode = this._HashMap[pHash];\n\n\t\t// Remove it from the list of cached records\n\t\ttmpNode = this._List.remove(tmpNode);\n\t\t// Also remove it from the hashmap\n\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\tdelete this._HashMap[tmpNode.Hash];\n\n\t\t// Return it in case the consumer wants to do anything with it\n\t\treturn tmpNode;\n\t}\n\n\t// Prune records from the cached set based on maxAge\n\tpruneBasedOnExpiration(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tif (this.maxAge < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now enumerate each record and remove any that are expired\n\t\tlet tmpNow = +new Date();\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\t// Expire the node if it is older than max age milliseconds\n\t\t\tif (tmpNow - this._HashMap[tmpKeys[i]].Metadata.Created >= this.maxAge)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on maxLength\n\tpruneBasedOnLength(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\t// Pop records off until we have reached maxLength unless it's 0\n\t\tif (this.maxLength > 0)\n\t\t{\n\t\t\twhile (this._List.length > this.maxLength)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this._List.pop());\n\t\t\t}\n\t\t}\n\n\t\treturn fComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on passed in pPruneFunction(pDatum, pHash, pNode) -- returning true expires it\n\tpruneCustom(fComplete, fPruneFunction, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\tlet tmpNode = this._HashMap[tmpKeys[i]];\n\t\t\t// Expire the node if the passed in function returns true\n\t\t\tif (fPruneFunction(tmpNode.Datum, tmpNode.Hash, tmpNode))\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune the list down to the asserted rules (max age then max length if still too long)\n\tprune(fComplete)\n\t{\n\t\tlet tmpRemovedRecords = [];\n\n\t\t// If there are no cached records, we are done.\n\t\tif (this._List.length < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now prune based on expiration time\n\t\tthis.pruneBasedOnExpiration((fExpirationPruneComplete)=>\n\t\t\t{\n\t\t\t\t// Now prune based on length, then return the removed records in the callback.\n\t\t\t\tthis.pruneBasedOnLength(fComplete, tmpRemovedRecords);\n\t\t\t}, tmpRemovedRecords);\n\t}\n\n\t// Get a low level node (including metadata statistics) by hash from the cache\n\tgetNode(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\n\t\treturn this._HashMap[pHash];\n\t}\n}\n\nmodule.exports = CashMoney;","/**\n* Double Linked List Node\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Linked List Node Prototype\n*\n* @class LinkedListNode\n* @constructor\n*/\n\nclass LinkedListNode\n{\n\tconstructor()\n\t{\n\t\tthis.Hash = false;\n\t\tthis.Datum = false;\n\n\t\t// This is where expiration and other elements are stored;\n\t\tthis.Metadata = {};\n\n\t\tthis.LeftNode = false;\n\t\tthis.RightNode = false;\n\n\t\t// To allow safe specialty operations on nodes\n\t\tthis.__ISNODE = true;\n\t}\n}\n\nmodule.exports = LinkedListNode;","\"use strict\"\n/**\n* Simple double linked list to hold the cache entries in, in order.\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module FeeFiFo\n*/\n\nconst libLinkedListNode = require('./LinkedList-Node.js');\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nclass LinkedList\n{\n\tconstructor()\n\t{\n\t\t// Total number of nodes ever processed by this ADT\n\t\tthis.totalNodes = 0;\n\n\t\t// The length of the set of nodes currently in the list\n\t\tthis.length = 0;\n\n\t\tthis.head = false;\n\t\tthis.tail = false;\n\t}\n\n\t// Create a node object.\n\tinitializeNode(pDatum, pHash)\n\t{\n\t\t// Don't allow undefined to be added to the list because of reasons\n\t\tif (typeof(pDatum) === 'undefined')\n\t\t\treturn false;\n\n\t\tthis.totalNodes++;\n\n\t\t// Get (or create) a unique hash\n\t\tlet tmpHash = (typeof(pHash) != 'undefined') ? pHash : `NODE[${this.totalNodes}]`;\n\n\t\tlet tmpNode = new libLinkedListNode();\n\n\t\ttmpNode.Hash = tmpHash;\n\t\ttmpNode.Datum = pDatum;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Add a node to the end (right of tail) of the list.\n\tappend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.tail.RightNode = tmpNode;\n\t\ttmpNode.LeftNode = this.tail;\n\t\tthis.tail = tmpNode;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Append to tail of list (FIFO)\n\tpush(pDatum, pHash)\n\t{\n\t\treturn this.append(pDatum, pHash);\n\t}\n\n\t// Add a node to the beginning (left of head) of the list.\n\tprepend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.head.LeftNode = tmpNode;\n\t\ttmpNode.RightNode = this.head;\n\t\tthis.head = tmpNode;\n\t\treturn tmpNode;\n\t}\n\n\t// Remove a node from the list\n\tremove(pNode)\n\t{\n\t\tif (typeof(pNode) === 'undefined')\n\t\t\treturn false;\n\n\t\tif (!pNode.__ISNODE)\n\t\t\treturn false;\n\n\t\tthis.length--;\n\n\t\t// Last element in list.  Empty it out.\n\t\tif (this.length < 1)\n\t\t{\n\t\t\tthis.head = false;\n\t\t\tthis.tail = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's somewhere in the middle, surgically remove it.\n\t\tif (pNode.LeftNode && pNode.RightNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = pNode.RightNode;\n\t\t\tpNode.RightNode.LeftNode = pNode.LeftNode;\n\n\t\t\tpNode.RightNode = false;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's the tail\n\t\tif (pNode.LeftNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = false;\n\t\t\tthis.tail = pNode.LeftNode;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It must be the head\n\t\tpNode.RightNode.LeftNode = false;\n\t\tthis.head = pNode.RightNode;\n\t\tpNode.RightNode = false;\n\t\treturn pNode;\n\t}\n\n\t// Remove the head of the list (FIFO)\n\tpop()\n\t{\n\t\treturn this.remove(this.head);\n\t}\n\n\t// Enumerate over each node IN ORDER, running the function fAction(pDatum, pHash, fCallback) then calling the function fComplete callback when done\n\teach(fAction, fComplete)\n\t{\n\t\tif (this.length < 1)\n\t\t\treturn fComplete();\n\n\t\tlet tmpNode = false;\n\n\t\tlet fIterator = (pError)=>\n\t\t{\n\t\t\t// If the user passed in a callback with an error, call their callback with the error\n\t\t\tif (pError)\n\t\t\t\treturn fComplete(pError);\n\n\t\t\t// If there is no node, this must be the initial run.\n\t\t\tif (!tmpNode)\n\t\t\t\ttmpNode = this.head;\n\t\t\t// Check if we are at the tail of the list\n\t\t\telse if (!tmpNode.RightNode)\n\t\t\t\treturn fComplete();\n\t\t\t// Proceed to the next node\n\t\t\telse\n\t\t\t\ttmpNode = tmpNode.RightNode;\n\n\t\t\t// Call the actual action\n\t\t\t// I hate this pattern because long tails eventually cause stack overflows.\n\t\t\tfAction(tmpNode.Datum, tmpNode.Hash, fIterator);\n\t\t};\n\n\t\t// Now kick off the iterator\n\t\treturn fIterator();\n\t}\n\n\t// Seek a specific node, 0 is the index of the first node.\n\tseek(pNodeIndex)\n\t{\n\t\tif (!pNodeIndex)\n\t\t\treturn false;\n\t\tif (this.length < 1)\n\t\t\treturn false;\n\t\tif (pNodeIndex >= this.length)\n\t\t\treturn false;\n\n\t\tlet tmpNode = this.head;\n\t\tfor (let i = 0; i < pNodeIndex; i++)\n\t\t{\n\t\t\ttmpNode = tmpNode.RightNode;\n\t\t}\n\n\t\treturn tmpNode;\n\t}\n}\n\nmodule.exports = LinkedList;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/**\n* Base Logger Class\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\nclass BaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = (typeof(pLogStreamSettings) == 'object') ? pLogStreamSettings : {};\n\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\t// We added this as the mechanism for tracking loggers to allow multiple simultaneous streams\n\t\t// to the same provider.\n\t\tthis.loggerUUID = this.generateInsecureUUID();\n\n\t\t// Eventually we can use this array to ompute which levels the provider allows.\n\t\t// For now it's just used to precompute some string concatenations.\n\t\tthis.levels = (\n\t\t\t[\n\t\t\t\t\"trace\",\n\t\t\t\t\"debug\",\n\t\t\t\t\"info\",\n\t\t\t\t\"warn\",\n\t\t\t\t\"error\",\n\t\t\t\t\"fatal\"\n\t\t\t]);\n\t}\n\n\t// This is meant to generate programmatically insecure UUIDs to identify loggers\n\tgenerateInsecureUUID()\n\t{\n\t\tlet tmpDate = new Date().getTime();\n\t\tlet tmpUUID = 'LOGSTREAM-xxxxxx-yxxxxx'.replace(/[xy]/g,\n\t\t\t\t(pCharacter) =>\n\t\t\t\t{\n\t\t\t\t\t// Funny algorithm from w3resource that is twister-ish without the deep math and security\n\t\t\t\t\t// ..but good enough for unique log stream identifiers\n\t\t\t\t\tlet tmpRandomData = (tmpDate + Math.random()*16)%16 | 0;\n\t\t\t\t\ttmpDate = Math.floor(tmpDate/16);\n\n\t\t\t\t\treturn (pCharacter =='x' ? tmpRandomData : (tmpRandomData&0x3|0x8)).toString(16);\n\t\t\t\t});\n\t\treturn tmpUUID;\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n","/**\n* Default Logger Provider Function\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\nvar getDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\ttmpDefaultProviders.default = tmpDefaultProviders.console;\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();","module.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]","let libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings);\n\n\t\tthis._ShowTimeStamps = this._Settings.hasOwnProperty('showtimestamps') ? (this._Settings.showtimestamps == true) : true;\n\t\tthis._FormattedTimeStamps = this._Settings.hasOwnProperty('formattedtimestamps') ? (this._Settings.formattedtimestamps == true) : true;\n\n\t\tthis._ContextMessage = this._Settings.hasOwnProperty('Context') ? `(${this._Settings.Context})` : \n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? `(${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'Unnamed_Log_Context';\n\n\t\t// Allow the user to decide what gets output to the console\n\t\tthis._OutputLogLinesToConsole = this._Settings.hasOwnProperty('outputloglinestoconsole') ? this._Settings.outputloglinestoconsole : true;\n\t\tthis._OutputObjectsToConsole = this._Settings.hasOwnProperty('outputobjectstoconsole') ? this._Settings.outputobjectstoconsole : true;\n\n\t\t// Precompute the prefix for each level\n\t\tthis.prefixCache = {};\n\t\tfor (let i = 0; i <= this.levels.length; i++)\n\t\t{\n\t\t\tthis.prefixCache[this.levels[i]] = `[${this.levels[i]}] ${this._ContextMessage}: `;\n\n\t\t\tif (this._ShowTimeStamps)\n\t\t\t{\n\t\t\t\t// If there is a timestamp we need a to prepend space before the prefixcache string, since the timestamp comes first\n\t\t\t\tthis.prefixCache[this.levels[i]] = ' '+this.prefixCache[this.levels[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpTimeStamp = '';\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = (new Date()).toISOString();\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = +new Date();\n\t\t}\n\n\t\tlet tmpLogLine = `${tmpTimeStamp}${this.prefixCache[pLevel]}${pLogText}`;\n\n\t\tif (this._OutputLogLinesToConsole)\n\t\t{\n\t\t\tconsole.log(tmpLogLine);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (this._OutputObjectsToConsole && (typeof(pObject) !== 'undefined'))\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 2));\n\t\t}\n\n\t\t// Provide an easy way to be overridden and be consistent\n\t\treturn tmpLogLine;\n\t}\n}\n\nmodule.exports = ConsoleLogger;","const libConsoleLog = require('./Fable-Log-Logger-Console.js');\nconst libFS = require('fs');\nconst libPath = require('path');\n\nclass SimpleFlatFileLogger extends libConsoleLog\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings, pFableLog);\n\n\t\t// If a path isn't provided for the logfile, it tries to use the ProductName or Context\n\t\tthis.logFileRawPath = (this._Settings.hasOwnProperty('path')) ? this._Settings.path : `./${this._ContextMessage}.log`;\n\t\tthis.logFilePath = libPath.normalize(this.logFileRawPath);\n\n\t\tthis.logFileStreamOptions = (this._Settings.hasOwnProperty('fileStreamoptions')) ? this._Settings.fileStreamOptions : (\n\t\t\t{\n\t\t\t\t\"flags\": \"a\",\n\t\t\t\t\"encoding\": \"utf8\"\n\t\t\t})\n\n\t\tthis.fileWriter = libFS.createWriteStream(this.logFilePath, this.logFileStreamOptions);\n\n\t\tthis.activelyWriting = false;\n\n\t\tthis.logLineStrings = [];\n\t\tthis.logObjectStrings = [];\n\n\t\tthis.defaultWriteCompleteCallback = ()=>{};\n\t\tthis.defaultBufferFlushCallback = ()=>{};\n\t}\n\n\tcloseWriter(fCloseComplete)\n\t{\n\t\tlet tmpCloseComplete = (typeof(fCloseComplete) == 'function') ? fCloseComplete : ()=>{};\n\t\tif (this.fileWriter)\n\t\t{\n\t\t\tthis.fileWriter.end('\\n');\n\t\t\treturn this.fileWriter.once('finish', tmpCloseComplete.bind(this));\n\t\t}\n\t};\n\n\tcompleteBufferFlushToLogFile(fFlushComplete)\n\t{\n\t\tthis.activelyWriting = false;\n\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\tif (this.logLineStrings.length > 0)\n\t\t{\n\t\t\tthis.flushBufferToLogFile(tmpFlushComplete);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpFlushComplete();\n\t\t}\n\t}\n\n\tflushBufferToLogFile(fFlushComplete)\n\t{\n\t\tif (!this.activelyWriting)\n\t\t{\n\t\t\t// Only want to be writing one thing at a time....\n\t\t\tthis.activelyWriting = true;\n\n\t\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\t\t// Get the current buffer arrays.  These should always have matching number of elements.\n\t\t\tlet tmpLineStrings = this.logLineStrings;\n\t\t\tlet tmpObjectStrings = this.logObjectStrings;\n\n\t\t\t// Reset these to be filled while we process this queue...\n\t\t\tthis.logLineStrings = [];\n\t\t\tthis.logObjectStrings = [];\n\n\t\t\t// This is where we will put each line before writing it to the file...\n\t\t\tlet tmpConstructedBufferOutputString = '';\n\n\t\t\tfor (let i = 0; i < tmpLineStrings.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: Windows Newline?   ....... yo no se!\n\t\t\t\ttmpConstructedBufferOutputString += `${tmpLineStrings[i]}\\n`;\n\t\t\t\tif (tmpObjectStrings[i] !== false)\n\t\t\t\t{\n\t\t\t\t\ttmpConstructedBufferOutputString += `${tmpObjectStrings[i]}\\n`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.fileWriter.write(tmpConstructedBufferOutputString, 'utf8'))\n\t\t\t{\n\t\t\t\t// If the streamwriter returns false, we need to wait for it to drain.\n\t\t\t\tthis.fileWriter.once('drain', this.completeBufferFlushToLogFile.bind(this, tmpFlushComplete));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.completeBufferFlushToLogFile(tmpFlushComplete);\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpLogLine = super.write(pLevel, pLogText, pObject);\n\n\t\t// Use a very simple array as the write buffer\n\t\tthis.logLineStrings.push(tmpLogLine);\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tthis.logObjectStrings.push(JSON.stringify(pObject, null, 4));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logObjectStrings.push(false);\n\t\t}\n\n\t\tthis.flushBufferToLogFile();\n\t}\n}\n\nmodule.exports = SimpleFlatFileLogger;","/**\n* Fable Logging Service\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass FableLog extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'Logging';\n\n\t\tlet tmpSettings = (typeof(pSettings) === 'object') ? pSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders-Node.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.datumDecorator = (pDatum) => pDatum;\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetDatumDecorator(fDatumDecorator)\n\t{\n\t\tif (typeof(fDatumDecorator) === 'function')\n\t\t{\n\t\t\tthis.datumDecorator = fDatumDecorator;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.datumDecorator = (pDatum) => pDatum;\n\t\t}\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'default',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableLog(pSettings);\n}\n\n\nmodule.exports = FableLog;\nmodule.exports.new = autoConstruct;\nmodule.exports.LogProviderBase = require('./Fable-Log-BaseLogger.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-Console.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-SimpleFlatFile.js');\n","/**\n* Fable Core Pre-initialization Service Base\n*\n* For a couple services, we need to be able to instantiate them before the Fable object is fully initialized.\n* This is a base class for those services.\n*\n* @author <steven@velozo.com>\n*/\n\nclass FableCoreServiceProviderBase\n{\n\tconstructor(pOptions, pServiceHash)\n\t{\n\t\tthis.fable = false;\n\n\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions : {};\n\n        this.serviceType = 'Unknown';\n\n\t\t// The hash will be a non-standard UUID ... the UUID service uses this base class!\n        this.UUID = `CORESVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`;\n\n        this.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash : `${this.UUID}`;\n\t}\n\n\n    static isFableService = true;\n\n\t// After fable is initialized, it would be expected to be wired in as a normal service.\n\tconnectFable(pFable)\n\t{\n\t\tthis.fable = pFable;\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = FableCoreServiceProviderBase;\n","/**\n* Fable Service Base\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tthis.fable = pFable;\n\n\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t: ((typeof(pFable) === 'object') && !pFable.isFable) ? pFable\n\t\t\t\t\t\t: {};\n\n\t\tthis.serviceType = 'Unknown';\n\n\t\tif (typeof(pFable.getUUID) == 'function')\n\t\t{\n\t\t\tthis.UUID = pFable.getUUID();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.UUID = `NoFABLESVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`\n\t\t}\n\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash : `${this.UUID}`;\n\t}\n\n\tstatic isFableService = true;\n}\n\nmodule.exports = FableServiceProviderBase;\n\nmodule.exports.CoreServiceProviderBase = require('./Fable-ServiceProviderBase-Preinit.js');","module.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n","/**\n* Fable Settings Template Processor\n*\n* This class allows environment variables to come in via templated expressions, and defaults to be set.\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\nconst libPrecedent = require('precedent');\n\nclass FableSettingsTemplateProcessor\n{\n\tconstructor(pDependencies)\n\t{\n        // Use a no-dependencies templating engine to parse out environment variables\n\t\tthis.templateProcessor = new libPrecedent();\n\n        // TODO: Make the environment variable wrap expression demarcation characters configurable?\n\t\tthis.templateProcessor.addPattern('${', '}',\n\t\t\t(pTemplateValue)=>\n\t\t\t{\n\t\t\t\tlet tmpTemplateValue = pTemplateValue.trim();\n\n\t\t\t\tlet tmpSeparatorIndex = tmpTemplateValue.indexOf('|');\n\n\t\t\t\t// If there is no pipe, the default value will end up being whatever the variable name is.\n\t\t\t\tlet tmpDefaultValue = tmpTemplateValue.substring(tmpSeparatorIndex+1);\n\n\t\t\t\tlet tmpEnvironmentVariableName = (tmpSeparatorIndex > -1) ? tmpTemplateValue.substring(0, tmpSeparatorIndex) : tmpTemplateValue;\n\n\t\t\t\tif (process.env.hasOwnProperty(tmpEnvironmentVariableName))\n\t\t\t\t{\n\t\t\t\t\treturn process.env[tmpEnvironmentVariableName];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpDefaultValue;\n\t\t\t\t}\n\t\t\t});\n    }\n\n    parseSetting(pString)\n    {\n        return this.templateProcessor.parseString(pString);\n    }\n}\n\nmodule.exports = FableSettingsTemplateProcessor;","/**\n* Fable Settings Add-on\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nconst libFableSettingsTemplateProcessor = require('./Fable-Settings-TemplateProcessor.js');\n\nclass FableSettings extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'SettingsManager';\n\n\t\t// Initialize the settings value template processor\n\t\tthis.settingsTemplateProcessor = new libFableSettingsTemplateProcessor();\n\n\t\t// set straight away so anything that uses it respects the initial setting\n\t\tthis._configureEnvTemplating(pSettings);\n\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')));\n\t}\n\n\t// Update the configuration for environment variable templating based on the current settings object\n\t_configureEnvTemplating(pSettings)\n\t{\n\t\t// default environment variable templating to on\n\t\tthis._PerformEnvTemplating = !pSettings || pSettings.NoEnvReplacement !== true;\n\t}\n\n\t// Resolve (recursive) any environment variables found in settings object.\n\t_resolveEnv(pSettings)\n\t{\n\t\tfor (const tmpKey in pSettings)\n\t\t{\n\t\t\tif (typeof(pSettings[tmpKey]) === 'object')\n\t\t\t{\n\t\t\t\tthis._resolveEnv(pSettings[tmpKey]);\n\t\t\t}\n\t\t\telse if (typeof(pSettings[tmpKey]) === 'string')\n\t\t\t{\n\t\t\t\tpSettings[tmpKey] = this.settingsTemplateProcessor.parseSetting(pSettings[tmpKey]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if a value is an object (but not an array).\n\t */\n\t_isObject(value)\n\t{\n\t\treturn typeof(value) === 'object' && !Array.isArray(value);\n\t}\n\n\t/**\n\t * Merge two plain objects. Keys that are objects in both will be merged property-wise.\n\t */\n\t_deepMergeObjects(toObject, fromObject)\n\t{\n\t\tif (!fromObject || !this._isObject(fromObject))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject.keys(fromObject).forEach((key) =>\n\t\t{\n\t\t\tconst fromValue = fromObject[key];\n\t\t\tif (this._isObject(fromValue))\n\t\t\t{\n\t\t\t\tconst toValue = toObject[key];\n\t\t\t\tif (toValue && this._isObject(toValue))\n\t\t\t\t{\n\t\t\t\t\t// both are objects, so do a recursive merge\n\t\t\t\t\tthis._deepMergeObjects(toValue, fromValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoObject[key] = fromValue;\n\t\t});\n\t\treturn toObject;\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\t\ttmpSettingsTo = this._deepMergeObjects(tmpSettingsTo, tmpSettingsFromCopy);\n\n\t\tif (this._PerformEnvTemplating)\n\t\t{\n\t\t\tthis._resolveEnv(tmpSettingsTo);\n\t\t}\n\t\t// Update env tempating config, since we just updated the config object, and it may have changed\n\t\tthis._configureEnvTemplating(tmpSettingsTo);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\n\t\tthis.settings = this._deepMergeObjects(tmpSettingsFromCopy, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = FableSettings;\nmodule.exports.new = autoConstruct;","/**\n* Random Byte Generator - Browser version\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn this.generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n","/**\n* Fable UUID Generator\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;0\n\nconst libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'UUID';\n\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = FableUUID;\nmodule.exports.new = autoConstruct;\n","/**\n* Fable Service Base\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tthis.fable = pFable;\n\n\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t: ((typeof(pFable) === 'object') && !pFable.isFable) ? pFable\n\t\t\t\t\t\t: {};\n\n\t\tthis.serviceType = 'Unknown';\n\n\t\tif (typeof(pFable.getUUID) == 'function')\n\t\t{\n\t\t\tthis.UUID = pFable.getUUID();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.UUID = `NoFABLESVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`\n\t\t}\n\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash : `${this.UUID}`;\n\n\t\t// Pull back a few things\n\t\tthis.log = this.fable.log;\n\t\tthis.services = this.fable.services;\n\t\tthis.defaultServices = this.fable.defaultServices;\n\t}\n\n\tstatic isFableService = true;\n}\n\nmodule.exports = FableServiceProviderBase;\n\nmodule.exports.CoreServiceProviderBase = require('./Fable-ServiceProviderBase-Preinit.js');","/**\n* Fable Application Services Management\n* @author <steven@velozo.com>\n*/\n\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableService extends libFableServiceBase.CoreServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'ServiceManager';\n\n\t\tthis.serviceTypes = [];\n\n\t\t// A map of instantiated services\n\t\tthis.services = {};\n\n\t\t// A map of the default instantiated service by type\n\t\tthis.defaultServices = {};\n\n\t\t// A map of class constructors for services\n\t\tthis.serviceClasses = {};\n\t}\n\n\taddServiceType(pServiceType, pServiceClass)\n\t{\n\t\t// Add the type to the list of types\n\t\tthis.serviceTypes.push(pServiceType);\n\n\t\t// Add the container for instantiated services to go in\n\t\tthis.services[pServiceType] = {};\n\n\t\t// Using the static member of the class is a much more reliable way to check if it is a service class than instanceof\n\t\tif ((typeof(pServiceClass) == 'function') && (pServiceClass.isFableService))\n\t\t{\n\t\t\t// Add the class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = pServiceClass;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the base class to the list of classes\n\t\t\tthis.fable.log.error(`Attempted to add service type [${pServiceType}] with an invalid class.  Using base service class, which will not crash but won't provide meaningful services.`);\n\t\t\tthis.serviceClasses[pServiceType] = libFableServiceBase;\n\t\t}\n\t}\n\n\t// This is for the services that are meant to run mostly single-instance so need a default at initialization\n\taddAndInstantiateServiceType(pServiceType, pServiceClass)\n\t{\n\t\tthis.addServiceType(pServiceType, pServiceClass);\n\t\tthis.instantiateServiceProvider(pServiceType, {}, `${pServiceType}-Default`);\n\t}\n\n\t// Some servicds expect to be overloaded / customized class.\n\tinstantiateServiceProviderFromPrototype(pServiceType, pOptions, pCustomServiceHash, pServicePrototype)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new pServicePrototype(this.fable, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.services[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.defaultServices.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\n\tinstantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = this.instantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.services[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.defaultServices.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\t// Create a service provider but don't register it to live forever in fable.services\n\tinstantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new this.serviceClasses[pServiceType](this.fable, pOptions, pCustomServiceHash);\n\t\treturn tmpService;\n\t}\n\n\t// Connect an initialized service provider that came before Fable was initialized\n\tconnectPreinitServiceProviderInstance(pServiceInstance)\n\t{\n\t\tlet tmpServiceType = pServiceInstance.serviceType;\n\t\tlet tmpServiceHash = pServiceInstance.Hash;\n\n\t\t// The service should already be instantiated, so just connect it to fable\n\t\tpServiceInstance.connectFable(this.fable);\n\n\t\tif (!this.services.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\t// If the core service hasn't registered itself yet, create the service container for it.\n\t\t\t// This means you couldn't register another with this type unless it was later registered with a constructor class.\n\t\t\tthis.services[tmpServiceType] = {};\n\t\t}\n\t\t// Add the service to the service map\n\t\tthis.services[tmpServiceType][tmpServiceHash] = pServiceInstance;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.defaultServices.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(tmpServiceType, tmpServiceHash)\n\t\t}\n\n\t\treturn pServiceInstance;\n\t}\n\n\tsetDefaultServiceInstantiation(pServiceType, pServiceHash)\n\t{\n\t\tif (this.services[pServiceType].hasOwnProperty(pServiceHash))\n\t\t{\n\t\t\tthis.fable[pServiceType] = this.services[pServiceType][pServiceHash];\n\t\t\tthis.defaultServices[pServiceType] = this.services[pServiceType][pServiceHash];\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nmodule.exports = FableService;\n\nmodule.exports.ServiceProviderBase = libFableServiceBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceBase.CoreServiceProviderBase;","/**\n* Fable Application Services Support Library\n* @author <steven@velozo.com>\n*/\n// Pre-init services\nconst libFableSettings = require('fable-settings');\nconst libFableUUID = require('fable-uuid');\nconst libFableLog = require('fable-log');\n\nconst libFableServiceManager = require('./Fable-ServiceManager.js');\n\nclass Fable\n{\n\tconstructor(pSettings)\n\t{\n\t\t// Initialization Phase 0: Set up the lowest level state (core services)\n\t\t// Container for the core services prototypes.\n\t\t// This is here so if an API consumer changes the default for a core service,\n\t\t// fable still runs with what was initialized.\n\t\tthis._coreServices = {};\n\n\t\t// Instantiate the default Settings Manager\n\t\tthis._coreServices.SettingsManager = new libFableSettings(pSettings);\n\t\t// Instantiate the UUID generator\n\t\tthis._coreServices.UUID = new libFableUUID(this._coreServices.SettingsManager.settings);\n\t\t// Instantiate the logging system\n\t\tthis._coreServices.Logging = new libFableLog(this._coreServices.SettingsManager.settings);\n\t\tthis._coreServices.Logging.initialize();\n\n\t\t// Initialization Phase 1: Instantiate the service manager\n\t\t// This is the start actual bootstrapping point for fable\n\t\tthis._coreServices.ServiceManager = new libFableServiceManager(this);\n\t\tthis.serviceManager = this._coreServices.ServiceManager;\n\t\tthis.serviceManager.connectFable(this);\n\t\t// Bootstrapping of fable into the Service Manager is complete\n\n\t\t// Initialization Phase 2: Map in the default services.\n\t\t// They will then be available in the Default service provider set as well.\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.ServiceManager);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.UUID);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.Logging);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.SettingsManager);\n\n\t\t// Initialize and instantiate the default baked-in Data Arithmatic service\n\t\tthis.serviceManager.addAndInstantiateServiceType('EnvironmentData', require('./services/Fable-Service-EnvironmentData.js'));\n\t\tthis.serviceManager.addServiceType('Template', require('./services/Fable-Service-Template.js'));\n\t\tthis.serviceManager.addServiceType('MetaTemplate', require('./services/Fable-Service-MetaTemplate.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('DataFormat', require('./services/Fable-Service-DataFormat.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('Utility', require('./services/Fable-Service-Utility.js'));\n\t\tthis.serviceManager.addServiceType('Operation', require('./services/Fable-Service-Operation.js'));\n\t\tthis.serviceManager.addServiceType('RestClient', require('./services/Fable-Service-RestClient.js'));\n\t\tthis.serviceManager.addServiceType('CSVParser', require('./services/Fable-Service-CSVParser.js'));\n\t\tthis.serviceManager.addServiceType('Manifest', require('manyfest'));\n\t\tthis.serviceManager.addServiceType('ObjectCache', require('cachetrax'));\n\t}\n\n\tget isFable()\n\t{\n\t\treturn true;\n\t}\n\n\tget settings()\n\t{\n\t\treturn this._coreServices.SettingsManager.settings;\n\t}\n\n\tget settingsManager()\n\t{\n\t\treturn this._coreServices.SettingsManager;\n\t}\n\n\tget log()\n\t{\n\t\treturn this._coreServices.Logging;\n\t}\n\n\tget services()\n\t{\n\t\treturn this._coreServices.ServiceManager.services;\n\t}\n\n\tget defaultServices()\n\t{\n\t\treturn this._coreServices.ServiceManager.defaultServices;\n\t}\n\n\tgetUUID()\n\t{\n\t\treturn this._coreServices.UUID.getUUID();\n\t}\n\n\tget fable()\n\t{\n\t\treturn this;\n\t};\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new Fable(pSettings);\n}\n\nmodule.exports = Fable;\nmodule.exports.new = autoConstruct;\n\nmodule.exports.LogProviderBase = libFableLog.LogProviderBase;\nmodule.exports.ServiceProviderBase = libFableServiceManager.ServiceProviderBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceManager.CoreServiceProviderBase;\n\nmodule.exports.precedent = libFableSettings.precedent;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Parsing CSVs.  Why?  Because it's a thing that needs to be done.\n*\n* 1. And the other node CSV parsers had issues with the really messy files we had.\n* \n*\n* 2. None of the CSV parsers dealt with and multi-line quoted string columns\n*    which are apparently a-ok according to the official spec.\n* Plus a lot of them are asynchronous because apparently that's the best way to\n* do anything; unfortunately some files have a sequence issue with that.\n*\n* @class CSVParser\n*/\nclass CSVParser extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'CSVParser';\n\n        this.Header = [];\n        this.HeaderFieldNames = [];\n\n        this.Delimiter = ',';\n        this.QuoteCharacter = '\"';\n\n        this.CleanCharacters = ['\\r'];\n\n        this.HeaderLineIndex = 0;\n        this.HasHeader = true;\n        this.HasSetHeader = false;\n        this.EmitHeader = false;\n\n        this.EmitJSON = true;\n\n        this.EscapedQuoteString = '&quot;';\n\n        // Current Line Parsing State\n        this.CurrentLine = '';\n        this.CurrentRecord = [];\n\n        this.InQuote = false;\n        this.InEscapedQuote = false;\n\n        this.LinesParsed = 0;\n        this.RowsEmitted = 0;\n    }\n\n    marshalRowToJSON(pRowArray)\n    {\n        if (!Array.isArray(pRowArray))\n        {\n            return false;\n        }\n\n        for (let i = this.HeaderFieldNames.length; i < pRowArray.length; i++)\n        {\n            this.HeaderFieldNames[i] = `${i}`;\n        }\n\n        let tmpObject = {};\n\n        for (let i = 0; i < pRowArray.length; i++)\n        {\n            tmpObject[this.HeaderFieldNames[i]] = pRowArray[i];\n        }\n\n        return tmpObject;\n    }\n\n    // Set the header data, for use in marshalling to JSON.\n    setHeader (pHeaderArray)\n    {\n        this.Header = pHeaderArray;\n\n        for (let i = 0; i < this.Header.length; i++)\n        {\n            if (typeof(this.Header[i]) == 'undefined')\n            {\n                this.HeaderFieldNames[i] = `${i}`;\n            }\n            else\n            {\n                this.HeaderFieldNames[i] = this.Header[i].toString();\n            }\n        }\n    }\n\n    resetRowState()\n    {\n        this.CurrentRecord = [];\n    }\n\n    pushLine()\n    {\n        for (let i = 0; i < this.CleanCharacters.length; i++)\n        {\n            this.CurrentLine = this.CurrentLine.replace(this.CleanCharacters[i],'');\n        }\n        this.CurrentRecord.push(this.CurrentLine);\n        this.CurrentLine = '';\n    }\n\n    emitRow(pFormatAsJSON)\n    {\n        let tmpFormatAsJSON = (typeof(pFormatAsJSON) == 'undefined') ? this.EmitJSON : pFormatAsJSON;\n\n        this.RowsEmitted++;\n        let tmpCompletedRecord = this.CurrentRecord;\n        this.CurrentRecord = [];\n\n        if (tmpFormatAsJSON)\n        {\n            return this.marshalRowToJSON(tmpCompletedRecord);\n        }\n        else\n        {\n            return tmpCompletedRecord;\n        }\n    }\n\n    parseCSVLine (pLineString)\n    {\n        this.LinesParsed++;\n\n        for (let i = 0; i < pLineString.length; i++)\n        {\n            if ((!this.InQuote) && (pLineString[i] == this.Delimiter))\n            {\n                this.pushLine();\n            }\n            else if (pLineString[i] == this.QuoteCharacter)\n            {\n                // If we are in the second part of an escaped quote, ignore it.\n                if (this.InEscapedQuote)\n                {\n                    this.InEscapedQuote = false;\n                }\n                // If we aren't in a quote, enter quote\n                else if (!this.InQuote)\n                {\n                    this.InQuote = true;\n                }\n                // We are in a quote, so peek forward to see if this is an \"escaped\" quote pair\n                else if ((i < pLineString.length) && (pLineString[i+1] == this.QuoteCharacter))\n                {\n                    this.CurrentLine += this.EscapedQuoteString;\n                    this.InEscapedQuote = true;\n                }\n                // We are in a quote, this isn't an \"escaped\" quote pair, so go out of quote mode\n                else\n                {\n                    this.InQuote = false;\n                }\n            }\n            else\n            {\n                this.CurrentLine += pLineString[i];\n            }\n        }\n\n        // See if we are in a multiline quoted entry -- if not, emit the row.\n        if (!this.InQuote)\n        {\n            // Push the last remaining column from the buffer to the current line.\n            this.pushLine();\n\n            // Check to see if there is a header -- and if so, if this is the header row\n            if (this.HasHeader && !this.HasSetHeader && (this.RowsEmitted == this.HeaderLineIndex))\n            {\n                this.HasSetHeader = true;\n                // Override the format as json bit\n                this.setHeader(this.emitRow(false));\n\n                // No matter what, formatting this as JSON is silly and we don't want to go there anyway.\n                if (this.EmitHeader)\n                {\n                    return this.Header;\n                }\n                else\n                {\n                    return false;\n                }\n            }\n            else\n            {\n                return this.emitRow();\n            }\n        }\n        else\n        {\n            return false;\n        }\n    };\n}\n\nmodule.exports = CSVParser;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Data Formatting and Translation Functions\n*\n* @class DataFormat\n*/\nclass DataFormat extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'DataArithmatic';\n\n\t\t// Regular Expressions (so they don't have to be recompiled every time)\n\t\t// These could be defined as static, but I'm not sure if that will work with browserify ... and specifically the QT browser.\n\t\tthis._Regex_formatterInsertCommas = /.{1,3}/g;\n\t\t// Match Function:\n\t\t// function(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t\t// Thoughts about below:   /^([+-]?)(0*)(\\d+)(\\.(\\d+))?$/;\n\t\tthis._Regex_formatterAddCommasToNumber = /^([-+]?)(0?)(\\d+)(.?)(\\d+)$/g;\n\t\tthis._Regex_formatterDollarsRemoveCommas = /,/gi;\n\t\tthis._Regex_formatterCleanNonAlpha = /[^a-z0-9]/gi;\n\n\t\t// TODO: Potentially pull these in from a configuration.\n\t\t// TODO: Use locale data for this if it's defaults all the way down.\n\t\tthis._Value_MoneySign_Currency = '$';\n\t\tthis._Value_NaN_Currency = '--';\n\t\tthis._Value_GroupSeparator_Number = ',';\n\n\t\tthis._Value_Prefix_StringHash = 'HSH';\n\t\tthis._Value_Clean_formatterCleanNonAlpha = '_';\n\n\t\tthis._UseEngineStringStartsWith = (typeof(String.prototype.startsWith) === 'function');\n\t\tthis._UseEngineStringEndsWith = (typeof(String.prototype.endsWith) === 'function');\n\t}\n\n\n\t/*************************************************************************\n\t * String Manipulation and Comparison Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Reverse a string\n\t *\n\t * @param {string} pString - The string to reverse\n\t * @returns {string}\n\t */\n\tstringReverse (pString)\n\t{\n\t\t// TODO: Benchmark if there are faster ways we want to do this with all the newer JS stuff\n\t\t//       ... and if it will work with browserify in a clean way.\n\t\treturn pString.split('').reverse().join('');\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pStartIndex\n\t * @returns {*}\n\t */\n\tstringStartsWith (pString, pSearchString, pStartIndex)\n\t{\n\t\tif (this._UseEngineStringStartsWith)\n\t\t{\n\t\t\treturn pString.startsWith(pSearchString, pStartIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringStartsWith_Polyfill.call(pString, pSearchString, pStartIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pStartIndex - The index to start the search at\n\t * @returns {boolean}\n\t */\n\tstringStartsWith_Polyfill (pSearchString, pStartIndex)\n\t{\n\t\treturn this.slice(pStartIndex || 0, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pEndIndex\n\t * @returns {*}\n\t */\n\tstringEndsWith (pString, pSearchString, pEndIndex)\n\t{\n\t\tif (this._UseEngineStringEndsWith)\n\t\t{\n\t\t\treturn pString.endsWith(pSearchString, pEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringEndsWith_Polyfill.call(pString, pSearchString, pEndIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pEndIndex - The index to end the search at\n\t * @returns {boolean}\n\t */\n\tstringEndsWith_Polyfill (pSearchString, pEndIndex)\n\t{\n\t\t// This works much better than >= because\n\t\t// it compensates for NaN:\n\t\tif (!(pEndIndex < this.length))\n\t\t{\n\t\t\tpEndIndex = this.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpEndIndex |= 0; // round position\n\t\t}\n\t\treturn this.substr(pEndIndex - pSearchString.length, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Generate an insecure string hash.  Not meant to be secure, just a quick way to generate a hash for a string.  This is not a cryptographic hash.  Additional warranty and disclaimer ... this is not for passwords!\n\t *\n\t * @param {string} pString\n\t * @returns {string}\n\t */\n\tinsecureStringHash (pString)\n\t{\n\t\tlet tmpHash = 0;\n\t\tlet tmpStringLength = pString.length;\n\t\tlet tmpCharacterIndex = 0;\n\n\t\twhile (tmpCharacterIndex < tmpStringLength)\n\t\t{\n\t\t\ttmpHash = (tmpHash << 5) - tmpHash + pString.charCodeAt(tmpCharacterIndex++) | 0;\n\t\t}\n\n\t\treturn `${this._Value_Prefix_StringHash}${tmpHash}`;\n\t}\n\n\t/**\n\t * Clean wrapping characters if they exist consistently around the string.  If they do not, the string is returned unchanged.\n\t *\n\t * @param {string} pWrapCharacter - The character expected as the wrapping character\n\t * @param {string} pString - the string to clean\n\t * @returns {string}\n\t */\n\tcleanEnclosureWrapCharacters (pWrapCharacter, pString)\n\t{\n\t\t// # Use case from ManyFest DSL:\n\t\t//\n\t\t// When a boxed property is passed in, it should have quotes of some\n\t\t// kind around it.\n\t\t//\n\t\t// For instance:\n\t\t// \t\tMyValues['Name']\n\t\t// \t\tMyValues[\"Age\"]\n\t\t// \t\tMyValues[`Cost`]\n\t\t//\n\t\t// This function is necessary to remove the wrapping quotes before object\n\t\t// resolution can occur.\n\t\tif (pString.startsWith(pWrapCharacter) && pString.endsWith(pWrapCharacter))\n\t\t{\n\t\t\treturn pString.substring(1, pString.length - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn pString;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {*} pString\n\t * @returns\n\t */\n\tcleanNonAlphaCharacters (pString)\n\t{\n\t\tif ((typeof(pString) == 'string') && (pString != ''))\n\t\t{\n\t\t\treturn pString.replace(this._Regex_formatterCleanNonAlpha, this._Value_Clean_formatterCleanNonAlpha);\n\t\t}\n\t}\n\n\n\t/*************************************************************************\n\t * Number Formatting Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Insert commas every 3 characters from the right.  Used by formatterAddCommasToNumber().\n\t *\n\t * @param {*} pString\n\t * @returns {*}\n\t */\n\tformatterInsertCommas (pString)\n\t{\n\t\t// Reverse, because it's easier to do things from the left, given arbitrary digit counts\n\t\tlet tmpReversed = this.stringReverse(pString);\n\t\t// Add commas every three characters\n\t\tlet tmpReversedWithCommas = tmpReversed.match(this._Regex_formatterInsertCommas).join(',');\n\t\t// Reverse again (back to normal direction)\n\t\treturn this.stringReverse(tmpReversedWithCommas);\n\t}\n\n\tprocessAddCommasToNumberRegex(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t{\n\t\t// If there was no decimal, the last capture grabs the final digit, so\n\t\t// we have to put it back together with the 'before' substring\n\t\treturn pSign + (pDecimal ? this.formatterInsertCommas(pBefore) + pDecimal + pAfter : this.formatterInsertCommas(pBefore + pAfter));\n\t}\n\n\t/**\n\t * Add Commas to a Number for readability.\n\t *\n\t * @param {*} pNumber\n\t * @returns {string}\n\t */\n\tformatterAddCommasToNumber (pNumber)\n\t{\n\t\t// If the regex doesn't match, `replace` returns the string unmodified\n\t\treturn (pNumber.toString()).replace\n\t\t(\n\t\t\tthis._Regex_formatterAddCommasToNumber,\n\t\t\tthis.processAddCommasToNumberRegex.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * This will take a number and format it as a dollar string.  It will also add commas to the number.  If the number is not a number, it will return '--'.\n\t *\n\t * @param {*} pValue\n\t * @returns {string}\n\t */\n\tformatterDollars (pValue)\n\t{\n\t\tlet tmpDollarAmount = parseFloat(pValue).toFixed(2);\n\n\t\tif (isNaN(tmpDollarAmount))\n\t\t{\n\t\t\t// Try again and see if what was passed in was a dollars string.\n\t\t\tif (typeof(pValue) == 'string')\n\t\t\t{\n\t\t\t\t// TODO: Better rounding function?  This is a hack to get rid of the currency symbol and commas.\n\t\t\t\ttmpDollarAmount = parseFloat(pValue.replace(this._Value_MoneySign_Currency,'').replace(this._Regex_formatterDollarsRemoveCommas,'')).toFixed(2);\n\t\t\t}\n\t\t\t// If we didn't get a number, return the \"not a number\" string.\n\t\t\tif (isNaN(tmpDollarAmount))\n\t\t\t{\n\t\t\t\treturn this._Value_NaN_Currency;\n\t\t\t}\n\t\t}\n\n\t\t// TODO: Get locale data and use that for this stuff.\n\t\treturn `$${this.formatterAddCommasToNumber(tmpDollarAmount)}`;\n\t}\n\n\t/**\n\t * Round a number to a certain number of digits.  If the number is not a number, it will return 0.  If no digits are specified, it will default to 2 significant digits.\n\t *\n\t * @param {*} pValue\n\t * @param {number} pDigits\n\t * @returns {string}\n\t */\n\tformatterRoundNumber (pValue, pDigits)\n\t{\n\t\tlet tmpDigits = (typeof(pDigits) == 'undefined') ? 2 : pDigits;\n\n\t\tlet tmpValue = parseFloat(pValue).toFixed(tmpDigits);\n\t\tif (isNaN(tmpValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpValue;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate a reapeating padding string to be appended before or after depending on \n\t * which padding function it uses.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringGeneratePaddingString(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpTargetLength = pTargetLength >> 0;\n\t\tlet tmpPadString = String((typeof pPadString !== 'undefined' ? pPadString : ' '));\n\t\tif (pString.length > pTargetLength)\n\t\t{\n\t\t\t// No padding string if the source string is already longer than the target length, return an empty string\n\t\t\treturn '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpPadLength = pTargetLength - pString.length;\n\t\t\tif (tmpPadLength > pPadString.length)\n\t\t\t{\n\t\t\t\tpPadString += pPadString.repeat(tmpTargetLength / pPadString.length);\n\t\t\t}\n\t\t\treturn pPadString.slice(0,tmpPadLength);\n\t\t}\n\t}\n\n\t/**\n\t * Pad the start of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadStart = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString) + tmpString;\n\t}\n\n\t/**\n\t * Pad the end of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadEnd = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn tmpString + this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString);\n\t}\n\n\t/*************************************************************************\n\t * Time Formatting Functions (milliseconds)\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Format a time length in milliseconds into a human readable string.\n\t * @param {number} pTimeSpan \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeSpan(pTimeSpan)\n\t{\n\t\tif (typeof(pTimeSpan) != 'number')\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpMs = parseInt(pTimeSpan%1000);\n\t\tlet tmpSeconds = parseInt((pTimeSpan/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeSpan/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeSpan/(1000*60*60));\n\n\t\treturn `${this.stringPadStart(tmpHours,2,'0')}:${this.stringPadStart(tmpMinutes,2,'0')}:${this.stringPadStart(tmpSeconds,2,'0')}.${this.stringPadStart(tmpMs,3,'0')}`;\n\t}\n\n\t/**\n\t * Format the time delta between two times in milliseconds into a human readable string.\n\t * \n\t * @param {number} pTimeStart \n\t * @param {number} pTimeEnd \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeDelta(pTimeStart, pTimeEnd)\n\t{\n\t\tif ((typeof(pTimeStart) != 'number') || (typeof(pTimeEnd) != 'number'))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.formatTimeSpan(pTimeEnd-pTimeStart);\n\t}\n\n\t// THE FOLLOWING TERRIBLE FUNCTIONS ARE FOR QT / WKHTMLTOPDF when luxon and moment don't work so well\n\tgetMonthFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tgetMonthAbbreviatedFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tformatSortableStringFromDate (pDate)\n\t{\n\t\treturn pDate.getFullYear()+this.stringPadStart(pDate.getMonth(),2,'0')+this.stringPadStart(pDate.getDate(),2,'0');\n\t}\n\n\t/*************************************************************************\n\t * String Tokenization Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Return the string before the matched substring.\n\t *\n\t * If the substring is not found, the entire string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringBeforeMatch (pString, pMatch)\n\t{\n\t\treturn pString.split(pMatch)[0];\n\t}\n\n\t/**\n\t * Return the string after the matched substring.\n\t *\n\t * If the substring is not found, an empty string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringAfterMatch (pString, pMatch)\n\t{\n\t\tlet tmpStringSplitLocation = pString.indexOf(pMatch);\n\n\t\tif ((tmpStringSplitLocation < 0) || ((tmpStringSplitLocation + pMatch.length) >= pString.length))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn pString.substring(tmpStringSplitLocation + pMatch.length);\n\t}\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures (pString, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\tif (tmpEnclosureDepth == 0)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t}\n\t\t\t\ttmpEnclosureDepth++;\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpEnclosureCount;\n\t}\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosedValueStartIndex = 0;\n\t\tlet tmpEnclosedValueEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This is the end of an enclosure\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t\t{\n\t\t\t// Return an empty string if the enclosure is not found\n\t\t\treturn '';\n\t\t}\n\n\t\tif ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t\t}\n\t}\n\n\n\t/**\n\t * Remove an enclosure from a string based on the index of the enclosure.\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToRemove\n\t * @param {number} pEnclosureStart\n\t * @param {number} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringRemoveEnclosureByIndex (pString, pEnclosureIndexToRemove, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToRemove = (typeof(pEnclosureIndexToRemove) == 'number') ? pEnclosureIndexToRemove : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosureStartIndex = 0;\n\t\tlet tmpEnclosureEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToRemove == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosureStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosureEndIndex <= tmpEnclosureStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToRemove)\n\t\t{\n\t\t\treturn tmpString;\n\t\t}\n\n\t\tlet tmpReturnString = '';\n\n\t\tif (tmpEnclosureStartIndex > 1)\n\t\t{\n\t\t\ttmpReturnString = tmpString.substring(0, tmpEnclosureStartIndex);\n\t\t}\n\n\t\tif ((tmpString.length > (tmpEnclosureEndIndex + 1)) && (tmpEnclosureEndIndex > tmpEnclosureStartIndex))\n\t\t{\n\t\t\ttmpReturnString += tmpString.substring(tmpEnclosureEndIndex+1);\n\t\t}\n\n\t\treturn tmpReturnString;\n\t}\n}\n\nmodule.exports = DataFormat;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceEnvironmentData extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'EnvironmentData';\n\n\t\tthis.Environment = `node.js`;\n\t}\n}\n\nmodule.exports = FableServiceEnvironmentData;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\n/**\n* Precedent Meta-Templating\n* @author      Steven Velozo <steven@velozo.com>\n* @description Process text stream trie and postfix tree, parsing out meta-template expression functions.\n*/\nconst libWordTree = require(`./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js`);\nconst libStringParser = require(`./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js`);\n\n\nclass FableServiceMetaTemplate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'MetaTemplate';\n\n\t\tthis.WordTree = new libWordTree();\n\n\t\t// In order to allow asynchronous template processing we need to use the async.eachLimit function\n\t\tthis.StringParser = new libStringParser(this.fable.defaultServices.Utility.eachLimit);\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\taddPatternAsync(pPatternStart, pPatternEnd, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternAsync(pPatternStart, pPatternEnd, pParserPromise);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData, fCallback)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceMetaTemplate;","/**\n* MetaTemplate String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor(fEachLimit)\n\t{\n\t\tthis.eachLimit = fEachLimit;\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: false,\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchOutputBuffer: ''\n\t\t});\n\t}\n\n\t/**\n\t * Assign a node of the parser tree to be the next potential match.\n\t * If the node has a PatternEnd property, it is a valid match and supercedes the last valid match (or becomes the initial match).\n\t * @method assignNode\n\t * @param {Object} pNode - A node on the parse tree to assign\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tassignNode (pNode, pParserState)\n\t{\n\t\tpParserState.PatternMatch = pNode;\n\n\t\t// If the pattern has a END we can assume it has a parse function...\n\t\tif (pParserState.PatternMatch.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\t// ... this is the legitimate start of a pattern.\n\t\t\tpParserState.Pattern = pParserState.PatternMatch;\n\t\t}\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\t/**\n\t * Check if the pattern has ended.  If it has, properly flush the buffer and start looking for new patterns.\n\t * @method checkPatternEnd\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tcheckPatternEnd (pParserState, pData)\n\t{\n\t\tif ((pParserState.OutputBuffer.length >= pParserState.Pattern.PatternEnd.length+pParserState.Pattern.PatternStart.length) &&\n\t\t\t(pParserState.OutputBuffer.substr(-pParserState.Pattern.PatternEnd.length) === pParserState.Pattern.PatternEnd))\n\t\t{\n\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t{\n\t\t\t\tconsole.log(`Precedent ERROR: Async template detected for pattern ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd} but the template engine is being run in non-async mode.`);\n\t\t\t\tthis.OutputBuffer = '';\n\t\t\t\t// Flush the output buffer.\n\t\t\t\tthis.flushOutputBuffer(pParserState);\n\t\t\t\t// End pattern mode\n\t\t\t\tpParserState.Pattern = false;\n\t\t\t\tpParserState.PatternMatch = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStart.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStart.length+pParserState.Pattern.PatternEnd.length)), pData);\n\t\t\t\t// Flush the output buffer.\n\t\t\t\tthis.flushOutputBuffer(pParserState);\n\t\t\t\t// End pattern mode\n\t\t\t\tpParserState.Pattern = false;\n\t\t\t\tpParserState.PatternMatch = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckPatternEndAsync (pParserState, pData, fCallback)\n\t{\n\t\tif ((pParserState.OutputBuffer.length >= pParserState.Pattern.PatternEnd.length+pParserState.Pattern.PatternStart.length) &&\n\t\t\t(pParserState.OutputBuffer.substr(-pParserState.Pattern.PatternEnd.length) === pParserState.Pattern.PatternEnd))\n\t\t{\n\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t{\n\t\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStart.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStart.length+pParserState.Pattern.PatternEnd.length)), pData,\n\t\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\t\tthis.flushOutputBuffer(pParserState);\n\t\t\t\t\t\t// End pattern mode\n\t\t\t\t\t\tpParserState.Pattern = false;\n\t\t\t\t\t\tpParserState.PatternMatch = false;\n\n\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStart.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStart.length+pParserState.Pattern.PatternEnd.length)), pData);\n\t\t\t\t// Flush the output buffer.\n\t\t\t\tthis.flushOutputBuffer(pParserState);\n\t\t\t\t// End pattern mode\n\t\t\t\tpParserState.Pattern = false;\n\t\t\t\tpParserState.PatternMatch = false;\n\t\t\t}\n\t\t}\n\n\t\treturn fCallback();\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// (1) If we aren't in a pattern match, and we aren't potentially matching, and this may be the start of a new pattern....\n\t\tif (!pParserState.PatternMatch && pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t{\n\t\t\t// ... assign the node as the matched node.\n\t\t\tthis.assignNode(pParserState.ParseTree[pCharacter], pParserState);\n\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t}\n\t\t// (2) If we are in a pattern match (actively seeing if this is part of a new pattern token)\n\t\telse if (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern has a subpattern with this key\n\t\t\tif (pParserState.PatternMatch.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// Continue matching patterns.\n\t\t\t\tthis.assignNode(pParserState.PatternMatch[pCharacter], pParserState);\n\t\t\t}\n\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\tif (pParserState.Pattern)\n\t\t\t{\n\t\t\t\t// ... Check if this is the end of the pattern (if we are matching a valid pattern)...\n\t\t\t\tthis.checkPatternEnd(pParserState, pData);\n\t\t\t}\n\t\t}\n\t\t// (3) If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\telse\n\t\t{\n\t\t\tpParserState.Output += pCharacter;\n\t\t}\n\t}\n\n\tparseCharacterAsync (pCharacter, pParserState, pData, fCallback)\n\t{\n\t\t// (1) If we aren't in a pattern match, and we aren't potentially matching, and this may be the start of a new pattern....\n\t\tif (!pParserState.PatternMatch && pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t{\n\t\t\t// ... assign the node as the matched node.\n\t\t\tthis.assignNode(pParserState.ParseTree[pCharacter], pParserState);\n\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t}\n\t\t// (2) If we are in a pattern match (actively seeing if this is part of a new pattern token)\n\t\telse if (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern has a subpattern with this key\n\t\t\tif (pParserState.PatternMatch.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// Continue matching patterns.\n\t\t\t\tthis.assignNode(pParserState.PatternMatch[pCharacter], pParserState);\n\t\t\t}\n\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\tif (pParserState.Pattern)\n\t\t\t{\n\t\t\t\t// ... Check if this is the end of the pattern (if we are matching a valid pattern)...\n\t\t\t\treturn this.checkPatternEndAsync(pParserState, pData, fCallback);\n\t\t\t}\n\t\t}\n\t\t// (3) If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\telse\n\t\t{\n\t\t\tpParserState.Output += pCharacter;\n\t\t}\n\n\t\treturn fCallback(null);\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t * @param {function} fCallback - The callback function to call when the parse is complete\n\t */\n\tparseString (pString, pParseTree, pData, fCallback)\n\t{\n\t\tif (typeof(fCallback) !== 'function')\n\t\t{\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\t\tfor (var i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: This is not fast.\n\t\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData, fCallback);\n\t\t\t}\n\n\t\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\t\treturn tmpParserState.Output;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is the async mode\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\t\tthis.eachLimit(pString, 1,\n\t\t\t\t(pCharacter, fCharacterCallback) =>\n\t\t\t\t{\n\t\t\t\t\tthis.parseCharacterAsync(pCharacter, tmpParserState, pData, fCharacterCallback);\n\t\t\t\t},\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\t// Flush the remaining data\n\t\t\t\t\tthis.flushOutputBuffer(tmpParserState);\n\t\t\t\t\tfCallback(pError, tmpParserState.Output);\n\t\t\t\t});\n\n\t\t}\n\t}\n}\n\nmodule.exports = StringParser;\n","/**\n* MetaTemplate Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - The index of the character in the pattern\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern, pIndex)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern[pIndex]))\n\t\t\tpTree[pPattern[pIndex]] = {};\n\n\t\treturn pTree[pPattern[pIndex]];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {number} pParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, pParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t\treturn false;\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t\treturn false;\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart, i);\n\n\t\ttmpLeaf.PatternStart = pPatternStart;\n\t\ttmpLeaf.PatternEnd = ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length > 0)) ? pPatternEnd : pPatternStart;\n\t\ttmpLeaf.Parse = (typeof(pParser) === 'function') ? pParser :\n\t\t\t\t\t\t(typeof(pParser) === 'string') ? () => { return pParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\t\ttmpLeaf.isPromise = false;\n\n\t\treturn true;\n\t}\n\n\t/** Add a Pattern to the Parse Tree (asynchronous)\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {number} pParserAsync - The function (with an asynchronous callback) to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternAsync (pPatternStart, pPatternEnd, pParserAsync)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t\treturn false;\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t\treturn false;\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart, i);\n\n\t\ttmpLeaf.PatternStart = pPatternStart;\n\t\ttmpLeaf.PatternEnd = ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length > 0)) ? pPatternEnd : pPatternStart;\n\t\ttmpLeaf.Parse = (typeof(pParserAsync) === 'function') ? pParserAsync :\n\t\t\t\t\t\t(typeof(pParserAsync) === 'string') ? (pHash, pData, fCallback) => { fCallback(pParserPromise); } :\n\t\t\t\t\t\t(pHash, pData, fCallback) => { return fCallback(pHash); };\n\t\ttmpLeaf.isAsync = true;\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n","module.exports = (\n    {\n        \"Metadata\": {\n            \"UUID\": false,\n            \"Hash\": false,\n\n            \"Title\": \"\",\n            \"Summary\": \"\",\n\n            \"Version\": 0\n        },\n        \"Status\": {\n            \"Completed\": false,\n\n            \"CompletionProgress\": 0,\n            \"CompletionTimeElapsed\": 0,\n\n            \"Steps\": 1,\n            \"StepsCompleted\": 0,\n\n            \"StartTime\": 0,\n            \"EndTime\": 0\n        },\n        \"Errors\": [],\n        \"Log\": []\n    }\n);","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nconst _OperationStatePrototypeString = JSON.stringify(require('./Fable-Service-Operation-DefaultSettings.js'));\n\nclass FableOperation extends libFableServiceBase\n{\n\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PhasedOperation';\n\n\t\tthis.state = JSON.parse(_OperationStatePrototypeString);\n\n\t\t// Match the service instantiation to the operation.\n\t\tthis.state.Metadata.Hash = this.Hash;\n\t\tthis.state.Metadata.UUID = this.UUID;\n\n\t\tthis.name = (typeof(this.options.Name) == 'string') ? this.options.Name : `Unnamed Operation ${this.state.Metadata.UUID}`;\n\n\t\tthis.log = this;\n\t}\n\n\twriteOperationLog(pLogLevel, pLogText, pLogObject)\n\t{\n\t\tthis.state.Log.push(`${new Date().toUTCString()} [${pLogLevel}]: ${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Log.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\twriteOperationErrors(pLogText, pLogObject)\n\t{\n\t\tthis.state.Errors.push(`${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Errors.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('TRACE', pLogText, pLogObject);\n\t\tthis.fable.log.trace(pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('DEBUG', pLogText, pLogObject);\n\t\tthis.fable.log.debug(pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('INFO', pLogText, pLogObject);\n\t\tthis.fable.log.info(pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('WARN', pLogText, pLogObject);\n\t\tthis.fable.log.warn(pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('ERROR', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.error(pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('FATAL', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.fatal(pLogText, pLogObject);\n\t}\n}\n\nmodule.exports = FableOperation;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nconst libSimpleGet = require('simple-get');\n\nclass FableServiceRestClient extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.TraceLog = false;\n\t\tif (this.options.TraceLog || this.fable.TraceLog)\n\t\t{\n\t\t\tthis.TraceLog = true;\n\t\t}\n\n\t\tthis.dataFormat = this.fable.defaultServices.DataFormat;\n\n\t\tthis.serviceType = 'RestClient';\n\n\t\t// This is a function that can be overridden, to allow the management\n\t\t// of the request options before they are passed to the request library.\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tpreRequest(pOptions)\n\t{\n\t\t// Validate the options object\n\t\treturn this.prepareRequestOptions(pOptions);\n\t}\n\n\texecuteChunkedRequest(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpData.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpData);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteJSONRequest(pOptions, fCallback)\n\t{\n\t\tpOptions.json = true;\n\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} JSON request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// In a JSON request, the chunk is the serialized method.\n\t\t\t\t\t\treturn fCallback(pError, pResponse, JSON.parse(pChunk));\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> JSON ${tmpOptions.method} completed - received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetJSON(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeJSONRequest(tmpRequestOptions, fCallback);\n\t}\n\n\tputJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PUT JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PUT';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpostJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`POST JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'POST';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpatchJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PATCH JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PATCH';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\theadJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`HEAD JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'HEAD';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tdelJSON(pOptions, fCallback)\n\t{\n\t\tpOptions.method = 'DELETE';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tgetRawText(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeChunkedRequest(tmpRequestOptions, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceRestClient;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceTemplate extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Template';\n\n\t\t// These are the exact regex's used in lodash/underscore\n\t\t// TODO: Switch this to precedent\n\t\tthis.Matchers = (\n\t\t\t{\n\t\t\t\tEvaluate: /<%([\\s\\S]+?)%>/g,\n\t\t\t\tInterpolate: /<%=([\\s\\S]+?)%>/g,\n\t\t\t\tEscaper: /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g,\n\t\t\t\tUnescaper: /\\\\(\\\\|'|r|n|t|u2028|u2029)/g,\n\t\t\t\t// This is how underscore does it, so we are keeping it for now.\n\t\t\t\tGuaranteedNonMatch: /.^/\n\t\t\t});\n\n\t\t// This is a helper for the escaper and unescaper functions.\n\t\t// Right now we are going to keep what underscore is doing, but, not forever.\n\t\tthis.templateEscapes = {\n\t\t\t'\\\\': '\\\\',\n\t\t\t\"'\": \"'\",\n\t\t\t'r': '\\r',\n\t\t\t'\\r': 'r',\n\t\t\t'n': '\\n',\n\t\t\t'\\n': 'n',\n\t\t\t't': '\\t',\n\t\t\t'\\t': 't',\n\t\t\t'u2028': '\\u2028',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'u2029': '\\u2029',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\t// This is defined as such to underscore that it is a dynamic programming\n\t\t// function on this class.\n\t\tthis.renderFunction = false;\n        this.templateString = false;\n\t}\n\n\trenderTemplate(pData)\n\t{\n\t\treturn this.renderFunction(pData);\n\t}\n\n\ttemplateFunction(pData)\n\t{\n\t\tlet fRenderTemplateBound = this.renderTemplate.bind(this);\n\t\treturn fRenderTemplateBound;\n\t}\n\n\tbuildTemplateFunction(pTemplateText, pData)\n\t{\n\t\t// For now this is being kept in a weird form ... this is to mimic the old\n\t\t// underscore code until this is rewritten using precedent.\n\t\tthis.TemplateSource = \"__p+='\" + pTemplateText\n\t\t\t.replace(this.Matchers.Escaper,\n\t\t\t\t(pMatch)=>\n\t\t\t\t{\n\t\t\t\t\treturn `\\\\${this.templateEscapes[pMatch]}`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Interpolate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `'+\\n(${decodeURIComponent(pCode)})+\\n'`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Evaluate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `';\\n${decodeURIComponent(pCode)}\\n;__p+='`;\n\t\t\t\t}) + `';\\n`;\n\n\n\t\tthis.TemplateSource = `with(pTemplateDataObject||{}){\\n${this.TemplateSource}}\\n`;\n\t\tthis.TemplateSource = `var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n${this.TemplateSource}return __p;\\n`;\n\n\t\tthis.renderFunction = new Function('pTemplateDataObject', this.TemplateSource);\n\n\t\tif (typeof(pData) != 'undefined')\n\t\t{\n\t\t\treturn this.renderFunction(pData);\n\t\t}\n\n\t\t// Provide the compiled function source as a convenience for build time\n\t\t// precompilation.\n\t\tthis.TemplateSourceCompiled = 'function(obj){\\n' + this.TemplateSource + '}';\n\n\t\treturn this.templateFunction();\n\t}\n}\n\nmodule.exports = FableServiceTemplate;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\n// TODO: These are still pretty big -- consider the smaller polyfills\nconst libAsyncWaterfall = require('async.waterfall');\nconst libAsyncEachLimit = require('async.eachlimit');\n\nclass FableServiceUtility extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\tthis.templates = {};\n\n\t\t// These two functions are used extensively throughout\n\t\tthis.waterfall = libAsyncWaterfall;\n\t\tthis.eachLimit = libAsyncEachLimit;\n\t}\n\n\t// Underscore and lodash have a behavior, _.extend, which merges objects.\n\t// Now that es6 gives us this, use the native thingy.\n\textend(pDestinationObject, ...pSourceObjects)\n\t{\n\t\treturn Object.assign(pDestinationObject, ...pSourceObjects);\n\t}\n\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\ttemplate(pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Template');\n\n\t\treturn tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t}\n\n\t// Build a template function from a template hash, and, register it with the service provider\n\tbuildHashedTemplate(pTemplateHash, pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.serviceManager.instantiateServiceProvider('Template', {}, pTemplateHash);\n\n\t\tthis.templates[pTemplateHash] = tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\n\t\treturn this.templates[pTemplateHash];\n\t}\n\n\t// This is a safe, modern version of chunk from underscore\n\t// Algorithm pulled from a mix of these two polyfills:\n\t// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\n\t// https://youmightnotneed.com/lodash\n\t// This implementation was most tolerant in browsers.  Uglify can fix the rest.\n\tchunk (pInput, pChunkSize, pChunkCache)\n\t{\n\t\tlet tmpInputArray = [...pInput];\n\t\t// Note lodash defaults to 1, underscore defaults to 0\n\t\tlet tmpChunkSize = (typeof(pChunkSize) == 'number') ? pChunkSize : 0;\n\t\tlet tmpChunkCache = (typeof(pChunkCache) != 'undefined') ? pChunkCache : [];\n\n\t\tif (tmpChunkSize <= 0)\n\t\t{\n\t\t\treturn tmpChunkCache;\n\t\t}\n\n\t\twhile (tmpInputArray.length)\n\t\t{\n\t\t\ttmpChunkCache.push(tmpInputArray.splice(0, tmpChunkSize));\n\t\t}\n\n\t\treturn tmpChunkCache;\n\t}\n\n\t// Convert an ISO string to a javascript date object\n\t// Adapted from https://stackoverflow.com/a/54751179\n\t//\n\t// Takes strings like: 2022-11-04T11:34:45.000Z\n\t//                and: 1986-06-11T09:34:46.012Z+0200\n\t// ... and converts them into javascript timestamps, following the directions of the timezone stuff.\n\t//\n\t// This is not meant to replace the more complex libraries such as moment or luxon.\n\t// This *is* meant to be a simple, small, and fast way to convert ISO strings to dates in engines\n\t// with ultra limited JS capabilities where those don't work.\n\tisoStringToDate (pISOString)\n\t{\n\n\t\t// Split the string into an array based on the digit groups.\n\t\tvar tmpDateParts = pISOString.split( /\\D+/ );\n\n\t\t// Set up a date object with the current time.\n\t\tvar tmpReturnDate = new Date();\n\n\t\t// Manually parse the parts of the string and set each part for the\n\t\t// date. Note: Using the UTC versions of these functions is necessary\n\t\t// because we're manually adjusting for time zones stored in the\n\t\t// string.\n\t\ttmpReturnDate.setUTCFullYear( parseInt( tmpDateParts[ 0 ] ) );\n\n\t\t// The month numbers are one \"off\" from what normal humans would expect\n\t\t// because January == 0.\n\t\ttmpReturnDate.setUTCMonth( parseInt( tmpDateParts[ 1 ] - 1 ) );\n\t\ttmpReturnDate.setUTCDate( parseInt( tmpDateParts[ 2 ] ) );\n\n\t\t// Set the time parts of the date object.\n\t\ttmpReturnDate.setUTCHours( parseInt( tmpDateParts[ 3 ] ) );\n\t\ttmpReturnDate.setUTCMinutes( parseInt( tmpDateParts[ 4 ] ) );\n\t\ttmpReturnDate.setUTCSeconds( parseInt( tmpDateParts[ 5 ] ) );\n\t\ttmpReturnDate.setUTCMilliseconds( parseInt( tmpDateParts[ 6 ] ) );\n\n\t\t// Track the number of hours we need to adjust the date by based on the timezone.\n\t\tvar tmpTimeZoneOffsetInHours = 0;\n\n\t\t// If there's a value for either the hours or minutes offset.\n\t\tif (tmpDateParts[ 7 ] || tmpDateParts[ 8 ])\n\t\t{\n\n\t\t\t// Track the number of minutes we need to adjust the date by based on the timezone.\n\t\t\tvar tmpTimeZoneOffsetInMinutes = 0;\n\n\t\t\t// If there's a value for the minutes offset.\n\t\t\tif (tmpDateParts[8])\n\t\t\t{\n\t\t\t\t// Convert the minutes value into an hours value.\n\t\t\t\ttmpTimeZoneOffsetInMinutes = parseInt(tmpDateParts[8]) / 60;\n\t\t\t}\n\n\t\t\t// Add the hours and minutes values to get the total offset in hours.\n\t\t\ttmpTimeZoneOffsetInHours = parseInt(tmpDateParts[7]) + tmpTimeZoneOffsetInMinutes;\n\n\t\t\t// If the sign for the timezone is a plus to indicate the timezone is ahead of UTC time.\n\t\t\tif (pISOString.substr( -6, 1 ) == \"+\")\n\t\t\t{\n\t\t\t\t// Make the offset negative since the hours will need to be subtracted from the date.\n\t\t\t\ttmpTimeZoneOffsetInHours *= -1;\n\t\t\t}\n\t\t}\n\n\t\t// Get the current hours for the date and add the offset to get the correct time adjusted for timezone.\n\t\ttmpReturnDate.setHours( tmpReturnDate.getHours() + tmpTimeZoneOffsetInHours );\n\n\t\t// Return the Date object calculated from the string.\n\t\treturn tmpReturnDate;\n\t}\n}\n\nmodule.exports = FableServiceUtility;","var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// When a boxed property is passed in, it should have quotes of some\n// kind around it.\n//\n// For instance:\n// \t\tMyValues['Name']\n// \t\tMyValues[\"Age\"]\n// \t\tMyValues[`Cost`]\n//\n// This function removes the wrapping quotes.\n//\n// Please note it *DOES NOT PARSE* template literals, so backticks just\n// end up doing the same thing as other quote types.\n//\n// TODO: Should template literals be processed?  If so what state do they have access to?  That should happen here if so.\n// TODO: Make a simple class include library with these\nconst cleanWrapCharacters = (pCharacter, pString) =>\n{\n\tif (pString.startsWith(pCharacter) && pString.endsWith(pCharacter))\n\t{\n\t\treturn pString.substring(1, pString.length - 1);\n\t}\n\telse\n\t{\n\t\treturn pString;\n\t}\n};\n\nmodule.exports = cleanWrapCharacters;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Hash Translation\n*\n* This is a very simple translation table for hashes, which allows the same schema to resolve\n* differently based on a loaded translation table.\n*\n* This is to prevent the requirement for mutating schemas over and over again when we want to\n* reuse the structure but look up data elements by different addresses.\n*\n* One side-effect of this is that a translation table can \"override\" the built-in hashes, since\n* this is always used to resolve hashes before any of the functionCallByHash(pHash, ...) perform\n* their lookups by hash.\n*\n* @class ManyfestHashTranslation\n*/\nclass ManyfestHashTranslation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n        this.translationTable = {};\n\t}\n\n    translationCount()\n    {\n        return Object.keys(this.translationTable).length;\n    }\n\n    addTranslation(pTranslation)\n    {\n        // This adds a translation in the form of:\n        // { \"SourceHash\": \"DestinationHash\", \"SecondSourceHash\":\"SecondDestinationHash\" }\n        if (typeof(pTranslation) != 'object')\n        {\n            this.logError(`Hash translation addTranslation expected a translation be type object but was passed in ${typeof(pTranslation)}`);\n            return false;\n        }\n\n        let tmpTranslationSources = Object.keys(pTranslation)\n\n        tmpTranslationSources.forEach(\n            (pTranslationSource) =>\n            {\n                if (typeof(pTranslation[pTranslationSource]) != 'string')\n                {\n                    this.logError(`Hash translation addTranslation expected a translation destination hash for [${pTranslationSource}] to be a string but the referrant was a ${typeof(pTranslation[pTranslationSource])}`);\n                }\n                else\n                {\n                    this.translationTable[pTranslationSource] = pTranslation[pTranslationSource];\n                }\n            });\n    }\n\n    removeTranslationHash(pTranslationHash)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslationHash))\n        {\n            delete this.translationTable[pTranslationHash];\n        }\n    }\n\n    // This removes translations.\n    // If passed a string, just removes the single one.\n    // If passed an object, it does all the source keys.\n    removeTranslation(pTranslation)\n    {\n        if (typeof(pTranslation) == 'string')\n        {\n            this.removeTranslationHash(pTranslation);\n            return true;\n        }\n        else if (typeof(pTranslation) == 'object')\n        {\n            let tmpTranslationSources = Object.keys(pTranslation)\n\n            tmpTranslationSources.forEach(\n                (pTranslationSource) =>\n                {\n                    this.removeTranslation(pTranslationSource);\n                });\n            return true;\n        }\n        else\n        {\n            this.logError(`Hash translation removeTranslation expected either a string or an object but the passed-in translation was type ${typeof(pTranslation)}`);\n            return false;\n        }\n    }\n\n    clearTranslations()\n    {\n        this.translationTable = {};\n    }\n\n    translate(pTranslation)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslation))\n        {\n            return this.translationTable[pTranslation];\n        }\n        else\n        {\n            return pTranslation;\n        }\n    }\n}\n\nmodule.exports = ManyfestHashTranslation;","/**\n* @author <steven@velozo.com>\n*/\n\n/**\n* Manyfest simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n\n    console.log(`[Manyfest] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject));\n};\n\nmodule.exports = logToConsole;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Resolver\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressResolverCheckAddressExists\n*/\nclass ManyfestObjectAddressResolverCheckAddressExists\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// Check if an address exists.\n\t//\n\t// This is necessary because the getValueAtAddress function is ambiguous on\n\t// whether the element/property is actually there or not (it returns\n\t// undefined whether the property exists or not).  This function checks for\n\t// existance and returns true or false dependent.\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\t// TODO: Should these throw an error?\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Check if the property exists.\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName].hasOwnProperty(tmpBoxedPropertyReference);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Use the new in operator to see if the element is in the array\n\t\t\t\t\treturn (tmpBoxedPropertyNumber in pObject[tmpBoxedPropertyName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Check if the property exists\n\t\t\t\treturn pObject.hasOwnProperty(pAddress);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// Because this is an impossible address, the property doesn't exist\n\t\t\t\t\t// TODO: Should we throw an error in this condition?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverCheckAddressExists;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - DeleteValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverDeleteValue\n*/\nclass ManyfestObjectAddressResolverDeleteValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// TODO: Dry me\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Count from the end to the beginning so splice doesn't %&%#$ up the array\n\t\t\t\tfor (let i = tmpInputArray.length - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Delete elements end to beginning\n\t\t\t\t\t\ttmpInputArray.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tdelete pObject[tmpObjectPropertyName];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tdelete pObject[pAddress];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverDeleteValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - GetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverGetValue\n*/\nclass ManyfestObjectAddressResolverGetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress, pParentAddress, pRootObject)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// Set the root object to the passed-in object if it isn't set yet.  This is expected to be the root object.\n\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// Adding simple back-navigation in objects\n\t\tif (tmpSeparatorIndex == 0)\n\t\t{\n\t\t\t// Given an address of \"Bundle.Contract.IDContract...Project.IDProject\" the ... would be interpreted as two back-navigations from IDContract.\n\t\t\t// When the address is passed in, though, the first . is already eliminated.  So we can count the dots.\n\t\t\tlet tmpParentAddressParts = tmpParentAddress.split('.');\n\n\t\t\tlet tmpBackNavigationCount = 0;\n\n\t\t\t// Count the number of dots\n\t\t\tfor (let i = 0; i < pAddress.length; i++)\n\t\t\t{\n\t\t\t\tif (pAddress.charAt(i) != '.')\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttmpBackNavigationCount++;\n\t\t\t}\n\n\t\t\tlet tmpParentAddressLength = tmpParentAddressParts.length - tmpBackNavigationCount;\n\n\t\t\tif (tmpParentAddressLength < 0)\n\t\t\t{\n\t\t\t\t// We are trying to back navigate more than we can.\n\t\t\t\t// TODO: Should this be undefined or should we bank out at the bottom and try to go forward?\n\t\t\t\t// This seems safest for now.\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are trying to back navigate to a parent object.\n\t\t\t\t// Recurse with the back-propagated parent address, and, the new address without the back-navigation dots.\n\t\t\t\tlet tmpRecurseAddress = pAddress.slice(tmpBackNavigationCount);\n\t\t\t\tif (tmpParentAddressLength > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpRecurseAddress = `${tmpParentAddressParts.slice(0, tmpParentAddressLength).join('.')}.${tmpRecurseAddress}`;\n\t\t\t\t}\n\t\t\t\tthis.logInfo(`Back-navigation detected.  Recursing back to address [${tmpRecurseAddress}]`);\n\t\t\t\treturn this.getValueAtAddress(tmpRootObject, tmpRecurseAddress);\n\t\t\t}\n\t\t}\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\tlet tmpOutputArray = [];\n\t\t\t\tfor (let i = 0; i < tmpInputArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOutputArray.push(tmpInputArray[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpOutputArray;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn pObject[tmpObjectPropertyName];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\treturn pObject[pAddress];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverGetValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - SetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressSetValue\n*/\nclass ManyfestObjectAddressSetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyReference] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the time in recursion to set the value in the object\n\t\t\t\tpObject[pAddress] = pValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressSetValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Generation\n*\n* Automagically generate addresses and properties based on a passed-in object,\n* to be used for easy creation of schemas.  Meant to simplify the lives of\n* developers wanting to create schemas without typing a bunch of stuff.\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressGeneration\n*/\nclass ManyfestObjectAddressGeneration\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// generateAddressses\n\t//\n\t// This flattens an object into a set of key:value pairs for *EVERY SINGLE\n\t// POSSIBLE ADDRESS* in the object.  It can get ... really insane really\n\t// quickly.  This is not meant to be used directly to generate schemas, but\n\t// instead as a starting point for scripts or UIs.\n\t//\n\t// This will return a mega set of key:value pairs with all possible schema\n\t// permutations and default values (when not an object) and everything else.\n\tgenerateAddressses (pObject, pBaseAddress, pSchema)\n\t{\n\t\tlet tmpBaseAddress = (typeof(pBaseAddress) == 'string') ? pBaseAddress : '';\n\t\tlet tmpSchema = (typeof(pSchema) == 'object') ? pSchema : {};\n\n\t\tlet tmpObjectType = typeof(pObject);\n\n\t\tlet tmpSchemaObjectEntry = (\n\t\t\t{\n\t\t\t\tAddress: tmpBaseAddress,\n\t\t\t\tHash: tmpBaseAddress,\n\t\t\t\tName: tmpBaseAddress,\n\t\t\t\t// This is so scripts and UI controls can force a developer to opt-in.\n\t\t\t\tInSchema: false\n\t\t\t}\n\t\t)\n\n\t\tif ((tmpObjectType == 'object') && (pObject == null))\n\t\t{\n\t\t\ttmpObjectType = 'null';\n\t\t}\n\n\t\tswitch(tmpObjectType)\n\t\t{\n\t\t\tcase 'string':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'String';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\tcase 'bigint':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Number';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\tcase 'null':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Any';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif (Array.isArray(pObject))\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Array';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < pObject.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[i], `${tmpBaseAddress}[${i}]`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Object';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t\ttmpBaseAddress += '.';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectProperties = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectProperties.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[tmpObjectProperties[i]], `${tmpBaseAddress}${tmpObjectProperties[i]}`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'symbol':\n\t\t\tcase 'function':\n\t\t\t\t// Symbols and functions neither recurse nor get added to the schema\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tmpSchema;\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressGeneration;","// Given a string, parse out any conditional expressions and set whether or not to keep the record.\n//\n// For instance:\n// \t\t'files[]<<~?format,==,Thumbnail?~>>'\n//      'files[]<<~?format,==,Metadata?~>>'\n//      'files[]<<~?size,>,4000?~>>'\n//\n// The wrapping parts are the <<~? and ?~>> megabrackets.\n//\n// The function does not need to alter the string -- just check the conditionals within.\n\n// TODO: Consider making this an es6 class\n\n// Let's use indexOf since it is apparently the fastest.\nconst _ConditionalStanzaStart = '<<~?';\nconst _ConditionalStanzaStartLength = _ConditionalStanzaStart.length;\nconst _ConditionalStanzaEnd = '?~>>';\nconst _ConditionalStanzaEndLength = _ConditionalStanzaEnd.length;\n\n// Test the condition of a value in a record\nconst testCondition = (pManyfest, pRecord, pSearchAddress, pSearchComparator, pValue) =>\n{\n\tswitch(pSearchComparator)\n\t{\n\t\tcase '!=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) != pValue);\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) < pValue);\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) > pValue);\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) <= pValue);\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) >= pValue);\n\t\t\tbreak;\n\t\tcase '===':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === pValue);\n\t\t\tbreak;\n\t\tcase '==':\n\t\tdefault:\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) == pValue);\n\t\t\tbreak;\n\t}\n};\n\nconst parseConditionals = (pManyfest, pAddress, pRecord) =>\n{\n\tlet tmpKeepRecord = true;\n\n\t/*\n\t\tAlgorithm is simple:\n\n\t\t1.  Enuerate start points\n\n\t\t2.  Find stop points within each start point\n\t\t3. Check the conditional\n\t*/\n\n\tlet tmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart);\n\n\twhile (tmpStartIndex != -1)\n\t{\n\t\tlet tmpStopIndex = pAddress.indexOf(_ConditionalStanzaEnd, tmpStartIndex+_ConditionalStanzaStartLength);\n\n\t\tif (tmpStopIndex != -1)\n\t\t{\n\t\t\tlet tmpMagicComparisonPatternSet = pAddress.substring(tmpStartIndex+_ConditionalStanzaStartLength, tmpStopIndex).split(',');\n\n\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\t\t\tlet tmpSearchComparator = tmpMagicComparisonPatternSet[1];\n\t\t\tlet tmpSearchValue = tmpMagicComparisonPatternSet[2];\n\n\t\t\t// Process the piece\n\t\t\ttmpKeepRecord = tmpKeepRecord && testCondition(pManyfest, pRecord, tmpSearchAddress, tmpSearchComparator, tmpSearchValue);\n\t\t\ttmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart, tmpStopIndex+_ConditionalStanzaEndLength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpStartIndex = -1;\n\t\t}\n\t\t\n\t}\n\n\treturn tmpKeepRecord;\n}\n\nmodule.exports = parseConditionals;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Schema Manipulation Functions\n*\n* @class ManyfestSchemaManipulation\n*/\nclass ManyfestSchemaManipulation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n    // This translates the default address mappings to something different.\n    //\n    // For instance you can pass in manyfest schema descriptor object:\n    // \t{\n\t//\t  \"Address.Of.a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t//\t  \"Address.Of.b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t//  }\n    //\n    //\n    // And then an address mapping (basically a Hash->Address map)\n    //  {\n    //    \"a\": \"New.Address.Of.a\",\n    //    \"b\": \"New.Address.Of.b\"\n    //  }\n    //\n    // NOTE: This mutates the schema object permanently, altering the base hash.\n    //       If there is a collision with an existing address, it can lead to overwrites.\n    // TODO: Discuss what should happen on collisions.\n\tresolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\tif (typeof(pManyfestSchemaDescriptors) != 'object')\n\t\t{\n\t\t\tthis.logError(`Attempted to resolve address mapping but the descriptor was not an object.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof(pAddressMapping) != 'object')\n\t\t{\n\t\t\t// No mappings were passed in\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the arrays of both the schema definition and the hash mapping\n\t\tlet tmpManyfestAddresses = Object.keys(pManyfestSchemaDescriptors);\n\t\tlet tmpHashMapping = {};\n\t\ttmpManyfestAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tif (pManyfestSchemaDescriptors[pAddress].hasOwnProperty('Hash'))\n\t\t\t\t{\n\t\t\t\t\ttmpHashMapping[pManyfestSchemaDescriptors[pAddress].Hash] = pAddress;\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet tmpAddressMappingSet = Object.keys(pAddressMapping);\n\n\t\ttmpAddressMappingSet.forEach(\n\t\t\t(pInputAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpNewDescriptorAddress = pAddressMapping[pInputAddress];\n\t\t\t\tlet tmpOldDescriptorAddress = false;\n\t\t\t\tlet tmpDescriptor = false;\n\n\t\t\t\t// See if there is a matching descriptor either by Address directly or Hash\n\t\t\t\tif (pManyfestSchemaDescriptors.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = pInputAddress;\n\t\t\t\t}\n\t\t\t\telse if (tmpHashMapping.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = tmpHashMapping[pInputAddress];\n\t\t\t\t}\n\n\t\t\t\t// If there was a matching descriptor in the manifest, store it in the temporary descriptor\n\t\t\t\tif (tmpOldDescriptorAddress)\n\t\t\t\t{\n\t\t\t\t\ttmpDescriptor = pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t\tdelete pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Create a new descriptor!  Map it to the input address.\n\t\t\t\t\ttmpDescriptor = { Hash:pInputAddress };\n\t\t\t\t}\n\n\t\t\t\t// Now re-add the descriptor to the manyfest schema\n\t\t\t\tpManyfestSchemaDescriptors[tmpNewDescriptorAddress] = tmpDescriptor;\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tsafeResolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\t// This returns the descriptors as a new object, safely remapping without mutating the original schema Descriptors\n\t\tlet tmpManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptors));\n\t\tthis.resolveAddressMappings(tmpManyfestSchemaDescriptors, pAddressMapping);\n\t\treturn tmpManyfestSchemaDescriptors;\n\t}\n\n\tmergeAddressMappings(pManyfestSchemaDescriptorsDestination, pManyfestSchemaDescriptorsSource)\n\t{\n\t\tif ((typeof(pManyfestSchemaDescriptorsSource) != 'object') || (typeof(pManyfestSchemaDescriptorsDestination) != 'object'))\n\t\t{\n\t\t\tthis.logError(`Attempted to merge two schema descriptors but both were not objects.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpSource = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsSource));\n\t\tlet tmpNewManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsDestination));\n\n\t\t// The first passed-in set of descriptors takes precedence.\n\t\tlet tmpDescriptorAddresses = Object.keys(tmpSource);\n\n\t\ttmpDescriptorAddresses.forEach(\n\t\t\t(pDescriptorAddress) =>\n\t\t\t{\n\t\t\t\tif (!tmpNewManyfestSchemaDescriptors.hasOwnProperty(pDescriptorAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpNewManyfestSchemaDescriptors[pDescriptorAddress] = tmpSource[pDescriptorAddress];\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpNewManyfestSchemaDescriptors;\n\t}\n}\n\nmodule.exports = ManyfestSchemaManipulation;","/**\n* @author <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\nlet libHashTranslation = require('./Manyfest-HashTranslation.js');\nlet libObjectAddressCheckAddressExists = require('./Manyfest-ObjectAddress-CheckAddressExists.js');\nlet libObjectAddressGetValue = require('./Manyfest-ObjectAddress-GetValue.js');\nlet libObjectAddressSetValue = require('./Manyfest-ObjectAddress-SetValue.js');\nlet libObjectAddressDeleteValue = require('./Manyfest-ObjectAddress-DeleteValue.js');\nlet libObjectAddressGeneration = require('./Manyfest-ObjectAddressGeneration.js');\nlet libSchemaManipulation = require('./Manyfest-SchemaManipulation.js');\n\nconst _DefaultConfiguration = { Scope:'DEFAULT', Descriptors: {} }\n\n/**\n* Manyfest object address-based descriptions and manipulations.\n*\n* @class Manyfest\n*/\nclass Manyfest extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'Manifest';\n\n\t\t// Wire in logging\n\t\tthis.logInfo = libSimpleLog;\n\t\tthis.logError = libSimpleLog;\n\n\t\t// Create an object address resolver and map in the functions\n\t\tthis.objectAddressCheckAddressExists = new libObjectAddressCheckAddressExists(this.logInfo, this.logError);\n\t\tthis.objectAddressGetValue = new libObjectAddressGetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressSetValue = new libObjectAddressSetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressDeleteValue = new libObjectAddressDeleteValue(this.logInfo, this.logError);\n\n\t\tif (!this.options.hasOwnProperty('defaultValues'))\n\t\t{\n\t\t\tthis.options.defaultValues = (\n\t\t\t\t{\n\t\t\t\t\t\"String\": \"\",\n\t\t\t\t\t\"Number\": 0,\n\t\t\t\t\t\"Float\": 0.0,\n\t\t\t\t\t\"Integer\": 0,\n\t\t\t\t\t\"Boolean\": false,\n\t\t\t\t\t\"Binary\": 0,\n\t\t\t\t\t\"DateTime\": 0,\n\t\t\t\t\t\"Array\": [],\n\t\t\t\t\t\"Object\": {},\n\t\t\t\t\t\"Null\": null\n\t\t\t\t});\n\t\t}\n\t\tif (!this.options.hasOwnProperty('strict'))\n\t\t{\n\t\t\tthis.options.strict = false;\n\t\t}\n\n\t\tthis.scope = undefined;\n\t\tthis.elementAddresses = undefined;\n\t\tthis.elementHashes = undefined;\n\t\tthis.elementDescriptors = undefined;\n\t\t// This can cause a circular dependency chain, so it only gets initialized if the schema specifically calls for it.\n\t\tthis.dataSolvers = undefined;\n\t\t// So solvers can use their own state\n\t\tthis.dataSolverState = undefined;\n\n\t\tthis.reset();\n\n\t\tif (typeof(this.options) === 'object')\n\t\t{\n\t\t\tthis.loadManifest(this.options);\n\t\t}\n\n\t\tthis.schemaManipulations = new libSchemaManipulation(this.logInfo, this.logError);\n\t\tthis.objectAddressGeneration = new libObjectAddressGeneration(this.logInfo, this.logError);\n\n\t\tthis.hashTranslations = new libHashTranslation(this.logInfo, this.logError);\n\t}\n\n\t/*************************************************************************\n\t * Schema Manifest Loading, Reading, Manipulation and Serialization Functions\n\t */\n\n\t// Reset critical manifest properties\n\treset()\n\t{\n\t\tthis.scope = 'DEFAULT';\n\t\tthis.elementAddresses = [];\n\t\tthis.elementHashes = {};\n\t\tthis.elementDescriptors = {};\n\t\tthis.dataSolvers = undefined;\n\t\tthis.dataSolverState = {};\n\t}\n\n\tclone()\n\t{\n\t\t// Make a copy of the options in-place\n\t\tlet tmpNewOptions = JSON.parse(JSON.stringify(this.options));\n\n\t\tlet tmpNewManyfest = new Manyfest(this.getManifest(), this.logInfo, this.logError, tmpNewOptions);\n\n\t\t// Import the hash translations\n\t\ttmpNewManyfest.hashTranslations.addTranslation(this.hashTranslations.translationTable);\n\n\t\treturn tmpNewManyfest;\n\t}\n\n\t// Deserialize a Manifest from a string\n\tdeserialize(pManifestString)\n\t{\n\t\t// TODO: Add guards for bad manifest string\n\t\treturn this.loadManifest(JSON.parse(pManifestString));\n\t}\n\n\t// Load a manifest from an object\n\tloadManifest(pManifest)\n\t{\n\t\tif (typeof(pManifest) !== 'object')\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading manifest; expecting an object but parameter was type ${typeof(pManifest)}.`);\n\t\t}\n\n\t\tlet tmpManifest = (typeof(pManifest) == 'object') ? pManifest : {};\n\n\t\tlet tmpDescriptorKeys = Object.keys(_DefaultConfiguration);\n\n\t\tfor (let i = 0; i < tmpDescriptorKeys.length; i++)\n\t\t{\n\t\t\tif (!tmpManifest.hasOwnProperty(tmpDescriptorKeys[i]))\n\t\t\t{\n\t\t\t\ttmpManifest[tmpDescriptorKeys[i]] = JSON.parse(JSON.stringify(_DefaultConfiguration[tmpDescriptorKeys[i]]));\n\t\t\t}\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Scope'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Scope) === 'string')\n\t\t\t{\n\t\t\t\tthis.scope = tmpManifest.Scope;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest; expecting a string but property was type ${typeof(tmpManifest.Scope)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest object.  Property \"Scope\" does not exist in the root of the object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Descriptors'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Descriptors) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpDescriptionAddresses = Object.keys(tmpManifest.Descriptors);\n\t\t\t\tfor (let i = 0; i < tmpDescriptionAddresses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.addDescriptor(tmpDescriptionAddresses[i], tmpManifest.Descriptors[tmpDescriptionAddresses[i]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading description object from manifest object.  Expecting an object in 'Manifest.Descriptors' but the property was type ${typeof(tmpManifest.Descriptors)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object description from manifest object.  Property \"Descriptors\" does not exist in the root of the Manifest object.`, tmpManifest);\n\t\t}\n\t}\n\n\t// Serialize the Manifest to a string\n\t// TODO: Should this also serialize the translation table?\n\tserialize()\n\t{\n\t\treturn JSON.stringify(this.getManifest());\n\t}\n\n\tgetManifest()\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tScope: this.scope,\n\t\t\t\tDescriptors: JSON.parse(JSON.stringify(this.elementDescriptors))\n\t\t\t});\n\t}\n\n\t// Add a descriptor to the manifest\n\taddDescriptor(pAddress, pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) === 'object')\n\t\t{\n\t\t\t// Add the Address into the Descriptor if it doesn't exist:\n\t\t\tif (!pDescriptor.hasOwnProperty('Address'))\n\t\t\t{\n\t\t\t\tpDescriptor.Address = pAddress;\n\t\t\t}\n\n\t\t\tif (!this.elementDescriptors.hasOwnProperty(pAddress))\n\t\t\t{\n\t\t\t\tthis.elementAddresses.push(pAddress);\n\t\t\t}\n\n\t\t\t// Add the element descriptor to the schema\n\t\t\tthis.elementDescriptors[pAddress] = pDescriptor;\n\n\t\t\t// Always add the address as a hash\n\t\t\tthis.elementHashes[pAddress] = pAddress;\n\n\t\t\tif (pDescriptor.hasOwnProperty('Hash'))\n\t\t\t{\n\t\t\t\t// TODO: Check if this is a good idea or not..\n\t\t\t\t//       Collisions are bound to happen with both representations of the address/hash in here and developers being able to create their own hashes.\n\t\t\t\tthis.elementHashes[pDescriptor.Hash] = pAddress;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpDescriptor.Hash = pAddress;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object descriptor for address '${pAddress}' from manifest object.  Expecting an object but property was type ${typeof(pDescriptor)}.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetDescriptorByHash(pHash)\n\t{\n\t\treturn this.getDescriptor(this.resolveHashAddress(pHash));\n\t}\n\n\tgetDescriptor(pAddress)\n\t{\n\t\treturn this.elementDescriptors[pAddress];\n\t}\n\n\t// execute an action function for each descriptor\n\teachDescriptor(fAction)\n\t{\n        let tmpDescriptorAddresses = Object.keys(this.elementDescriptors);\n        for (let i = 0; i < tmpDescriptorAddresses.length; i++)\n        {\n            fAction(this.elementDescriptors[tmpDescriptorAddresses[i]]);\n        }\n\n\t}\n\n\t/*************************************************************************\n\t * Beginning of Object Manipulation (read & write) Functions\n\t */\n\t// Check if an element exists by its hash\n\tcheckAddressExistsByHash (pObject, pHash)\n\t{\n\t\treturn this.checkAddressExists(pObject,this.resolveHashAddress(pHash));\n\t}\n\n\t// Check if an element exists at an address\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\treturn this.objectAddressCheckAddressExists.checkAddressExists(pObject, pAddress);\n\t}\n\n\t// Turn a hash into an address, factoring in the translation table.\n\tresolveHashAddress(pHash)\n\t{\n\t\tlet tmpAddress = undefined;\n\n\t\tlet tmpInElementHashTable = this.elementHashes.hasOwnProperty(pHash);\n\t\tlet tmpInTranslationTable = this.hashTranslations.translationTable.hasOwnProperty(pHash);\n\n\t\t// The most straightforward: the hash exists, no translations.\n\t\tif (tmpInElementHashTable && !tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[pHash];\n\t\t}\n\t\t// There is a translation from one hash to another, and, the elementHashes contains the pointer end\n\t\telse if (tmpInTranslationTable && this.elementHashes.hasOwnProperty(this.hashTranslations.translate(pHash)))\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[this.hashTranslations.translate(pHash)];\n\t\t}\n\t\t// Use the level of indirection only in the Translation Table\n\t\telse if (tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.hashTranslations.translate(pHash);\n\t\t}\n\t\t// Just treat the hash as an address.\n\t\t// TODO: Discuss this ... it is magic but controversial\n\t\telse\n\t\t{\n\t\t\ttmpAddress = pHash;\n\t\t}\n\n\t\treturn tmpAddress;\n\t}\n\n\t// Get the value of an element by its hash\n\tgetValueByHash (pObject, pHash)\n\t{\n\t\tlet tmpValue = this.getValueAtAddress(pObject, this.resolveHashAddress(pHash));\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptorByHash(pHash));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\tlet tmpValue = this.objectAddressGetValue.getValueAtAddress(pObject, pAddress);\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptor(pAddress));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Set the value of an element by its hash\n\tsetValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.setValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressSetValue.setValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Delete the value of an element by its hash\n\tdeleteValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.deleteValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressDeleteValue.deleteValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Validate the consistency of an object against the schema\n\tvalidate(pObject)\n\t{\n\t\tlet tmpValidationData =\n\t\t{\n\t\t\tError: null,\n\t\t\tErrors: [],\n\t\t\tMissingElements:[]\n\t\t};\n\n\t\tif (typeof(pObject) !== 'object')\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Expected passed in object to be type object but was passed in ${typeof(pObject)}`);\n\t\t}\n\n\t\tlet addValidationError = (pAddress, pErrorMessage) =>\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Element at address \"${pAddress}\" ${pErrorMessage}.`);\n\t\t};\n\n\t\t// Now enumerate through the values and check for anomalies based on the schema\n\t\tfor (let i = 0; i < this.elementAddresses.length; i++)\n\t\t{\n\t\t\tlet tmpDescriptor = this.getDescriptor(this.elementAddresses[i]);\n\t\t\tlet tmpValueExists = this.checkAddressExists(pObject, tmpDescriptor.Address);\n\t\t\tlet tmpValue = this.getValueAtAddress(pObject, tmpDescriptor.Address);\n\n\t\t\tif ((typeof(tmpValue) == 'undefined') || !tmpValueExists)\n\t\t\t{\n\t\t\t\t// This will technically mean that `Object.Some.Value = undefined` will end up showing as \"missing\"\n\t\t\t\t// TODO: Do we want to do a different message based on if the property exists but is undefined?\n\t\t\t\ttmpValidationData.MissingElements.push(tmpDescriptor.Address);\n\t\t\t\tif (tmpDescriptor.Required || this.options.strict)\n\t\t\t\t{\n\t\t\t\t\taddValidationError(tmpDescriptor.Address, 'is flagged REQUIRED but is not set in the object');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now see if there is a data type specified for this element\n\t\t\tif (tmpDescriptor.DataType)\n\t\t\t{\n\t\t\t\tlet tmpElementType = typeof(tmpValue);\n\t\t\t\tswitch(tmpDescriptor.DataType.toString().trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpValueString = tmpValue.toString();\n\t\t\t\t\t\t\tif (tmpValueString.indexOf('.') > -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// TODO: Is this an error?\n\t\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but has a decimal point in the number.`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DateTime':\n\t\t\t\t\t\tlet tmpValueDate = new Date(tmpValue);\n\t\t\t\t\t\tif (tmpValueDate.toString() == 'Invalid Date')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is not parsable as a Date by Javascript`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Check if this is a string, in the default case\n\t\t\t\t\t\t// Note this is only when a DataType is specified and it is an unrecognized data type.\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} (which auto-converted to String because it was unrecognized) but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpValidationData;\n\t}\n\n\t// Returns a default value, or, the default value for the data type (which is overridable with configuration)\n\tgetDefaultValue(pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) != 'object')\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (pDescriptor.hasOwnProperty('Default'))\n\t\t{\n\t\t\treturn pDescriptor.Default;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Default to a null if it doesn't have a type specified.\n\t\t\t// This will ensure a placeholder is created but isn't misinterpreted.\n\t\t\tlet tmpDataType = (pDescriptor.hasOwnProperty('DataType')) ? pDescriptor.DataType : 'String';\n\t\t\tif (this.options.defaultValues.hasOwnProperty(tmpDataType))\n\t\t\t{\n\t\t\t\treturn this.options.defaultValues[tmpDataType];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// give up and return null\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enumerate through the schema and populate default values if they don't exist.\n\tpopulateDefaults(pObject, pOverwriteProperties)\n\t{\n\t\treturn this.populateObject(pObject, pOverwriteProperties,\n\t\t\t// This just sets up a simple filter to see if there is a default set.\n\t\t\t(pDescriptor) =>\n\t\t\t{\n\t\t\t\treturn pDescriptor.hasOwnProperty('Default');\n\t\t\t});\n\t}\n\n\t// Forcefully populate all values even if they don't have defaults.\n\t// Based on type, this can do unexpected things.\n\tpopulateObject(pObject, pOverwriteProperties, fFilter)\n\t{\n\t\t// Automatically create an object if one isn't passed in.\n\t\tlet tmpObject = (typeof(pObject) === 'object') ? pObject : {};\n\t\t// Default to *NOT OVERWRITING* properties\n\t\tlet tmpOverwriteProperties = (typeof(pOverwriteProperties) == 'undefined') ? false : pOverwriteProperties;\n\t\t// This is a filter function, which is passed the schema and allows complex filtering of population\n\t\t// The default filter function just returns true, populating everything.\n\t\tlet tmpFilterFunction = (typeof(fFilter) == 'function') ? fFilter : (pDescriptor) => { return true; };\n\n\t\tthis.elementAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpDescriptor = this.getDescriptor(pAddress);\n\t\t\t\t// Check the filter function to see if this is an address we want to set the value for.\n\t\t\t\tif (tmpFilterFunction(tmpDescriptor))\n\t\t\t\t{\n\t\t\t\t\t// If we are overwriting properties OR the property does not exist\n\t\t\t\t\tif (tmpOverwriteProperties || !this.checkAddressExists(tmpObject, pAddress))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setValueAtAddress(tmpObject, pAddress, this.getDefaultValue(tmpDescriptor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpObject;\n\t}\n};\n\nmodule.exports = Manyfest;","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","/**\n* Precedent Meta-Templating\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Process text streams, parsing out meta-template expressions.\n*/\nvar libWordTree = require(`./WordTree.js`);\nvar libStringParser = require(`./StringParser.js`);\n\nclass Precedent\n{\n\t/**\n\t * Precedent Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser();\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData);\n\t}\n}\n\nmodule.exports = Precedent;\n","/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: false,\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchOutputBuffer: ''\n\t\t});\n\t}\n\n\t/**\n\t * Assign a node of the parser tree to be the next potential match.\n\t * If the node has a PatternEnd property, it is a valid match and supercedes the last valid match (or becomes the initial match).\n\t * @method assignNode\n\t * @param {Object} pNode - A node on the parse tree to assign\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tassignNode (pNode, pParserState)\n\t{\n\t\tpParserState.PatternMatch = pNode;\n\n\t\t// If the pattern has a END we can assume it has a parse function...\n\t\tif (pParserState.PatternMatch.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\t// ... this is the legitimate start of a pattern.\n\t\t\tpParserState.Pattern = pParserState.PatternMatch;\n\t\t}\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\t/**\n\t * Check if the pattern has ended.  If it has, properly flush the buffer and start looking for new patterns.\n\t * @method checkPatternEnd\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tcheckPatternEnd (pParserState, pData)\n\t{\n\t\tif ((pParserState.OutputBuffer.length >= pParserState.Pattern.PatternEnd.length+pParserState.Pattern.PatternStart.length) &&\n\t\t\t(pParserState.OutputBuffer.substr(-pParserState.Pattern.PatternEnd.length) === pParserState.Pattern.PatternEnd))\n\t\t{\n\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStart.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStart.length+pParserState.Pattern.PatternEnd.length)), pData);\n\t\t\t// Flush the output buffer.\n\t\t\tthis.flushOutputBuffer(pParserState);\n\t\t\t// End pattern mode\n\t\t\tpParserState.Pattern = false;\n\t\t\tpParserState.PatternMatch = false;\n\t\t}\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// (1) If we aren't in a pattern match, and we aren't potentially matching, and this may be the start of a new pattern....\n\t\tif (!pParserState.PatternMatch && pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t{\n\t\t\t// ... assign the node as the matched node.\n\t\t\tthis.assignNode(pParserState.ParseTree[pCharacter], pParserState);\n\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t}\n\t\t// (2) If we are in a pattern match (actively seeing if this is part of a new pattern token)\n\t\telse if (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern has a subpattern with this key\n\t\t\tif (pParserState.PatternMatch.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// Continue matching patterns.\n\t\t\t\tthis.assignNode(pParserState.PatternMatch[pCharacter], pParserState);\n\t\t\t}\n\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\tif (pParserState.Pattern)\n\t\t\t{\n\t\t\t\t// ... Check if this is the end of the pattern (if we are matching a valid pattern)...\n\t\t\t\tthis.checkPatternEnd(pParserState, pData);\n\t\t\t}\n\t\t}\n\t\t// (3) If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\telse\n\t\t{\n\t\t\tpParserState.Output += pCharacter;\n\t\t}\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t */\n\tparseString (pString, pParseTree, pData)\n\t{\n\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\tfor (var i = 0; i < pString.length; i++)\n\t\t{\n\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData);\n\t\t}\n\n\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\treturn tmpParserState.Output;\n\t}\n}\n\nmodule.exports = StringParser;\n","/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - The index of the character in the pattern\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern, pIndex)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern[pIndex]))\n\t\t\tpTree[pPattern[pIndex]] = {};\n\n\t\treturn pTree[pPattern[pIndex]];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {number} pParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, pParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t\treturn false;\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t\treturn false;\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart, i);\n\n\t\ttmpLeaf.PatternStart = pPatternStart;\n\t\ttmpLeaf.PatternEnd = ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length > 0)) ? pPatternEnd : pPatternStart;\n\t\ttmpLeaf.Parse = (typeof(pParser) === 'function') ? pParser :\n\t\t\t\t\t\t(typeof(pParser) === 'string') ? () => { return pParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*! simple-concat. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function (stream, cb) {\n  var chunks = []\n  stream.on('data', function (chunk) {\n    chunks.push(chunk)\n  })\n  stream.once('end', function () {\n    if (cb) cb(null, Buffer.concat(chunks))\n    cb = null\n  })\n  stream.once('error', function (err) {\n    if (cb) cb(err)\n    cb = null\n  })\n}\n","/*! simple-get. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = simpleGet\n\nconst concat = require('simple-concat')\nconst decompressResponse = require('decompress-response') // excluded from browser build\nconst http = require('http')\nconst https = require('https')\nconst once = require('once')\nconst querystring = require('querystring')\nconst url = require('url')\n\nconst isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'\n\nfunction simpleGet (opts, cb) {\n  opts = Object.assign({ maxRedirects: 10 }, typeof opts === 'string' ? { url: opts } : opts)\n  cb = once(cb)\n\n  if (opts.url) {\n    const { hostname, port, protocol, auth, path } = url.parse(opts.url) // eslint-disable-line node/no-deprecated-api\n    delete opts.url\n    if (!hostname && !port && !protocol && !auth) opts.path = path // Relative redirect\n    else Object.assign(opts, { hostname, port, protocol, auth, path }) // Absolute redirect\n  }\n\n  const headers = { 'accept-encoding': 'gzip, deflate' }\n  if (opts.headers) Object.keys(opts.headers).forEach(k => (headers[k.toLowerCase()] = opts.headers[k]))\n  opts.headers = headers\n\n  let body\n  if (opts.body) {\n    body = opts.json && !isStream(opts.body) ? JSON.stringify(opts.body) : opts.body\n  } else if (opts.form) {\n    body = typeof opts.form === 'string' ? opts.form : querystring.stringify(opts.form)\n    opts.headers['content-type'] = 'application/x-www-form-urlencoded'\n  }\n\n  if (body) {\n    if (!opts.method) opts.method = 'POST'\n    if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)\n    if (opts.json && !opts.form) opts.headers['content-type'] = 'application/json'\n  }\n  delete opts.body; delete opts.form\n\n  if (opts.json) opts.headers.accept = 'application/json'\n  if (opts.method) opts.method = opts.method.toUpperCase()\n\n  const originalHost = opts.hostname // hostname before potential redirect\n  const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls\n  const req = protocol.request(opts, res => {\n    if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      opts.url = res.headers.location // Follow 3xx redirects\n      delete opts.headers.host // Discard `host` header on redirect (see #32)\n      res.resume() // Discard response\n\n      const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api\n      // If redirected host is different than original host, drop headers to prevent cookie leak (#73)\n      if (redirectHost !== null && redirectHost !== originalHost) {\n        delete opts.headers.cookie\n        delete opts.headers.authorization\n      }\n\n      if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {\n        opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)\n        delete opts.headers['content-length']; delete opts.headers['content-type']\n      }\n\n      if (opts.maxRedirects-- === 0) return cb(new Error('too many redirects'))\n      else return simpleGet(opts, cb)\n    }\n\n    const tryUnzip = typeof decompressResponse === 'function' && opts.method !== 'HEAD'\n    cb(null, tryUnzip ? decompressResponse(res) : res)\n  })\n  req.on('timeout', () => {\n    req.abort()\n    cb(new Error('Request timed out'))\n  })\n  req.on('error', cb)\n\n  if (isStream(body)) body.on('error', cb).pipe(req)\n  else req.end(body)\n\n  return req\n}\n\nsimpleGet.concat = (opts, cb) => {\n  return simpleGet(opts, (err, res) => {\n    if (err) return cb(err)\n    concat(res, (err, data) => {\n      if (err) return cb(err)\n      if (opts.json) {\n        try {\n          data = JSON.parse(data.toString())\n        } catch (err) {\n          return cb(err, res, data)\n        }\n      }\n      cb(null, res, data)\n    })\n  })\n}\n\n;['get', 'post', 'put', 'patch', 'head', 'delete'].forEach(method => {\n  simpleGet[method] = (opts, cb) => {\n    if (typeof opts === 'string') opts = { url: opts }\n    return simpleGet(Object.assign({ method: method.toUpperCase() }, opts), cb)\n  }\n})\n","var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('events').EventEmitter;\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","/**\n* Pict browser shim loader\n* @author <steven@velozo.com>\n*/\n\n// Load the pict module into the browser global automatically.\nconst libPict = require('./Pict.js');\n\nif (typeof(window) === 'object')\n{\n    window.Pict = libPict;\n}\n\nmodule.exports = libPict;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictContentAssignment extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictContentAssignment';\n\n        // Check to see if we are running in a browser\n        this.inBrowser = false;\n        this.hasDocument = false;\n        if (typeof(window) == 'object')\n        {\n            this.inBrowser = true;\n            // Now check that the browser has a document object\n            if ((typeof(window.document) != 'undefined') && (typeof(window.document.querySelectorAll) == 'function'))\n            {\n                this.hasDocument = true;\n            }\n        }\n\n        // If we're in a browser, check to see if jQuery is available.\n        this.hasJquery = false;\n        this.jQuery = false;\n        if (this.inBrowser && typeof(window.jQuery) !== 'undefined')\n        {\n            this.hasJquery = true;\n        }\n\n        // API Consumers can also craft their own assign function\n        this.customAssignFunction = false;\n\n        // API Consumers can also craft their own append function\n        this.customAppendFunction = false;\n\t}\n\n    assignContent(pAddress, pContent)\n    {\n        if (this.customAssignFunction)\n        {\n            return this.customAssignFunction(pAddress, pContent);\n        }\n        else if (this.hasJquery)\n        {\n            // Get the element\n            let tmpTargetElement = window.jQuery(pAddress);\n\n            // Should we ensure we matched 1 and exactly 1 element?\n            //if (tmpTargetElement && tmpTargetElement.length == 1)\n            //{\n            // Set the content\n            tmpTargetElement.html(pContent);\n            //}\n        }\n        else if (this.inBrowser && this.hasDocument)\n        {\n            let tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n            for (let i = 0; i < tmpTargetElementSet.length; i++)\n            {\n                tmpTargetElementSet[i].innerHTML = pContent;\n            }\n        }\n        else\n        {\n            // Just log it out for now\n            this.log.trace(`PICT Content ASSIGN to [${pAddress}]:`, pContent);\n        }\n    }\n\n    appendContent(pAddress, pContent)\n    {\n        if (this.customAppendFunction)\n        {\n            return this.customAppendFunction(pAddress, pContent);\n        }\n        else if (this.hasJquery)\n        {\n            let tmpTargetElement = window.jQuery(pAddress);\n            tmpTargetElement.append(pContent);\n        }\n        else if (this.inBrowser && this.hasDocument)\n        {\n            let tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n            for (let i = 0; i < tmpTargetElementSet.length; i++)\n            {\n                tmpTargetElementSet[i].insertAdjacentHTML(\"beforeend\", pContent);\n            }\n        }\n        else\n        {\n            // Just log it out for now -- nothing browser in our mix.\n            this.log.trace(`PICT Content APPEND to [${pAddress}]:`, pContent);\n        }\n    }\n}\n\nmodule.exports = PictContentAssignment;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictMeadowEntityProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictMeadowProvider';\n\n\t\tif (this.fable.settings.PictDefaultURLPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = this.fable.settings.PictDefaultURLPrefix;\n\t\t}\n\t\telse if (!this.options.urlPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = '/1.0/';\n\t\t}\n\n\t\tif (this.fable.settings.PictDefaultDownloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = this.fable.settings.PictDefaultDownloadBatchSize;\n\t\t}\n\t\telse if (!this.options.downloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = 100;\n\t\t}\n\n\t\tthis.restClient = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('RestClient');\n\n\t\tthis.cache = {};\n\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tinitializeCache(pEntity)\n\t{\n\t\t// This should not be happening as often as it's happening.\n\t\tif (!this.cache.hasOwnProperty(pEntity))\n\t\t{\n\t\t\tthis.cache[pEntity] = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('ObjectCache');\n\t\t\t// TODO: Make this a configuration?\n\t\t\t// For now cache for 30 seconds.\n\t\t\tthis.cache[pEntity].maxAge = 30000;\n\t\t\tthis.cache[pEntity].maxLength = 10000;\n\n\t\t\tthis.fable.Bundle[pEntity] = this.cache[pEntity].RecordMap;\n\t\t}\n\t}\n\t\n\tgetEntity (pEntity, pIDRecord, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tlet tmpPossibleRecord = this.cache[pEntity].read(pIDRecord);\n\t\t\t\t\n\t\t\t\tif (tmpPossibleRecord)\n\t\t\t\t{\n\t\t\t\t\treturn tmpPossibleRecord;\n\t\t\t\t}\n\n\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}/${pIDRecord}`\n\t\t\t\t\t});\n\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pBody)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.cache[pEntity].put(pBody, pIDRecord);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pBody);\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tgetEntitySet = function (pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// TODO: Should we test for too many record IDs here by string length?\n\t\t// FBL~ID${pDestinationEntity}~INN~${tmpIDRecordsCommaSeparated}\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tlet tmpCountOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}s/Count/FilteredTo/${pMeadowFilterExpression}`\n\t\t\t\t\t});\n\t\t\t\ttmpCountOptions = this.prepareRequestOptions(tmpCountOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpCountOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Error getting bulk entity count of [${pEntity}] filtered to [${pMeadowFilterExpression}] from server [${tmpCountOptions.url}]: ${pError}`);\n\t\t\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet tmpRecordCount = 0;\n\t\t\t\t\t\tif (pBody.Count)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpRecordCount = pBody.Count;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpDownloadURIFragments = [];\n\t\t\t\t\t\tlet tmpDownloadBatchSize = this.options.downloadBatchSize;\n\t\t\t\t\t\tfor (let i = 0; i < (tmpRecordCount / tmpDownloadBatchSize); i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Generate each of the URI fragments to download\n\t\t\t\t\t\t\ttmpDownloadURIFragments.push(`${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${i*tmpDownloadBatchSize}/${tmpDownloadBatchSize}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpEntitySet = [];\n\t\t\t\t\t\t// Now run these in series (it's possible to parallelize but no reason to)\n\t\t\t\t\t\tthis.fable.Utility.eachLimit(tmpDownloadURIFragments, 1, \n\t\t\t\t\t\t\t(pURIFragment, fDownloadCallback)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\turl: `${this.options.urlPrefix}${pURIFragment}`\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\t\t\t\t\tthis.restClient.getJSON(pURIFragment,\n\t\t\t\t\t\t\t\t\t(pDownloadError, pDownloadResponse, pDownloadBody)=>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttmpEntitySet = tmpEntitySet.concat(pDownloadBody);\n\t\t\t\t\t\t\t\t\t\t// Should we be caching each record?\n\t\t\t\t\t\t\t\t\t\treturn fDownloadCallback(pDownloadError);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(pFullDownloadError)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(pFullDownloadError, tmpEntitySet);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t});\n\t}\n}\n\nmodule.exports = PictMeadowEntityProvider;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictTemplateProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictTemplateProvider';\n\n        this.templates = {};\n        this.templateSources = {};\n\n        // Default templates are stored by prefix.\n        // The longest prefix match is used.\n        // Case sensitive.\n        this.defaultTemplates = [];\n\n        // This function can be overloaded to load templates from a database, in a page or other source.\n        this.loadTemplateFunction = (pTemplateHash) => { return false; };\n\t}\n\n    addTemplate(pTemplateHash, pTemplate, pTemplateSource)\n    {\n        this.templates[pTemplateHash] = pTemplate;\n\n        if (typeof(pTemplateSource) == 'string')\n        {\n            this.templateSources[pTemplateHash] = pTemplateSource;\n        }\n        else\n        {\n            this.templateSources[pTemplateHash] = `Direct addTemplate('${pTemplateHash}') function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`;\n        }\n    }\n\n    addDefaultTemplate(pPrefix, pPostfix, pTemplate, pSource)\n    {\n        let tmpSource = (typeof(pSource) == 'string') ? pSource : `Direct addDefaultTemplate('${pPrefix}','${pPostfix}',..) function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`\n        let tmpDefaultTemplate = {\n            prefix: pPrefix,\n            postfix: pPostfix,\n            template: pTemplate,\n            source: tmpSource\n        };\n        if (typeof(pTemplate) != 'string')\n        {\n            this.log.error('PictTemplateProvider.addDefaultTemplate: pTemplate is not a string.');\n        }\n        this.defaultTemplates.push(tmpDefaultTemplate);\n    }\n\n    checkDefaultTemplateHash(pTemplateHash)\n    {\n        /*\n         * Default templates are managed by postfix and prefix.  The use case is things like titles, headers, list \n         * wrappers, rows, etc.\n         *\n         * So we might have a default template for a list wrapper and it should expect \"-ListWrap\" as the postfix.\n         * And we might have a default template for a list row and it should expect \"-ListRow\" as the postfix.\n         * The list might have a \"-ListTitle\", or we might have shared titles and it would just be \"-Title\".\n         * \n         * The idea is to allow fallbacks on defaults.\n         */\n        for (let i = 0; i < this.defaultTemplates.length; i++)\n        {\n            if ((pTemplateHash.indexOf(this.defaultTemplates[i].postfix) == pTemplateHash.length - this.defaultTemplates[i].postfix.length)\n                && (pTemplateHash.indexOf(this.defaultTemplates[i].prefix) == 0))\n            {\n                this.templates[pTemplateHash] = this.defaultTemplates[i].template;\n                this.templateSources[pTemplateHash] = `Auto created in checkDefaultTemplateHash('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${this.defaultTemplates[i].prefix}]...[${this.defaultTemplates[i].postfix}]`;\n                return this.templates[pTemplateHash];\n            }\n        }\n        return false;\n    }\n\n    getTemplate(pTemplateHash)\n    {\n        // TODO: Optimize this.\n        // If the template doesn't exist, try to load it with the loading function\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.loadTemplate(pTemplateHash);\n        }\n        // If the loading function fails, try to load it from the default templates\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.checkDefaultTemplateHash(pTemplateHash);\n        }\n        if (this.templates.hasOwnProperty(pTemplateHash))\n        {\n            return this.templates[pTemplateHash];\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    loadTemplate(pTemplateHash)\n    {\n        let tmpTemplate = this.loadTemplateFunction(pTemplateHash);\n\n        if (tmpTemplate)\n        {\n            this.templates[pTemplateHash] = tmpTemplate.template;\n            this.templateSources[pTemplateHash] = `Loaded in loadTemplate('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${tmpTemplate.source}]`;\n\n        }\n\n        return tmpTemplate;\n    }\n}\n\nmodule.exports = PictTemplateProvider;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst defaultPictViewSettings = (\n\t{\n\t\tDefaultRenderable: false,\n        DefaultDestinationAddress: false,\n        DefaultTemplateRecordAddress: false,\n\n        ViewIdentifier: 'DEFAULT',\n\n        InitializeOnLoad: true,\n        RenderOnLoad: false,\n\n        Templates: [],\n\n        DefaultTemplates: [],\n\n        Renderables: [],\n\n        Manifests: {}\n\t});\n\nclass PictView extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n        this.options = this.fable.Utility.extend(defaultPictViewSettings, this.options);\n        this.serviceType = 'PictView';\n\n        // Load all templates from the array in the options\n        // Templates are in the form of {Hash:'Some-Template-Hash',Template:'Template content',Source:'TemplateSource'}\n        for (let i = 0; i < this.options.Templates.length; i++)\n        {\n            let tmpTemplate = this.options.Templates[i];\n\n            if (!tmpTemplate.hasOwnProperty('Hash') || !tmpTemplate.hasOwnProperty('Template'))\n            {\n                this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Template ${i} in the options array.`, tmpTemplate);\n            }\n            else\n            {\n                if (!tmpTemplate.Source)\n                {\n                    tmpTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n                }\n                this.fable.TemplateProvider.addTemplate(tmpTemplate.Hash, tmpTemplate.Template, tmpTemplate.Source);\n            }\n        }\n\n        // Load all default templates from the array in the options\n        // Templates are in the form of {Prefix:'',Postfix:'-List-Row',Template:'Template content',Source:'TemplateSourceString'}\n        for (let i = 0; i < this.options.DefaultTemplates.length; i++)\n        {\n            let tmpDefaultTemplate = this.options.DefaultTemplates[i];\n\n            if (!tmpDefaultTemplate.hasOwnProperty('Postfix') || !tmpDefaultTemplate.hasOwnProperty('Template'))\n            {\n                this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Default Template ${i} in the options array.`, tmpDefaultTemplate);\n            }\n            else\n            {\n                if (!tmpDefaultTemplate.Source)\n                {\n                    tmpDefaultTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n                }\n                this.fable.TemplateProvider.addDefaultTemplate(tmpDefaultTemplate.Prefix, tmpDefaultTemplate.Postfix, tmpDefaultTemplate.Template, tmpDefaultTemplate.Source);\n            }\n        }\n\n        // Load all renderables\n        // Renderables are launchable renderable instructions with templates\n        // They look as such: {Identifier:'ContentEntry', TemplateHash:'Content-Entry-Section-Main', ContentDestinationAddress:'#ContentSection', RecordAddress:'AppData.Content.DefaultText', ManifestTransformation:'ManyfestHash', ManifestDestinationAddress:'AppData.Content.DataToTransformContent'}\n        // The only parts that are necessary are Identifier and Template\n        // A developer can then do render('ContentEntry') and it just kinda works.  Or they can override the ContentDestinationAddress\n        this.renderables = {};\n        for (let i = 0; i < this.options.Renderables.length; i++)\n        {\n            let tmpRenderable = this.options.Renderables[i];\n\n            if (!tmpRenderable.hasOwnProperty('RenderableHash') || !tmpRenderable.hasOwnProperty('TemplateHash'))\n            {\n                this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Renderable ${i} in the options array.`, tmpRenderable);\n            }\n            else\n            {\n                this.renderables[tmpRenderable.RenderableHash] = tmpRenderable;\n            }\n        }\n\n        // Array of Initialization Functions\n        this.initializationFunctionSet = [];\n        // This is here so we can easily have an inline initialize override\n        this.internalInitialize = (fStageComplete) => { return fStageComplete(); };\n\n        this.fable.Utility.waterfall(\n            [\n                (fStageComplete) =>\n                {\n                    if (this.options.InitializeOnLoad)\n                    {\n                        return this.initialize(fStageComplete);\n                    }\n\n                    return fStageComplete();\n                },\n                (fStageComplete) =>\n                {\n                    if (this.options.RenderOnLoad)\n                    {\n                        return this.renderAsync(this.options.DefaultRenderable, null, null, fStageComplete);\n                    }\n                }\n            ],\n            (pError) =>\n            {\n                if (pError)\n                {\n                    this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} did not auto initialize/render properly: ${pError}`, pError);\n                    return false;\n                }\n                return true;\n            }\n        )\n\t}\n\n    initialize(fCallback)\n    {\n        this.fable.Utility.waterfall(\n            [\n                ...[(fStageComplete) =>\n                {\n                    this.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} beginning initialization...`);\n                    return fStageComplete();\n                },\n                this.internalInitialize],\n                ...this.initializationFunctionSet,\n                ...[(fStageComplete) =>\n                {\n                    this.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialization complete.`);\n                    return fStageComplete();\n                }]\n            ],\n            (pError) =>\n            {\n                if (pError)\n                {\n                    this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} did not initialize properly: ${pError}`, pError);\n                }\n                return fCallback(pError);\n            }\n        )\n    }\n\n    render(pRenderable, pRenderDestinationAddress, pTemplateDataAddress)\n    {\n        let tmpRenderableHash = (typeof(pRenderable) === 'string') ? pRenderable : \n            (typeof(this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n        if (!tmpRenderableHash)\n        {\n            this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it is not a valid renderable.`);\n            return false;\n        }\n\n        let tmpRenderable = this.renderables[tmpRenderableHash];\n\n        if (!tmpRenderable)\n        {\n            this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n            return false;\n        }\n\n        let tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress : \n            (typeof(tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n            (typeof(this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n        if (!tmpRenderDestinationAddress)\n        {\n            this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n            return false;\n        }\n\n        let tmpDataAddress = (typeof(pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n            (typeof(tmpRenderable.RecordAddress) === 'string') ? tmpRenderable.RecordAddress :\n            (typeof(this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n        let tmpData = (typeof(tmpDataAddress) === 'string') ? this.fable.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n        let tmpContent = this.fable.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData)\n        return this.fable.ContentAssignment.assignContent(tmpRenderDestinationAddress, tmpContent);\n    }\n\n    renderAsync(pRenderable, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n    {\n        let tmpRenderableHash = (typeof(pRenderable) === 'string') ? pRenderable : false;\n        if (!tmpRenderableHash)\n        {\n            this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`);\n            return fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`));\n        }\n\n        let tmpRenderable = this.renderables[tmpRenderableHash];\n\n        if (!tmpRenderable)\n        {\n            this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n            return fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`));\n        }\n\n        let tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress : \n            (typeof(tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n            (typeof(this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n        if (!tmpRenderDestinationAddress)\n        {\n            this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n            return fCallback(Error(`Could not render ${tmpRenderableHash}`));\n        }\n\n        let tmpDataAddress = (typeof(pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n            (typeof(tmpRenderable.RecordAddress) === 'string') ? tmpRenderable.RecordAddress :\n            (typeof(this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n        let tmpData = (typeof(tmpDataAddress) === 'string') ? this.fable.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n        this.fable.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData,\n            (pError, pContent) =>\n            {\n                if (pError)\n                {\n                    this.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render (asynchronously) ${tmpRenderableHash} (param ${pRenderable}) because it did not parse the template.`, pError);\n                    return fCallback(pError);\n                }\n                this.fable.ContentAssignment.assignContent(tmpRenderDestinationAddress, pContent);\n                return fCallback(null, pContent);\n            });\n    }\n}\n\nmodule.exports = PictView;","/**\n* @author <steven@velozo.com>\n*/\nconst libFable = require('fable');\n\nconst defaultPictSettings = (\n\t{\n\t\t// The main \"viewport\" is the view that is used to launch the entire application\n\t\tMainViewportVew: 'Default-Viewport',\n\n\t\t// Whether or not we should automatically render the main viewport when appropriate\n\t\tAutoRenderMainViewportView: false,\n\n\t\t// The prefix to prepend on all template destination hashes\n\t\tIdentifierAddressPrefix: 'PICT-'\n\t});\n\nclass Pict extends libFable\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\t// Fill in any default Pict settings that are not in the settings object.\n\t\tthis.settingsManager.fill(defaultPictSettings);\n\n\t\t// The templateProvider provides a basic key->template mapping with default fallback capabilities\n\t\tthis.serviceManager.addAndInstantiateServiceType('TemplateProvider', require('./Pict-Template-Provider.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('EntityProvider',  require('./Pict-Meadow-EntityProvider.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('ContentAssignment',  require('./Pict-Content-Assignment.js'));\n\t\tthis.serviceManager.addServiceType('PictView',  require('./Pict-View.js'));\n\n\t\tthis.serviceManager.instantiateServiceProvider('MetaTemplate');\n\n\t\tthis.manifest = this.serviceManager.instantiateServiceProvider('Manifest');\n\n\t\tthis.AppData = {};\n\n\t\tthis.Bundle = {};\n\n\t\tthis._DefaultPictTemplatesInitialized = false;\n\t\tthis.initializePictTemplates();\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddView(pOptions, pViewHash, pViewPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpViewHash = (typeof(pHash) == 'string') ? pHash : this.fable.getUUID();\n\n\t\tif (typeof(pViewPrototype) != 'undefined')\n\t\t{\n\t\t\treturn this.serviceManager.instantiateServiceProviderFromPrototype('PictView', tmpOptions, tmpViewHash, pViewPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.serviceManager.instantiateServiceProvider('PictView', tmpOptions, tmpViewHash);\n\t\t}\n\t}\n\n\tinitializePictTemplates(fExtraTemplateMethods)\n\t{\n\t\t/*\n\t\t *\n\t\t * To stave off madness, these are inefficient for now.  The wkhtmltopdf renderer leaves much to be desired\n\t\t * in the way of feedback with regards to javascript compatibility.\n\t\t *\n\t\t */\n\t\tif (!this._DefaultPictTemplatesInitialized)\n\t\t{\n\t\t\t// Expects one of the following:\n\t\t\t// \t\t{~Entity:Book:1~}\n\t\t\t//          ...meaning GET BOOK 1\n\t\t\t// \t\t{~Entity:Book:AppData.Some.Address.IDBook~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook\n\t\t\t// \t\t{~E:Book:AppData.Some.Address.IDBook:Render-Book-Template~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook and render it to Render-Book-Template\n\t\t\tlet fEntityRender = (pHash, pData, fCallback) =>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tlet tmpEntity = false;\n\t\t\t\t\tlet tmpEntityID = false;\n\t\t\t\t\tlet tmpEntityTemplate = false;\n\n\t\t\t\t\t// This expression requires 2 parts -- a third is optional, and, if present, is the template to render to.\n\t\t\t\t\tlet tmpHashSeparator = tmpHash.indexOf('|');\n\n\t\t\t\t\tif (tmpHashSeparator < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\t\tlet tmpHashEntitySeparator = tmpHash.indexOf(':');\n\t\t\t\t\t\ttmpEntity = tmpHash.substring(0, tmpHashEntitySeparator);\n\t\t\t\t\t\ttmpEntityID = tmpHash.substring(tmpHashEntitySeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is a 3 part hash (the entity, the ID, and the template)\n\t\t\t\t\t\tlet tmpHashEntitySeparator = tmpHash.indexOf(':');\n\t\t\t\t\t\ttmpEntity = tmpHash.substring(0, tmpHashEntitySeparator);\n\n\t\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf('|');\n\t\t\t\t\t\ttmpEntityID = tmpHash.substring(tmpHashEntitySeparator + 1, tmpHashTemplateSeparator);\n\n\t\t\t\t\t\ttmpEntityTemplate = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isNaN(tmpEntityID))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpEntityID = parseInt(tmpEntityID);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is an address, so we need to get the value at the address\n\t\t\t\t\t\ttmpEntityID = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:pData}, tmpEntityID);\n\t\t\t\t\t}\n\n\t\t\t\t\t// No Entity or EntityID\n\t\t\t\t\tif (!tmpEntity || !tmpEntityID)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to get the entity\n\t\t\t\t\tthis.EntityProvider.getEntity(tmpEntity, tmpEntityID,\n\t\t\t\t\t\t(pError, pRecord) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Pict: Entity Render: Error getting entity [${tmpEntity}] with ID [${tmpEntityID}] for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\t\t\treturn fCallback(pError, '');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Now render the template\n\t\t\t\t\t\t\tif (tmpEntityTemplate)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(null, this.parseTemplateByHash(tmpEntityTemplate, pRecord));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t};\n\t\t\tthis.defaultServices.MetaTemplate.addPatternAsync('{~E:', '~}', fEntityRender);\n\t\t\tthis.defaultServices.MetaTemplate.addPatternAsync('{~Entity:', '~}', fEntityRender);\n\n\t\t\t// {NE~Some.Address|If the left value is truthy, render this value.~}\n\t\t\tlet fNotEmptyRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\t// Should switch this to indexOf so pipes can be in the content.\n\t\t\t\t\tlet tmpHashParts = tmpHash.split('|');\n\n\t\t\t\t\t// For now just check truthiness\n\t\t\t\t\tif (this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:pData}, tmpHashParts[0]))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpHashParts[1];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~NotEmpty:', '~}', fNotEmptyRender);\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~NE:', '~}', fNotEmptyRender);\n\n\t\t\t// {~T:Template:AddressOfData~}\n\t\t\tlet fTemplateRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:pData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~T:', '~}', fTemplateRender);\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~Template:', '~}', fTemplateRender);\n\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:pData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~TS:', '~}', fTemplateSetRender);\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~TemplateSet:', '~}', fTemplateSetRender);\n\n\t\t\t//{~Data:AppData.Some.Value.to.Render~}\n\t\t\tlet fDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:pData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn tmpValue;\n\t\t\t\t};\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~D:', '~}', fDataRender);\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~Data:', '~}', fDataRender);\n\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~Dollars:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:pData}, tmpHash);\n\t\t\t\t\treturn this.defaultServices.DataFormat.formatterDollars(tmpColumnData);\n\t\t\t\t});\n\n\t\t\tthis.defaultServices.MetaTemplate.addPattern('{~Digits:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:pData}, tmpHash);\n\t\t\t\t\treturn this.defaultServices.DataFormat.formatterAddCommasToNumber(this.defaultServices.DataFormat.formatterRoundNumber(tmpColumnData, 2));\n\t\t\t\t});\n\n\t\t\tthis._DefaultPictTemplatesInitialized = true;\n\t\t}\n\t}\n\n\tparseTemplate (pTemplateString, pData, fCallback)\n\t{\n\t\treturn this.defaultServices.MetaTemplate.parseString(pTemplateString, pData, fCallback);\n\t}\n\n\tparseTemplateByHash (pTemplateHash, pData, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.defaultServices.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\treturn this.parseTemplate(tmpTemplateString, pData, fCallback);\n\t}\n\n\tparseTemplateSet (pTemplateString, pDataSet, fCallback)\n\t{\n\t\t// TODO: This will need streaming -- for now janky old string append does the trick\n\t\tlet tmpValue = '';\n\t\tif (typeof(fCallback) == 'function')\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tthis.defaultServices.Utility.eachLimit(pDataSet, 1,\n\t\t\t\t\t(pRecord, fRecordTemplateCallback)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplate(pTemplateString, pRecord,\n\t\t\t\t\t\t\t(pError, pTemplateResult)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValue += pTemplateResult;\n\t\t\t\t\t\t\t\treturn fRecordTemplateCallback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t(pError)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fCallback(pError, tmpValue);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn fCallback(Error('Pict: Template Set: pDataSet is not an array or object.'), '');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tif (Array.isArray(pDataSet))\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < pDataSet.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpKeys = Object.keys(pDataSet);\n\t\t\t\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[tmpKeys[i]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpValue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\tparseTemplateSetByHash (pTemplateHash, pDataSet, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.defaultServices.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\treturn this.parseTemplateSet(tmpTemplateString, pDataSet, fCallback);\n\t}\n};\n\nmodule.exports = Pict;\nmodule.exports.PictViewClass = require('./Pict-View.js');\n"]}