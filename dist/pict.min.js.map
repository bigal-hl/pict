{"version":3,"sources":["pict.min.js","node_modules/browser-pack/_prelude.js","node_modules/async.eachlimit/index.js","node_modules/async.iterator/index.js","node_modules/async.util.eachoflimit/index.js","node_modules/async.util.ensureasync/index.js","node_modules/async.util.isarray/index.js","node_modules/async.util.isarraylike/index.js","node_modules/async.util.keyiterator/index.js","node_modules/async.util.keys/index.js","node_modules/async.util.noop/index.js","node_modules/async.util.once/index.js","node_modules/async.util.onlyonce/index.js","node_modules/async.util.restparam/index.js","node_modules/async.util.setimmediate/index.js","node_modules/async.util.withoutindex/index.js","node_modules/async.waterfall/index.js","node_modules/cachetrax/source/CacheTrax.js","node_modules/cachetrax/source/LinkedList-Node.js","node_modules/cachetrax/source/LinkedList.js","node_modules/data-arithmatic/source/DataArithmatic.js","node_modules/decimal.js/decimal.js","node_modules/deep-object-diff/cjs/added.js","node_modules/deep-object-diff/cjs/deleted.js","node_modules/deep-object-diff/cjs/detailed.js","node_modules/deep-object-diff/cjs/diff.js","node_modules/deep-object-diff/cjs/index.js","node_modules/deep-object-diff/cjs/updated.js","node_modules/deep-object-diff/cjs/utils.js","node_modules/elucidator/source/Elucidator-InstructionSet.js","node_modules/elucidator/source/Elucidator-LogToConsole.js","node_modules/elucidator/source/Elucidator.js","node_modules/elucidator/source/InstructionSets/Geometry.js","node_modules/elucidator/source/InstructionSets/Logic.js","node_modules/elucidator/source/InstructionSets/Math-Javascript.js","node_modules/elucidator/source/InstructionSets/Operations/Geometry-RectangleArea.json","node_modules/elucidator/source/InstructionSets/Operations/Logic-Execute.json","node_modules/elucidator/source/InstructionSets/Operations/Logic-If.json","node_modules/elucidator/source/InstructionSets/Operations/Math-Add.json","node_modules/elucidator/source/InstructionSets/Operations/Math-Aggregate.json","node_modules/elucidator/source/InstructionSets/Operations/Math-Divide.json","node_modules/elucidator/source/InstructionSets/Operations/Math-Multiply.json","node_modules/elucidator/source/InstructionSets/Operations/Math-Subtract.json","node_modules/elucidator/source/InstructionSets/Operations/PreciseMath-Add.json","node_modules/elucidator/source/InstructionSets/Operations/PreciseMath-Aggregate.json","node_modules/elucidator/source/InstructionSets/Operations/PreciseMath-Divide.json","node_modules/elucidator/source/InstructionSets/Operations/PreciseMath-GroupValuesAndAggregate.json","node_modules/elucidator/source/InstructionSets/Operations/PreciseMath-Multiply.json","node_modules/elucidator/source/InstructionSets/Operations/PreciseMath-Round.json","node_modules/elucidator/source/InstructionSets/Operations/PreciseMath-SetPrecision.json","node_modules/elucidator/source/InstructionSets/Operations/PreciseMath-SetRoundingMode.json","node_modules/elucidator/source/InstructionSets/Operations/PreciseMath-Subtract.json","node_modules/elucidator/source/InstructionSets/Operations/PreciseMath-ToDecimalPlaces.json","node_modules/elucidator/source/InstructionSets/Operations/PreciseMath-ToSignificantDigits.json","node_modules/elucidator/source/InstructionSets/Operations/Set-GroupValuesBy.json","node_modules/elucidator/source/InstructionSets/Operations/String-Replace.json","node_modules/elucidator/source/InstructionSets/Operations/String-Substring.json","node_modules/elucidator/source/InstructionSets/Operations/String-Trim.json","node_modules/elucidator/source/InstructionSets/PreciseMath-Decimal.js","node_modules/elucidator/source/InstructionSets/Set.js","node_modules/elucidator/source/InstructionSets/String.js","node_modules/fable-log/source/Fable-Log-BaseLogger.js","node_modules/fable-log/source/Fable-Log-DefaultProviders-Web.js","node_modules/fable-log/source/Fable-Log-DefaultStreams.json","node_modules/fable-log/source/Fable-Log-Logger-Console.js","node_modules/fable-log/source/Fable-Log-Logger-SimpleFlatFile.js","node_modules/fable-log/source/Fable-Log.js","node_modules/fable-settings/source/Fable-Settings-Default.json","node_modules/fable-settings/source/Fable-Settings-TemplateProcessor.js","node_modules/fable-settings/source/Fable-Settings.js","node_modules/fable-uuid/source/Fable-UUID-Random-Browser.js","node_modules/fable-uuid/source/Fable-UUID.js","node_modules/fable/source/Fable-Operation.js","node_modules/fable/source/Fable-Service-DataArithmatic.js","node_modules/fable/source/Fable-Service-MetaTemplate.js","node_modules/fable/source/Fable-Service-Template.js","node_modules/fable/source/Fable-Service-Utility.js","node_modules/fable/source/Fable-ServiceManager.js","node_modules/fable/source/Fable-ServiceProviderBase.js","node_modules/fable/source/Fable.js","node_modules/informary/source/Informary-Log.js","node_modules/informary/source/Informary.js","node_modules/jquery/dist/jquery.js","node_modules/manyfest/source/Manyfest-CleanWrapCharacters.js","node_modules/manyfest/source/Manyfest-HashTranslation.js","node_modules/manyfest/source/Manyfest-LogToConsole.js","node_modules/manyfest/source/Manyfest-ObjectAddress-CheckAddressExists.js","node_modules/manyfest/source/Manyfest-ObjectAddress-DeleteValue.js","node_modules/manyfest/source/Manyfest-ObjectAddress-GetValue.js","node_modules/manyfest/source/Manyfest-ObjectAddress-SetValue.js","node_modules/manyfest/source/Manyfest-ObjectAddressGeneration.js","node_modules/manyfest/source/Manyfest-SchemaManipulation.js","node_modules/manyfest/source/Manyfest.js","node_modules/mousetrap/mousetrap.js","node_modules/path-browserify/index.js","node_modules/precedent/source/Precedent.js","node_modules/precedent/source/StringParser.js","node_modules/precedent/source/WordTree.js","node_modules/process/browser.js","node_modules/timers-browserify/main.js","source/Pict-Browser-Shim.js","source/Pict-Fable-Service-Elucidator.js","source/Pict-Fable-Service-Informary.js","source/Pict-Fable-Service-Manyfest.js","source/Pict.js"],"names":["f","exports","module","define","amd","window","global","self","this","Pict","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","eachOfLimit","withoutIndex","arr","limit","iterator","cb","tasks","makeCallback","index","fn","apply","arguments","next","once","noop","onlyOnce","keyIterator","obj","nextKey","done","running","errored","replenish","key","err","setImmediate","restParam","args","callback","pop","push","innerArgs","sync","Array","isArray","Object","prototype","toString","_keys","isArrayLike","coll","len","keys","k","hasOwnProperty","func","startIndex","Math","max","rest","_setImmediate","fallback","setTimeout","timers","value","ensureAsync","wrapIterator","concat","libLinkedList","constructor","_HashMap","_List","maxLength","maxAge","put","pData","pHash","Datum","tmpNode","Hash","Metadata","Created","Date","touch","remove","expire","pruneBasedOnExpiration","fComplete","pRemovedRecords","tmpRemovedRecords","tmpNow","tmpKeys","pruneBasedOnLength","pruneCustom","fPruneFunction","prune","fExpirationPruneComplete","read","getNode","LeftNode","RightNode","__ISNODE","libLinkedListNode","totalNodes","head","tail","initializeNode","pDatum","tmpHash","append","prepend","pNode","each","fAction","fIterator","pError","seek","pNodeIndex","_Regex_formatterInsertCommas","_Regex_formatterAddCommasToNumber","_Regex_formatterDollarsRemoveCommas","_Regex_formatterCleanNonAlpha","_Value_MoneySign_Currency","_Value_NaN_Currency","_Value_GroupSeparator_Number","_Value_Prefix_StringHash","_Value_Clean_formatterCleanNonAlpha","_UseEngineStringStartsWith","String","startsWith","_UseEngineStringEndsWith","endsWith","stringReverse","pString","split","reverse","join","stringStartsWith","pSearchString","pStartIndex","stringStartsWith_Polyfill","slice","stringEndsWith","pEndIndex","stringEndsWith_Polyfill","substr","insecureStringHash","tmpStringLength","tmpCharacterIndex","charCodeAt","cleanEnclosureWrapCharacters","pWrapCharacter","substring","cleanNonAlphaCharacters","replace","formatterInsertCommas","tmpReversedWithCommas","match","processAddCommasToNumberRegex","pMatch","pSign","pZeros","pBefore","pDecimal","pAfter","formatterAddCommasToNumber","pNumber","bind","formatterDollars","pValue","tmpDollarAmount","parseFloat","toFixed","isNaN","formatterRoundNumber","pDigits","tmpDigits","tmpValue","Number","stringBeforeMatch","stringAfterMatch","tmpStringSplitLocation","indexOf","stringCountEnclosures","pEnclosureStart","pEnclosureEnd","tmpString","tmpEnclosureStart","tmpEnclosureEnd","tmpEnclosureCount","tmpEnclosureDepth","stringGetEnclosureValueByIndex","pEnclosureIndexToGet","tmpEnclosureIndexToGet","tmpMatchedEnclosureIndex","tmpEnclosedValueStartIndex","tmpEnclosedValueEndIndex","stringRemoveEnclosureByIndex","pEnclosureIndexToRemove","tmpEnclosureIndexToRemove","tmpEnclosureStartIndex","tmpEnclosureEndIndex","tmpReturnString","globalScope","Decimal","inexact","noConflict","quadrant","EXP_LIMIT","MAX_DIGITS","NUMERALS","LN10","PI","DEFAULTS","precision","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","external","decimalError","invalidArgument","precisionLimitExceeded","cryptoUnavailable","tag","mathfloor","floor","mathpow","pow","isBinary","isHex","isOctal","isDecimal","BASE","LOG_BASE","LN10_PRECISION","PI_PRECISION","P","toStringTag","digitsToString","d","ws","indexOfLastWord","str","w","getZeroString","checkInt32","min","checkRoundingDigits","rm","repeating","di","rd","ceil","convertBase","baseIn","baseOut","j","arrL","strL","charAt","absoluteValue","abs","x","s","finalise","clampedTo","clamp","Ctor","NaN","gt","cmp","comparedTo","y","xdL","ydL","xd","yd","xs","ys","cosine","cos","pr","sd","isZero","tinyPow","taylorSeries","times","cos2x","minus","plus","toLessThanHalfPi","neg","cubeRoot","cbrt","m","rep","t3","t3plusx","isFinite","toExponential","divide","eq","decimalPlaces","dp","dividedBy","div","dividedToIntegerBy","divToInt","equals","greaterThan","greaterThanOrEqualTo","gte","hyperbolicCosine","cosh","one","cosh2_x","d8","hyperbolicSine","sinh","sqrt","sinh2_x","d5","d16","d20","hyperbolicTangent","tanh","inverseCosine","acos","halfPi","isNeg","getPi","asin","inverseHyperbolicCosine","acosh","lte","ln","inverseHyperbolicSine","asinh","inverseHyperbolicTangent","atanh","wpr","xsd","inverseSine","atan","inverseTangent","px","x2","isInteger","isInt","isNegative","isPositive","isPos","lessThan","lt","lessThanOrEqualTo","logarithm","log","base","isBase10","denominator","inf","num","arg","naturalLogarithm","getLn10","sub","xe","xLTy","shift","getBase10Exponent","mod","q","naturalExponential","exp","negated","add","carry","unshift","z","getPrecision","round","sine","sin","sin2_x","squareRoot","tangent","tan","mul","rL","toBinary","toStringBinary","toDecimalPlaces","toDP","finiteToString","toFraction","maxD","d0","d1","d2","n0","n1","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","yn","intPow","toPrecision","toSignificantDigits","toSD","truncated","trunc","valueOf","toJSON","multiplyInteger","temp","compare","b","aL","bL","subtract","logBase","more","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","sign","isTruncated","digits","roundUp","xdi","out","isExp","nonFiniteToString","zs","truncate","isOdd","maxOrMin","ltgt","guard","sum","c0","numerator","x1","parseDecimal","search","parseOther","divisor","isFloat","test","toLowerCase","isHyperbolic","pi","atan2","config","v","useDefaults","defaults","ps","getRandomValues","randomBytes","hypot","isDecimalInstance","log2","log10","random","Uint32Array","copy","clone","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","set","Symbol","defineProperty","default","_utils","addedDiff","lhs","rhs","isObject","reduce","acc","difference","isEmpty","makeObjectWithoutPrototype","_default","deletedDiff","undefined","_added","_interopRequireDefault","_deleted","_updated","__esModule","detailedDiff","added","deleted","updated","diff","deletedValues","isDate","isEmptyObject","enumerable","get","_detailed","_diff","updatedDiff","_len","_key2","create","pElucidator","elucidator","namespace","initializeNamespace","pNamespace","instructionSets","operationSets","addInstruction","pInstructionHash","fInstructionFunction","logError","initializeInstructions","pOperation","logInfo","addOperation","pOperationHash","Description","Operation","Namespace","Summary","Inputs","Outputs","Steps","initializeOperations","logToConsole","pLogLine","pLogObject","pLogLevel","tmpLogLine","tmpLogLevel","console","JSON","stringify","info","warning","logWarning","error","libSimpleLog","libManyfest","libPrecedent","libElucidatorInstructionSet","pOperations","fInfoLog","fErrorLog","fWarningLog","UUID","loadDefaultInstructionSets","tmpSolverHashes","loadInstructionSet","cInstructionSet","tmpInstructionSet","operationExists","tmpNamespace","tmpOperationInjector","solveInternalOperation","pInputObject","pOutputObject","pDescriptionManyfest","pInputAddressMapping","pOutputAddressMapping","pSolutionContext","tmpOperation","solveOperation","pOperationObject","parse","tmpInputObject","tmpOutputObject","tmpSolutionContext","SolutionGUID","SolutionBaseNamespace","SolutionBaseOperation","SolutionLog","InputHashMapping","InputHashTranslationTable","OutputHashMapping","OutputHashTranslationTable","tmpOutputHashMapping","tmpInputHashMapping","tmpDescriptionManyfest","schemaManipulations","mergeAddressMappings","resolveAddressMappings","hashTranslations","addTranslation","SolutionContext","Synopsys","tmpPrecedent","addPattern","trim","tmpDescriptor","getDescriptorByHash","Name","getValueByHash","Log","PreOperation","parseString","tmpStep","tmpInputSchema","Scope","Descriptors","InputHashAddressMap","tmpInputManyfest","tmpOutputSchema","OutputHashAddressMap","tmpOutputManyfest","tmpInstructionState","Elucidator","Instruction","DescriptionManyfest","InputObject","InputManyfest","OutputObject","OutputManyfest","pMessage","fInstruction","PostOperation","manyfest","precedent","super","ifInstruction","tmpLeftValue","tmpRightValue","tmpComparator","tmpComparisonOperator","tmpComparisonOperatorMapping","equal","noteq","notequal","id","identity","greaterthan","greaterthanorequal","lessthan","lessthanorequal","tmpTrueNamespace","tmpTrueOperation","tmpFalseNamespace","tmpFalseOperation","tmpTruthiness","setValueByHash","executeOperation","tmpA","tmpB","multiply","aggregate","tmpAggregationValue","parseInt","tmpObjectKeys","Synopsis","Width","Type","Height","Area","Ratio","Default","operation","leftValue","rightValue","comparator","trueNamespace","trueOperation","falseNamespace","falseOperation","truthinessResult","ValueNames","inputDataSet","groupByProperty","groupValueProperty","recordIndicatorProperty","outputDataSet","roundingmode","decimalplaces","inputString","searchFor","replaceWith","outputString","indexStart","indexEnd","libDecimal","tmpPrecision","tmpRoundingMode","tosignificantdigits","todecimalplaces","tmpDecimalPlaces","setprecision","setroundingmode","tmpObjectType","groupValuesAndAggregate","tmpInputDataSet","tmpGroupByProperty","tmpGroupValueProperty","tmpOutputDataSet","tmpProcessedOutputDataSet","tmpGroupByValue","tmpDecimalValue","tmpOutputGroups","groupValuesBy","tmpInputString","tmpSearchFor","tmpReplaceWith","pLogStreamSettings","pFableLog","_Settings","loggerUUID","generateInsecureUUID","levels","tmpDate","getTime","pCharacter","tmpRandomData","initialize","trace","pLogText","write","debug","warn","fatal","getDefaultProviders","tmpDefaultProviders","loggertype","streamtype","level","libBaseLogger","_ShowTimeStamps","showtimestamps","_FormattedTimeStamps","formattedtimestamps","_ContextMessage","Context","Product","_OutputLogLinesToConsole","outputloglinestoconsole","_OutputObjectsToConsole","outputobjectstoconsole","prefixCache","pLevel","pObject","tmpTimeStamp","toISOString","libConsoleLog","libFS","libPath","logFileRawPath","path","logFilePath","normalize","logFileStreamOptions","fileStreamOptions","flags","encoding","fileWriter","createWriteStream","activelyWriting","logLineStrings","logObjectStrings","defaultWriteCompleteCallback","defaultBufferFlushCallback","closeWriter","fCloseComplete","tmpCloseComplete","end","completeBufferFlushToLogFile","fFlushComplete","tmpFlushComplete","flushBufferToLogFile","tmpLineStrings","tmpObjectStrings","tmpConstructedBufferOutputString","fs","FableLog","pFableSettings","pFable","tmpSettings","_Providers","_StreamDefinitions","LogStreams","logStreams","logProviders","activeLogStreams","logStreamsTrace","logStreamsDebug","logStreamsInfo","logStreamsWarn","logStreamsError","logStreamsFatal","datumDecorator","uuid","addLogger","pLogger","setDatumDecorator","fDatumDecorator","tmpDecoratedDatum","tmpStreamDefinition","assign","logTime","tmpMessage","tmpTime","getTimeStamp","getTimeDelta","pTimeStamp","logTimeDelta","pTimeDelta","tmpEndTime","logTimeDeltaHuman","tmpMs","tmpSeconds","tmpMinutes","tmpHours","logTimeDeltaRelative","pStartTime","logTimeDeltaRelativeHuman","new","pSettings","LogProviderBase","LogProviderConsole","ProductVersion","ConfigFile","process","pDependencies","templateProcessor","pTemplateValue","tmpTemplateValue","tmpSeparatorIndex","tmpDefaultValue","tmpEnvironmentVariableName","env","parseSetting","_process","libFableSettingsTemplateProcessor","FableSettings","dependencies","settingsTemplateProcessor","_configureEnvTemplating","buildDefaultSettings","merge","DefaultConfigFile","pException","settings","_PerformEnvTemplating","NoEnvReplacement","_resolveEnv","tmpKey","_isObject","_deepMergeObjects","toObject","fromObject","forEach","fromValue","toValue","pSettingsFrom","pSettingsTo","tmpSettingsFrom","tmpSettingsTo","tmpSettingsFromCopy","fill","msCrypto","generateWhatWGBytes","tmpBuffer","Uint8Array","generateRandomBytes","generate","libRandomByteGenerator","FableUUID","_UUIDModeRandom","UUIDModeRandom","_UUIDLength","UUIDLength","_UUIDRandomDictionary","UUIDDictionary","randomByteGenerator","_HexLookup","bytesToUUID","pBuffer","generateUUIDv4","tmpRandomBytes","generateRandom","tmpUUID","getUUID","_OperationStatePrototype","GUID","Title","Version","Status","Completed","CompletionProgress","CompletionTimeElapsed","StepsCompleted","StartTime","EndTime","Errors","pOperationName","fable","name","state","writeOperationLog","toUTCString","writeOperationErrors","libFableServiceBase","libDataArithmatic","pOptions","pServiceHash","serviceType","_DataArithmaticLibrary","_MetaTemplateLibrary","options","pPatternStart","pPatternEnd","pParser","Matchers","Evaluate","Interpolate","Escaper","Unescaper","GuaranteedNonMatch","templateEscapes","u2028","u2029","renderFunction","templateString","renderTemplate","templateFunction","buildTemplateFunction","pTemplateText","TemplateSource","pCode","decodeURIComponent","Function","TemplateSourceCompiled","libAsyncWaterfall","libAsyncEachLimit","templates","waterfall","eachLimit","extend","pDestinationObject","_len2","pSourceObjects","_key3","template","serviceManager","instantiateServiceProviderWithoutRegistration","buildHashedTemplate","pTemplateHash","tmpTemplate","instantiateServiceProvider","chunk","pInput","pChunkSize","pChunkCache","tmpInputArray","tmpChunkSize","tmpChunkCache","splice","serviceTypes","services","defaultServices","serviceClasses","addServiceType","pServiceType","pServiceClass","pCustomServiceHash","tmpService","setDefaultServiceInstantiation","ServiceProviderBase","libFableSettings","libFableUUID","libFableLog","libFableServiceManager","libFableServiceDataArithmatic","libFableServiceTemplate","libFableServiceMetaTemplate","libFableServiceUtility","libFableOperation","Fable","settingsManager","libUUID","Dependencies","Operations","DataArithmatic","Utility","createOperation","getOperation","writeConsole","Form","tmpOperationTime","libObjectDiff","libCacheTraxx","pContext","pContextGUID","_Dependencies","jqueryLibrary","_NonHTMLState","_NonHTMLStateProperty","User","UndoLevels","DebugLog","__VirtualDOM","jquery","_Log","_LocalStorage","_UndoKeys","_UndoBuffer","_RedoKeys","_RedoBuffer","_SourceDocumentState","_CurrentDocumentState","_Context","_ContextGUID","setStorageProvider","pStorageProvider","checkStorageProvider","localStorage","cache","setItem","getItem","removeItem","getIndexKey","pValueType","getStorageKey","readIndex","tmpIndex","tmpData","IndexCreateTime","now","IndexUser","IndexLastReadTime","readIndexValue","tmpIndexKeyValue","touchIndex","Time","ValueType","ContextGUID","readData","writeData","deleteData","getValueAtAddress","pAddress","tmpSubObjectName","tmpNewAddress","setValueAtAddress","setValueAtAddressInContainer","pRecordObject","pFormContainerAddress","pFormContainerIndex","pFormValueAddress","pFormValue","tmpContainerObject","tmpFormContainerIndex","storeSourceData","storeRecoveryData","fCallback","tmpCallback","tmpRecoveryData","marshalFormToData","_RecoveryDocumentState","snapshotData","tmpNewUndoKey","tmpOldRecoveryState","tmpRedoKey","snapshotDataInitial","undoSnapshotCount","redoSnapshotCount","revertToPreviousSnapshot","tmpSnapshotKey","tmpSnapshotData","tmpCurrentFormData","marshalDataToForm","reapplyNextRevertedSnapshot","clearRecoveryData","readRecoveryData","restoreRecoveryScenarioData","tmpRecoveryScenarioData","readRecoveryScenario","ExistingRecovery","clearRecoveryScenarioData","storeRecoveryScenarioData","pRecoveryScenarioData","checkRecoveryState","pSourceData","NewSource","ExistingSource","tmpRecoveryDifferences","Diffs","ExistingRecovery_ExistingSource","ExistingSource_NewSource","ExistingRecovery_NewSource","Index","compareCurrentStateToUndoAndRedo","tmpCallBack","tmpCurrentStateData","tmpCurrentUndoObject","tmpCurrentRedoObject","tmpCurrentStateDataJSON","tmpCurrentUndoBufferSnapshotKey","tmpFirstRedoIndexWithDifferences","tmpComparisonData","UndoDelta","UndoGUIDDelta","Added","Deleted","RedoDelta","RedoGUIDDelta","tmpCurrentGUIDElements","tmpCurrentDataIndex","__GUID","sort","tmpUndoGUIDElements","tmpUndoDataIndex","tmpUndoDataMaxIndex","tmpRedoGUIDElements","tmpRedoDataIndex","tmpRedoDataMaxIndex","createArrayContainers","pArrayPropertyAddress","nonFormData","pParentPropertyAddress","pContainerPropertyAddress","pContainerIndex","tmpParentPropertyAddress","tmpParentPropertyAddressString","tmpContainerPropertyAddress","tmpContainerPropertyIndex","pKey","tmpRecord","tmpPropertyAddress","tmpFormElement","tagName","textContent","prop","val","tmpGUIDAttribute","attr","tmpFormValueElements","tmpUnknownValueIndex","pRecordIndex","pRecordAddress","tmpFormValue","tmpFormValueAddress","tmpFormContainerAddress","tmpFormContainerGUID","tmpGUIDValueAddress","cachetrax","factory","document","noGlobal","getProto","getPrototypeOf","flat","array","class2type","hasOwn","fnToString","ObjectFunctionString","support","isFunction","nodeType","item","isWindow","preservedScriptAttributes","type","src","nonce","noModule","DOMEval","node","doc","script","createElement","text","getAttribute","setAttribute","appendChild","parentNode","removeChild","toType","version","jQuery","selector","context","init","toArray","pushStack","elems","ret","prevObject","map","elem","first","last","even","grep","_elem","odd","copyIsArray","target","deep","isPlainObject","expando","isReady","msg","proto","globalEval","makeArray","results","inArray","second","invert","matches","callbackExpect","guid","_i","Sizzle","Expr","getText","isXML","tokenize","compile","select","outermostContext","sortInput","hasDuplicate","setDocument","docElem","documentIsHTML","rbuggyQSA","rbuggyMatches","contains","preferredDoc","dirruns","classCache","createCache","tokenCache","compilerCache","nonnativeSelectorCache","sortOrder","pushNative","list","booleans","whitespace","identifier","attributes","pseudos","rwhitespace","RegExp","rtrim","rcomma","rleadingCombinator","rdescend","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rhtml","rinputs","rheader","rnative","rquickExpr","rsibling","runescape","funescape","escape","nonHex","high","fromCharCode","rcssescape","fcssescape","ch","asCodePoint","unloadHandler","inDisabledFieldset","addCombinator","disabled","nodeName","dir","childNodes","els","seed","nid","groups","newSelector","newContext","ownerDocument","exec","getElementById","getElementsByTagName","getElementsByClassName","qsa","testContext","scope","toSelector","querySelectorAll","qsaError","removeAttribute","cacheLength","markFunction","assert","el","addHandle","attrs","handler","attrHandle","siblingCheck","cur","sourceIndex","nextSibling","createInputPseudo","createButtonPseudo","createDisabledPseudo","isDisabled","createPositionalPseudo","argument","matchIndexes","namespaceURI","documentElement","hasCompare","subWindow","defaultView","top","addEventListener","attachEvent","cssHas","querySelector","className","createComment","getById","getElementsByName","filter","attrId","find","getAttributeNode","tmp","input","innerHTML","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","sortDetached","aup","ap","bp","expr","elements","specified","sel","uniqueSort","duplicates","detectDuplicates","sortStable","firstChild","nodeValue","selectors","createPseudo","relative","preFilter","excess","unquoted","nodeNameSelector","pattern","operator","check","result","what","_argument","simple","forward","ofType","_context","xml","uniqueCache","outerCache","nodeIndex","start","parent","useCache","lastChild","uniqueID","pseudo","setFilters","idx","matched","not","matcher","unmatched","has","lang","elemLang","hash","location","root","focus","activeElement","hasFocus","href","tabIndex","enabled","checked","selected","selectedIndex","empty","header","button","_matchIndexes","radio","checkbox","file","password","image","submit","reset","tokens","combinator","skip","checkNonElements","doneName","oldCache","newCache","elementMatcher","matchers","condense","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","preMap","postMap","preexisting","contexts","multipleContexts","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","implicitRelative","matchContext","matchAnyContext","filters","parseOnly","soFar","preFilters","cached","setMatchers","elementMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","matcherFromGroupMatchers","token","compiled","_name","defaultValue","unique","isXMLDoc","escapeSelector","until","is","siblings","rneedsContext","rsingleTag","winnow","qualifier","rootjQuery","parseHTML","ready","rparentsprev","guaranteedUnique","children","contents","prev","sibling","targets","l","closest","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","contentDocument","content","rnothtmlwhite","Identity","Thrower","ex","adoptValue","resolve","reject","noValue","method","promise","fail","then","Callbacks","object","_","flag","createOptions","firing","memory","fired","locked","queue","firingIndex","fire","stopOnFalse","disable","lock","fireWith","Deferred","tuples","always","deferred","catch","pipe","fns","newDefer","tuple","returned","progress","notify","onFulfilled","onRejected","onProgress","maxDepth","depth","special","that","mightThrow","TypeError","notifyWith","resolveWith","exceptionHook","stackTrace","rejectWith","getStackHook","stateString","when","singleValue","remaining","resolveContexts","resolveValues","primary","updateFunc","rerrorNames","stack","message","readyException","readyList","completed","removeEventListener","readyWait","wait","readyState","doScroll","access","chainable","emptyGet","raw","bulk","_key","rmsPrefix","rdashAlpha","fcamelCase","_all","letter","toUpperCase","camelCase","string","acceptData","owner","Data","uid","configurable","data","hasData","dataPriv","dataUser","rbrace","rmultiDash","dataAttr","getData","removeData","_data","_removeData","dequeue","startLength","hooks","_queueHooks","stop","setter","clearQueue","count","defer","pnum","source","rcssNum","cssExpand","isAttached","composed","getRootNode","isHiddenWithinTree","style","display","css","adjustCSS","valueParts","tween","adjusted","scale","maxIterations","currentValue","initial","unit","cssNumber","initialInUnit","defaultDisplayMap","getDefaultDisplay","body","showHide","show","values","hide","toggle","rcheckableType","rtagName","rscriptType","createDocumentFragment","checkClone","cloneNode","noCloneChecked","option","wrapMap","thead","col","tr","td","getAll","setGlobalEval","refElements","tbody","tfoot","colgroup","caption","th","optgroup","buildFragment","scripts","selection","ignored","wrap","attached","fragment","nodes","htmlPrefilter","createTextNode","rtypenamespace","returnTrue","returnFalse","expectSync","safeActiveElement","on","types","origFn","event","off","leverageNative","notAsync","saved","isTrigger","delegateType","stopPropagation","stopImmediatePropagation","preventDefault","trigger","Event","handleObjIn","eventHandle","events","handleObj","handlers","namespaces","origType","elemData","handle","triggered","dispatch","bindType","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","nativeEvent","handlerQueue","fix","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","postDispatch","matchedHandlers","matchedSelectors","addProp","hook","originalEvent","writable","load","noBubble","click","beforeunload","returnValue","props","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","isSimulated","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","shiftKey","view","char","charCode","keyCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","which","blur","mouseenter","mouseleave","pointerenter","pointerleave","orig","related","rnoInnerhtml","rchecked","rcleanScript","manipulationTarget","disableScript","restoreScript","cloneCopyEvent","dest","udataOld","udataCur","fixInput","domManip","collection","hasScripts","iNoClone","valueIsFunction","html","_evalUrl","keepData","cleanData","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","detach","insertBefore","before","after","replaceChild","appendTo","prependTo","insertAfter","replaceAll","original","insert","rnumnonpx","rcustomProp","getStyles","opener","getComputedStyle","swap","old","rboxStyle","rtrimCSS","curCSS","computed","width","minWidth","maxWidth","isCustomProp","getPropertyValue","pixelBoxStyles","addGetHookIf","conditionFn","hookFn","computeStyleTests","container","cssText","divStyle","pixelPositionVal","reliableMarginLeftVal","roundPixelMeasures","marginLeft","right","pixelBoxStylesVal","boxSizingReliableVal","position","scrollboxSizeVal","offsetWidth","measure","reliableTrDimensionsVal","backgroundClip","clearCloneStyle","boxSizingReliable","pixelPosition","reliableMarginLeft","scrollboxSize","reliableTrDimensions","table","trChild","trStyle","height","borderTopWidth","borderBottomWidth","offsetHeight","cssPrefixes","emptyStyle","vendorProps","finalPropName","final","cssProps","capName","vendorPropName","rdisplayswap","cssShow","visibility","cssNormalTransform","letterSpacing","fontWeight","setPositiveNumber","boxModelAdjustment","dimension","box","isBorderBox","styles","computedVal","extra","delta","getWidthOrHeight","valueIsBorderBox","offsetProp","getClientRects","Tween","easing","cssHooks","opacity","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","gridArea","gridColumn","gridColumnEnd","gridColumnStart","gridRow","gridRowEnd","gridRowStart","lineHeight","order","orphans","widows","zIndex","zoom","origName","setProperty","getBoundingClientRect","scrollboxSizeBuggy","left","margin","padding","border","prefix","suffix","expand","expanded","parts","propHooks","run","percent","eased","duration","pos","step","fx","scrollTop","scrollLeft","linear","swing","fxNow","inProgress","rfxtypes","rrun","schedule","hidden","requestAnimationFrame","interval","tick","createFxNow","genFx","includeWidth","createTween","animation","Animation","tweeners","properties","stopped","prefilters","currentTime","startTime","tweens","opts","specialEasing","originalProperties","originalOptions","gotoEnd","propFilter","complete","timer","anim","tweener","oldfire","propTween","restoreDisplay","isBox","dataShow","unqueued","overflow","overflowX","overflowY","prefilter","speed","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","delay","time","timeout","clearTimeout","checkOn","optSelected","radioValue","boolHook","removeAttr","nType","attrHooks","attrNames","getter","lowercaseName","rfocusable","rclickable","stripAndCollapse","getClass","classesToArray","removeProp","propFix","tabindex","for","class","addClass","classNames","curValue","finalValue","removeClass","toggleClass","stateVal","isValidValue","hasClass","rreturn","valHooks","optionSet","focusin","rfocusMorph","stopPropagationCallback","onlyHandlers","bubbleType","ontype","lastElement","eventPath","parentWindow","simulate","triggerHandler","attaches","rquery","parseXML","parserErrorElem","DOMParser","parseFromString","rbracket","rCRLF","rsubmitterTypes","rsubmittable","buildParams","traditional","param","valueOrFunction","encodeURIComponent","serialize","serializeArray","r20","rhash","rantiCache","rheaders","rnoContent","rprotocol","transports","allTypes","originAnchor","addToPrefiltersOrTransports","structure","dataTypeExpression","dataType","dataTypes","inspectPrefiltersOrTransports","jqXHR","inspected","seekingTransport","inspect","prefilterOrFactory","dataTypeOrTransport","ajaxExtend","flatOptions","ajaxSettings","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","json","responseFields","converters","ajaxSetup","ajaxPrefilter","ajaxTransport","ajax","transport","cacheURL","responseHeadersString","responseHeaders","timeoutTimer","urlAnchor","fireGlobals","uncached","callbackContext","globalEventContext","completeDeferred","statusCode","requestHeaders","requestHeadersNames","strAbort","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","mimeType","status","abort","statusText","finalText","crossDomain","host","hasContent","ifModified","headers","beforeSend","success","send","nativeStatusText","responses","isSuccess","response","modified","ct","finalDataType","firstDataType","ajaxHandleResponses","conv2","current","conv","dataFilter","throws","ajaxConvert","getJSON","getScript","wrapAll","firstElementChild","wrapInner","htmlIsFunction","unwrap","visible","xhr","XMLHttpRequest","xhrSuccessStatus","xhrSupported","cors","errorCallback","open","username","xhrFields","onload","onerror","onabort","ontimeout","onreadystatechange","responseType","responseText","binary","scriptAttrs","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","createHTMLDocument","implementation","keepScripts","parsed","params","animated","offset","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","curElem","using","rect","win","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","defaultExtra","funcName","unbind","delegate","undelegate","hover","fnOver","fnOut","proxy","holdReady","hold","parseJSON","isNumeric","_jQuery","_$","$","cleanWrapCharacters","pInfoLog","pErrorLog","translationTable","translationCount","pTranslation","pTranslationSource","removeTranslationHash","pTranslationHash","removeTranslation","clearTranslations","translate","elucidatorSolver","elucidatorSolverState","checkAddressExists","tmpBracketStartIndex","tmpBracketStopIndex","tmpBoxedPropertyName","tmpBoxedPropertyReference","tmpBoxedPropertyNumber","fCleanWrapCharacters","checkFilters","pRecord","tmpAddress","libElucidator","tmpFilterState","Record","keepRecord","SolutionState","pMagicSearchExpression","tmpMagicComparisonPatternSet","tmpSearchAddress","tmpSearchComparator","tmpSearchValue","ComparisonState","SearchAddress","Comparator","SearchTerm","deleteValueAtAddress","pParentAddress","tmpParentAddress","tmpObjectTypeMarkerIndex","tmpObjectPropertyName","tmpArrayProperty","tmpPropertyParentAddress","tmpObjectProperty","tmpObjectPropertyKeys","tmpOutputArray","generateAddressses","pBaseAddress","pSchema","tmpBaseAddress","tmpSchema","tmpSchemaObjectEntry","Address","InSchema","DataType","tmpObjectProperties","pManyfestSchemaDescriptors","pAddressMapping","tmpManyfestAddresses","tmpHashMapping","pInputAddress","tmpNewDescriptorAddress","tmpOldDescriptorAddress","safeResolveAddressMappings","tmpManyfestSchemaDescriptors","pManyfestSchemaDescriptorsDestination","pManyfestSchemaDescriptorsSource","tmpSource","tmpNewManyfestSchemaDescriptors","pDescriptorAddress","libHashTranslation","libObjectAddressCheckAddressExists","libObjectAddressGetValue","libObjectAddressSetValue","libObjectAddressDeleteValue","libObjectAddressGeneration","libSchemaManipulation","Manyfest","pManifest","objectAddressCheckAddressExists","objectAddressGetValue","objectAddressSetValue","objectAddressDeleteValue","strict","defaultValues","Float","Integer","Boolean","Binary","DateTime","Null","elementAddresses","elementHashes","elementDescriptors","dataSolvers","dataSolverState","loadManifest","objectAddressGeneration","setElucidatorSolvers","pElucidatorSolver","pElucidatorSolverState","tmpNewOptions","tmpNewManyfest","getManifest","deserialize","pManifestString","tmpDescriptionAddresses","addDescriptor","Solvers","tmpSolverKeys","pDescriptor","getDescriptor","resolveHashAddress","eachDescriptor","tmpDescriptorAddresses","checkAddressExistsByHash","tmpInElementHashTable","tmpInTranslationTable","getDefaultValue","deleteValueByHash","validate","tmpValidationData","MissingElements","addValidationError","pErrorMessage","tmpValueExists","Required","tmpElementType","tmpDataType","populateDefaults","pOverwriteProperties","populateObject","fFilter","tmpObject","tmpOverwriteProperties","tmpFilterFunction","_REVERSE_MAP","_MAP","_KEYCODE_MAP","_SHIFT_MAP","_SPECIAL_ALIASES","command","return","navigator","platform","Mousetrap","action","_bindMultiple","_directMap","_callbacks","stopCallback","element","_belongsTo","composedPath","initialEventTarget","isContentEditable","handleKey","_handleKey","addKeycodes","documentMousetrap","_addEvent","_characterFromEvent","character","_isModifier","_pickBestAction","modifiers","_getReverseMap","_getKeyInfo","combination","_keysFromString","ancestor","targetElement","_resetTimer","_sequenceLevels","_ignoreNextKeyup","_ignoreNextKeypress","_nextExpectedAction","_resetSequences","doNotReset","activeSequences","_getMatches","sequenceName","modifiers1","modifiers2","seq","deleteCombo","combo","deleteSequence","_fireCallback","sequence","srcElement","_preventDefault","cancelBubble","_stopPropagation","_handleKeyEvent","_eventModifiers","_bindSequence","_increaseSequence","nextAction","_callbackAndReset","wrappedCallback","_bindSingle","callbacks","maxLevel","processedSequenceCallback","ignoreThisKeypress","combinations","assertPath","normalizeStringPosix","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","posix","cwd","resolvedPath","resolvedAbsolute","isAbsolute","trailingSeparator","joined","from","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","dirname","hasRoot","matchedSlash","basename","ext","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","_format","delimiter","win32","libWordTree","libStringParser","WordTree","StringParser","ParseTree","newParserState","pParseTree","Output","OutputBuffer","Pattern","PatternMatch","PatternMatchOutputBuffer","assignNode","pParserState","appendOutputBuffer","flushOutputBuffer","checkPatternEnd","PatternEnd","PatternStart","Parse","parseCharacter","tmpParserState","addChild","pTree","pPattern","pIndex","tmpLeaf","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","nextTick","title","browser","argv","versions","addListener","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","umask","clearImmediate","immediateIds","nextImmediateId","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","libPict","solver","libInformary","informary","Settings","manifest","libFable","libFableServiceManyfest","libFableServiceElucidator","libFableServiceInformary","defaultTemplateProcessor","_DefaultTemplateMethodsInitialized","manifestServiceProvider","_TemplateContainer","appData","initializeTemplateMethods","fExtraTemplateMethods","AppData","tmpHashParts","parseTemplate","pTemplateString","mousetrap"],"mappings":"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","file":"pict.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Pict = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nvar eachOfLimit = require('async.util.eachoflimit');\nvar withoutIndex = require('async.util.withoutindex');\n\nmodule.exports = function eachLimit(arr, limit, iterator, cb) {\n    return eachOfLimit(limit)(arr, withoutIndex(iterator), cb);\n};\n\n},{\"async.util.eachoflimit\":3,\"async.util.withoutindex\":14}],2:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(tasks) {\n    function makeCallback(index) {\n        function fn() {\n            if (tasks.length) {\n                tasks[index].apply(null, arguments);\n            }\n            return fn.next();\n        }\n        fn.next = function() {\n            return (index < tasks.length - 1) ? makeCallback(index + 1) : null;\n        };\n        return fn;\n    }\n    return makeCallback(0);\n};\n\n},{}],3:[function(require,module,exports){\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar onlyOnce = require('async.util.onlyonce');\nvar keyIterator = require('async.util.keyiterator');\n\nmodule.exports = function eachOfLimit(limit) {\n    return function(obj, iterator, cb) {\n        cb = once(cb || noop);\n        obj = obj || [];\n        var nextKey = keyIterator(obj);\n        if (limit <= 0) {\n            return cb(null);\n        }\n        var done = false;\n        var running = 0;\n        var errored = false;\n\n        (function replenish() {\n            if (done && running <= 0) {\n                return cb(null);\n            }\n\n            while (running < limit && !errored) {\n                var key = nextKey();\n                if (key === null) {\n                    done = true;\n                    if (running <= 0) {\n                        cb(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iterator(obj[key], key, onlyOnce(function(err) {\n                    running -= 1;\n                    if (err) {\n                        cb(err);\n                        errored = true;\n                    } else {\n                        replenish();\n                    }\n                }));\n            }\n        })();\n    };\n};\n\n},{\"async.util.keyiterator\":7,\"async.util.noop\":9,\"async.util.once\":10,\"async.util.onlyonce\":11}],4:[function(require,module,exports){\n'use strict';\nvar setImmediate = require('async.util.setimmediate');\nvar restParam = require('async.util.restparam');\n\nmodule.exports = function(fn) {\n    return restParam(function(args) {\n        var callback = args.pop();\n        args.push(function() {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate(function() {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        var sync = true;\n        fn.apply(this, args);\n        sync = false;\n    });\n};\n\n},{\"async.util.restparam\":12,\"async.util.setimmediate\":13}],5:[function(require,module,exports){\n'use strict';\n\nmodule.exports = Array.isArray || function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar isArray = require('async.util.isarray');\n\nmodule.exports = function isArrayLike(arr) {\n    return isArray(arr) || (\n        // has a positive integer length property\n        typeof arr.length === 'number' &&\n        arr.length >= 0 &&\n        arr.length % 1 === 0\n    );\n};\n\n},{\"async.util.isarray\":5}],7:[function(require,module,exports){\n'use strict';\n\nvar _keys = require('async.util.keys');\nvar isArrayLike = require('async.util.isarraylike');\n\nmodule.exports = function keyIterator(coll) {\n    var i = -1;\n    var len;\n    var keys;\n    if (isArrayLike(coll)) {\n        len = coll.length;\n        return function next() {\n            i++;\n            return i < len ? i : null;\n        };\n    } else {\n        keys = _keys(coll);\n        len = keys.length;\n        return function next() {\n            i++;\n            return i < len ? keys[i] : null;\n        };\n    }\n};\n\n},{\"async.util.isarraylike\":6,\"async.util.keys\":8}],8:[function(require,module,exports){\n'use strict';\n\nmodule.exports = Object.keys || function keys(obj) {\n    var _keys = [];\n    for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            _keys.push(k);\n        }\n    }\n    return _keys;\n};\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function noop () {};\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function once(fn) {\n    return function() {\n        if (fn === null) return;\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function only_once(fn) {\n    return function() {\n        if (fn === null) throw new Error('Callback was already called.');\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n\n},{}],12:[function(require,module,exports){\n'use strict';\nmodule.exports = function restParam(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n        var length = Math.max(arguments.length - startIndex, 0);\n        var rest = new Array(length);\n        for (var index = 0; index < length; index++) {\n            rest[index] = arguments[index + startIndex];\n        }\n        switch (startIndex) {\n            case 0:\n                return func.call(this, rest);\n            case 1:\n                return func.call(this, arguments[0], rest);\n        }\n    };\n};\n\n},{}],13:[function(require,module,exports){\n(function (setImmediate){(function (){\n'use strict';\n\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\nvar fallback = function(fn) {\n    setTimeout(fn, 0);\n};\n\nmodule.exports = function setImmediate(fn) {\n    // not a direct alias for IE10 compatibility\n    return (_setImmediate || fallback)(fn);\n};\n\n}).call(this)}).call(this,require(\"timers\").setImmediate)\n\n},{\"timers\":99}],14:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function withoutIndex(iterator) {\n    return function(value, index, callback) {\n        return iterator(value, callback);\n    };\n};\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar isArray = require('async.util.isarray');\nvar restParam = require('async.util.restparam');\nvar ensureAsync = require('async.util.ensureasync');\nvar iterator = require('async.iterator');\n\nmodule.exports = function(tasks, cb) {\n    cb = once(cb || noop);\n    if (!isArray(tasks)) return cb(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return cb();\n\n    function wrapIterator(iterator) {\n        return restParam(function(err, args) {\n            if (err) {\n                cb.apply(null, [err].concat(args));\n            } else {\n                var next = iterator.next();\n                if (next) {\n                    args.push(wrapIterator(next));\n                } else {\n                    args.push(cb);\n                }\n                ensureAsync(iterator).apply(null, args);\n            }\n        });\n    }\n    wrapIterator(iterator(tasks))();\n};\n\n},{\"async.iterator\":2,\"async.util.ensureasync\":4,\"async.util.isarray\":5,\"async.util.noop\":9,\"async.util.once\":10,\"async.util.restparam\":12}],16:[function(require,module,exports){\n\n},{}],17:[function(require,module,exports){\n/**\n* Cache data structure with:\n*  - enumerable items\n*  - unique hash item access (if none is passed in, one is generated)\n*  - size (length) expiration\n*  - controllable expiration (e.g. keep in cache longer if older/less likely to change)\n*  - time-based expiration\n*  - custom expiration based on passed-in function\n*\n* Also:\n*  - built to work well with browserify\n*  - no dependencies at all\n*  - pet friendly\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nconst libLinkedList = require(`./LinkedList.js`);\n\nclass CashMoney\n{\n\tconstructor()\n\t{\n\t\t// The map of node objects by hash because Reasons.\n\t\tthis._HashMap = {};\n\n\t\tthis._List = new libLinkedList();\n\n\t\t// If the list gets over maxLength, we will automatically remove nodes on insertion.\n\t\tthis.maxLength = 0;\n\n\t\t// If cache entries get over this age, they are removed with prune\n\t\tthis.maxAge = 0;\n\t}\n\n\t// Add (or update) a node in the cache\n\tput(pData, pHash)\n\t{\n\t\t// If the hash of the record exists\n\t\tif (this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\t// Just update the hashed records datum\n\t\t\tthis._HashMap[pHash].Datum = pData;\n\t\t\treturn this._HashMap[pHash].Datum;\n\t\t}\n\n\t\tlet tmpNode = this._List.push(pData, pHash);\n\t\tthis._HashMap[tmpNode.Hash] = tmpNode;\n\n\t\t// Automatically prune if over length, but only prune this nodes worth.\n\t\tif (this.maxLength > 0   &&   this._List.length > this.maxLength)\n\t\t{\n\t\t\t// Pop it off the head of the list\n\t\t\ttmpNode = this._List.pop();\n\t\t\t// Also remove it from the hashmap\n\t\t\tdelete this._HashMap[tmpNode.Hash];\n\t\t}\n\n\t\t// Now some expiration properties on the node metadata... namely the birthdate in ms of the node\n\t\ttmpNode.Metadata.Created = +new Date();\n\n\t\treturn tmpNode.Datum;\n\t}\n\n\t// Reinvigorate a node based on hash, updating the timestamp and moving it to the head of the list (also removes custom metadata)\n\ttouch(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\t\t\n\t\t// Get the old node out of the list\n\t\tlet tmpNode = this._List.remove(this._HashMap[pHash]);\n\t\t// Remove it from the hash map\n\t\tdelete this._HashMap[pHash];\n\n\t\t// Now put it back, fresh.\n\t\treturn this.put(tmpNode.Datum, tmpNode.Hash);\n\t}\n\n\t// Expire a cached record based on hash\n\texpire(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\t\t\n\t\tlet tmpNode = this._HashMap[pHash];\n\n\t\t// Remove it from the list of cached records\n\t\ttmpNode = this._List.remove(tmpNode);\n\t\t// Also remove it from the hashmap\n\t\tdelete this._HashMap[tmpNode.Hash];\n\n\t\t// Return it in case the consumer wants to do anything with it\n\t\treturn tmpNode;\n\t}\n\n\t// Prune records from the cached set based on maxAge\n\tpruneBasedOnExpiration(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tif (this.maxAge < 1)\n\t\t\treturn fComplete(tmpRemovedRecords);\n\n\t\t// Now enumerate each record and remove any that are expired\n\t\tlet tmpNow = +new Date();\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\t// Expire the node if it is older than max age milliseconds\n\t\t\tif (tmpNow - this._HashMap[tmpKeys[i]].Metadata.Created >= this.maxAge)\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on maxLength\n\tpruneBasedOnLength(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\t// Pop records off until we have reached maxLength unless it's 0\n\t\tif (this.maxLength > 0)\n\t\t\twhile (this._List.length > this.maxLength)\n\t\t\t\ttmpRemovedRecords.push(this._List.pop());\n\n\t\treturn fComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on passed in pPruneFunction(pDatum, pHash, pNode) -- returning true expires it\n\tpruneCustom(fComplete, fPruneFunction, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\tlet tmpNode = this._HashMap[tmpKeys[i]];\n\t\t\t// Expire the node if the passed in function returns true\n\t\t\tif (fPruneFunction(tmpNode.Datum, tmpNode.Hash, tmpNode))\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\t\n\t// Prune the list down to the asserted rules (max age then max length if still too long)\n\tprune(fComplete)\n\t{\n\t\tlet tmpRemovedRecords = [];\n\n\t\t// If there are no cached records, we are done.\n\t\tif (this._List.length < 1)\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t\n\t\t// Now prune based on expiration time\n\t\tthis.pruneBasedOnExpiration((fExpirationPruneComplete)=>\n\t\t\t{\n\t\t\t\t// Now prune based on length, then return the removed records in the callback.\n\t\t\t\tthis.pruneBasedOnLength(fComplete, tmpRemovedRecords);\n\t\t\t}, tmpRemovedRecords);\n\t}\n\t\n\t// Read a datum by hash from the cache\n\tread(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\t\t\n\t\treturn this._HashMap[pHash].Datum;\n\t}\n\t\n\t// Get a low level node (including metadata statistics) by hash from the cache\n\tgetNode(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\t\t\n\t\treturn this._HashMap[pHash];\n\t}\n}\n\nmodule.exports = CashMoney;\n},{\"./LinkedList.js\":19}],18:[function(require,module,exports){\n/**\n* Double Linked List Node\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Linked List Node Prototype\n*\n* @class LinkedListNode\n* @constructor\n*/\n\nclass LinkedListNode\n{\n\tconstructor()\n\t{\n\t\tthis.Hash = false;\n\t\tthis.Datum = false;\n\n\t\t// This is where expiration and other elements are stored;\n\t\tthis.Metadata = {};\n\n\t\tthis.LeftNode = false;\n\t\tthis.RightNode = false;\n\n\t\t// To allow safe specialty operations on nodes\n\t\tthis.__ISNODE = true;\n\t}\n}\n\nmodule.exports = LinkedListNode;\n},{}],19:[function(require,module,exports){\n\"use strict\"\n/**\n* Simple double linked list to hold the cache entries in, in order.\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module FeeFiFo\n*/\n\nconst libLinkedListNode = require('./LinkedList-Node.js');\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nclass LinkedList\n{\n\tconstructor()\n\t{\n\t\t// Total number of nodes ever processed by this ADT\n\t\tthis.totalNodes = 0;\n\n\t\t// The length of the set of nodes currently in the list\n\t\tthis.length = 0;\n\n\t\tthis.head = false;\n\t\tthis.tail = false;\n\t}\n\n\t// Create a node object.\n\tinitializeNode(pDatum, pHash)\n\t{\n\t\t// Don't allow undefined to be added to the list because of reasons\n\t\tif (typeof(pDatum) === 'undefined')\n\t\t\treturn false;\n\n\t\tthis.totalNodes++;\n\n\t\t// Get (or create) a unique hash\n\t\tlet tmpHash = (typeof(pHash) != 'undefined') ? pHash : `NODE[${this.totalNodes}]`;\n\n\t\tlet tmpNode = new libLinkedListNode();\n\n\t\ttmpNode.Hash = tmpHash;\n\t\ttmpNode.Datum = pDatum;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Add a node to the end (right of tail) of the list.\n\tappend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.tail.RightNode = tmpNode;\n\t\ttmpNode.LeftNode = this.tail;\n\t\tthis.tail = tmpNode;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Append to tail of list (FIFO)\n\tpush(pDatum, pHash)\n\t{\n\t\treturn this.append(pDatum, pHash);\n\t}\n\n\t// Add a node to the beginning (left of head) of the list.\n\tprepend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.head.LeftNode = tmpNode;\n\t\ttmpNode.RightNode = this.head;\n\t\tthis.head = tmpNode;\n\t\treturn tmpNode;\n\t}\n\n\t// Remove a node from the list\n\tremove(pNode)\n\t{\n\t\tif (typeof(pNode) === 'undefined')\n\t\t\treturn false;\n\n\t\tif (!pNode.__ISNODE)\n\t\t\treturn false;\n\n\t\tthis.length--;\n\n\t\t// Last element in list.  Empty it out.\n\t\tif (this.length < 1)\n\t\t{\n\t\t\tthis.head = false;\n\t\t\tthis.tail = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's somewhere in the middle, surgically remove it.\n\t\tif (pNode.LeftNode && pNode.RightNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = pNode.RightNode;\n\t\t\tpNode.RightNode.LeftNode = pNode.LeftNode;\n\n\t\t\tpNode.RightNode = false;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's the tail\n\t\tif (pNode.LeftNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = false;\n\t\t\tthis.tail = pNode.LeftNode;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It must be the head\n\t\tpNode.RightNode.LeftNode = false;\n\t\tthis.head = pNode.RightNode;\n\t\tpNode.RightNode = false;\n\t\treturn pNode;\n\t}\n\n\t// Remove the head of the list (FIFO)\n\tpop()\n\t{\n\t\treturn this.remove(this.head);\n\t}\n\n\t// Enumerate over each node IN ORDER, running the function fAction(pDatum, pHash, fCallback) then calling the function fComplete callback when done\n\teach(fAction, fComplete)\n\t{\n\t\tif (this.length < 1)\n\t\t\treturn fComplete();\n\n\t\tlet tmpNode = false;\n\n\t\tlet fIterator = (pError)=>\n\t\t{\n\t\t\t// If the user passed in a callback with an error, call their callback with the error\n\t\t\tif (pError)\n\t\t\t\treturn fComplete(pError);\n\n\t\t\t// If there is no node, this must be the initial run.\n\t\t\tif (!tmpNode)\n\t\t\t\ttmpNode = this.head;\n\t\t\t// Check if we are at the tail of the list\n\t\t\telse if (!tmpNode.RightNode)\n\t\t\t\treturn fComplete();\n\t\t\t// Proceed to the next node\n\t\t\telse\n\t\t\t\ttmpNode = tmpNode.RightNode;\n\n\t\t\t// Call the actual action\n\t\t\t// I hate this pattern because long tails eventually cause stack overflows.\n\t\t\tfAction(tmpNode.Datum, tmpNode.Hash, fIterator);\n\t\t};\n\n\t\t// Now kick off the iterator\n\t\treturn fIterator();\n\t}\n\n\t// Seek a specific node, 0 is the index of the first node.\n\tseek(pNodeIndex)\n\t{\n\t\tif (!pNodeIndex)\n\t\t\treturn false;\n\t\tif (this.length < 1)\n\t\t\treturn false;\n\t\tif (pNodeIndex >= this.length)\n\t\t\treturn false;\n\n\t\tlet tmpNode = this.head;\n\t\tfor (let i = 0; i < pNodeIndex; i++)\n\t\t{\n\t\t\ttmpNode = tmpNode.RightNode;\n\t\t}\n\n\t\treturn tmpNode;\n\t}\n}\n\nmodule.exports = LinkedList;\n},{\"./LinkedList-Node.js\":18}],20:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n/**\n* Data Arithmatic\n*\n* @class DataArithmatic\n*/\nclass DataArithmatic\n{\n\tconstructor()\n\t{\n\t\t// Regular Expressions (so they don't have to be recompiled every time)\n\t\t// These could be defined as static, but I'm not sure if that will work with browserify ... and specifically the QT browser.\n\t\tthis._Regex_formatterInsertCommas = /.{1,3}/g;\n\t\t// Match Function:\n\t\t// function(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t\t// Thoughts about below:   /^([+-]?)(0*)(\\d+)(\\.(\\d+))?$/;\n\t\tthis._Regex_formatterAddCommasToNumber = /^([-+]?)(0?)(\\d+)(.?)(\\d+)$/g;\n\t\tthis._Regex_formatterDollarsRemoveCommas = /,/gi;\n\t\tthis._Regex_formatterCleanNonAlpha = /[^a-z0-9]/gi;\n\n\t\t// TODO: Potentially pull these in from a configuration.\n\t\t// TODO: Use locale data for this if it's defaults all the way down.\n\t\tthis._Value_MoneySign_Currency = '$';\n\t\tthis._Value_NaN_Currency = '--';\n\t\tthis._Value_GroupSeparator_Number = ',';\n\n\t\tthis._Value_Prefix_StringHash = 'HSH';\n\t\tthis._Value_Clean_formatterCleanNonAlpha = '_';\n\n\t\tthis._UseEngineStringStartsWith = (typeof(String.prototype.startsWith) === 'function');\n\t\tthis._UseEngineStringEndsWith = (typeof(String.prototype.endsWith) === 'function');\n\t}\n\n\n\t/*************************************************************************\n\t * String Manipulation and Comparison Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Reverse a string\n\t *\n\t * @param {string} pString - The string to reverse\n\t * @returns {string}\n\t */\n\tstringReverse (pString)\n\t{\n\t\t// TODO: Benchmark if there are faster ways we want to do this with all the newer JS stuff\n\t\t//       ... and if it will work with browserify in a clean way.\n\t    return pString.split('').reverse().join('');\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pStartIndex\n\t * @returns {*}\n\t */\n\tstringStartsWith (pString, pSearchString, pStartIndex)\n\t{\n\t\tif (this._UseEngineStringStartsWith)\n\t\t{\n\t\t\treturn pString.startsWith(pSearchString, pStartIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringStartsWith_Polyfill.call(pString, pSearchString, pStartIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pStartIndex - The index to start the search at\n\t * @returns {boolean}\n\t */\n\tstringStartsWith_Polyfill (pSearchString, pStartIndex)\n\t{\n\t\treturn this.slice(pStartIndex || 0, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pEndIndex\n\t * @returns {*}\n\t */\n\tstringEndsWith (pString, pSearchString, pEndIndex)\n\t{\n\t\tif (this._UseEngineStringEndsWith)\n\t\t{\n\t\t\treturn pString.endsWith(pSearchString, pEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringEndsWith_Polyfill.call(pString, pSearchString, pEndIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pEndIndex - The index to end the search at\n\t * @returns {boolean}\n\t */\n\tstringEndsWith_Polyfill (pSearchString, pEndIndex)\n\t{\n\t\t// This works much better than >= because\n\t\t// it compensates for NaN:\n\t\tif (!(pEndIndex < this.length))\n\t\t{\n\t\t\tpEndIndex = this.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpEndIndex |= 0; // round position\n\t\t}\n\t\treturn this.substr(pEndIndex - pSearchString.length, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Generate an insecure string hash.  Not meant to be secure, just a quick way to generate a hash for a string.  This is not a cryptographic hash.  Additional warranty and disclaimer ... this is not for passwords!\n\t *\n\t * @param {string} pString\n\t * @returns {string}\n\t */\n\tinsecureStringHash (pString)\n\t{\n\t    let tmpHash = 0;\n\t    let tmpStringLength = pString.length;\n\t    let tmpCharacterIndex = 0;\n\n\t    while (tmpCharacterIndex < tmpStringLength)\n\t    {\n\t        tmpHash = (tmpHash << 5) - tmpHash + pString.charCodeAt(tmpCharacterIndex++) | 0;\n\t    }\n\n\t    return `${this._Value_Prefix_StringHash}${tmpHash}`;\n\t}\n\n\t/**\n\t * Clean wrapping characters if they exist consistently around the string.  If they do not, the string is returned unchanged.\n\t *\n\t * @param {string} pWrapCharacter - The character expected as the wrapping character\n\t * @param {string} pString - the string to clean\n\t * @returns {string}\n\t */\n\tcleanEnclosureWrapCharacters (pWrapCharacter, pString)\n\t{\n\t\t// # Use case from ManyFest DSL:\n\t\t//\n\t\t// When a boxed property is passed in, it should have quotes of some\n\t\t// kind around it.\n\t\t//\n\t\t// For instance:\n\t\t// \t\tMyValues['Name']\n\t\t// \t\tMyValues[\"Age\"]\n\t\t// \t\tMyValues[`Cost`]\n\t\t//\n\t\t// This function is necessary to remove the wrapping quotes before object\n\t\t// resolution can occur.\n\t\tif (pString.startsWith(pWrapCharacter) && pString.endsWith(pWrapCharacter))\n\t\t{\n\t\t\treturn pString.substring(1, pString.length - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn pString;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {*} pString\n\t * @returns\n\t */\n\tcleanNonAlphaCharacters (pString)\n\t{\n\t    if ((typeof(pString) == 'string') && (pString != ''))\n\t    {\n\t        return pString.replace(this._Regex_formatterCleanNonAlpha, this._Value_Clean_formatterCleanNonAlpha);\n\t    }\n\t}\n\n\n\t/*************************************************************************\n\t * Number Formatting Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Insert commas every 3 characters from the right.  Used by formatterAddCommasToNumber().\n\t *\n\t * @param {*} pString\n\t * @returns {*}\n\t */\n\tformatterInsertCommas (pString)\n\t{\n\t    // Reverse, because it's easier to do things from the left, given arbitrary digit counts\n\t    let tmpReversed = this.stringReverse(pString);\n\t    // Add commas every three characters\n\t    let tmpReversedWithCommas = tmpReversed.match(this._Regex_formatterInsertCommas).join(',');\n\t    // Reverse again (back to normal direction)\n\t    return this.stringReverse(tmpReversedWithCommas);\n\t}\n\n\tprocessAddCommasToNumberRegex(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t{\n\t\t// If there was no decimal, the last capture grabs the final digit, so\n\t\t// we have to put it back together with the 'before' substring\n\t\treturn pSign + (pDecimal ? this.formatterInsertCommas(pBefore) + pDecimal + pAfter : this.formatterInsertCommas(pBefore + pAfter));\n\t}\n\n\t/**\n\t * Add Commas to a Number for readability.\n\t *\n\t * @param {*} pNumber\n\t * @returns {string}\n\t */\n\tformatterAddCommasToNumber (pNumber)\n\t{\n\t    // If the regex doesn't match, `replace` returns the string unmodified\n\t    return (pNumber.toString()).replace\n\t    (\n\t\t\tthis._Regex_formatterAddCommasToNumber,\n\t        this.processAddCommasToNumberRegex.bind(this)\n\t    );\n\t}\n\n\t/**\n\t * This will take a number and format it as a dollar string.  It will also add commas to the number.  If the number is not a number, it will return '--'.\n\t *\n\t * @param {*} pValue\n\t * @returns {string}\n\t */\n\tformatterDollars (pValue)\n\t{\n\t    let tmpDollarAmount = parseFloat(pValue).toFixed(2);\n\n\t    if (isNaN(tmpDollarAmount))\n\t    {\n\t        // Try again and see if what was passed in was a dollars string.\n\t        if (typeof(pValue) == 'string')\n\t        {\n\t\t\t\t// TODO: Better rounding function?  This is a hack to get rid of the currency symbol and commas.\n\t            tmpDollarAmount = parseFloat(pValue.replace(this._Value_MoneySign_Currency,'').replace(this._Regex_formatterDollarsRemoveCommas,'')).toFixed(2);\n\t        }\n\t\t\t// If we didn't get a number, return the \"not a number\" string.\n\t        if (isNaN(tmpDollarAmount))\n\t        {\n\t            return this._Value_NaN_Currency;\n\t        }\n\t    }\n\n\t    // TODO: Get locale data and use that for this stuff.\n\t    return `$${this.formatterAddCommasToNumber(tmpDollarAmount)}`;\n\t}\n\n\t/**\n\t * Round a number to a certain number of digits.  If the number is not a number, it will return 0.  If no digits are specified, it will default to 2 significant digits.\n\t *\n\t * @param {*} pValue\n\t * @param {number} pDigits\n\t * @returns {string}\n\t */\n\tformatterRoundNumber (pValue, pDigits)\n\t{\n\t    let tmpDigits = (typeof(pDigits) == 'undefined') ? 2 : pDigits;\n\n\t    let tmpValue = Number.parseFloat(pValue).toFixed(tmpDigits);\n\t    if (isNaN(tmpValue))\n\t    {\n\t        let tmpZed = 0;\n\t        return tmpZed.toFixed(tmpDigits);\n\t    }\n\t    else\n\t    {\n\t        return tmpValue;\n\t    }\n\t}\n\n\n\t/*************************************************************************\n\t * String Tokenization Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Return the string before the matched substring.\n\t *\n\t * If the substring is not found, the entire string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringBeforeMatch (pString, pMatch)\n\t{\n\t\treturn pString.split(pMatch)[0];\n\t}\n\n\t/**\n\t * Return the string after the matched substring.\n\t *\n\t * If the substring is not found, an empty string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringAfterMatch (pString, pMatch)\n\t{\n\t    let tmpStringSplitLocation = pString.indexOf(pMatch);\n\n\t\tif ((tmpStringSplitLocation < 0) || ((tmpStringSplitLocation + pMatch.length) >= pString.length))\n\t    {\n\t        return '';\n\t    }\n\n\t    return pString.substring(tmpStringSplitLocation + pMatch.length);\n\t}\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures (pString, pEnclosureStart, pEnclosureEnd)\n\t{\n\t    let tmpString = (typeof(pString) == 'string') ? pString : '';\n\t    let tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t    let tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t    let tmpEnclosureCount = 0;\n\t    let tmpEnclosureDepth = 0;\n\t    for (let i = 0; i < tmpString.length; i++)\n\t    {\n\t        // This is the start of an enclosure\n\t        if (tmpString[i] == tmpEnclosureStart)\n\t        {\n\t            if (tmpEnclosureDepth == 0)\n\t            {\n\t                tmpEnclosureCount++;\n\t            }\n\t            tmpEnclosureDepth++;\n\t        }\n\t        else if (tmpString[i] == tmpEnclosureEnd)\n\t        {\n\t            tmpEnclosureDepth--;\n\t        }\n\t    }\n\n\t    return tmpEnclosureCount;\n\t}\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd)\n\t{\n\t    let tmpString = (typeof(pString) == 'string') ? pString : '';\n\t    let tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t    let tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t    let tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t    let tmpEnclosureCount = 0;\n\t    let tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t    let tmpEnclosedValueStartIndex = 0;\n\t    let tmpEnclosedValueEndIndex = 0;\n\n\t    for (let i = 0; i < tmpString.length; i++)\n\t    {\n\t        // This is the start of an enclosure\n\t        if (tmpString[i] == tmpEnclosureStart)\n\t        {\n\t            tmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t        }\n\t\t\t// This is the end of an enclosure\n\t        else if (tmpString[i] == tmpEnclosureEnd)\n\t        {\n\t            tmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t        }\n\t    }\n\n\t    if (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t    {\n\t\t\t// Return an empty string if the enclosure is not found\n\t        return '';\n\t    }\n\n\t    if ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t    {\n\t        return tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t    }\n\t    else\n\t    {\n\t        return tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t    }\n\t}\n\n\n\t/**\n\t * Remove an enclosure from a string based on the index of the enclosure.\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToRemove\n\t * @param {number} pEnclosureStart\n\t * @param {number} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringRemoveEnclosureByIndex (pString, pEnclosureIndexToRemove, pEnclosureStart, pEnclosureEnd)\n\t{\n\t    let tmpString = (typeof(pString) == 'string') ? pString : '';\n\t    let tmpEnclosureIndexToRemove = (typeof(pEnclosureIndexToRemove) == 'number') ? pEnclosureIndexToRemove : 0;\n\t    let tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t    let tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t    let tmpEnclosureCount = 0;\n\t    let tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t    let tmpEnclosureStartIndex = 0;\n\t    let tmpEnclosureEndIndex = 0;\n\n\t    for (let i = 0; i < tmpString.length; i++)\n\t    {\n\t        // This is the start of an enclosure\n\t        if (tmpString[i] == tmpEnclosureStart)\n\t        {\n\t            tmpEnclosureDepth++;\n\n\t            if (tmpEnclosureDepth == 1)\n\t            {\n\t                tmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToRemove == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosureStartIndex = i;\n\t\t\t\t\t}\n\t            }\n\t        }\n\t        else if (tmpString[i] == tmpEnclosureEnd)\n\t        {\n\t            tmpEnclosureDepth--;\n\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosureEndIndex <= tmpEnclosureStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t        }\n\t    }\n\n\t    if (tmpEnclosureCount <= tmpEnclosureIndexToRemove)\n\t    {\n\t        return tmpString;\n\t    }\n\n\t    let tmpReturnString = '';\n\n\t    if (tmpEnclosureStartIndex > 1)\n\t    {\n\t        tmpReturnString = tmpString.substring(0, tmpEnclosureStartIndex);\n\t    }\n\n\t    if ((tmpString.length > (tmpEnclosureEndIndex + 1)) && (tmpEnclosureEndIndex > tmpEnclosureStartIndex))\n\t    {\n\t        tmpReturnString += tmpString.substring(tmpEnclosureEndIndex+1);\n\t    }\n\n\t    return tmpReturnString;\n\t}\n}\n\nmodule.exports = DataArithmatic;\n},{}],21:[function(require,module,exports){\n;(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*!\r\n   *  decimal.js v10.4.3\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n    tag = '[object Decimal]',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { toStringTag: tag };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  clampedTo                 clamp\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n   * delineated by `min` and `max`.\r\n   *\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  P.clampedTo = P.clamp = function (min, max) {\r\n    var k,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n    min = new Ctor(min);\r\n    max = new Ctor(max);\r\n    if (!min.s || !max.s) return new Ctor(NaN);\r\n    if (min.gt(max)) throw Error(invalidArgument + max);\r\n    k = x.cmp(min);\r\n    return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var halfPi,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.asin();\r\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return halfPi.minus(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, len, y;\r\n\r\n    if (x.isZero()) return x;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    len = x.d.length;\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\r\n  function maxOrMin(Ctor, args, ltgt) {\r\n    var y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      } else if (x[ltgt](y)) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str.indexOf('_') > -1) {\r\n      str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n      if (isDecimal.test(str)) return parseDecimal(x, str);\r\n    } else if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n    }\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clamp\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  sum\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  function clamp(x, min, max) {\r\n    return new this(x).clamp(min, max);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (isDecimalInstance(v)) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n\r\n        // Infinity, NaN.\r\n        } else if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n\r\n      } else if (t !== 'string') {\r\n        throw Error(invalidArgument + v);\r\n      }\r\n\r\n      // Minus sign?\r\n      if ((i = v.charCodeAt(0)) === 45) {\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        // Plus sign?\r\n        if (i === 43) v = v.slice(1);\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.clamp = clamp;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.sum = sum;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, 'lt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 'gt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * Only the result is rounded, not the intermediate calculations.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function sum() {\r\n    var i = 0,\r\n      args = arguments,\r\n      x = new this(args[i]);\r\n\r\n    external = false;\r\n    for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n    external = true;\r\n\r\n    return finalise(x, this.precision, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n  Decimal.prototype.constructor = Decimal;\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol['for']('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n\n},{}],22:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils.js\");\n\nconst addedDiff = (lhs, rhs) => {\n  if (lhs === rhs || !(0, _utils.isObject)(lhs) || !(0, _utils.isObject)(rhs)) return {};\n  return Object.keys(rhs).reduce((acc, key) => {\n    if ((0, _utils.hasOwnProperty)(lhs, key)) {\n      const difference = addedDiff(lhs[key], rhs[key]);\n      if ((0, _utils.isObject)(difference) && (0, _utils.isEmpty)(difference)) return acc;\n      acc[key] = difference;\n      return acc;\n    }\n\n    acc[key] = rhs[key];\n    return acc;\n  }, (0, _utils.makeObjectWithoutPrototype)());\n};\n\nvar _default = addedDiff;\nexports.default = _default;\n},{\"./utils.js\":28}],23:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils.js\");\n\nconst deletedDiff = (lhs, rhs) => {\n  if (lhs === rhs || !(0, _utils.isObject)(lhs) || !(0, _utils.isObject)(rhs)) return {};\n  return Object.keys(lhs).reduce((acc, key) => {\n    if ((0, _utils.hasOwnProperty)(rhs, key)) {\n      const difference = deletedDiff(lhs[key], rhs[key]);\n      if ((0, _utils.isObject)(difference) && (0, _utils.isEmpty)(difference)) return acc;\n      acc[key] = difference;\n      return acc;\n    }\n\n    acc[key] = undefined;\n    return acc;\n  }, (0, _utils.makeObjectWithoutPrototype)());\n};\n\nvar _default = deletedDiff;\nexports.default = _default;\n},{\"./utils.js\":28}],24:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _added = _interopRequireDefault(require(\"./added.js\"));\n\nvar _deleted = _interopRequireDefault(require(\"./deleted.js\"));\n\nvar _updated = _interopRequireDefault(require(\"./updated.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst detailedDiff = (lhs, rhs) => ({\n  added: (0, _added.default)(lhs, rhs),\n  deleted: (0, _deleted.default)(lhs, rhs),\n  updated: (0, _updated.default)(lhs, rhs)\n});\n\nvar _default = detailedDiff;\nexports.default = _default;\n},{\"./added.js\":22,\"./deleted.js\":23,\"./updated.js\":27}],25:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils.js\");\n\nconst diff = (lhs, rhs) => {\n  if (lhs === rhs) return {}; // equal return no diff\n\n  if (!(0, _utils.isObject)(lhs) || !(0, _utils.isObject)(rhs)) return rhs; // return updated rhs\n\n  const deletedValues = Object.keys(lhs).reduce((acc, key) => {\n    if (!(0, _utils.hasOwnProperty)(rhs, key)) {\n      acc[key] = undefined;\n    }\n\n    return acc;\n  }, (0, _utils.makeObjectWithoutPrototype)());\n\n  if ((0, _utils.isDate)(lhs) || (0, _utils.isDate)(rhs)) {\n    if (lhs.valueOf() == rhs.valueOf()) return {};\n    return rhs;\n  }\n\n  return Object.keys(rhs).reduce((acc, key) => {\n    if (!(0, _utils.hasOwnProperty)(lhs, key)) {\n      acc[key] = rhs[key]; // return added r key\n\n      return acc;\n    }\n\n    const difference = diff(lhs[key], rhs[key]); // If the difference is empty, and the lhs is an empty object or the rhs is not an empty object\n\n    if ((0, _utils.isEmptyObject)(difference) && !(0, _utils.isDate)(difference) && ((0, _utils.isEmptyObject)(lhs[key]) || !(0, _utils.isEmptyObject)(rhs[key]))) return acc; // return no diff\n\n    acc[key] = difference; // return updated key\n\n    return acc; // return updated key\n  }, deletedValues);\n};\n\nvar _default = diff;\nexports.default = _default;\n},{\"./utils.js\":28}],26:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"addedDiff\", {\n  enumerable: true,\n  get: function () {\n    return _added.default;\n  }\n});\nObject.defineProperty(exports, \"deletedDiff\", {\n  enumerable: true,\n  get: function () {\n    return _deleted.default;\n  }\n});\nObject.defineProperty(exports, \"detailedDiff\", {\n  enumerable: true,\n  get: function () {\n    return _detailed.default;\n  }\n});\nObject.defineProperty(exports, \"diff\", {\n  enumerable: true,\n  get: function () {\n    return _diff.default;\n  }\n});\nObject.defineProperty(exports, \"updatedDiff\", {\n  enumerable: true,\n  get: function () {\n    return _updated.default;\n  }\n});\n\nvar _diff = _interopRequireDefault(require(\"./diff.js\"));\n\nvar _added = _interopRequireDefault(require(\"./added.js\"));\n\nvar _deleted = _interopRequireDefault(require(\"./deleted.js\"));\n\nvar _updated = _interopRequireDefault(require(\"./updated.js\"));\n\nvar _detailed = _interopRequireDefault(require(\"./detailed.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n},{\"./added.js\":22,\"./deleted.js\":23,\"./detailed.js\":24,\"./diff.js\":25,\"./updated.js\":27}],27:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils.js\");\n\nconst updatedDiff = (lhs, rhs) => {\n  if (lhs === rhs) return {};\n  if (!(0, _utils.isObject)(lhs) || !(0, _utils.isObject)(rhs)) return rhs;\n\n  if ((0, _utils.isDate)(lhs) || (0, _utils.isDate)(rhs)) {\n    if (lhs.valueOf() == rhs.valueOf()) return {};\n    return rhs;\n  }\n\n  return Object.keys(rhs).reduce((acc, key) => {\n    if ((0, _utils.hasOwnProperty)(lhs, key)) {\n      const difference = updatedDiff(lhs[key], rhs[key]); // If the difference is empty, and the lhs is an empty object or the rhs is not an empty object\n\n      if ((0, _utils.isEmptyObject)(difference) && !(0, _utils.isDate)(difference) && ((0, _utils.isEmptyObject)(lhs[key]) || !(0, _utils.isEmptyObject)(rhs[key]))) return acc; // return no diff\n\n      acc[key] = difference;\n      return acc;\n    }\n\n    return acc;\n  }, (0, _utils.makeObjectWithoutPrototype)());\n};\n\nvar _default = updatedDiff;\nexports.default = _default;\n},{\"./utils.js\":28}],28:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeObjectWithoutPrototype = exports.isObject = exports.isEmptyObject = exports.isEmpty = exports.isDate = exports.hasOwnProperty = void 0;\n\nconst isDate = d => d instanceof Date;\n\nexports.isDate = isDate;\n\nconst isEmpty = o => Object.keys(o).length === 0;\n\nexports.isEmpty = isEmpty;\n\nconst isObject = o => o != null && typeof o === 'object';\n\nexports.isObject = isObject;\n\nconst hasOwnProperty = (o, ...args) => Object.prototype.hasOwnProperty.call(o, ...args);\n\nexports.hasOwnProperty = hasOwnProperty;\n\nconst isEmptyObject = o => isObject(o) && isEmpty(o);\n\nexports.isEmptyObject = isEmptyObject;\n\nconst makeObjectWithoutPrototype = () => Object.create(null);\n\nexports.makeObjectWithoutPrototype = makeObjectWithoutPrototype;\n},{}],29:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n/**\n* Instruction Set Bace Class.\n*\n* @class ElucidatorInstructionSet\n*/\nclass ElucidatorInstructionSet\n{\n    constructor(pElucidator)\n    {\n        this.elucidator = pElucidator;\n\n        this.namespace = 'default';\n    }\n\n    // Create an empty namespace for instructions and operations if either one doesn't exist\n    initializeNamespace(pNamespace)\n    {\n        if (typeof(pNamespace) == 'string')\n        {\n            this.namespace = pNamespace;\n        }\n        if (!this.elucidator.instructionSets.hasOwnProperty(this.namespace))\n        {\n            this.elucidator.instructionSets[this.namespace.toLowerCase()] = {};\n        }\n        if (!this.elucidator.operationSets.hasOwnProperty(this.namespace))\n        {\n            this.elucidator.operationSets[this.namespace.toLowerCase()] = {};\n        }\n    }\n\n    // Add an instruction to the set\n    addInstruction(pInstructionHash, fInstructionFunction)\n    {\n        if (typeof(pInstructionHash) != 'string')\n        {\n            this.elucidator.logError(`Attempted to add an instruction with an invalid hash; expected a string but the instruction hash type was ${typeof(pInstructionHash)}`);\n            return false;\n        }\n        if (typeof(fInstructionFunction) != 'function')\n        {\n            this.elucidator.logError(`Attempted to add an instruction with an invalid function; expected a function but type was ${typeof(fInstructionFunction)}`);\n            return false;\n        }\n\n        this.elucidator.instructionSets[this.namespace.toLowerCase()][pInstructionHash] = fInstructionFunction;\n        return true;\n    }\n\n    initializeInstructions()\n    {\n        // This is where we map in the instructions.\n        // If the extending class calls super it will inject a harmless noop into the scope.\n        // It isn't recommended to do these inline as lambdas, but this code is generally not expected to be called.\n        // Unless the developer wants a noop in their instruction set...........\n        this.addInstruction('noop', \n            (pOperation) =>\n            {\n                pOperation.logInfo('Executing a no-operation operation.');\n                return true;\n            });\n\n        return true;\n    }\n\n    // Add an operation to the set\n    addOperation(pOperationHash, pOperation)\n    {\n        if (typeof(pOperationHash) != 'string')\n        {\n            this.elucidator.logError(`Attempted to add an operation with an invalid hash; expected a string but the operation hash type was ${typeof(pOperationHash)}`, pOperation);\n            return false;\n        }\n        if (typeof(pOperation) != 'object')\n        {\n            this.elucidator.logError(`Attempted to add an invalid operation; expected an object data type but the type was ${typeof(pOperation)}`, pOperation);\n            return false;\n        }\n        // Validate the Description subobject, which is key to functioning.\n        if (!pOperation.hasOwnProperty(\"Description\"))\n        {\n            this.elucidator.logError(`Attempted to add an operation with an invalid description; no Description subobject set.`, pOperation);\n            return false;\n        }\n        if (typeof(pOperation.Description) != 'object')\n        {\n            this.elucidator.logError(`Attempted to add an operation with an invalid description; Description subobject was not an object.  The type was ${typeof(pOperation.Description)}.`, pOperation);\n            return false;\n        }\n        if (typeof(pOperation.Description.Hash) != 'string')\n        {\n            if (typeof(pOperation.Description.Operation) == 'string')\n            {\n                // Use the \"Operation\" as the \"Hash\"\n                pOperation.Description.Hash = pOperation.Description.Operation;\n            }\n            else\n            {\n                this.elucidator.logError(`Attempted to add an operation with an invalid description; Description subobject did not contain a valid Hash which is required to call the operation.`, pOperation);\n                return false;\n            }\n        }\n\n        // Now auto create data if it is missing or wrong in the Description\n        if ((typeof(pOperation.Description.Namespace) != 'string') || (pOperation.Description.Namespace != this.namespace))\n        {\n            pOperation.Description.Namespace = this.namespace;\n        }\n        if (typeof(pOperation.Description.Summary) != 'string')\n        {\n            pOperation.Description.Summary = `[${pOperation.Description.Namespace}] [${pOperation.Description.Hash}] operation.`;\n        }\n\n        // If there are no inputs, or outputs, or steps, add them.\n        if (!pOperation.hasOwnProperty('Inputs'))\n        {\n            pOperation.Inputs = {};\n        }\n        if (!pOperation.hasOwnProperty('Outputs'))\n        {\n            pOperation.Outputs = {};\n        }\n        if (!pOperation.hasOwnProperty('Steps'))\n        {\n            pOperation.Steps = [];\n        }\n\n        // If there are no inputs, or outputs, or steps, add them.\n        // TODO: Add a step where we try to load this into Manyfest and see that it's valid.\n        if (typeof(pOperation.Inputs) !== 'object')\n        {\n            this.elucidator.logError(`Attempted to add an operation with an invalid Inputs object.`, pOperation);\n            return false;\n        }\n        // If there are no inputs, or outputs, or steps, add them.\n        // TODO: Add a step where we try to load this into Manyfest and see that it's valid.\n        if (typeof(pOperation.Outputs) !== 'object')\n        {\n            this.elucidator.logError(`Attempted to add an operation with an invalid Outputs object.`, pOperation);\n            return false;\n        }\n        if (!Array.isArray(pOperation.Steps))\n        {\n            this.elucidator.logError(`Attempted to add an operation with an invalid Steps array.`, pOperation);\n            return false;\n        }\n\n\n        this.elucidator.operationSets[this.namespace.toLowerCase()][pOperationHash.toLowerCase()] = pOperation;\n        return true;\n    }\n\n    initializeOperations()\n    {\n        this.addOperation('noop', \n            {\n                \"Description\":\n                {\n                    \"Operation\": \"noop\",\n                    \"Description\": \"No operation - no affect on any data.\"\n                }\n            });\n\n        return true;\n    }\n};\n\nmodule.exports = ElucidatorInstructionSet;\n},{}],30:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n/**\n* Elucidator simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject, pLogLevel) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n    let tmpLogLevel = (typeof(pLogLevel) === 'string') ? pLogLevel : 'INFO';\n\n    console.log(`[Elucidator:${tmpLogLevel}] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject,null,4)+\"\\n\");\n};\n\nconst logInfo = (pLogLine, pLogObject) =>\n{\n    logToConsole(pLogLine, pLogObject, 'Info');\n};\n\n\nconst logWarning = (pLogLine, pLogObject) =>\n{\n    logToConsole(pLogLine, pLogObject, 'Warning');\n};\n\n\nconst logError = (pLogLine, pLogObject) =>\n{\n    logToConsole(pLogLine, pLogObject, 'Error');\n};\n\nmodule.exports = (\n{\n    logToConsole: logToConsole,\n    info: logInfo,\n    warning: logWarning,\n    error: logError\n});\n},{}],31:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nconst libSimpleLog = require('./Elucidator-LogToConsole.js');\nconst libManyfest = require('manyfest');\nconst libPrecedent = require('precedent');\n\nconst libElucidatorInstructionSet = require('./Elucidator-InstructionSet.js');\n\n/**\n* Elucidator object address-based descriptions and manipulations.\n*\n* @class Elucidator\n*/\nclass Elucidator\n{\n    constructor(pOperations, fInfoLog, fErrorLog)\n    {\n        // Wire in logging\n        this.logInfo = (typeof(fInfoLog) === 'function') ? fInfoLog : libSimpleLog.info;\n        this.logWarning = (typeof(fWarningLog) === 'function') ? fWarningLog : libSimpleLog.warning;\n        this.logError = (typeof(fErrorLog) === 'function') ? fErrorLog : libSimpleLog.error;\n\n\t\t// Instructions are the basic building blocks for operations\n\t\tthis.instructionSets = {};\n\n\t\t// Operations are the solvers that can be called (instructions can't be called directly)\n\t\t// These can be added at run-time as well\n\t\tthis.operationSets = {};\n\n\t\t// Decide later how to make this truly unique.\n\t\tthis.UUID = 0;\n\n\t\tthis.loadDefaultInstructionSets();\n\n\t\tif (pOperations)\n\t\t{\n\t\t\tlet tmpSolverHashes = Object.keys(pOperations);\n\t\t\tfor (let i = 0; i < tmpSolverHashes.length; i++)\n\t\t\t{\n\t\t\t\tthis.addOperation('Custom',tmpSolverHashes[i], pOperations[tmpSolverHashes[i]]);\n\t\t\t}\n\t\t}\n    }\n\n\t// Load an instruction set\n\tloadInstructionSet(cInstructionSet)\n\t{\n\t\tlet tmpInstructionSet = new cInstructionSet(this);\n\t\t// Setup the namespace\n\t\ttmpInstructionSet.initializeNamespace();\n\t\ttmpInstructionSet.initializeInstructions();\n\t\ttmpInstructionSet.initializeOperations();\n\t}\n\n\tloadDefaultInstructionSets()\n\t{\n\t\t// The javascript math instructions and operations\n\t\t// These provide the \"Math\" namespace\n\t\tthis.loadInstructionSet(require(`./InstructionSets/Math-Javascript.js`));\n\n\t\t// A precision javascript math library that is consistent across browsers, stable and without mantissa issues\n\t\t// Uses Decimal.js\n\t\t// These provide the \"PreciseMath\" namespace\n\t\tthis.loadInstructionSet(require(`./InstructionSets/PreciseMath-Decimal.js`));\n\n\t\t// The abstract geometry instructions and operations (rectangle area, circle area, etc.)\n\t\t// These provide the \"Geometry\" namespace\n\t\tthis.loadInstructionSet(require(`./InstructionSets/Geometry.js`));\n\n\t\t// The logic operations (if, execution of instructions, etc.)\n\t\t// These provide the \"Logic\" namespace\n\t\tthis.loadInstructionSet(require(`./InstructionSets/Logic.js`));\n\n\t\t// Basic string manipulation instructions and operations\n\t\t// These provide the \"String\" namespace\n\t\tthis.loadInstructionSet(require(`./InstructionSets/String.js`));\n\n\t\t// Basic set manipulation instructions and operations\n\t\t// These provide the \"Set\" namespace\n\t\tthis.loadInstructionSet(require(`./InstructionSets/Set.js`));\n\t}\n\n\toperationExists(pNamespace, pOperationHash)\n\t{\n\t\tif ((typeof(pNamespace) != 'string') || (typeof(pOperationHash) != 'string'))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpNamespace = pNamespace.toLowerCase();\n\t\treturn (this.operationSets.hasOwnProperty(tmpNamespace) && this.operationSets[tmpNamespace].hasOwnProperty(pOperationHash.toLowerCase()));\n\t}\n\n\taddOperation(pNamespace, pOperationHash, pOperation)\n\t{\n        if (typeof(pNamespace) != 'string')\n        {\n            this.logError(`Attempted to add an operation at runtime via Elucidator.addOperation with an invalid namespace; expected a string but the type was ${typeof(pNamespace)}`, pOperation);\n            return false;\n        }\n\n\t\tlet tmpOperationInjector = new libElucidatorInstructionSet(this);\n\t\ttmpOperationInjector.initializeNamespace(pNamespace);\n\n\t\treturn tmpOperationInjector.addOperation(pOperationHash, pOperation);\n\t}\n\n\tsolveInternalOperation(pNamespace, pOperationHash, pInputObject, pOutputObject, pDescriptionManyfest, pInputAddressMapping, pOutputAddressMapping, pSolutionContext)\n\t{\n\t\tif (!this.operationExists(pNamespace, pOperationHash))\n\t\t{\n\t\t\tthis.logError(`Attempted to solveInternalOperation for namespace ${pNamespace} operationHash ${pOperationHash} but the operation was not found.`);\n\t\t\t// TODO: Should this return something with an error log populated?\n\t\t\treturn false;\n\t\t}\n\t\tlet tmpOperation = this.operationSets[pNamespace.toLowerCase()][pOperationHash.toLowerCase()];\n\t\treturn this.solveOperation(tmpOperation, pInputObject, pOutputObject, pDescriptionManyfest, pInputAddressMapping, pOutputAddressMapping, pSolutionContext);\n\t}\n\n\tsolveOperation(pOperationObject, pInputObject, pOutputObject, pDescriptionManyfest, pInputAddressMapping, pOutputAddressMapping, pSolutionContext)\n\t{\n\t\tlet tmpOperation = JSON.parse(JSON.stringify(pOperationObject));\n\n\t\tif (typeof(pInputObject) != 'object')\n\t\t{\n            this.logError(`Attempted to run a solve but the passed in Input was not an object.  The type was ${typeof(pInputObject)}.`);\n\t\t\treturn false;\n\t\t}\n\t\tlet tmpInputObject = pInputObject;\n\n\t\t// Default to reusing the input object as the output object.\n\t\tlet tmpOutputObject = tmpInputObject;\n\n\t\t// This is how recursive solutions bind their context together.\n\t\tlet tmpSolutionContext = pSolutionContext;\n\t\tif (typeof(tmpSolutionContext) === 'undefined')\n\t\t{\n\t\t\ttmpSolutionContext = (\n\t\t\t\t{\n\t\t\t\t\t\"SolutionGUID\": `Solution-${this.UUID++}`, \n\t\t\t\t\t\"SolutionBaseNamespace\": pOperationObject.Description.Namespace,\n\t\t\t\t\t\"SolutionBaseOperation\": pOperationObject.Description.Operation,\n\t\t\t\t\t\"SolutionLog\": []\n\t\t\t\t});\n\t\t\t\n\t\t\t// This is the root operation, see if there are Inputs and Outputs created ... if not, create them.\n\t\t\tif (!tmpOperation.hasOwnProperty('Inputs'))\n\t\t\t{\n\t\t\t\ttmpOperation.Inputs = {};\n\t\t\t}\n\t\t\tif (!tmpOperation.hasOwnProperty('Outputs'))\n\t\t\t{\n\t\t\t\ttmpOperation.Outputs = {};\n\t\t\t}\n\n\t\t\t// This is the root Operation, see if there is a hash translation available for either side (input or output)\n\t\t\tif (tmpOperation.hasOwnProperty('InputHashTranslationTable'))\n\t\t\t{\n\t\t\t\ttmpSolutionContext.InputHashMapping = JSON.parse(JSON.stringify(tmpOperation.InputHashTranslationTable));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpSolutionContext.InputHashMapping = {};\n\t\t\t}\n\n\t\t\tif (tmpOperation.hasOwnProperty('OutputHashTranslationTable'))\n\t\t\t{\n\t\t\t\ttmpSolutionContext.OutputHashMapping = JSON.parse(JSON.stringify(tmpOperation.OutputHashTranslationTable));\n\t\t\t}\n\n\t\t\tif ((typeof(pOutputObject) != 'object')\n\t\t\t\t&& (typeof(tmpOutputHashMapping) == 'undefined') \n\t\t\t\t&& (typeof(tmpInputHashMapping) != 'undefined'))\n\t\t\t{\n\t\t\t\t// Reuse the input hash mapping if:\n\t\t\t\t//   1) we auto-mapped the input hash mapping to the output because only an input object was supplied\n\t\t\t\t//   2) there *was not* an output hash mapping supplied\n\t\t\t\t//   3) there *was* an input hash mapping supplied\n\t\t\t\t//\n\t\t\t\t// This seems simple at first but exposes some really interesting behaviors in terms of\n\t\t\t\t// reusing the same object and schema for input and output, but having different hash\n\t\t\t\t// mappings for each of them.\n\t\t\t\ttmpSolutionContext.OutputHashMapping = tmpSolutionContext.InputHashMapping;\n\t\t\t}\n\t\t}\n\n\t\tif (typeof(pOutputObject) == 'object')\n\t\t{\n\t\t\t// If the call defined an explicit, different output object from the input object use that instead.\n\t\t\ttmpOutputObject = pOutputObject;\n\t\t}\n\n\t\tlet tmpDescriptionManyfest = false;\n\t\tif (typeof(pDescriptionManyfest) === 'undefined')\n\t\t{\n\t\t\t// We are going to use this for some clever schema manipulations, then recreate the object\n\t\t\ttmpDescriptionManyfest = new libManyfest();\n\t\t\t// Synthesize a manyfest from the Input and Output properties\n\t\t\tlet tmpManyfestSchema = (\n\t\t\t\t{\n\t\t\t\t\tScope: 'Solver Data Part Descriptions',\n\t\t\t\t\tDescriptors: tmpDescriptionManyfest.schemaManipulations.mergeAddressMappings(tmpOperation.Inputs, tmpOperation.Outputs)\n\t\t\t\t});\n\t\t\t}\n\t\telse\n\t\t{\n\t\t\t// Clone the passed-in manyfest, so mutations do not alter the upstream version\n\t\t\ttmpDescriptionManyfest = pDescriptionManyfest.clone();\n\t\t}\n\t\t// Now that the operation object has been created uniquely, apply any passed-in address-hash and hash-hash remappings\n\t\tif (pInputAddressMapping)\n\t\t{\n\t\t\ttmpDescriptionManyfest.schemaManipulations.resolveAddressMappings(tmpOperation.Inputs, pInputAddressMapping);\n\t\t}\n\t\tif (pOutputAddressMapping)\n\t\t{\n\t\t\ttmpDescriptionManyfest.schemaManipulations.resolveAddressMappings(tmpOperation.Inputs, pOutputAddressMapping);\n\t\t}\n\t\tif (tmpSolutionContext.InputHashMapping)\n\t\t{\n\t\t\ttmpDescriptionManyfest.hashTranslations.addTranslation(tmpSolutionContext.InputHashMapping);\n\t\t}\n\t\tif (tmpSolutionContext.OutputHashMapping)\n\t\t{\n\t\t\ttmpDescriptionManyfest.hashTranslations.addTranslation(tmpSolutionContext.OutputHashMapping);\t\t\t\n\t\t}\n\n\n\t\t// Set some kind of unique identifier for the operation\n\t\ttmpOperation.UUID = this.UUID++;\n\t\ttmpOperation.SolutionContext = tmpSolutionContext;\n\n\t\tif (tmpOperation.Description.Synopsys)\n\t\t{\n\t\t\ttmpSolutionContext.SolutionLog.push(`[${tmpOperation.UUID}]: Solver running operation ${tmpOperation.Description.Synopsys}`);\n\t\t}\n\n\t\tlet tmpPrecedent = new libPrecedent();\n\t\ttmpPrecedent.addPattern('{{Name:', '}}',\n\t\t\t(pHash)=>\n\t\t\t{\n\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\tlet tmpDescriptor = tmpDescriptionManyfest.getDescriptorByHash(tmpHash)\n\n\t\t\t\t// Return a human readable value\n\t\t\t\tif ((typeof(tmpDescriptor) == 'object')  && tmpDescriptor.hasOwnProperty('Name'))\n\t\t\t\t{\n\t\t\t\t\treturn tmpDescriptor.Name;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpHash;\n\t\t\t\t}\n\t\t\t});\n\t\ttmpPrecedent.addPattern('{{InputValue:', '}}',\n\t\t\t(pHash)=>\n\t\t\t{\n\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\treturn tmpDescriptionManyfest.getValueByHash(tmpInputObject,tmpHash);\n\t\t\t});\n\t\ttmpPrecedent.addPattern('{{OutputValue:', '}}',\n\t\t\t(pHash)=>\n\t\t\t{\n\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\treturn tmpDescriptionManyfest.getValueByHash(tmpOutputObject,tmpHash);\n\t\t\t});\n\n\t\tif (tmpOperation.hasOwnProperty('Log') && tmpOperation.Log.hasOwnProperty('PreOperation'))\n\t\t{\n\t\t\tif (typeof(tmpOperation.Log.PreOperation) == 'string')\n\t\t\t{\n\t\t\t\ttmpOperation.SolutionContext.SolutionLog.push(tmpPrecedent.parseString(tmpOperation.Log.PreOperation));\n\t\t\t}\n\t\t\telse if (Array.isArray(tmpOperation.Log.PreOperation))\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < tmpOperation.Log.PreOperation.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif ((typeof(tmpOperation.Log.PreOperation[i]) == 'string'))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOperation.SolutionContext.SolutionLog.push(tmpPrecedent.parseString(tmpOperation.Log.PreOperation[i]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now step through each operation and solve\n\t\tfor (let i = 0; i < tmpOperation.Steps.length; i++)\n\t\t{\n\t\t\tlet tmpStep = tmpOperation.Steps[i];\n\n\t\t\t// Instructions are always endpoints -- they *do not* recurse.\n\t\t\tif (tmpStep.hasOwnProperty('Instruction'))\n\t\t\t{\n\t\t\t\tlet tmpInputSchema = (\n\t\t\t\t\t{\n\t\t\t\t\t\t\"Scope\": \"InputObject\",\n\t\t\t\t\t\t\"Descriptors\": JSON.parse(JSON.stringify(tmpOperation.Inputs))\n\t\t\t\t\t});\n\t\t\t\t// Perform step-specific address mappings.\n\t\t\t\ttmpDescriptionManyfest.schemaManipulations.resolveAddressMappings(tmpInputSchema.Descriptors, tmpStep.InputHashAddressMap);\n\t\t\t\tlet tmpInputManyfest = new libManyfest(tmpInputSchema);\n\t\t\t\tif (tmpSolutionContext.InputHashMapping)\n\t\t\t\t{\n\t\t\t\t\ttmpInputManyfest.hashTranslations.addTranslation(tmpSolutionContext.InputHashMapping);\n\t\t\t\t}\n\n\t\t\t\tlet tmpOutputSchema = (\n\t\t\t\t\t{\n\t\t\t\t\t\t\"Scope\": \"OutputObject\",\n\t\t\t\t\t\t\"Descriptors\": JSON.parse(JSON.stringify(tmpOperation.Outputs))\n\t\t\t\t\t});\n\t\t\t\t\ttmpDescriptionManyfest.schemaManipulations.resolveAddressMappings(tmpOutputSchema.Descriptors, tmpStep.OutputHashAddressMap);\n\t\t\t\tlet tmpOutputManyfest = new libManyfest(tmpOutputSchema);\n\t\t\t\tif (tmpSolutionContext.OutputHashMapping)\n\t\t\t\t{\n\t\t\t\t\ttmpOutputManyfest.hashTranslations.addTranslation(tmpSolutionContext.OutputHashMapping);\n\t\t\t\t}\n\t\n\t\t\t\t// Construct the instruction state object\n\t\t\t\tlet tmpInstructionState = (\n\t\t\t\t{\n\t\t\t\t\tElucidator: this,\n\n\t\t\t\t\tNamespace: tmpStep.Namespace.toLowerCase(),\n\t\t\t\t\tInstruction: tmpStep.Instruction.toLowerCase(),\n\n\t\t\t\t\tOperation: tmpOperation,\n\n\t\t\t\t\tSolutionContext: tmpSolutionContext,\n\n\t\t\t\t\tDescriptionManyfest: tmpDescriptionManyfest,\n\n\t\t\t\t\tInputObject: tmpInputObject,\n\t\t\t\t\tInputManyfest: tmpInputManyfest,\n\n\t\t\t\t\tOutputObject: tmpOutputObject,\n\t\t\t\t\tOutputManyfest: tmpOutputManyfest\n\t\t\t\t});\n\n\t\t\t\ttmpInstructionState.logError = \n\t\t\t\t\t(pMessage) => \n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSolutionContext.SolutionLog.push(`[ERROR][Operation ${tmpInstructionState.Operation.Description.Namespace}:${tmpInstructionState.Operation.Description.Hash} - Step #${i}:${tmpStep.Namespace}:${tmpStep.Instruction}] ${pMessage}`)\n\t\t\t\t\t};\n\n\t\t\t\ttmpInstructionState.logInfo = \n\t\t\t\t\t(pMessage) => \n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSolutionContext.SolutionLog.push(`[INFO][Operation ${tmpInstructionState.Operation.Description.Namespace}:${tmpInstructionState.Operation.Description.Hash} - Step #${i}:${tmpStep.Namespace}:${tmpStep.Instruction}] ${pMessage}`)\n\t\t\t\t\t};\n\n\t\t\t\tif (this.instructionSets[tmpInstructionState.Namespace].hasOwnProperty(tmpInstructionState.Instruction))\n\t\t\t\t{\n\t\t\t\t\tlet fInstruction = this.instructionSets[tmpInstructionState.Namespace][tmpInstructionState.Instruction];\n\t\t\t\t\tfInstruction(tmpInstructionState);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Operations recurse.\n\t\t\tif (tmpStep.hasOwnProperty('Operation'))\n\t\t\t{\n\t\t\t\tif (typeof(tmpStep.Operation) == 'string')\n\t\t\t\t{\n\t\t\t\t\tthis.solveInternalOperation(tmpStep.Namespace, tmpStep.Operation, tmpInputObject, tmpOutputObject, tmpDescriptionManyfest, tmpStep.InputHashAddressMap, tmpStep.OutputHashAddressMap, tmpSolutionContext);\n\t\t\t\t}\n\t\t\t\telse if (typeof(tmpStep.Operation) == 'object')\n\t\t\t\t{\n\t\t\t\t\t// You can even define an inline object operation!  This gets crazy fast\n\t\t\t\t\tthis.solveOperation(tmpStep.Operation, tmpInputObject, tmpOutputObject, tmpDescriptionManyfest, tmpStep.InputHashAddressMap, tmpStep.OutputHashAddressMap, tmpSolutionContext);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpOperation.hasOwnProperty('Log') && tmpOperation.Log.hasOwnProperty('PostOperation'))\n\t\t{\n\t\t\tif (typeof(tmpOperation.Log.PostOperation) == 'string')\n\t\t\t{\n\t\t\t\ttmpOperation.SolutionContext.SolutionLog.push(tmpPrecedent.parseString(tmpOperation.Log.PostOperation));\n\t\t\t}\n\t\t\telse if (Array.isArray(tmpOperation.Log.PreOperation))\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < tmpOperation.Log.PostOperation.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif ((typeof(tmpOperation.Log.PostOperation[i]) == 'string'))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOperation.SolutionContext.SolutionLog.push(tmpPrecedent.parseString(tmpOperation.Log.PostOperation[i]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpSolutionContext;\n\t}\n};\n\nmodule.exports = Elucidator;\n},{\"./Elucidator-InstructionSet.js\":29,\"./Elucidator-LogToConsole.js\":30,\"./InstructionSets/Geometry.js\":32,\"./InstructionSets/Logic.js\":33,\"./InstructionSets/Math-Javascript.js\":34,\"./InstructionSets/PreciseMath-Decimal.js\":58,\"./InstructionSets/Set.js\":59,\"./InstructionSets/String.js\":60,\"manyfest\":92,\"precedent\":95}],32:[function(require,module,exports){\n// Solution providers are meant to be stateless, and not classes.\n// These solution providers are akin to drivers, connecting code libraries or \n// other types of behavior to mapping operations.\n\nlet libElucidatorInstructionSet = require('../Elucidator-InstructionSet.js');\n\nclass Geometry extends libElucidatorInstructionSet\n{\n    constructor(pElucidator)\n    {\n        super(pElucidator);\n        this.namespace = 'Geometry';\n    }\n\n    // Geometry provides no instructions\n    initializeInstructions()\n    {\n        return true;\n    }\n\n    initializeOperations()\n    {\n        this.addOperation('rectanglearea', require(`./Operations/Geometry-RectangleArea.json`));\n\n        return true;\n    }\n}\n\nmodule.exports = Geometry;\n},{\"../Elucidator-InstructionSet.js\":29,\"./Operations/Geometry-RectangleArea.json\":35}],33:[function(require,module,exports){\n// Solution providers are meant to be stateless, and not classes.\n// These solution providers are akin to drivers, connecting code libraries or \n// other types of behavior to mapping operations.\n\nlet libElucidatorInstructionSet = require('../Elucidator-InstructionSet.js');\n\nconst ifInstruction = (pOperation) =>\n{\n    let tmpLeftValue = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'leftValue');\n    let tmpRightValue = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'rightValue');\n    let tmpComparator = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'comparator').toString().toLowerCase();\n\n    let tmpComparisonOperator = 'equal';\n\n    // This may eventually come from configuration; for now just leave it here.\n    let tmpComparisonOperatorMapping = (\n        {\n            '==':'equal',\n            'eq':'equal',\n            'equal':'equal',\n\n            '!=':'notequal',\n            'noteq':'notequal',\n            'notequal':'notequal',\n\n            '===':'identity',\n            'id':'identity',\n            'identity':'identity',\n\n            '>':'greaterthan',\n            'gt':'greaterthan',\n            'greaterthan':'greaterthan',\n\n            '>=':'greaterthanorequal',\n            'gte':'greaterthanorequal',\n            'greaterthanorequal':'greaterthanorequal',\n\n            '<':'lessthan',\n            'lt':'lessthan',\n            'lessthan':'lessthan',\n\n            '<=':'lessthanorequal',\n            'lte':'lessthanorequal',\n            'lessthanorequal':'lessthanorequal'\n        });\n\n    if (tmpComparisonOperatorMapping.hasOwnProperty(tmpComparator))\n    {\n        tmpComparisonOperator = tmpComparisonOperatorMapping[tmpComparator];\n    }\n\n    let tmpTrueNamespace = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'trueNamespace');\n    let tmpTrueOperation = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'trueOperation');\n\n    let tmpFalseNamespace = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'falseNamespace');\n    let tmpFalseOperation = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'falseOperation');\n\n    let tmpTruthiness = null;\n\n    switch(tmpComparisonOperator)\n    {\n        case 'equal':\n            tmpTruthiness = (tmpLeftValue == tmpRightValue);\n            break;\n        case 'identity':\n            tmpTruthiness = (tmpLeftValue === tmpRightValue);\n            break;\n        case 'notequal':\n            tmpTruthiness = (tmpLeftValue != tmpRightValue);\n            break;\n        case 'greaterthan':\n            tmpTruthiness = (tmpLeftValue > tmpRightValue);\n            break;\n        case 'greaterthanorequal':\n            tmpTruthiness = (tmpLeftValue >= tmpRightValue);\n            break;\n        case 'lessthan':\n            tmpTruthiness = (tmpLeftValue < tmpRightValue);\n            break;\n        case 'lessthanorequal':\n            tmpTruthiness = (tmpLeftValue <= tmpRightValue);\n            break;\n    }\n\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'truthinessResult', tmpTruthiness);\n\n    // Now execute the operations (unless it is a noop or a bunk operation)\n    // This is, frankly, kindof a mind-blowing amount of recursion possibility.\n    // Both of these are falling back on the base solution hash mapping.\n    // --> Not certain if this is the correct approach and the only way to tell will be through exercise of this\n    if (tmpTruthiness && (typeof(tmpTrueNamespace) == 'string') && (typeof(tmpTrueOperation) == 'string') && (tmpTrueOperation != 'noop'))\n    {\n        pOperation.Elucidator.solveInternalOperation(tmpTrueNamespace, tmpTrueOperation, pOperation.InputObject, pOperation.OutputObject, pOperation.DescriptionManyfest, pOperation.SolutionContext.InputHashMapping, pOperation.SolutionContext.OutputHashMapping, pOperation.SolutionContext);\n    }\n    else if ((typeof(tmpFalseNamespace) == 'string') &&  (typeof(tmpFalseOperation) == 'string') && (tmpFalseOperation != 'noop'))\n    {\n        pOperation.Elucidator.solveInternalOperation(tmpFalseNamespace, tmpFalseOperation, pOperation.InputObject, pOperation.OutputObject, pOperation.DescriptionManyfest, pOperation.SolutionContext.InputHashMapping, pOperation.SolutionContext.OutputHashMapping, pOperation.SolutionContext);\n    }\n\n    return true;\n};\n\nconst executeOperation = (pOperation) =>\n{\n    let tmpNamespace = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'namespace');\n    let tmpOperation = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'operation');\n\n    pOperation.Elucidator.solveInternalOperation(tmpNamespace, tmpOperation, pOperation.InputObject, pOperation.OutputObject, pOperation.DescriptionManyfest, pOperation.SolutionContext.InputHashMapping, pOperation.SolutionContext.OutputHashMapping, pOperation.SolutionContext);\n\n    return true;\n}\n\nclass Logic extends libElucidatorInstructionSet\n{\n    constructor(pElucidator)\n    {\n        super(pElucidator);\n        this.namespace = 'Logic';\n    }\n\n    initializeInstructions()\n    {\n        // Logic actually wants a noop instruction!\n        super.initializeInstructions();\n\n        this.addInstruction('if', ifInstruction);\n        this.addInstruction('execute', executeOperation);\n\n        return true;\n    }\n\n    initializeOperations()\n    {\n        this.addOperation('if', require(`./Operations/Logic-If.json`));\n        this.addOperation('execute', require(`./Operations/Logic-Execute.json`));\n\n        return true;\n    }\n}\n\nmodule.exports = Logic;\n},{\"../Elucidator-InstructionSet.js\":29,\"./Operations/Logic-Execute.json\":36,\"./Operations/Logic-If.json\":37}],34:[function(require,module,exports){\n// Solution providers are meant to be stateless, and not classes.\n// These solution providers are akin to drivers, connecting code libraries or \n// other types of behavior to mapping operations.\n\nlet libElucidatorInstructionSet = require('../Elucidator-InstructionSet.js');\n\nlet add = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a');\n    let tmpB = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'b');\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA + tmpB);\n    return true;\n};\n\nlet subtract = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a');\n    let tmpB = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'b');\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA - tmpB);\n    return true;\n};\n\nlet multiply = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a');\n    let tmpB = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'b');\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA * tmpB);\n    return true;\n};\n\nlet divide = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a');\n    let tmpB = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'b');\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA / tmpB);\n    return true;\n};\n\nlet aggregate = (pOperation) =>\n{\n    let tmpA = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a');\n\n    let tmpObjectType = typeof(tmpA);\n\n    let tmpAggregationValue = 0;\n\n    if (tmpObjectType == 'object')\n    {\n        if (Array.isArray(tmpA))\n        {\n            for (let i = 0; i < tmpA.length; i++)\n            {\n                // If this is an array, enumerate it and try to aggregate each number\n                let tmpValue = parseInt(tmpA[i]);\n\n                if (isNaN(tmpValue))\n                {\n                    pOperation.logError(`Array element index [${i}] could not be parsed as a number; skipping.  (${tmpA[i]})`);\n                }\n                else\n                {\n                    tmpAggregationValue += tmpValue;\n                    pOperation.logInfo(`Adding element [${i}] value ${tmpValue} totaling: ${tmpAggregationValue}`)\n                }\n            }\n        }\n        else\n        {\n            let tmpObjectKeys = Object.keys(tmpA);\n            for (let i = 0; i < tmpObjectKeys.length; i++)\n            {\n                let tmpValue = parseInt(tmpA[tmpObjectKeys[i]]);\n\n                if (isNaN(tmpValue))\n                {\n                    pOperation.logError(`Object property [${tmpObjectKeys[i]}] could not be parsed as a number; skipping.  (${tmpA[tmpObjectKeys[i]]})`);\n                }\n                else\n                {\n                    tmpAggregationValue += tmpValue;\n                    pOperation.logInfo(`Adding object property [${tmpObjectKeys[i]}] value ${tmpValue} totaling: ${tmpAggregationValue}`)\n                }\n            }\n        }\n    }\n    else\n    {\n        let tmpValue = parseInt(tmpA);\n\n        if (isNaN(tmpValue))\n        {\n            pOperation.logError(`Direct value could not be parsed as a number; skipping.  (${tmpA})`);\n        }\n        else\n        {\n            tmpAggregationValue += tmpValue;\n        }\n    }\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpAggregationValue);\n    return true;\n};\n\nclass MathJavascript extends libElucidatorInstructionSet\n{\n    constructor(pElucidator)\n    {\n        super(pElucidator);\n        this.namespace = 'Math';\n    }\n\n    initializeInstructions()\n    {\n        this.addInstruction('add', add);\n\n        this.addInstruction('subtract', subtract);\n        this.addInstruction('sub', subtract);\n\n        this.addInstruction('multiply', multiply);\n        this.addInstruction('mul', multiply);\n\n        this.addInstruction('divide', divide);\n        this.addInstruction('div', divide);\n\n        this.addInstruction('aggregate', aggregate);\n\n        return true;\n    }\n\n    initializeOperations()\n    {\n        this.addOperation('add', require(`./Operations/Math-Add.json`));\n        this.addOperation('subtract', require(`./Operations/Math-Subtract.json`));\n        this.addOperation('multiply', require(`./Operations/Math-Multiply.json`));\n        this.addOperation('divide', require(`./Operations/Math-Divide.json`));\n\n        this.addOperation('aggregate', require(`./Operations/Math-Aggregate.json`));\n\n        return true;\n    }\n}\n\nmodule.exports = MathJavascript;\n},{\"../Elucidator-InstructionSet.js\":29,\"./Operations/Math-Add.json\":38,\"./Operations/Math-Aggregate.json\":39,\"./Operations/Math-Divide.json\":40,\"./Operations/Math-Multiply.json\":41,\"./Operations/Math-Subtract.json\":42}],35:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Geometry\",\n\t\t\"Operation\": \"RectangleArea\",\n\t\t\"Synopsis\": \"Solve for the area of a rectangle:  Area = Width * Height\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"Width\": { \"Hash\":\"Width\", \"Type\":\"Number\" },\n\t\t\"Height\": { \"Hash\":\"Height\", \"Type\":\"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"Area\": { \"Hash\":\"Area\", \"Name\": \"Area of the Rectangle\"},\n\t\t\"Ratio\": { \"Hash\":\"Ratio\", \"Name\": \"The Ratio between the Width and the Height\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Solve for [ {{Name:Area}} ] based on [ {{Name:Width}} ] and [ {{Name:Height}} ].\",\n\t\t\"PostOperation\": \"Operation complete; [ {{Name:Area}} ] = {{InputValue:Width}} * {{InputValue:Height}} = {{OutputValue:Area}}\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"multiply\",\n\t\t\t\"InputHashAddressMap\": \n\t\t\t\t{\n\t\t\t\t\t\"a\": \"Width\",\n\t\t\t\t\t\"b\": \"Height\"\n\t\t\t\t},\n\t\t\t\"OutputHashAddressMap\":\n\t\t\t\t{\n\t\t\t\t\t\"x\": \"Area\"\n\t\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"divide\",\n\t\t\t\"InputHashAddressMap\": \n\t\t\t\t{\n\t\t\t\t\t\"a\": \"Width\",\n\t\t\t\t\t\"b\": \"Height\"\n\t\t\t\t},\n\t\t\t\"OutputHashAddressMap\":\n\t\t\t\t{\n\t\t\t\t\t\"x\": \"Ratio\"\n\t\t\t\t}\n\t\t}\n\t]\n}\n},{}],36:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Logic\",\n\t\t\"Operation\": \"Execute\",\n\t\t\"Synopsis\": \"Execute an operation based on namespace and operation.\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"namespace\": { \"Hash\": \"namespace\", \"Type\": \"string\", \"Default\":\"logic\" },\n\t\t\"operation\": { \"Hash\": \"operation\", \"Type\": \"string\", \"Default\":\"noop\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Execute the {{InputValue:operation}} operation in namespace {{InputValue:namespace}}.\",\n\t\t\"PostOperation\": \"Operation [{{InputValue:namespace}}:{{InputValue:operation}}] execution complete.\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"Logic\",\n\t\t\t\"Instruction\": \"execute\"\n\t\t}\n\t]\n}\n},{}],37:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Logic\",\n\t\t\"Operation\": \"If\",\n\t\t\"Synopsis\": \"Comparison-based if of leftValue and RightValue based on comparator.  Executes trueNamespace:trueOperation or falseNamespace:falseOperation based on truthiness of result.  Also outputs a true or false to truthinessResult.\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"leftValue\": { \"Hash\":\"leftValue\", \"Type\":\"Any\" },\n\t\t\"rightValue\": { \"Hash\":\"rightValue\", \"Type\":\"Any\", \"Default\": true },\n\t\t\"comparator\": { \"Hash\":\"comparator\", \"Type\":\"String\", \"Default\":\"==\" },\n\n\t\t\"trueNamespace\": {\"Hash\":\"trueNamespace\", \"Type\":\"String\", \"Default\":\"logic\" },\n\t\t\"trueOperation\": {\"Hash\":\"trueOperation\", \"Type\":\"String\", \"Default\":\"noop\" },\n\n\t\t\"falseNamespace\": {\"Hash\":\"falseNamespace\", \"Type\":\"String\", \"Default\":\"logic\" },\n\t\t\"falseOperation\": {\"Hash\":\"falseOperation\", \"Type\":\"String\", \"Default\":\"noop\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"truthinessResult\": { \"Hash\": \"truthinessResult\", \"Type\": \"Boolean\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Compare {{Name:leftValue}} and {{Name:rightValue}} with the {{InputValue:comparator}} operator, storing the truthiness in {{Name:truthinessResult}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{InputValue:leftValue}} {{InputValue:comparator}} {{InputValue:rightValue}} evaluated to {{OutputValue:truthinessResult}}\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"Logic\",\n\t\t\t\"Instruction\": \"If\"\n\t\t}\n\t]\n}\n},{}],38:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Math\",\n\t\t\"Operation\": \"Add\",\n\t\t\"Synopsis\": \"Add two numbers:  x = a + b\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Add {{Name:a}} and {{Name:b}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{InputValue:a}} + {{InputValue:b}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"Math\",\n\t\t\t\"Instruction\": \"add\"\n\t\t}\n\t]\n}\n},{}],39:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Math\",\n\t\t\"Operation\": \"Aggregate\",\n\t\t\"Synopsis\": \"Aggregate a set of numbers (from array or object address):  x = a + b + ... + z\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Set\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Aggregate all numeric values in {{Name:a}}, storing the resultant in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"Math\",\n\t\t\t\"Instruction\": \"aggregate\"\n\t\t}\n\t]\n}\n},{}],40:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Math\",\n\t\t\"Operation\": \"Divide\",\n\t\t\"Synopsis\": \"Divide two numbers:  x = a / b\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Divide {{Name:a}} over {{Name:b}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{InputValue:a}} / {{InputValue:b}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"Math\",\n\t\t\t\"Instruction\": \"divide\"\n\t\t}\n\t]\n}\n},{}],41:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Math\",\n\t\t\"Operation\": \"Multiply\",\n\t\t\"Synopsis\": \"Multiply two numbers:  x = a * b\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Multiply {{Name:a}} and {{Name:b}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{InputValue:a}} * {{InputValue:b}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"Math\",\n\t\t\t\"Instruction\": \"multiply\"\n\t\t}\n\t]\n}\n},{}],42:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Math\",\n\t\t\"Operation\": \"Subtract\",\n\t\t\"Synopsis\": \"Subtract two numbers:  x = a - b\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Subtract {{Name:a}} and {{Name:b}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{InputValue:a}} - {{InputValue:b}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"Math\",\n\t\t\t\"Instruction\": \"subtract\"\n\t\t}\n\t]\n}\n},{}],43:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"Add\",\n\t\t\"Synopsis\": \"Precisely add two numbers:  x = a + b\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Add {{Name:a}} and {{Name:b}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{InputValue:a}} + {{InputValue:b}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"add\"\n\t\t}\n\t]\n}\n},{}],44:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"Aggregate\",\n\t\t\"Synopsis\": \"Precisely aggregate a set of numbers (from array or object address):  x = a + b + ... + z\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Set\" },\n\t\t\"ValueNames\": { \"Hash\": \"ValueNames\", \"Type\": \"Set\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Aggregate all numeric values in {{Name:a}}, storing the resultant in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"aggregate\"\n\t\t}\n\t]\n}\n},{}],45:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"Divide\",\n\t\t\"Synopsis\": \"Precisely divide two numbers:  x = a / b\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Divide {{Name:a}} over {{Name:b}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{InputValue:a}} / {{InputValue:b}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"divide\"\n\t\t}\n\t]\n}\n},{}],46:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"GroupValuesAndAggregate\",\n\t\t\"Synopsis\": \"Group values in a set and aggregate the set of numbers (from array or object addresses)\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"inputDataSet\": { \"Hash\":\"inputDataSet\", \"Type\":\"Set\" },\n\t\t\"groupByProperty\": { \"Hash\":\"groupByProperty\", \"Type\":\"Any\"},\n\t\t\"groupValueProperty\": { \"Hash\":\"groupValueProperty\", \"Type\":\"Any\"},\n\t\t\"recordIndicatorProperty\": { \"Hash\":\"recordIndicatorProperty\", \"Type\":\"String\", \"Default\":false}\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"outputDataSet\": { \"Hash\": \"outputDataSet\", \"Type\": \"Set\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Group {{Name:inputDataSet}} by {{Name:groupByProperty}} and create a map, storing the resultant in {{Name:outputDataSet}}.\",\n\t\t\"PostOperation\": \"Operation complete: Grouping {{Name:inputDataSet}} by {{Name:groupByProperty}} into aggregated values in {{Name:outputDataSet}}\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"groupvaluesandaggregate\"\n\t\t}\n\t]\n}\n},{}],47:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"Multiply\",\n\t\t\"Synopsis\": \"Precisely multiply two numbers:  x = a * b\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Multiply {{Name:a}} and {{Name:b}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{InputValue:a}} * {{InputValue:b}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"multiply\"\n\t\t}\n\t]\n}\n},{}],48:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"Round\",\n\t\t\"Synopsis\": \"Precisely round a number.\"\n\t},\n\n\t\"Inputs\":\n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"precision\": { \"Hash\": \"precision\", \"Type\": \"Number\" },\n\t\t\"roundingmode\": { \"Hash\": \"roundingmode\", \"Type\":\"String\" }\n\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Round {{Name:a}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = Round({{InputValue:a}}) = {{OutputValue:x}}\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"round\"\n\t\t}\n\t]\n}\n},{}],49:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"SetPrecision\",\n\t\t\"Synopsis\": \"Set the precision.\"\n\t},\n\n\t\"Inputs\":\n\t{\n\t\t\"precision\": { \"Hash\": \"precision\", \"Type\":\"Number\", \"Default\":2}\n\n\t},\n\n\t\"Outputs\":\n\t{\n\t},\n\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Set precision to {{InputValue:precision}}.\",\n\t\t\"PostOperation\": \"Operation complete: Default precision set to {{InputValue:precision}}.\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"setprecision\"\n\t\t}\n\t]\n}\n},{}],50:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"SetRoundingMode\",\n\t\t\"Synopsis\": \"Set the rounding mode.\"\n\t},\n\n\t\"Inputs\":\n\t{\n\t\t\"roundingmode\": { \"Hash\": \"roundingmode\", \"Type\":\"String\", \"Default\":\"ROUND_HALF_UP\"}\n\n\t},\n\n\t\"Outputs\":\n\t{\n\t},\n\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Set rounding mode to {{InputValue:roundingmode}}.\",\n\t\t\"PostOperation\": \"Operation complete: Default rounding mode set to {{InputValue:roundingmode}}.\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"setroundingmode\"\n\t\t}\n\t]\n}\n},{}],51:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"Subtract\",\n\t\t\"Synopsis\": \"Precisely subtract two numbers:  x = a - b\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Subtract {{Name:a}} and {{Name:b}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{InputValue:a}} - {{InputValue:b}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"subtract\"\n\t\t}\n\t]\n}\n},{}],52:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"ToDecimalPlaces\",\n\t\t\"Synopsis\": \"Precisely round a number to a certain number of decimal places.\"\n\t},\n\n\t\"Inputs\":\n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"decimalplaces\": { \"Hash\": \"decimalplaces\", \"Type\": \"Number\", \"Default\":2 },\n\t\t\"roundingmode\": { \"Hash\": \"roundingmode\", \"Type\":\"String\" }\n\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Round {{Name:a}} to {{Value:decimalplaces}} decimal places, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = Round({{InputValue:a}} TO {{Value:decimalplaces}} decimal places) = {{OutputValue:x}}\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"todecimalplaces\"\n\t\t}\n\t]\n}\n},{}],53:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"ToSignificantDigits\",\n\t\t\"Synopsis\": \"Precisely round a number to a specific number of significant digits.\"\n\t},\n\n\t\"Inputs\":\n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"digits\": { \"Hash\": \"digits\", \"Type\": \"Number\", \"Default\":12 },\n\t\t\"roundingmode\": { \"Hash\": \"roundingmode\", \"Type\":\"String\" }\n\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Round {{Name:a}} to {{InputValue:digits}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = Round({{InputValue:a}} TO {{InputValue:digits}}) = {{OutputValue:x}}\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"tosignificantdigits\"\n\t\t}\n\t]\n}\n},{}],54:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Set\",\n\t\t\"Operation\": \"GroupValuesBy\",\n\t\t\"Synopsis\": \"Group set of Sub object values by another property in the objects.\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"inputDataSet\": { \"Hash\":\"inputDataSet\", \"Type\":\"Set\" },\n\t\t\"groupByProperty\": { \"Hash\":\"groupByProperty\", \"Type\":\"Any\"},\n\t\t\"groupValueProperty\": { \"Hash\":\"groupValueProperty\", \"Type\":\"Any\"}\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"outputDataSet\": { \"Hash\": \"outputDataSet\", \"Type\": \"Set\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Group {{Name:inputDataSet}} by {{Name:groupByProperty}} and create a mapped result set into {{Name:outputDataSet}}.\",\n\t\t\"PostOperation\": \"Operation complete: Grouping {{Name:inputDataSet}} by {{Name:groupByProperty}} into {{Name:outputDataSet}}\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"Set\",\n\t\t\t\"Instruction\": \"GroupValuesBy\"\n\t\t}\n\t]\n}\n},{}],55:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"String\",\n\t\t\"Operation\": \"Replace\",\n\t\t\"Synopsis\": \"Replace all instances of searchFor with replaceWith in inputString\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"inputString\": { \"Hash\": \"inputString\", \"Type\": \"String\" },\n\t\t\"searchFor\": { \"Hash\": \"searchFor\", \"Type\": \"String\" },\n\t\t\"replaceWith\": { \"Hash\": \"replaceWith\", \"Type\": \"String\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"outputString\": { \"Hash\": \"outputString\", \"Type\": \"String\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Search for [{{InputValue:searchFor}}] and replace it with [{{InputValue:replaceWith}}] in [{{InputValue:inputString}}].\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:outputString}} = [{{OutputValue:outputString}}] from [{{InputValue:inputString}}] replacing [{{InputValue:searchFor}}] with [{{InputValue:replaceWith}}].\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"String\",\n\t\t\t\"Instruction\": \"replace\"\n\t\t}\n\t]\n}\n},{}],56:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"String\",\n\t\t\"Operation\": \"Substring\",\n\t\t\"Synopsis\": \"Get all characters between indexStart and indexEnd (optional) for a given inputString.\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"inputString\": { \"Hash\": \"inputString\", \"Type\": \"String\" },\n\t\t\"indexStart\": { \"Hash\": \"indexStart\", \"Type\": \"Number\", \"Default\":0 },\n\t\t\"indexEnd\": { \"Hash\": \"indexEnd\", \"Type\": \"String\", \"Default\":null }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"outputString\": { \"Hash\": \"outputString\", \"Type\": \"String\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Get all characters between {{InputValue:indexStart}} and {{InputValue:indexEnd}} in [{{InputValue:inputString}}].\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:outputString}} = [{{OutputValue:outputString}}] from [{{InputValue:inputString}}] between {{InputValue:indexStart}} and {{InputValue:indexEnd}}.\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"String\",\n\t\t\t\"Instruction\": \"substring\"\n\t\t}\n\t]\n}\n},{}],57:[function(require,module,exports){\nmodule.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"String\",\n\t\t\"Operation\": \"Trim\",\n\t\t\"Synopsis\": \"Trim whitespace off the end of string in inputString, putting the result in outputString\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"inputString\": { \"Hash\": \"inputString\", \"Type\": \"String\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"outputString\": { \"Hash\": \"outputString\", \"Type\": \"String\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Trim the whitespace from value [{{InputValue:inputString}}].\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:outputString}} = [{{OutputValue:outputString}}] from [{{InputValue:inputString}}]\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"String\",\n\t\t\t\"Instruction\": \"trim\"\n\t\t}\n\t]\n}\n},{}],58:[function(require,module,exports){\nlet libElucidatorInstructionSet = require('../Elucidator-InstructionSet.js');\n\nconst libDecimal = require('decimal.js');\n\nlet add = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a'));\n    let tmpB = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'b'));\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA.plus(tmpB).toString());\n    return true;\n};\n\nlet subtract = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a'));\n    let tmpB = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'b'));\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA.sub(tmpB).toString());\n    return true;\n};\n\nlet multiply = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a'));\n    let tmpB = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'b'));\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA.mul(tmpB).toString());\n    return true;\n};\n\nlet divide = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a'));\n    let tmpB = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'b'));\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA.div(tmpB).toString());\n    return true;\n};\n\nlet round = (pOperation) =>\n{\n    let tmpA = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a'));\n\n    let tmpPrecision = parseInt(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'precision'));\n    let tmpRoundingMode = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'roundingmode')\n\n    // Eventually don't set this every time...\n    if (tmpRoundingMode)\n    {\n        switch (tmpRoundingMode.toString().toLowerCase())\n        {\n            case 'round_up':\n                libDecimal.set({ rounding: libDecimal.ROUND_UP });\n                break;\n            case 'round_down':\n                libDecimal.set({ rounding: libDecimal.ROUND_DOWN });\n                break;\n            case 'round_ceil':\n                libDecimal.set({ rounding: libDecimal.ROUND_CEIL });\n                break;\n            case 'round_floor':\n                libDecimal.set({ rounding: libDecimal.ROUND_FLOOR });\n                break;\n            default:\n            case 'round_half_up':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_UP });\n                break;\n            case 'round_half_down':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_DOWN });\n                break;\n            case 'round_half_even':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_EVEN });\n                break;\n            case 'round_half_ceil':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_CEIL });\n                break;\n            case 'round_half_floor':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_FLOOR });\n                break;\n            case 'euclid':\n                libDecimal.set({ rounding: libDecimal.EUCLID });\n                break;\n        }\n    }\n    \n    if (!isNaN(tmpPrecision))\n    {\n        libDecimal.set({ precision: tmpPrecision });\n    }\n\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', libDecimal.round(tmpA).toString());\n};\n\n\nlet tosignificantdigits = (pOperation) =>\n{\n    let tmpA = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a'));\n\n    let tmpDigits = parseInt(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'digits'));\n    let tmpRoundingMode = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'roundingmode')\n\n    // Eventually don't set this every time...\n    if (tmpRoundingMode)\n    {\n        switch (tmpRoundingMode.toString().toLowerCase())\n        {\n            case 'round_up':\n                libDecimal.set({ rounding: libDecimal.ROUND_UP });\n                break;\n            case 'round_down':\n                libDecimal.set({ rounding: libDecimal.ROUND_DOWN });\n                break;\n            case 'round_ceil':\n                libDecimal.set({ rounding: libDecimal.ROUND_CEIL });\n                break;\n            case 'round_floor':\n                libDecimal.set({ rounding: libDecimal.ROUND_FLOOR });\n                break;\n            default:\n            case 'round_half_up':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_UP });\n                break;\n            case 'round_half_down':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_DOWN });\n                break;\n            case 'round_half_even':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_EVEN });\n                break;\n            case 'round_half_ceil':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_CEIL });\n                break;\n            case 'round_half_floor':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_FLOOR });\n                break;\n            case 'euclid':\n                libDecimal.set({ rounding: libDecimal.EUCLID });\n                break;\n        }\n    }\n    \n    if (isNaN(tmpDigits))\n    {\n        tmpDigits = 12;\n    }\n\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA.toSignificantDigits(tmpDigits).toString());\n};\n\nlet todecimalplaces = (pOperation) =>\n{\n    let tmpA = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a'));\n\n    let tmpDecimalPlaces = parseInt(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'decimalplaces'));\n    let tmpRoundingMode = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'roundingmode')\n\n    // Eventually don't set this every time...\n    if (tmpRoundingMode)\n    {\n        switch (tmpRoundingMode.toString().toLowerCase())\n        {\n            case 'round_up':\n                libDecimal.set({ rounding: libDecimal.ROUND_UP });\n                break;\n            case 'round_down':\n                libDecimal.set({ rounding: libDecimal.ROUND_DOWN });\n                break;\n            case 'round_ceil':\n                libDecimal.set({ rounding: libDecimal.ROUND_CEIL });\n                break;\n            case 'round_floor':\n                libDecimal.set({ rounding: libDecimal.ROUND_FLOOR });\n                break;\n            default:\n            case 'round_half_up':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_UP });\n                break;\n            case 'round_half_down':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_DOWN });\n                break;\n            case 'round_half_even':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_EVEN });\n                break;\n            case 'round_half_ceil':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_CEIL });\n                break;\n            case 'round_half_floor':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_FLOOR });\n                break;\n            case 'euclid':\n                libDecimal.set({ rounding: libDecimal.EUCLID });\n                break;\n        }\n    }\n    \n    if (isNaN(tmpDecimalPlaces))\n    {\n        tmpDecimalPlaces = 2;\n    }\n\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA.toDecimalPlaces(tmpDecimalPlaces).toString());\n};\n\nlet setprecision = (pOperation) =>\n{\n    let tmpPrecision = parseInt(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'precision'));\n    \n    console.log(tmpPrecision)\n    if (!isNaN(tmpPrecision))\n    {\n        libDecimal.set({ precision: tmpPrecision });\n    }\n};\n\nlet setroundingmode = (pOperation) =>\n{\n    let tmpRoundingMode = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'roundingmode')\n\n    // Eventually don't set this every time...\n    if (tmpRoundingMode)\n    {\n        switch (tmpRoundingMode.toString().toLowerCase())\n        {\n            case 'round_up':\n                libDecimal.set({ rounding: libDecimal.ROUND_UP });\n                break;\n            case 'round_down':\n                libDecimal.set({ rounding: libDecimal.ROUND_DOWN });\n                break;\n            case 'round_ceil':\n                libDecimal.set({ rounding: libDecimal.ROUND_CEIL });\n                break;\n            case 'round_floor':\n                libDecimal.set({ rounding: libDecimal.ROUND_FLOOR });\n                break;\n            default:\n            case 'round_half_up':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_UP });\n                break;\n            case 'round_half_down':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_DOWN });\n                break;\n            case 'round_half_even':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_EVEN });\n                break;\n            case 'round_half_ceil':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_CEIL });\n                break;\n            case 'round_half_floor':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_FLOOR });\n                break;\n            case 'euclid':\n                libDecimal.set({ rounding: libDecimal.EUCLID });\n                break;\n        }\n    }\n};\n\nlet aggregate = (pOperation) =>\n{\n    let tmpA = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a');\n\n    let tmpObjectType = typeof(tmpA);\n\n    let tmpAggregationValue = new libDecimal(0);\n\n    if (tmpObjectType == 'object')\n    {\n        if (Array.isArray(tmpA))\n        {\n            for (let i = 0; i < tmpA.length; i++)\n            {\n                // If this is an array, enumerate it and try to aggregate each number\n                let tmpValue = new libDecimal(tmpA[i]);\n\n                if (isNaN(tmpValue))\n                {\n                    pOperation.logError(`Array element index [${i}] could not be parsed as a number by Decimal.js; skipping.  (${tmpA[i]})`);\n                }\n                else\n                {\n                    tmpAggregationValue = tmpAggregationValue.plus(tmpValue);\n                    pOperation.logInfo(`Adding element [${i}] value ${tmpValue} totaling: ${tmpAggregationValue}`)\n                }\n            }\n        }\n        else\n        {\n            let tmpObjectKeys = Object.keys(tmpA);\n            for (let i = 0; i < tmpObjectKeys.length; i++)\n            {\n                let tmpValue = new libDecimal(tmpA[tmpObjectKeys[i]]);\n\n                if (isNaN(tmpValue))\n                {\n                    pOperation.logError(`Object property [${tmpObjectKeys[i]}] could not be parsed as a number; skipping.  (${tmpA[tmpObjectKeys[i]]})`);\n                }\n                else\n                {\n                    tmpAggregationValue = tmpAggregationValue.plus(tmpValue);\n                    pOperation.logInfo(`Adding object property [${tmpObjectKeys[i]}] value ${tmpValue} totaling: ${tmpAggregationValue}`)\n                }\n            }\n        }\n    }\n    else\n    {\n        let tmpValue = new libDecimal(tmpA);\n\n        if (isNaN(tmpValue))\n        {\n            pOperation.logError(`Direct value could not be parsed as a number; skipping.  (${tmpA})`);\n        }\n        else\n        {\n            tmpAggregationValue = tmpValue;\n        }\n    }\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpAggregationValue.toString());\n    return true;\n};\n\nconst groupValuesAndAggregate = (pOperation) =>\n{\n    let tmpInputDataSet = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'inputDataSet');\n    let tmpGroupByProperty = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'groupByProperty');\n    let tmpGroupValueProperty = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'groupValueProperty');\n\n    let tmpOutputDataSet = {};\n    let tmpProcessedOutputDataSet = {};\n \n    let tmpObjectType = typeof(tmpInputDataSet);\n\n    if (tmpObjectType == 'object')\n    {\n        if (Array.isArray(tmpInputDataSet))\n        {\n            for (let i = 0; i < tmpInputDataSet.length; i++)\n            {\n                if (typeof(tmpInputDataSet[i]) !== 'object')\n                {\n                    pOperation.logInfo(`Element [${i}] was not an object; skipping group operation.`);\n                }\n                else\n                {\n                    let tmpValue = tmpInputDataSet[i];\n                    let tmpGroupByValue = tmpValue[tmpGroupByProperty];\n                    if (!tmpValue.hasOwnProperty(tmpGroupByProperty))\n                    {\n                        pOperation.logInfo(`Element [${i}] doesn't have the group by property [${tmpGroupByProperty}]; setting group to [__NO_GROUP].`);\n                        tmpGroupByValue = '__NO_GROUP';\n                    }\n\n                    if (!tmpValue.hasOwnProperty(tmpGroupValueProperty))\n                    {\n                        pOperation.logInfo(`Element [${i}] doesn't have the group value property [${tmpGroupValueProperty}]; skipping group operation.`);\n                    }\n                    else\n                    {\n                        let tmpDecimalValue = new libDecimal(tmpValue[tmpGroupValueProperty]);\n\n                        if (isNaN(tmpDecimalValue))\n                        {\n                            pOperation.logError(`Object property [${i}] could not be parsed as a number; skipping.  (${tmpValue[tmpGroupValueProperty]})`);\n                        }\n                        else\n                        {\n                            if (!tmpOutputDataSet.hasOwnProperty(tmpGroupByValue))\n                            {\n                                tmpOutputDataSet[tmpGroupByValue] = tmpDecimalValue;\n                            }\n                            else\n                            {\n                                tmpOutputDataSet[tmpGroupByValue] = tmpOutputDataSet[tmpGroupByValue].plus(tmpDecimalValue);\n                            }\n                            pOperation.logInfo(`Adding object property [${i}] value ${tmpDecimalValue} totaling: ${tmpOutputDataSet[tmpGroupByValue]}`)\n                        }\n                    }\n                }\n            }\n        }\n        else\n        {\n            let tmpObjectKeys = Object.keys(tmpInputDataSet);\n            for (let i = 0; i < tmpObjectKeys.length; i++)\n            {\n                if (typeof(tmpInputDataSet[tmpObjectKeys[i]]) !== 'object')\n                {\n                    pOperation.logInfo(`Element [${i}] was not an object; skipping group operation.`);\n                }\n                else\n                {\n                    let tmpValue = tmpInputDataSet[tmpObjectKeys[i]];\n                    let tmpGroupByValue = tmpValue[tmpGroupByProperty];\n                    if (!tmpValue.hasOwnProperty(tmpGroupByProperty))\n                    {\n                        pOperation.logInfo(`Element [${tmpObjectKeys[i]}][${i}] doesn't have the group by property [${tmpGroupByProperty}]; setting group to [__NO_GROUP].`);\n                        tmpGroupByValue = '__NO_GROUP';\n                    }\n\n                    if (!tmpValue.hasOwnProperty(tmpGroupValueProperty))\n                    {\n                        pOperation.logInfo(`Element [${tmpObjectKeys[i]}][${i}] doesn't have the group value property [${tmpGroupValueProperty}]; skipping group operation.`);\n                    }\n                    else\n                    {\n                        let tmpDecimalValue = new libDecimal(tmpValue[tmpGroupValueProperty]);\n\n                        if (isNaN(tmpDecimalValue))\n                        {\n                            pOperation.logError(`Object property [${tmpObjectKeys[i]}][${i}] to group ${tmpGroupByValue} could not be parsed as a number; skipping.  (${tmpValue[tmpGroupValueProperty]})`);\n                        }\n                        else\n                        {\n                            if (!tmpOutputDataSet.hasOwnProperty(tmpGroupByValue))\n                            {\n                                tmpOutputDataSet[tmpGroupByValue] = tmpDecimalValue;\n                            }\n                            else\n                            {\n                                tmpOutputDataSet[tmpGroupByValue] = tmpOutputDataSet[tmpGroupByValue].plus(tmpDecimalValue);\n                            }\n                            pOperation.logInfo(`Adding object property [${tmpObjectKeys[i]}][${i}] to group ${tmpGroupByValue} value ${tmpDecimalValue} totaling: ${tmpOutputDataSet[tmpGroupByValue]}`)\n                        }\n                    }\n                }\n            }\n        }\n\n        // Now marshal the aggregated values\n        let tmpOutputGroups = Object.keys(tmpOutputDataSet);\n        for (let j = 0; j < tmpOutputGroups.length; j++)\n        {\n            tmpProcessedOutputDataSet[tmpOutputGroups[j]] = tmpOutputDataSet[tmpOutputGroups[j]].toString();\n        }\n    }\n    else\n    {\n        pOperation.logError(`Input set is neither an Array nor an Object`);\n    }\n\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'outputDataSet', tmpProcessedOutputDataSet);\n\n    return true;\n}\n\nlet toFraction = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a'));\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA.toFraction().toString());\n    return true;\n};\n\n\nclass PreciseMath extends libElucidatorInstructionSet\n{\n    constructor(pElucidator)\n    {\n        super(pElucidator);\n        this.namespace = 'PreciseMath';\n    }\n\n    initializeInstructions()\n    {\n        this.addInstruction('add', add);\n\n        this.addInstruction('subtract', subtract);\n        this.addInstruction('sub', subtract);\n\n        this.addInstruction('multiply', multiply);\n        this.addInstruction('mul', multiply);\n\n        this.addInstruction('divide', divide);\n        this.addInstruction('div', divide);\n\n        this.addInstruction('aggregate', aggregate);\n        this.addInstruction('groupvaluesandaggregate', groupValuesAndAggregate);\n\n        this.addInstruction('setprecision', setprecision);\n        this.addInstruction('setroundingmode', setroundingmode);\n\n        this.addInstruction('todecimalplaces', todecimalplaces);\n        this.addInstruction('tosignificantdigits', tosignificantdigits);\n        this.addInstruction('round', round);\n        this.addInstruction('tofraction', toFraction);\n\n\n        return true;\n    }\n\n    initializeOperations()\n    {\n        this.addOperation('add', require(`./Operations/PreciseMath-Add.json`));\n        this.addOperation('subtract', require(`./Operations/PreciseMath-Subtract.json`));\n        this.addOperation('multiply', require(`./Operations/PreciseMath-Multiply.json`));\n        this.addOperation('divide', require(`./Operations/PreciseMath-Divide.json`));\n\n        this.addOperation('aggregate', require('./Operations/PreciseMath-Aggregate.json'));\n        this.addOperation('groupvaluesandaggregate', require('./Operations/PreciseMath-GroupValuesAndAggregate.json'));\n\n        this.addOperation('setprecision', require('./Operations/PreciseMath-SetPrecision.json'));\n        this.addOperation('setroundingmode', require('./Operations/PreciseMath-SetRoundingMode.json'));\n\n        this.addOperation('tosignificantdigits', require('./Operations/PreciseMath-ToSignificantDigits.json'));\n        this.addOperation('todecimalplaces', require('./Operations/PreciseMath-ToDecimalPlaces.json'));\n        this.addOperation('round', require('./Operations/PreciseMath-Round.json'));\n\n        return true;\n    }\n}\n\nmodule.exports = PreciseMath;\n},{\"../Elucidator-InstructionSet.js\":29,\"./Operations/PreciseMath-Add.json\":43,\"./Operations/PreciseMath-Aggregate.json\":44,\"./Operations/PreciseMath-Divide.json\":45,\"./Operations/PreciseMath-GroupValuesAndAggregate.json\":46,\"./Operations/PreciseMath-Multiply.json\":47,\"./Operations/PreciseMath-Round.json\":48,\"./Operations/PreciseMath-SetPrecision.json\":49,\"./Operations/PreciseMath-SetRoundingMode.json\":50,\"./Operations/PreciseMath-Subtract.json\":51,\"./Operations/PreciseMath-ToDecimalPlaces.json\":52,\"./Operations/PreciseMath-ToSignificantDigits.json\":53,\"decimal.js\":21}],59:[function(require,module,exports){\n// Solution providers are meant to be stateless, and not classes.\n// These solution providers are akin to drivers, connecting code libraries or \n// other types of behavior to mapping operations.\n\nlet libElucidatorInstructionSet = require('../Elucidator-InstructionSet.js');\n\nconst groupValuesBy = (pOperation) =>\n{\n    let tmpInputDataSet = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'inputDataSet');\n    let tmpGroupByProperty = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'groupByProperty');\n    let tmpGroupValueProperty = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'groupValueProperty');\n\n    let tmpOutputDataSet = {};\n \n    let tmpObjectType = typeof(tmpInputDataSet);\n\n    if (tmpObjectType == 'object')\n    {\n        if (Array.isArray(tmpInputDataSet))\n        {\n            for (let i = 0; i < tmpInputDataSet.length; i++)\n            {\n                if (typeof(tmpInputDataSet[i]) !== 'object')\n                {\n                    pOperation.logInfo(`Element [${i}] was not an object; skipping group operation.`);\n                }\n                else\n                {\n                    let tmpValue = tmpInputDataSet[i];\n                    let tmpGroupByValue = tmpValue[tmpGroupByProperty];\n                    if (!tmpValue.hasOwnProperty(tmpGroupByProperty))\n                    {\n                        pOperation.logInfo(`Element [${i}] doesn't have the group by property [${tmpGroupByProperty}]; setting group to [__NO_GROUP].`);\n                        tmpGroupByValue = '__NO_GROUP';\n                    }\n\n                    if (!tmpValue.hasOwnProperty(tmpGroupValueProperty))\n                    {\n                        pOperation.logInfo(`Element [${i}] doesn't have the group value property [${tmpGroupValueProperty}]; skipping group operation.`);\n                    }\n                    else\n                    {\n                        if (!tmpOutputDataSet.hasOwnProperty(tmpGroupByValue))\n                        {\n                            // Create a new grouped value\n                            pOperation.logInfo(`Creating a new group [${tmpGroupByValue}] for element [${i}].`);\n                            tmpOutputDataSet[tmpGroupByValue] = [];\n                        }\n\n                        tmpOutputDataSet[tmpGroupByValue].push(tmpValue[tmpGroupValueProperty]);\n                    }\n                }\n            }\n        }\n        else\n        {\n            let tmpObjectKeys = Object.keys(tmpInputDataSet);\n            for (let i = 0; i < tmpObjectKeys.length; i++)\n            {\n                if (typeof(tmpInputDataSet[tmpObjectKeys[i]]) !== 'object')\n                {\n                    pOperation.logInfo(`Element [${i}] was not an object; skipping group operation.`);\n                }\n                else\n                {\n                    let tmpValue = tmpInputDataSet[tmpObjectKeys[i]];\n                    let tmpGroupByValue = tmpValue[tmpGroupByProperty];\n                    if (!tmpValue.hasOwnProperty(tmpGroupByProperty))\n                    {\n                        pOperation.logInfo(`Element [${tmpObjectKeys[i]}][${i}] doesn't have the group by property [${tmpGroupByProperty}]; setting group to [__NO_GROUP].`);\n                        tmpGroupByValue = '__NO_GROUP';\n                    }\n\n                    if (!tmpValue.hasOwnProperty(tmpGroupValueProperty))\n                    {\n                        pOperation.logInfo(`Element [${tmpObjectKeys[i]}][${i}] doesn't have the group value property [${tmpGroupValueProperty}]; skipping group operation.`);\n                    }\n                    else\n                    {\n                        if (!tmpOutputDataSet.hasOwnProperty(tmpGroupByValue))\n                        {\n                            // Create a new grouped value\n                            pOperation.logInfo(`Creating a new group [${tmpGroupByValue}] for element [${tmpObjectKeys[i]}][${i}].`);\n                            tmpOutputDataSet[tmpGroupByValue] = [];\n                        }\n\n                        tmpOutputDataSet[tmpGroupByValue].push(tmpValue[tmpGroupValueProperty]);\n                    }\n                }\n            }\n        }\n    }\n    else\n    {\n        pOperation.logError(`Input set is neither an Array nor an Object`);\n    }\n\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'outputDataSet', tmpOutputDataSet);\n\n    return true;\n}\n\nclass Set extends libElucidatorInstructionSet\n{\n    constructor(pElucidator)\n    {\n        super(pElucidator);\n        this.namespace = 'Set';\n    }\n\n    initializeInstructions()\n    {\n        // Logic actually wants a noop instruction!\n        super.initializeInstructions();\n\n        this.addInstruction('groupvaluesby', groupValuesBy);\n\n        return true;\n    }\n\n    initializeOperations()\n    {\n        this.addOperation('groupvaluesby', require(`./Operations/Set-GroupValuesBy.json`));\n\n        return true;\n    }\n}\n\nmodule.exports = Set;\n},{\"../Elucidator-InstructionSet.js\":29,\"./Operations/Set-GroupValuesBy.json\":54}],60:[function(require,module,exports){\n// Solution providers are meant to be stateless, and not classes.\n// These solution providers are akin to drivers, connecting code libraries or \n// other types of behavior to mapping operations.\n\nlet libElucidatorInstructionSet = require('../Elucidator-InstructionSet.js');\n\nlet trim = (pOperation) =>\n{\n    let tmpInputString = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'inputString');\n\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'outputString', tmpInputString.trim());\n\n    return true;\n};\n\nlet replace = (pOperation) =>\n{\n    let tmpInputString = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'inputString');\n    let tmpSearchFor = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'searchFor');\n    let tmpReplaceWith = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'replaceWith');\n\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'outputString', tmpInputString.replace(tmpSearchFor, tmpReplaceWith));\n\n    return true;\n};\n\nlet substring = (pOperation) =>\n{\n    let tmpInputString = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'inputString');\n    let indexStart = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'indexStart');\n    let indexEnd = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'indexEnd');\n\n    if (indexEnd != null)\n    {\n        pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'outputString', tmpInputString.substring(indexStart, indexEnd));\n    }\n    else\n    {\n        pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'outputString', tmpInputString.substring(indexStart));\n    }\n\n    return true;\n};\n\nclass StringOperations extends libElucidatorInstructionSet\n{\n    constructor(pElucidator)\n    {\n        super(pElucidator);\n        this.namespace = 'String';\n    }\n\n    initializeInstructions()\n    {\n        this.addInstruction('trim', trim);\n        this.addInstruction('replace', replace);\n        this.addInstruction('substring', substring);\n\n        return true;\n    }\n\n    initializeOperations()\n    {\n        this.addOperation('trim', require(`./Operations/String-Trim.json`));\n        this.addOperation('replace', require(`./Operations/String-Replace.json`));\n        this.addOperation('substring', require(`./Operations/String-Substring.json`));\n\n        return true;\n    }\n}\n\nmodule.exports = StringOperations;\n},{\"../Elucidator-InstructionSet.js\":29,\"./Operations/String-Replace.json\":55,\"./Operations/String-Substring.json\":56,\"./Operations/String-Trim.json\":57}],61:[function(require,module,exports){\n/**\n* Base Logger Class\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\nclass BaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = (typeof(pLogStreamSettings) == 'object') ? pLogStreamSettings : {};\n\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\t// We added this as the mechanism for tracking loggers to allow multiple simultaneous streams\n\t\t// to the same provider.\n\t\tthis.loggerUUID = this.generateInsecureUUID();\n\n\t\t// Eventually we can use this array to ompute which levels the provider allows.\n\t\t// For now it's just used to precompute some string concatenations.\n\t\tthis.levels = (\n\t\t\t[\n\t\t\t\t\"trace\",\n\t\t\t\t\"debug\",\n\t\t\t\t\"info\",\n\t\t\t\t\"warn\",\n\t\t\t\t\"error\",\n\t\t\t\t\"fatal\"\n\t\t\t]);\n\t}\n\n\t// This is meant to generate programmatically insecure UUIDs to identify loggers\n\tgenerateInsecureUUID()\n\t{\n\t\tlet tmpDate = new Date().getTime();\n\t\tlet tmpUUID = 'LOGSTREAM-xxxxxx-yxxxxx'.replace(/[xy]/g,\n\t\t\t\t(pCharacter) =>\n\t\t\t\t{\n\t\t\t\t\t// Funny algorithm from w3resource that is twister-ish without the deep math and security\n\t\t\t\t\t// ..but good enough for unique log stream identifiers\n\t\t\t\t\tlet tmpRandomData = (tmpDate + Math.random()*16)%16 | 0;\n\t\t\t\t\ttmpDate = Math.floor(tmpDate/16);\n\n\t\t\t\t\treturn (pCharacter =='x' ? tmpRandomData : (tmpRandomData&0x3|0x8)).toString(16);\n\t\t\t\t});\n\t\treturn tmpUUID;\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n\n},{}],62:[function(require,module,exports){\n/**\n* Default Logger Provider Function\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\ngetDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\ttmpDefaultProviders.default = tmpDefaultProviders.console;\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();\n},{\"./Fable-Log-Logger-Console.js\":64}],63:[function(require,module,exports){\nmodule.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]\n},{}],64:[function(require,module,exports){\nlet libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings);\n\n\t\tthis._ShowTimeStamps = this._Settings.hasOwnProperty('showtimestamps') ? (this._Settings.showtimestamps == true) : true;\n\t\tthis._FormattedTimeStamps = this._Settings.hasOwnProperty('formattedtimestamps') ? (this._Settings.formattedtimestamps == true) : true;\n\n\t\tthis._ContextMessage = this._Settings.hasOwnProperty('Context') ? `(${this._Settings.Context})` : \n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? `(${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'Unnamed_Log_Context';\n\n\t\t// Allow the user to decide what gets output to the console\n\t\tthis._OutputLogLinesToConsole = this._Settings.hasOwnProperty('outputloglinestoconsole') ? this._Settings.outputloglinestoconsole : true;\n\t\tthis._OutputObjectsToConsole = this._Settings.hasOwnProperty('outputobjectstoconsole') ? this._Settings.outputobjectstoconsole : true;\n\n\t\t// Precompute the prefix for each level\n\t\tthis.prefixCache = {};\n\t\tfor (let i = 0; i <= this.levels.length; i++)\n\t\t{\n\t\t\tthis.prefixCache[this.levels[i]] = `[${this.levels[i]}] ${this._ContextMessage}: `;\n\n\t\t\tif (this._ShowTimeStamps)\n\t\t\t{\n\t\t\t\t// If there is a timestamp we need a to prepend space before the prefixcache string, since the timestamp comes first\n\t\t\t\tthis.prefixCache[this.levels[i]] = ' '+this.prefixCache[this.levels[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpTimeStamp = '';\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = (new Date()).toISOString();\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = +new Date();\n\t\t}\n\n\t\tlet tmpLogLine = `${tmpTimeStamp}${this.prefixCache[pLevel]}${pLogText}`;\n\n\t\tif (this._OutputLogLinesToConsole)\n\t\t{\n\t\t\tconsole.log(tmpLogLine);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (this._OutputObjectsToConsole && (typeof(pObject) !== 'undefined'))\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 2));\n\t\t}\n\n\t\t// Provide an easy way to be overridden and be consistent\n\t\treturn tmpLogLine;\n\t}\n}\n\nmodule.exports = ConsoleLogger;\n},{\"./Fable-Log-BaseLogger.js\":61}],65:[function(require,module,exports){\nconst libConsoleLog = require('./Fable-Log-Logger-Console.js');\nconst libFS = require('fs');\nconst libPath = require('path');\n\nclass SimpleFlatFileLogger extends libConsoleLog\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings, pFableLog);\n\n\t\t// If a path isn't provided for the logfile, it tries to use the ProductName or Context\n\t\tthis.logFileRawPath = (this._Settings.hasOwnProperty('path')) ? this._Settings.path : `./${this._ContextMessage}.log`;\n\t\tthis.logFilePath = libPath.normalize(this.logFileRawPath);\n\n\t\tthis.logFileStreamOptions = (this._Settings.hasOwnProperty('fileStreamoptions')) ? this._Settings.fileStreamOptions : (\n\t\t\t{\n\t\t\t\t\"flags\": \"a\",\n\t\t\t\t\"encoding\": \"utf8\"\n\t\t\t})\n\n\t\tthis.fileWriter = libFS.createWriteStream(this.logFilePath, this.logFileStreamOptions);\n\n\t\tthis.activelyWriting = false;\n\n\t\tthis.logLineStrings = [];\n\t\tthis.logObjectStrings = [];\n\n\t\tthis.defaultWriteCompleteCallback = ()=>{};\n\t\tthis.defaultBufferFlushCallback = ()=>{};\n\t}\n\n\tcloseWriter(fCloseComplete)\n\t{\n\t\tlet tmpCloseComplete = (typeof(fCloseComplete) == 'function') ? fCloseComplete : ()=>{};\n\t\tif (this.fileWriter)\n\t\t{\n\t\t\tthis.fileWriter.end('\\n');\n\t\t\treturn this.fileWriter.once('finish', tmpCloseComplete.bind(this));\n\t\t}\n\t};\n\n\tcompleteBufferFlushToLogFile(fFlushComplete)\n\t{\n\t\tthis.activelyWriting = false;\n\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\tif (this.logLineStrings.length > 0)\n\t\t{\n\t\t\tthis.flushBufferToLogFile(tmpFlushComplete);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpFlushComplete();\n\t\t}\n\t}\n\n\tflushBufferToLogFile(fFlushComplete)\n\t{\n\t\tif (!this.activelyWriting)\n\t\t{\n\t\t\t// Only want to be writing one thing at a time....\n\t\t\tthis.activelyWriting = true;\n\n\t\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\t\t// Get the current buffer arrays.  These should always have matching number of elements.\n\t\t\tlet tmpLineStrings = this.logLineStrings;\n\t\t\tlet tmpObjectStrings = this.logObjectStrings;\n\n\t\t\t// Reset these to be filled while we process this queue...\n\t\t\tthis.logLineStrings = [];\n\t\t\tthis.logObjectStrings = [];\n\n\t\t\t// This is where we will put each line before writing it to the file...\n\t\t\tlet tmpConstructedBufferOutputString = '';\n\n\t\t\tfor (let i = 0; i < tmpLineStrings.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: Windows Newline?   ....... yo no se!\n\t\t\t\ttmpConstructedBufferOutputString += `${tmpLineStrings[i]}\\n`;\n\t\t\t\tif (tmpObjectStrings[i] !== false)\n\t\t\t\t{\n\t\t\t\t\ttmpConstructedBufferOutputString += `${tmpObjectStrings[i]}\\n`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.fileWriter.write(tmpConstructedBufferOutputString, 'utf8'))\n\t\t\t{\n\t\t\t\t// If the streamwriter returns false, we need to wait for it to drain.\n\t\t\t\tthis.fileWriter.once('drain', this.completeBufferFlushToLogFile.bind(this, tmpFlushComplete));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.completeBufferFlushToLogFile(tmpFlushComplete);\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpLogLine = super.write(pLevel, pLogText, pObject);\n\n\t\t// Use a very simple array as the write buffer\n\t\tthis.logLineStrings.push(tmpLogLine);\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tthis.logObjectStrings.push(JSON.stringify(pObject, null, 4));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logObjectStrings.push(false);\n\t\t}\n\n\t\tthis.flushBufferToLogFile();\n\t}\n}\n\nmodule.exports = SimpleFlatFileLogger;\n},{\"./Fable-Log-Logger-Console.js\":64,\"fs\":16,\"path\":94}],66:[function(require,module,exports){\n/**\n* Fable Logging Add-on\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Logger\n*/\n\n/**\n* Fable Solution Log Wrapper Main Class\n*\n* @class FableLog\n* @constructor\n*/\nclass FableLog\n{\n\tconstructor(pFableSettings, pFable)\n\t{\n\t\tlet tmpSettings = (typeof(pFableSettings) === 'object') ? pFableSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders-Node.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.datumDecorator = (pDatum) => pDatum;\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetDatumDecorator(fDatumDecorator)\n\t{\n\t\tif (typeof(fDatumDecorator) === 'function')\n\t\t{\n\t\t\tthis.datumDecorator = fDatumDecorator;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.datumDecorator = (pDatum) => pDatum;\n\t\t}\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'default',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableLog(pSettings);\n}\n\n\nmodule.exports = FableLog;\nmodule.exports.new = autoConstruct;\nmodule.exports.LogProviderBase = require('./Fable-Log-BaseLogger.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-Console.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-SimpleFlatFile.js');\n\n},{\"./Fable-Log-BaseLogger.js\":61,\"./Fable-Log-DefaultProviders-Node.js\":62,\"./Fable-Log-DefaultStreams.json\":63,\"./Fable-Log-Logger-Console.js\":64,\"./Fable-Log-Logger-SimpleFlatFile.js\":65}],67:[function(require,module,exports){\nmodule.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n\n},{}],68:[function(require,module,exports){\n(function (process){(function (){\n/**\n* Fable Settings Template Processor\n*\n* This class allows environment variables to come in via templated expressions, and defaults to be set.\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nclass FableSettingsTemplateProcessor\n{\n\tconstructor(pDependencies)\n\t{\n        // Use a no-dependencies templating engine to parse out environment variables\n\t\tthis.templateProcessor = new pDependencies.precedent();\n\n        // TODO: Make the environment variable wrap expression demarcation characters configurable?\n\t\tthis.templateProcessor.addPattern('${', '}',\n\t\t\t(pTemplateValue)=>\n\t\t\t{\n\t\t\t\tlet tmpTemplateValue = pTemplateValue.trim();\n\n\t\t\t\tlet tmpSeparatorIndex = tmpTemplateValue.indexOf('|');\n\n\t\t\t\t// If there is no pipe, the default value will end up being whatever the variable name is.\n\t\t\t\tlet tmpDefaultValue = tmpTemplateValue.substring(tmpSeparatorIndex+1);\n\n\t\t\t\tlet tmpEnvironmentVariableName = (tmpSeparatorIndex > -1) ? tmpTemplateValue.substring(0, tmpSeparatorIndex) : tmpTemplateValue;\n\n\t\t\t\tif (process.env.hasOwnProperty(tmpEnvironmentVariableName))\n\t\t\t\t{\n\t\t\t\t\treturn process.env[tmpEnvironmentVariableName];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpDefaultValue;\n\t\t\t\t}\n\t\t\t});\n    }\n\n    parseSetting(pString)\n    {\n        return this.templateProcessor.parseString(pString);\n    }\n}\n\nmodule.exports = FableSettingsTemplateProcessor;\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":98}],69:[function(require,module,exports){\n/**\n* Fable Settings Add-on\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nconst libPrecedent = require('precedent');\nconst libFableSettingsTemplateProcessor = require('./Fable-Settings-TemplateProcessor.js');\n\nclass FableSettings\n{\n\tconstructor(pFableSettings)\n\t{\n\t\t// Expose the dependencies for downstream re-use\n\t\tthis.dependencies = (\n\t\t\t{\n\t\t\t\tprecedent: libPrecedent\n\t\t\t});\n\n\t\t// Initialize the settings value template processor\n\t\tthis.settingsTemplateProcessor = new libFableSettingsTemplateProcessor(this.dependencies);\n\n\t\t// set straight away so anything that uses it respects the initial setting\n\t\tthis._configureEnvTemplating(pFableSettings);\n\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pFableSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')));\n\t}\n\n\t// Update the configuration for environment variable templating based on the current settings object\n\t_configureEnvTemplating(pSettings)\n\t{\n\t\t// default environment variable templating to on\n\t\tthis._PerformEnvTemplating = !pSettings || pSettings.NoEnvReplacement !== true;\n\t}\n\n\t// Resolve (recursive) any environment variables found in settings object.\n\t_resolveEnv(pSettings)\n\t{\n\t\tfor (const tmpKey in pSettings)\n\t\t{\n\t\t\tif (typeof(pSettings[tmpKey]) === 'object')\n\t\t\t{\n\t\t\t\tthis._resolveEnv(pSettings[tmpKey]);\n\t\t\t}\n\t\t\telse if (typeof(pSettings[tmpKey]) === 'string')\n\t\t\t{\n\t\t\t\tpSettings[tmpKey] = this.settingsTemplateProcessor.parseSetting(pSettings[tmpKey]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if a value is an object (but not an array).\n\t */\n\t_isObject(value)\n\t{\n\t\treturn typeof(value) === 'object' && !Array.isArray(value);\n\t}\n\n\t/**\n\t * Merge two plain objects. Keys that are objects in both will be merged property-wise.\n\t */\n\t_deepMergeObjects(toObject, fromObject)\n\t{\n\t\tif (!fromObject || !this._isObject(fromObject))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject.keys(fromObject).forEach((key) =>\n\t\t{\n\t\t\tconst fromValue = fromObject[key];\n\t\t\tif (this._isObject(fromValue))\n\t\t\t{\n\t\t\t\tconst toValue = toObject[key];\n\t\t\t\tif (toValue && this._isObject(toValue))\n\t\t\t\t{\n\t\t\t\t\t// both are objects, so do a recursive merge\n\t\t\t\t\tthis._deepMergeObjects(toValue, fromValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoObject[key] = fromValue;\n\t\t});\n\t\treturn toObject;\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\t\ttmpSettingsTo = this._deepMergeObjects(tmpSettingsTo, tmpSettingsFromCopy);\n\n\t\tif (this._PerformEnvTemplating)\n\t\t{\n\t\t\tthis._resolveEnv(tmpSettingsTo);\n\t\t}\n\t\t// Update env tempating config, since we just updated the config object, and it may have changed\n\t\tthis._configureEnvTemplating(tmpSettingsTo);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\n\t\tthis.settings = this._deepMergeObjects(tmpSettingsFromCopy, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = FableSettings;\nmodule.exports.new = autoConstruct;\nmodule.exports.precedent = libPrecedent;\n},{\"./Fable-Settings-Default\":67,\"./Fable-Settings-TemplateProcessor.js\":68,\"precedent\":95}],70:[function(require,module,exports){\n/**\n* Random Byte Generator - Browser version\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn this.generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n\n},{}],71:[function(require,module,exports){\n/**\n* Fable UUID Generator\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable UUID\n*/\n\n/**\n* Fable Solution UUID Generation Main Class\n*\n* @class FableUUID\n* @constructor\n*/\n\nvar libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID\n{\n\tconstructor(pSettings)\n\t{\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = FableUUID;\nmodule.exports.new = autoConstruct;\n\n},{\"./Fable-UUID-Random.js\":70}],72:[function(require,module,exports){\nconst _OperationStatePrototype = JSON.stringify(\n{\n\t\"Metadata\": {\n\t\t\"GUID\": false,\n\t\t\"Hash\": false,\n\n\t\t\"Title\": \"\",\n\t\t\"Summary\": \"\",\n\n\t\t\"Version\": 0\n\t},\n\t\"Status\": {\n        \"Completed\": false,\n\n        \"CompletionProgress\": 0,\n        \"CompletionTimeElapsed\": 0,\n\n        \"Steps\": 1,\n        \"StepsCompleted\": 0,\n\n        \"StartTime\": 0,\n        \"EndTime\": 0\n\t},\n\t\"Errors\": [],\n\t\"Log\": []\n});\n\nclass FableOperation\n{\n\tconstructor(pFable, pOperationName, pOperationHash)\n\t{\n\t\tthis.fable = pFable;\n\n\t\tthis.name = pOperationName;\n\n\t\tthis.state = JSON.parse(_OperationStatePrototype);\n\n\t\tthis.state.Metadata.GUID = this.fable.getUUID();\n\t\tthis.state.Metadata.Hash = this.state.GUID;\n\n\t\tif (typeof(pOperationHash) == 'string')\n\t\t{\n\t\t\tthis.state.Metadata.Hash = pOperationHash;\n\t\t}\n\t}\n\n\tget GUID()\n\t{\n\t\treturn this.state.Metadata.GUID;\n\t}\n\n\tget Hash()\n\t{\n\t\treturn this.state.Metadata.Hash;\n\t}\n\n\tget log()\n\t{\n\t\treturn this;\n\t}\n\n\twriteOperationLog(pLogLevel, pLogText, pLogObject)\n\t{\n\t\tthis.state.Log.push(`${new Date().toUTCString()} [${pLogLevel}]: ${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Log.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\twriteOperationErrors(pLogText, pLogObject)\n\t{\n\t\tthis.state.Errors.push(`${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Errors.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('TRACE', pLogText, pLogObject);\n\t\tthis.fable.log.trace(pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('DEBUG', pLogText, pLogObject);\n\t\tthis.fable.log.debug(pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('INFO', pLogText, pLogObject);\n\t\tthis.fable.log.info(pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('WARN', pLogText, pLogObject);\n\t\tthis.fable.log.warn(pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('ERROR', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.error(pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('FATAL', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.fatal(pLogText, pLogObject);\n\t}\n}\n\nmodule.exports = FableOperation;\n},{}],73:[function(require,module,exports){\nconst libFableServiceBase = require('./Fable-ServiceProviderBase.js');\nconst libDataArithmatic = require('data-arithmatic');\n\nclass FableServiceDataArithmatic extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'DataArithmatic';\n\n        this._DataArithmaticLibrary = new libDataArithmatic();\n\t}\n}\n\nmodule.exports = FableServiceDataArithmatic;\n},{\"./Fable-ServiceProviderBase.js\":78,\"data-arithmatic\":20}],74:[function(require,module,exports){\nconst libFableServiceBase = require('./Fable-ServiceProviderBase.js');\n\nconst libPrecedent = require('precedent');\n\nclass FableServiceMetaTemplate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'MetaTemplate';\n\n        this._MetaTemplateLibrary = new libPrecedent(this.options);\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this._MetaTemplateLibrary.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this._MetaTemplateLibrary.parseString(pString, pData);\n\t}\n}\n\nmodule.exports = FableServiceMetaTemplate;\n},{\"./Fable-ServiceProviderBase.js\":78,\"precedent\":95}],75:[function(require,module,exports){\nconst libFableServiceBase = require('./Fable-ServiceProviderBase.js');\n\nclass FableServiceTemplate extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Template';\n\n\t\t// These are the exact regex's used in lodash/underscore\n\t\t// TODO: Switch this to precedent\n\t\tthis.Matchers = (\n\t\t\t{\n\t\t\t\tEvaluate: /<%([\\s\\S]+?)%>/g,\n\t\t\t\tInterpolate: /<%=([\\s\\S]+?)%>/g,\n\t\t\t\tEscaper: /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g,\n\t\t\t\tUnescaper: /\\\\(\\\\|'|r|n|t|u2028|u2029)/g,\n\t\t\t\t// This is how underscore does it, so we are keeping it for now.\n\t\t\t\tGuaranteedNonMatch: /.^/\n\t\t\t});\n\n\t\t// This is a helper for the escaper and unescaper functions.\n\t\t// Right now we are going to keep what underscore is doing, but, not forever.\n\t\tthis.templateEscapes = {\n\t\t\t'\\\\': '\\\\',\n\t\t\t\"'\": \"'\",\n\t\t\t'r': '\\r',\n\t\t\t'\\r': 'r',\n\t\t\t'n': '\\n',\n\t\t\t'\\n': 'n',\n\t\t\t't': '\\t',\n\t\t\t'\\t': 't',\n\t\t\t'u2028': '\\u2028',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'u2029': '\\u2029',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\t// This is defined as such to underscore that it is a dynamic programming\n\t\t// function on this class.\n\t\tthis.renderFunction = false;\n        this.templateString = false;\n\t}\n\n\trenderTemplate(pData)\n\t{\n\t\treturn this.renderFunction(pData);\n\t}\n\n\ttemplateFunction(pData)\n\t{\n\t\tlet fRenderTemplateBound = this.renderTemplate.bind(this);\n\t\treturn fRenderTemplateBound;\n\t}\n\n\tbuildTemplateFunction(pTemplateText, pData)\n\t{\n\t\t// For now this is being kept in a weird form ... this is to mimic the old\n\t\t// underscore code until this is rewritten using precedent.\n\t\tthis.TemplateSource = \"__p+='\" + pTemplateText\n\t\t\t.replace(this.Matchers.Escaper,\n\t\t\t\t(pMatch)=>\n\t\t\t\t{\n\t\t\t\t\treturn `\\\\${this.templateEscapes[pMatch]}`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Interpolate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `'+\\n(${decodeURIComponent(pCode)})+\\n'`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Evaluate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `';\\n${decodeURIComponent(pCode)}\\n;__p+='`;\n\t\t\t\t}) + `';\\n`;\n\n\n\t\tthis.TemplateSource = `with(pTemplateDataObject||{}){\\n${this.TemplateSource}}\\n`;\n\t\tthis.TemplateSource = `var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n${this.TemplateSource}return __p;\\n`;\n\n\t\tthis.renderFunction = new Function('pTemplateDataObject', this.TemplateSource);\n\n\t\tif (typeof(pData) != 'undefined')\n\t\t{\n\t\t\treturn this.renderFunction(pData);\n\t\t}\n\n\t\t// Provide the compiled function source as a convenience for build time\n\t\t// precompilation.\n\t\tthis.TemplateSourceCompiled = 'function(obj){\\n' + this.TemplateSource + '}';\n\n\t\treturn this.templateFunction();\n\t}\n}\n\nmodule.exports = FableServiceTemplate;\n},{\"./Fable-ServiceProviderBase.js\":78}],76:[function(require,module,exports){\nconst libFableServiceBase = require('./Fable-ServiceProviderBase.js');\n\n\n// TODO: These are still pretty big -- consider the smaller polyfills\nconst libAsyncWaterfall = require('async.waterfall');\nconst libAsyncEachLimit = require('async.eachlimit');\n\nclass FableServiceUtility extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\tthis.templates = {};\n\n\t\t// These two functions are used extensively throughout\n\t\tthis.waterfall = libAsyncWaterfall;\n\t\tthis.eachLimit = libAsyncEachLimit;\n\t}\n\n\t// Underscore and lodash have a behavior, _.extend, which merges objects.\n\t// Now that es6 gives us this, use the native thingy.\n\textend(pDestinationObject, ...pSourceObjects)\n\t{\n\t\treturn Object.assign(pDestinationObject, ...pSourceObjects);\n\t}\n\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\ttemplate(pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Template');\n\n\t\treturn tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t}\n\n\t// Build a template function from a template hash, and, register it with the service provider\n\tbuildHashedTemplate(pTemplateHash, pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.serviceManager.instantiateServiceProvider('Template', {}, pTemplateHash);\n\n\t\tthis.templates[pTemplateHash] = tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\n\t\treturn this.templates[pTemplateHash];\n\t}\n\n\t// This is a safe, modern version of chunk from underscore\n\t// Algorithm pulled from a mix of these two polyfills:\n\t// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\n\t// https://youmightnotneed.com/lodash\n\t// This implementation was most tolerant in browsers.  Uglify can fix the rest.\n\tchunk (pInput, pChunkSize, pChunkCache)\n\t{\n\t\tlet tmpInputArray = [...pInput];\n\t\t// Note lodash defaults to 1, underscore defaults to 0\n\t\tlet tmpChunkSize = (typeof(pChunkSize) == 'number') ? pChunkSize : 0;\n\t\tlet tmpChunkCache = (typeof(pChunkCache) != 'undefined') ? pChunkCache : [];\n\n\t\tif (tmpChunkSize <= 0)\n\t\t{\n\t\t\treturn tmpChunkCache;\n\t\t}\n\n\t\twhile (tmpInputArray.length)\n\t\t{\n\t\t\ttmpChunkCache.push(tmpInputArray.splice(0, tmpChunkSize));\n\t\t}\n\n\t\treturn tmpChunkCache;\n\t}\n}\n\nmodule.exports = FableServiceUtility;\n},{\"./Fable-ServiceProviderBase.js\":78,\"async.eachlimit\":1,\"async.waterfall\":15}],77:[function(require,module,exports){\n/**\n* Fable Application Services Management\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\nconst libFableServiceBase = require('./Fable-ServiceProviderBase.js');\n\nclass FableService\n{\n\tconstructor(pFable)\n\t{\n\t\tthis.fable = pFable;\n\n\t\tthis.serviceTypes = [];\n\n\t\t// A map of instantiated services\n\t\tthis.services = {};\n\n\t\t// A map of the default instantiated service by type\n\t\tthis.defaultServices = {};\n\n\t\t// A map of class constructors for services\n\t\tthis.serviceClasses = {};\n\t}\n\n\taddServiceType(pServiceType, pServiceClass)\n\t{\n\t\t// Add the type to the list of types\n\t\tthis.serviceTypes.push(pServiceType);\n\n\t\t// Add the container for instantiated services to go in\n\t\tthis.services[pServiceType] = {};\n\n\t\tif ((typeof(pServiceClass) == 'function') && (pServiceClass.prototype instanceof libFableServiceBase))\n\t\t{\n\t\t\t// Add the class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = pServiceClass;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the base class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = libFableServiceBase;\n\t\t}\n\t}\n\n\tinstantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = this.instantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.services[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.defaultServices.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.defaultServices[pServiceType] = tmpService;\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\t// Create a service provider but don't register it to live forever in fable.services\n\tinstantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new this.serviceClasses[pServiceType](this.fable, pOptions, pCustomServiceHash);\n\t\treturn tmpService;\n\t}\n\n\tsetDefaultServiceInstantiation(pServiceType, pServiceHash)\n\t{\n\t\tif (this.services[pServiceType].hasOwnProperty(pServiceHash))\n\t\t{\n\t\t\tthis.defaultServices[pServiceType] = this.services[pServiceType][pServiceHash];\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nmodule.exports = FableService;\n\nmodule.exports.ServiceProviderBase = libFableServiceBase;\n},{\"./Fable-ServiceProviderBase.js\":78}],78:[function(require,module,exports){\n/**\n* Fable Service Base\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tthis.fable = pFable;\n\n\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions : {};\n\n        this.serviceType = 'Unknown';\n\n        this.UUID = pFable.getUUID();\n\n        this.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash : `${this.UUID}`;\n\t}\n}\n\nmodule.exports = FableServiceProviderBase;\n\n},{}],79:[function(require,module,exports){\n/**\n* Fable Application Services Support Library\n* @license MIT\n* @author <steven@velozo.com>\n*/\nconst libFableSettings = require('fable-settings');\nconst libFableUUID = require('fable-uuid');\nconst libFableLog = require('fable-log');\n\nconst libFableServiceManager = require('./Fable-ServiceManager.js');\n\nconst libFableServiceDataArithmatic = require('./Fable-Service-DataArithmatic.js');\nconst libFableServiceTemplate = require('./Fable-Service-Template.js');\nconst libFableServiceMetaTemplate = require('./Fable-Service-MetaTemplate.js');\nconst libFableServiceUtility = require('./Fable-Service-Utility.js');\n\nconst libFableOperation = require('./Fable-Operation.js');\n\nclass Fable\n{\n\tconstructor(pSettings)\n\t{\n\t\tlet tmpSettings = new libFableSettings(pSettings);\n\n\t\tthis.settingsManager = tmpSettings;\n\n\t\t// Instantiate the UUID generator\n\t\tthis.libUUID = new libFableUUID(this.settingsManager.settings);\n\n\t\tthis.log = new libFableLog(this.settingsManager.settings);\n\t\tthis.log.initialize();\n\n\t\t// Built-in dependencies\n\t\tthis.Dependencies = (\n\t\t\t{\n\t\t\t\tprecedent: libFableSettings.precedent\n\t\t\t});\n\n\t\t// Location for Operation state\n\t\tthis.Operations = {};\n\n\t\tthis.serviceManager = new libFableServiceManager(this);\n\n\t\t// Initialize and instantiate the default baked-in Data Arithmatic service\n\t\tthis.serviceManager.addServiceType('DataArithmatic', libFableServiceDataArithmatic);\n\t\tthis.fable.serviceManager.instantiateServiceProvider('DataArithmatic', {}, 'Default-Service-DataArithmatic');\n\t\t// This service is passing through the data arithmatic library\n\t\tthis.DataArithmatic = this.serviceManager.defaultServices.DataArithmatic._DataArithmaticLibrary;\n\n\t\t// Initialize the template service\n\t\tthis.serviceManager.addServiceType('Template', libFableServiceTemplate);\n\n\t\t// Initialize the metatemplate service\n\t\tthis.serviceManager.addServiceType('MetaTemplate', libFableServiceMetaTemplate);\n\n\t\t// Initialize and instantiate the default baked-in Utility service\n\t\tthis.serviceManager.addServiceType('Utility', libFableServiceUtility)\n\t\tthis.fable.serviceManager.instantiateServiceProvider('Utility', {}, 'Default-Service-Utility');\n\t\tthis.Utility = this.serviceManager.defaultServices.Utility;\n\n\t\tthis.services = this.serviceManager.services;\n\t\tthis.defaultServices = this.serviceManager.defaultServices;\n\t}\n\n\tget settings()\n\t{\n\t\treturn this.settingsManager.settings;\n\t}\n\n\tget fable()\n\t{\n\t\treturn this;\n\t}\n\n\tgetUUID()\n\t{\n\t\treturn this.libUUID.getUUID();\n\t}\n\n\tcreateOperation(pOperationName, pOperationHash)\n\t{\n\t\tlet tmpOperation = new libFableOperation(this, pOperationName, pOperationHash);\n\n\t\tif (this.Operations.hasOwnProperty(tmpOperation.Hash))\n\t\t{\n\t\t\t// Uh Oh ...... Operation Hash Collision!\n\t\t\t// TODO: What to do?!\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.Operations[tmpOperation.Hash] = tmpOperation;\n\t\t}\n\n\t\treturn tmpOperation;\n\t}\n\n\tgetOperation(pOperationHash)\n\t{\n\t\tif (!this.Operations.hasOwnProperty(pOperationHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.Operations[pOperationHash];\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new Fable(pSettings);\n}\n\nmodule.exports = Fable;\nmodule.exports.new = autoConstruct;\n\nmodule.exports.LogProviderBase = libFableLog.LogProviderBase;\nmodule.exports.ServiceProviderBase = libFableServiceManager.ServiceProviderBase;\n\nmodule.exports.precedent = libFableSettings.precedent;\n},{\"./Fable-Operation.js\":72,\"./Fable-Service-DataArithmatic.js\":73,\"./Fable-Service-MetaTemplate.js\":74,\"./Fable-Service-Template.js\":75,\"./Fable-Service-Utility.js\":76,\"./Fable-ServiceManager.js\":77,\"fable-log\":66,\"fable-settings\":69,\"fable-uuid\":71}],80:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n/**\n* Informary Logging\n*\n* @class InformaryLog\n*/\n\nclass InformaryLog\n{\n\tconstructor(pSettings)\n\t{\n\t\tthis._Settings = pSettings;\n\t}\n\n\twriteConsole(pLevel, pMessage, pObject)\n\t{\n\t\t// Write the message\n\t\tconsole.log('['+pLevel+'] ('+this._Settings.Form+') '+pMessage);\n\n\t\t// Write out the object if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 4));\n\t\t}\n\t}\n\n\ttrace(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('TRACE', pMessage, pObject);\n\t}\n\n\tdebug(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('DEBUG', pMessage, pObject);\n\t}\n\n\tinfo(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('INFO', pMessage, pObject);\n\t}\n\n\twarning(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('WARNING', pMessage, pObject);\n\t}\n\n\terror(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('ERROR', pMessage, pObject);\n\t}\n\n\n\t// Log the current date and time, well formatted (with Moment-Timezone)\n\tlogTime(pMessage)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpDate = new Date();\n\n\t\tthis.info(tmpMessage+': '+tmpDate.toString())\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeStamp, pMessage)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\t\tlet tmpOperationTime = tmpEndTime-pTimeStamp;\n\n\t\tthis.info(tmpMessage +' ('+tmpOperationTime+'ms)');\n\t}\n\n}\n\nmodule.exports = InformaryLog;\n\n},{}],81:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\nlet libObjectDiff = require('deep-object-diff');\nlet libCacheTraxx = require('cachetrax');\n\n/**\n* Informary browser sync library\n*\n* @class Informary\n*/\nclass Informary\n{\n\tconstructor(pSettings, pContext, pContextGUID)\n\t{\n\t\tthis._Dependencies = {};\n\t\tthis._Dependencies.jqueryLibrary = require('jquery');\n\n\t\t// Adding a container for non-html state to be stored in, which will be marshalled into and out of the passed in FormData.\n\t\tthis._NonHTMLState = {};\n\t\tthis._NonHTMLStateProperty = `__InformaryNonHTMLState`;\n\n\t\tthis._Settings = (typeof(pSettings) === 'object') ? pSettings : (\n\t\t\t{\n\t\t\t\t// The form we are dealing with (this is a hash set on the form itself)\n\t\t\t\tForm: 'UNSET_HTML_FORM_ID',\n\n\t\t\t\tUser: 0,\n\n\t\t\t\t// The number of undo levels available\n\t\t\t\tUndoLevels: 25,\n\n\t\t\t\t// If this is true, show a whole lotta logs\n\t\t\t\tDebugLog: false\n\t\t\t});\n\n\t\tif (this._Settings.__VirtualDOM)\n\t\t{\n\t\t\t// If a virtual dom was passed in for unit tests, use that.\n\t\t\tthis._Dependencies.jquery = this._Dependencies.jqueryLibrary(this._Settings.__VirtualDOM);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._Dependencies.jquery = this._Dependencies.jqueryLibrary;\n\t\t}\n\n\t\tif (!this._Settings.User)\n\t\t{\n\t\t\t// If no user was passed in, set a default of 0\n\t\t\tthis._Settings.User = 0;\n\t\t}\n\n\t\tif (!this._Settings.Form)\n\t\t{\n\t\t\tthis._Settings.Form = 'UNSET_HTML_FORM_ID';\n\t\t}\n\n\t\t// This has behaviors similar to bunyan, for consistency\n\t\tthis._Log = new (require('./Informary-Log.js'))(this._Settings);\n\t\tthis.log = this._Log;\n\n\t\t// This is lazily set so unit tests can set an external provider for harnesses\n\t\tthis._LocalStorage = null;\n\n\t\tthis._UndoKeys = [];\n\t\tthis._UndoBuffer = new libCacheTraxx();\n\t\t// Default to 25 undo levels if it isn't passed in via settings\n\t\tthis._UndoBuffer.maxLength = this._Settings.UndoLevels ? this._Settings.UndoLevels : 25;\n\t\tthis._RedoKeys = [];\n\t\tthis._RedoBuffer = new libCacheTraxx();\n\t\tthis._RedoBuffer.maxLength = this._UndoBuffer.maxLength;\n\n\t\t// The initially loaded document state (filled out when pushed to form)\n\t\tthis._SourceDocumentState = false;\n\t\t// The latest current document state\n\t\tthis._CurrentDocumentState = false;\n\n\t\t// If no context is passed in, use `Context_0`\n\t\t// This could cause undo/redo leakage.\n\t\tthis._Context = pContext ? pContext.toString() : 'InformaryDefaultContext';\n\t\tthis._ContextGUID = pContextGUID ? pContextGUID.toString() : '0x000000001';\n\t}\n\n\t/******************************************************\n\t * Storage Provider\n\t * --\n\t * This could be abstracted to another class\n\t */\n\tsetStorageProvider (pStorageProvider)\n\t{\n\t\tthis._LocalStorage = pStorageProvider;\n\t}\n\n\tcheckStorageProvider()\n\t{\n\t\t// When running in a browser, this likely won't be set.  If it isn't,\n\t\tif (!this._LocalStorage)\n\t\t{\n\t\t\tthis._LocalStorage = window.localStorage;\n\t\t\tif (!this._LocalStorage)\n\t\t\t{\n\t\t\t\tconst cache = { };\n\t\t\t\tthis._LocalStorage =\n\t\t\t\t{\n\t\t\t\t\tsetItem: (key, value) => { cache[key] = value; },\n\t\t\t\t\tgetItem: (key) => { return cache[key]; },\n\t\t\t\t\tremoveItem: (key) => { delete cache[key]; },\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tgetIndexKey(pValueType)\n\t{\n\t\treturn `Informary_Index_User[${this._Settings.User.toString()}]_ValueType[${pValueType}]`;\n\t}\n\n\tgetStorageKey(pValueType)\n\t{\n\t\treturn `Informary_Data_User[${this._Settings.User.toString()}]_ValueType[${pValueType}]_Context[${this._Context}]_ContextGUID[${this._ContextGUID}]`;\n\t}\n\n\t// Read the whole index\n\treadIndex(pValueType)\n\t{\n\t\tthis.checkStorageProvider();\n\n\t\tlet tmpIndex = false;\n\n\t\tlet tmpData = this._LocalStorage.getItem(this.getIndexKey(pValueType));\n\n\t\tif (tmpData)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\ttmpIndex = JSON.parse(tmpData);\n\t\t\t}\n\t\t\tcatch(pError)\n\t\t\t{\n\t\t\t\tthis.log.error(`Error parsing local storage index key [${this.getIndexKey(pValueType)}]`);\n\t\t\t}\n\t\t}\n\n\t\tif (!tmpIndex)\n\t\t{\n\t\t\ttmpIndex =\n\t\t\t{\n\t\t\t\tIndexCreateTime: Date.now(),\n\t\t\t\tIndexUser: this._Settings.User\n\t\t\t}\n\t\t}\n\n\t\ttmpIndex.IndexLastReadTime = Date.now();\n\n\t\treturn tmpIndex;\n\t}\n\n\t// Read just the record key for the index\n\treadIndexValue(pValueType)\n\t{\n\t\tlet tmpIndex = this.readIndex(pValueType);\n\t\tlet tmpIndexKeyValue = tmpIndex[this.getStorageKey(pValueType)];\n\n\t\t// Rather than return undefined, return false if it's a miss\n\t\treturn (tmpIndexKeyValue) ? tmpIndexKeyValue : false;\n\t}\n\n\t// Touch the index for a value type\n\ttouchIndex(pValueType)\n\t{\n\t\tthis.checkStorageProvider();\n\n\t\tlet tmpIndex = this.readIndex(pValueType);\n\t\tlet tmpKey = this.getStorageKey(pValueType);\n\n\t\ttmpIndex[tmpKey] = {Time: Date.now(), ValueType: pValueType, User: this._Settings.User, Context: this._Context, ContextGUID: this._ContextGUID};\n\n\t\t// This relies on the readIndex above to initialize the localstorage provider\n\t\tthis._LocalStorage.setItem(this.getIndexKey(pValueType), JSON.stringify(tmpIndex));\n\t}\n\n\treadData(pValueType)\n\t{\n\t\t// Check that the storage provider is initialized\n\t\tthis.checkStorageProvider();\n\n\t\tlet tmpData = this._LocalStorage.getItem(this.getStorageKey(pValueType));\n\n\t\tif (tmpData)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\ttmpData = JSON.parse(tmpData);\n\t\t\t}\n\t\t\tcatch(pError)\n\t\t\t{\n\t\t\t\tthis.log.error(`Error parsing local storage key [${this.getStorageKey(pValueType)}]`);\n\t\t\t\ttmpData = false;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpData = false;\n\t\t}\n\n\t\treturn tmpData;\n\t}\n\n\twriteData(pValueType, pData)\n\t{\n\t\t// Check that the storage provider is initialized\n\t\tthis.checkStorageProvider();\n\n\t\t// Touch the index with a timestamp for the value\n\t\tthis.touchIndex(pValueType);\n\n\t\t// set the actual item\n\t\tthis._LocalStorage.setItem(this.getStorageKey(pValueType), JSON.stringify(pData));\n\t}\n\n\tdeleteData(pValueType)\n\t{\n\t\t// Check that the storage provider is initialized\n\t\tthis.checkStorageProvider();\n\n\t\t// Touch the index with a timestamp for the value.  Should we tell it it's a delete operation?  Hmmm..\n\t\tthis.touchIndex(pValueType);\n\n\t\t// set the actual item\n\t\tthis._LocalStorage.removeItem(this.getStorageKey(pValueType));\n\t}\n\t/*\n\t * End of Storage Provider section\n\t ******************************************************/\n\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (!typeof(pObject) === 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (!typeof(pAddress) === 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex === -1)\n\t\t{\n\t\t\t// Now is the time to return the value in the address\n\t\t\treturn pObject[pAddress];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (!typeof(pObject) === 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (!typeof(pAddress) === 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex === -1)\n\t\t{\n\t\t\t// Now is the time to set the value in the object\n\t\t\tpObject[pAddress] = pValue;\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetValueAtAddressInContainer(pRecordObject, pFormContainerAddress, pFormContainerIndex, pFormValueAddress, pFormValue)\n\t{\n\t\t// First see if there *is* a container object\n\t\tlet tmpContainerObject = this.getValueAtAddress(pRecordObject, pFormContainerAddress);\n\n\t\tif (typeof(pFormContainerAddress) !== 'string') return false;\n\n\t\tlet tmpFormContainerIndex = parseInt(pFormContainerIndex, 10);\n\t\tif (isNaN(tmpFormContainerIndex)) return false;\n\n\t\tif ((typeof(tmpContainerObject) !== 'object') || (!Array.isArray(tmpContainerObject)))\n\t\t{\n\t\t\t// Check if there is a value here and we want to store it in the \"__OverwrittenData\" thing\n\t\t\ttmpContainerObject = [];\n\t\t\tthis.setValueAtAddress(pRecordObject, pFormContainerAddress, tmpContainerObject);\n\t\t}\n\n\t\tfor (let i = 0; (tmpContainerObject.length + i) <= (tmpFormContainerIndex+1); i++)\n\t\t{\n\t\t\t// Add objects to this container until it has enough\n\t\t\ttmpContainerObject.push({});\n\t\t}\n\n\t\t// Now set the value *in* the container object\n\t\treturn this.setValueAtAddress(tmpContainerObject[tmpFormContainerIndex], pFormValueAddress, pFormValue);\n\t}\n\n\t// Write out source data\n\tstoreSourceData(pData)\n\t{\n\t\treturn this.writeData('Source', pData);\n\t}\n\n\t// Write out recovery data\n\tstoreRecoveryData(fCallback)\n\t{\n\t\tlet tmpCallback = (typeof(fCallback) == 'function') ? fCallback : ()=>{};\n\n\t\tlet tmpRecoveryData = {};\n\t\tthis.marshalFormToData(tmpRecoveryData,\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tthis._RecoveryDocumentState = tmpRecoveryData;\n\t\t\t\treturn tmpCallback(this.writeData('Recovery', this._RecoveryDocumentState));\n\t\t\t});\n\t}\n\n\tsnapshotData()\n\t{\n\t\tlet tmpNewUndoKey = Date.now().toString();\n\n\t\t// Check to see if there are any changes to the data to be stored\n\t\tlet tmpOldRecoveryState = JSON.stringify(this._RecoveryDocumentState);\n\n\t\tthis.storeRecoveryData(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tif (tmpOldRecoveryState != JSON.stringify(this._RecoveryDocumentState))\n\t\t\t\t{\n\t\t\t\t\tif (this._Settings.DebugLog)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.debug(`Creating recovery snapshot at [${tmpNewUndoKey}]...`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Destroy all data in the redo ring, because this new snapshot invalidates it.\n\t\t\t\t\twhile (this._RedoKeys.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpRedoKey = this._RedoKeys.pop();\n\t\t\t\t\t\tthis._RedoBuffer.expire(tmpRedoKey);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._UndoKeys.push(tmpNewUndoKey);\n\t\t\t\t\tthis._UndoBuffer.put(this._RecoveryDocumentState, tmpNewUndoKey);\n\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (this._Settings.DebugLog)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.debug(`Skipped creating recovery snapshot at [${tmpNewUndoKey}] because there were no changes to the recovery state...`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tsnapshotDataInitial()\n\t{\n\t\tlet tmpNewUndoKey = Date.now().toString();\n\n\t\tif (this._UndoKeys.length > 0)\n\t\t{\n\t\t\tthis.log.info(`Skipping creation of initial snapshot because one already exists.`);\n\t\t\treturn false;\n\t\t}\n\n\n\t\tthis.storeRecoveryData(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tif (this._Settings.DebugLog)\n\t\t\t\t{\n\t\t\t\t\tthis.log.debug(`Creating recovery snapshot at [${tmpNewUndoKey}]...`);\n\t\t\t\t}\n\n\t\t\t\tthis._UndoKeys.push(tmpNewUndoKey);\n\t\t\t\tthis._UndoBuffer.put(this._RecoveryDocumentState, tmpNewUndoKey);\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tundoSnapshotCount()\n\t{\n\t\t// The initial snapshot is special to prevent confusing conditions when form data hasn't been edited.\n\t\treturn this._UndoKeys.length;\n\t}\n\n\tredoSnapshotCount()\n\t{\n\t\treturn this._RedoKeys.length;\n\t}\n\n\trevertToPreviousSnapshot(fCallback)\n\t{\n\t\tlet tmpCallback = (typeof(fCallback) == 'function') ? fCallback : ()=>{};\n\n\t\tif (this._UndoKeys.length < 1)\n\t\t{\n\t\t\tthis.log.info(`Not enough undo snapshots; skipping undo.`);\n\t\t\treturn tmpCallback(false);\n\t\t}\n\n\t\tlet tmpSnapshotKey = this._UndoKeys.pop();\n\t\tlet tmpSnapshotData = this._UndoBuffer.read(tmpSnapshotKey);\n\n\t\tif (tmpSnapshotData)\n\t\t{\n\t\t\t// Add it to the redo buffer\n\t\t\tthis._RedoKeys.push(tmpSnapshotKey);\n\t\t\tthis._RedoBuffer.put(tmpSnapshotData, tmpSnapshotKey);\n\n\t\t\t// Check if the form data matches and if so advance back one step\n\t\t\tlet tmpCurrentFormData = {};\n\t\t\tthis.marshalFormToData(tmpCurrentFormData,\n\t\t\t\t()=>\n\t\t\t\t{\n\t\t\t\t\t// Remove the expired snapshot of data from the Undu buffer\n\t\t\t\t\tthis._UndoBuffer.expire(tmpSnapshotKey);\n\n\t\t\t\t\tthis.marshalDataToForm(tmpSnapshotData,\n\t\t\t\t\t\t()=>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis._RecoveryDocumentState = tmpSnapshotData;\n\n\t\t\t\t\t\t\tthis.log.info(`Informary reverted to snapshot ID ${tmpSnapshotKey}`);\n\t\t\t\t\t\t\tif ((JSON.stringify(tmpCurrentFormData) == JSON.stringify(tmpSnapshotData)) && this._UndoKeys.length > 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.revertToPreviousSnapshot(tmpCallback);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (this._UndoKeys.length == 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.info(`Snapshot Data Depleted -- Creating Extra Undo Snapshot`)\n\t\t\t\t\t\t\t\tthis.snapshotDataInitial();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn tmpCallback(true);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\n\t\treturn tmpCallback(false);\n\t}\n\n\n\treapplyNextRevertedSnapshot(fCallback)\n\t{\n\t\tlet tmpCallback = (typeof(fCallback) == 'function') ? fCallback : ()=>{};\n\n\t\tlet tmpSnapshotKey = this._RedoKeys.pop();\n\t\tlet tmpSnapshotData = this._RedoBuffer.read(tmpSnapshotKey);\n\n\t\tif (tmpSnapshotData)\n\t\t{\n\t\t\t// Add it to the undo buffer\n\t\t\tthis._UndoKeys.push(tmpSnapshotKey);\n\t\t\tthis._UndoBuffer.put(tmpSnapshotData, tmpSnapshotKey);\n\n\t\t\t// Remove the expired snapshot of data from the Redo buffer\n\t\t\tthis._RedoBuffer.expire(tmpSnapshotKey);\n\n\t\t\t// Check if the form data matches and if so advance back one step\n\t\t\tlet tmpCurrentFormData = {};\n\t\t\tthis.marshalFormToData(tmpCurrentFormData,\n\t\t\t\t()=>\n\t\t\t\t{\n\t\t\t\t\tthis.marshalDataToForm(tmpSnapshotData,\n\t\t\t\t\t\t()=>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis._RecoveryDocumentState = tmpSnapshotData;\n\n\t\t\t\t\t\t\tthis.log.info(`Informary reapplied snapshot ID ${tmpSnapshotKey}`);\n\t\t\t\t\t\t\tif ((JSON.stringify(tmpCurrentFormData) == JSON.stringify(tmpSnapshotData)) && this._RedoKeys.length > 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// If the old form data matches the applied data, roll back farther\n\t\t\t\t\t\t\t\treturn this.reapplyNextRevertedSnapshot(tmpCallback);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn tmpCallback(true);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\n\t\treturn tmpCallback(false);\n\t}\n\n\tclearRecoveryData()\n\t{\n\t\treturn this.deleteData('Recovery');\n\t}\n\n\treadRecoveryData()\n\t{\n\t\treturn this.readData('Recovery');\n\t}\n\n\trestoreRecoveryScenarioData(fCallback)\n\t{\n\t\tlet tmpCallback = (typeof(fCallback) == 'function') ? fCallback : ()=>{};\n\n\t\tlet tmpRecoveryScenarioData = this.readRecoveryScenario();\n\n\t\tif (tmpRecoveryScenarioData && tmpRecoveryScenarioData.ExistingRecovery)\n\t\t{\n\t\t\tthis.marshalDataToForm(tmpRecoveryScenarioData.ExistingRecovery,\n\t\t\t\t()=>\n\t\t\t\t{\n\t\t\t\t\tthis.clearRecoveryScenarioData();\n\t\t\t\t\t// Store a new recovery data\n\t\t\t\t\t//this.storeSourceData();\n\t\t\t\t\treturn tmpCallback(true);\n\t\t\t\t});\n\t\t}\n\n\t\treturn tmpCallback(false);\n\t}\n\n\tclearRecoveryScenarioData()\n\t{\n\t\treturn this.deleteData('RecoveryScenario');\n\t}\n\n\tstoreRecoveryScenarioData(pRecoveryScenarioData)\n\t{\n\t\treturn this.writeData('RecoveryScenario', pRecoveryScenarioData);\n\t}\n\n\treadRecoveryScenario()\n\t{\n\t\treturn this.readData('RecoveryScenario');\n\t}\n\n\t// Checks if there is a recovery record, and detailed data about what it might be\n\tcheckRecoveryState(pSourceData)\n\t{\n\t\tlet tmpRecoveryData = (\n\t\t\t{\n\t\t\t\tNewSource: pSourceData,\n\t\t\t\tExistingSource: this.readData('Source'),\n\t\t\t\tExistingRecovery: this.readData('Recovery')\n\t\t\t});\n\n\t\tif (!tmpRecoveryData.ExistingSource || !tmpRecoveryData.ExistingRecovery)\n\t\t{\n\t\t\t// There is either no source or no read data, so we are not in a recovery state\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Now check the differences\n\t\t\tlet tmpRecoveryDifferences = libObjectDiff.detailedDiff(tmpRecoveryData.ExistingSource, tmpRecoveryData.ExistingRecovery);\n\n\t\t\tif (JSON.stringify(tmpRecoveryDifferences) == JSON.stringify(libObjectDiff.detailedDiff({},{})))\n\t\t\t{\n\t\t\t\t// No differences -- we're good for now\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis._Log.info(`Informary found recovery data at ${this.getStorageKey('Recovery')}!`);\n\t\t\t\t// Put the recovery changes in the object for helpfulness\n\t\t\t\ttmpRecoveryData.Diffs = {};\n\t\t\t\ttmpRecoveryData.Diffs.ExistingRecovery_ExistingSource = tmpRecoveryDifferences;\n\t\t\t\ttmpRecoveryData.Diffs.ExistingSource_NewSource = libObjectDiff.detailedDiff(tmpRecoveryData.ExistingSource, tmpRecoveryData.NewSource);\n\t\t\t\ttmpRecoveryData.Diffs.ExistingRecovery_NewSource = libObjectDiff.detailedDiff(tmpRecoveryData.ExistingRecovery, tmpRecoveryData.NewSource);\n\n\t\t\t\t// Put the index data in the object for helpfulness\n\t\t\t\ttmpRecoveryData.Index = {};\n\t\t\t\ttmpRecoveryData.Index.ExistingSource = this.readIndexValue('Source');\n\t\t\t\ttmpRecoveryData.Index.ExistingRecovery = this.readIndexValue('Recovery');\n\n\t\t\t\tthis.writeData('RecoveryScenario', tmpRecoveryData);\n\n\t\t\t\treturn tmpRecoveryData;\n\t\t\t}\n\t\t}\n\t}\n\n\tcompareCurrentStateToUndoAndRedo(fCallback)\n\t{\n\t\tlet tmpCallBack = (typeof(fCallback) === 'function') ? fCallback : () => {};\n\t\tlet tmpCurrentStateData = {};\n\t\tlet tmpCurrentUndoObject = {};\n\t\tlet tmpCurrentRedoObject = {};\n\n\t\tthis.marshalFormToData(tmpCurrentStateData,\n\t\t\t() =>\n\t\t\t{\n\t\t\t\tlet tmpCurrentStateDataJSON = JSON.stringify(tmpCurrentStateData);\n\n\t\t\t\tif (this._UndoKeys.length > 0)\n\t\t\t\t{\n\t\t\t\t\tlet tmpCurrentUndoBufferSnapshotKey = this._UndoKeys[this._UndoKeys.length - 1];\n\t\t\t\t\ttmpCurrentUndoObject = this._UndoBuffer.read(tmpCurrentUndoBufferSnapshotKey);\n\t\t\t\t}\n\n\t\t\t\tif (this._RedoKeys.length > 0)\n\t\t\t\t{\n\t\t\t\t\t// Because there can be duplication of records in the redo buffer that may include\n\t\t\t\t\t// the current data in the form multiple times, we need to enumerate the redo buffer\n\t\t\t\t\t// until the JSON doesn't match the current data.\n\t\t\t\t\tlet tmpFirstRedoIndexWithDifferences = this._RedoKeys.length - 1;\n\t\t\t\t\tfor (let i = this._RedoKeys.length-1; i >= 0; i--)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpRedoComparisonJSON = JSON.stringify(this._RedoBuffer.read(this._RedoKeys[i]));\n\t\t\t\t\t\tif (tmpRedoComparisonJSON != tmpCurrentStateDataJSON)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpFirstRedoIndexWithDifferences = i;\n\t\t\t\t\t\t\t// Once we have found a set of redo data that doesn't match, we don't want to keep looking\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttmpCurrentRedoObject = this._RedoBuffer.read(this._RedoKeys[tmpFirstRedoIndexWithDifferences]);\n\t\t\t\t}\n\n\t\t\t\tlet tmpComparisonData = (\n\t\t\t\t\t{\n\t\t\t\t\t\tUndoDelta: libObjectDiff.detailedDiff(tmpCurrentStateData, tmpCurrentUndoObject),\n\t\t\t\t\t\tUndoGUIDDelta: {Added: [], Deleted: []},\n\t\t\t\t\t\tRedoDelta: libObjectDiff.detailedDiff(tmpCurrentStateData, tmpCurrentRedoObject),\n\t\t\t\t\t\tRedoGUIDDelta: {Added: [], Deleted: []}\n\t\t\t\t\t});\n\n\n\t\t\t\t// Perform GUID diff operations\n\t\t\t\t// Get all GUID values from the form\n\t\t\t\tlet tmpCurrentGUIDElements = [];\n\t\t\t\tlet tmpCurrentDataIndex = 0;\n\t\t\t\tif (tmpCurrentStateData.hasOwnProperty('__GUID'))\n\t\t\t\t{\n\t\t\t\t\ttmpCurrentGUIDElements = Object.keys(tmpCurrentStateData.__GUID).sort();\n\t\t\t\t}\n\n\t\t\t\t// Get the deltas for undo data\n\t\t\t\tlet tmpUndoGUIDElements = [];\n\t\t\t\tif (tmpCurrentUndoObject.hasOwnProperty('__GUID'))\n\t\t\t\t{\n\t\t\t\t\ttmpUndoGUIDElements = Object.keys(tmpCurrentUndoObject.__GUID).sort();\n\t\t\t\t}\n\t\t\t\tlet tmpUndoDataIndex = 0;\n\t\t\t\tlet tmpUndoDataMaxIndex = tmpUndoGUIDElements.length - 1;\n\t\t\t\tfor(tmpCurrentDataIndex = 0; tmpCurrentDataIndex < tmpCurrentGUIDElements.length; tmpCurrentDataIndex++)\n\t\t\t\t{\n\t\t\t\t\twhile((tmpUndoDataIndex <= tmpUndoDataMaxIndex)\n\t\t\t\t\t\t\t&& (tmpUndoGUIDElements[tmpUndoDataIndex] != tmpCurrentGUIDElements[tmpCurrentDataIndex]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Check to see if the string in the Undo keys is less than the string in the current form element.\n\t\t\t\t\t\t// If so, it was deleted\n\t\t\t\t\t\tif (tmpUndoGUIDElements[tmpUndoDataIndex] < tmpCurrentGUIDElements[tmpCurrentDataIndex])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpComparisonData.UndoGUIDDelta.Added.push(tmpUndoGUIDElements[tmpUndoDataIndex]);\n\t\t\t\t\t\t\ttmpUndoDataIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// It must be greater if it is inequal, so break out of the while\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((tmpUndoDataIndex <= tmpUndoDataMaxIndex)\n\t\t\t\t\t\t&& (tmpUndoGUIDElements[tmpUndoDataIndex] == tmpCurrentGUIDElements[tmpCurrentDataIndex]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// If the elements match, skip it because it exists on both sides.\n\t\t\t\t\t\ttmpUndoDataIndex++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpComparisonData.UndoGUIDDelta.Deleted.push(tmpCurrentGUIDElements[tmpCurrentDataIndex]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// If there are any GUIDS left in the Undo GUID list, they are additions\n\t\t\t\tfor(let i = tmpUndoDataIndex; i <= tmpUndoDataMaxIndex; i++)\n\t\t\t\t{\n\t\t\t\t\ttmpComparisonData.UndoGUIDDelta.Added.push(tmpUndoGUIDElements[i]);\n\t\t\t\t}\n\n\n\t\t\t\t// Get the deltas for Redo data\n\t\t\t\tlet tmpRedoGUIDElements = [];\n\t\t\t\tif (tmpCurrentRedoObject.hasOwnProperty('__GUID'))\n\t\t\t\t{\n\t\t\t\t\ttmpRedoGUIDElements = Object.keys(tmpCurrentRedoObject.__GUID).sort();\n\t\t\t\t}\n\t\t\t\tlet tmpRedoDataIndex = 0;\n\t\t\t\tlet tmpRedoDataMaxIndex = tmpRedoGUIDElements.length - 1;\n\t\t\t\tfor(tmpCurrentDataIndex = 0; tmpCurrentDataIndex < tmpCurrentGUIDElements.length; tmpCurrentDataIndex++)\n\t\t\t\t{\n\t\t\t\t\twhile((tmpRedoDataIndex <= tmpRedoDataMaxIndex)\n\t\t\t\t\t\t\t&& (tmpRedoGUIDElements[tmpRedoDataIndex] != tmpCurrentGUIDElements[tmpCurrentDataIndex]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Check to see if the string in the Redo keys is less than the string in the current form element.\n\t\t\t\t\t\t// If so, it was deleted\n\t\t\t\t\t\tif (tmpRedoGUIDElements[tmpRedoDataIndex] < tmpCurrentGUIDElements[tmpCurrentDataIndex])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpComparisonData.RedoGUIDDelta.Added.push(tmpRedoGUIDElements[tmpRedoDataIndex]);\n\t\t\t\t\t\t\ttmpRedoDataIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// It must be greater if it is inequal, so break out of the while\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((tmpRedoDataIndex <= tmpRedoDataMaxIndex)\n\t\t\t\t\t\t&& (tmpRedoGUIDElements[tmpRedoDataIndex] == tmpCurrentGUIDElements[tmpCurrentDataIndex]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// If the elements match, skip it because it exists on both sides.\n\t\t\t\t\t\ttmpRedoDataIndex++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpComparisonData.RedoGUIDDelta.Deleted.push(tmpCurrentGUIDElements[tmpCurrentDataIndex]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// If there are any GUIDS left in the Redo GUID list, they are additions\n\t\t\t\tfor(let i = tmpRedoDataIndex; i <= tmpRedoDataMaxIndex; i++)\n\t\t\t\t{\n\t\t\t\t\ttmpComparisonData.RedoGUIDDelta.Added.push(tmpRedoGUIDElements[i]);\n\t\t\t\t}\n\n\t\t\t\ttmpCallBack(tmpComparisonData);\n\t\t\t});\n\t}\n\n\tcreateArrayContainers(pRecordObject, fCallback, pArrayPropertyAddress)\n\t{\n\t\t// Much simplified recursion that generates array containers\n\t\tif (this._Settings.DebugLog)\n\t\t{\n\t\t\tthis.log.debug(`Informary Data->Form marshalling recursive entry...`);\n\t\t}\n\t}\n\n\tget nonFormData ()\n\t{\n\t\treturn this._NonHTMLState;\n\t}\n\n\tmarshalDataToForm (pRecordObject, fCallback, pParentPropertyAddress, pContainerPropertyAddress, pContainerIndex)\n\t{\n\t\t// Because this is recursive, we only want to call this on the outermost call of the stack.\n\t\tlet tmpRecoveryState = false;\n\n\t\tif (this._Settings.DebugLog)\n\t\t{\n\t\t\tthis.log.debug(`Informary Data->Form marshalling recursive entry...`);\n\t\t}\n\t\t// Guard against bad record objects being passed in\n\t\tif (typeof(pRecordObject) !== 'object')\n\t\t{\n\t\t\tthis.log.error('Invalid record object passed in!');\n\t\t\treturn fCallback('Invalid record object passed in!');\n\t\t}\n\n\t\tif (pRecordObject === null)\n\t\t{\n\t\t\treturn fCallback();\n\t\t}\n\n\t\tif (pRecordObject === undefined)\n\t\t{\n\t\t\treturn fCallback();\n\t\t}\n\n\t\tlet tmpParentPropertyAddress = (typeof(pParentPropertyAddress) !== 'undefined') ? pParentPropertyAddress : false;\n\t\tlet tmpParentPropertyAddressString = (typeof(pParentPropertyAddress) !== 'undefined') ? pParentPropertyAddress : 'JSON OBJECT ROOT';\n\n\t\tlet tmpContainerPropertyAddress = (typeof(pContainerPropertyAddress) !== 'undefined') ? pContainerPropertyAddress : false;\n\t\tlet tmpContainerPropertyIndex = (typeof(pContainerIndex) !== 'undefined') ? pContainerIndex : false;\n\n\t\tif (this._Settings.DebugLog)\n\t\t{\n\t\t\tthis.log.debug(`Informary Data->Form found parent address [${tmpParentPropertyAddress}] and is parsing properties`);\n\t\t}\n\n\t\tif (tmpParentPropertyAddressString == 'JSON OBJECT ROOT')\n\t\t{\n\t\t\t// Check if there is data to go into the NonHTMLState object\n\t\t\tif ((pRecordObject.hasOwnProperty(this._NonHTMLStateProperty)) && (typeof(pRecordObject[this._NonHTMLStateProperty]) === 'object'))\n\t\t\t{\n\t\t\t\t// Every time we marshal data to the form, we will overwrite this.\n\t\t\t\t// TODO: Should we warn or anything?  This is a potentially destructive operation.\n\t\t\t\tthis._NonHTMLState = pRecordObject[this._NonHTMLStateProperty];\n\t\t\t}\n\t\t}\n\n\t\tlet tmpRecordObjectKeys = Object.keys(pRecordObject);\n\t\ttmpRecordObjectKeys.forEach(\n\t\t\t(pKey) =>\n\t\t\t{\n\t\t\t\tlet tmpRecord = pRecordObject[pKey];\n\t\t\t\tlet tmpPropertyAddress = (tmpParentPropertyAddress.length > 0) ? `${pParentPropertyAddress}.${pKey}` : pKey;\n\n\t\t\t\tif (this._Settings.DebugLog)\n\t\t\t\t{\n\t\t\t\t\tthis.log.debug(`Informary Data->Form parent address [${tmpParentPropertyAddressString}] parsing property [${tmpPropertyAddress}]`);\n\t\t\t\t}\n\n\t\t\t\tswitch (typeof(tmpRecord))\n\t\t\t\t{\n\t\t\t\t\t// If it's an object, check if we should be marshaling the whole value in or recursing.\n\t\t\t\t\tcase 'object':\n\t\t\t\t\t\t// Check to see if it's an array, as we will put it into the extended object.\n\t\t\t\t\t\tif (Array.isArray(tmpRecord))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (let i = 0; i < tmpRecord.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// The undefined is in the Property Address because this is an array element, and needs to be put in the array.\n\t\t\t\t\t\t\t\tthis.marshalDataToForm(tmpRecord[i], ()=>{}, undefined, tmpPropertyAddress, i.toString());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// We've switched this to synchronous for safe browser mode\n\t\t\t\t\t\t\t// Leaving an empty callback in there in case we decide to switch back.\n\t\t\t\t\t\t\treturn this.marshalDataToForm(tmpRecord, ()=>{}, tmpPropertyAddress, tmpContainerPropertyAddress, tmpContainerPropertyIndex.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// Ignore undefined properties\n\t\t\t\t\tcase 'undefined':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// Otherwise marshal it into the form\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tlet tmpFormElement = [];\n\n\t\t\t\t\t\tif (tmpContainerPropertyAddress && tmpContainerPropertyIndex)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// This is an array element\n\t\t\t\t\t\t\ttmpFormElement = this._Dependencies.jquery(`\n\t\t\t\t\t\t\t\tinput[data-i-form=\"${this._Settings.Form}\"][data-i-datum=\"${tmpPropertyAddress}\"][data-i-container=\"${tmpContainerPropertyAddress}\"][data-i-index=\"${tmpContainerPropertyIndex}\"],\n\t\t\t\t\t\t\t\tselect[data-i-form=\"${this._Settings.Form}\"][data-i-datum=\"${tmpPropertyAddress}\"][data-i-container=\"${tmpContainerPropertyAddress}\"][data-i-index=\"${tmpContainerPropertyIndex}\"],\n\t\t\t\t\t\t\t\ttextarea[data-i-form=\"${this._Settings.Form}\"][data-i-datum=\"${tmpPropertyAddress}\"][data-i-container=\"${tmpContainerPropertyAddress}\"][data-i-index=\"${tmpContainerPropertyIndex}\"]\n\t\t\t\t\t\t\t`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpFormElement = this._Dependencies.jquery(`\n\t\t\t\t\t\t\t\tinput[data-i-form=\"${this._Settings.Form}\"][data-i-datum=\"${tmpPropertyAddress}\"],\n\t\t\t\t\t\t\t\tselect[data-i-form=\"${this._Settings.Form}\"][data-i-datum=\"${tmpPropertyAddress}\"],\n\t\t\t\t\t\t\t\ttextarea[data-i-form=\"${this._Settings.Form}\"][data-i-datum=\"${tmpPropertyAddress}\"]\n\t\t\t\t\t\t\t`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpFormElement.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// set the text area to the text content\n\t\t\t\t\t\t\tif (this._Dependencies.jquery(tmpFormElement)[0].tagName === 'TEXTAREA') {\n\t\t\t\t\t\t\t\tthis._Dependencies.jquery(tmpFormElement)[0].textContent = tmpRecord;\n\t\t\t\t\t\t\t// set the correct option to 'selected' for select tags\n\t\t\t\t\t\t\t} else if (this._Dependencies.jquery(tmpFormElement)[0].tagName === 'SELECT') {\n\t\t\t\t\t\t\t\tthis._Dependencies.jquery(`select[data-i-form=\"${this._Settings.Form}\"][data-i-datum=\"${tmpPropertyAddress}\"] option[value=\"${tmpRecord}\"]`).prop('selected', true);\n\t\t\t\t\t\t\t// otherwise just set the value for input\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._Dependencies.jquery(tmpFormElement).val(tmpRecord);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Check if this is a GUID value and set the data-i-guid property in it\n\t\t\t\t\t\t\tvar tmpGUIDAttribute = this._Dependencies.jquery(this).attr('data-i-guid');\n\t\t\t\t\t\t\t// For some browsers, `attr` is undefined; for others,\n\t\t\t\t\t\t\t// `attr` is false.  Check for both.\n\t\t\t\t\t\t\tif (typeof(tmpGUIDAttribute) !== 'undefined' && tmpGUIDAttribute !== false)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis._Dependencies.jquery(tmpFormElement).attr('data-i-guid', tmpRecord);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\n\t\tif (!pParentPropertyAddress)\n\t\t{\n\t\t\treturn fCallback(tmpRecoveryState);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tmarshalFormToData (pRecordObject, fCallback)\n\t{\n\t\tif (this._Settings.DebugLog)\n\t\t{\n\t\t\tthis.log.debug(`Informary Form->Data marshalling recursive entry...`);\n\t\t}\n\t\t// Guard against bad record objects being passed in\n\t\tif (typeof(pRecordObject) !== 'object')\n\t\t{\n\t\t\tthis.log.error('Invalid record object passed in!  Informary needs a Javascript object to put values into.');\n\t\t\treturn fCallback('Invalid record object passed in!  Informary needs a Javascript object to put values into.');\n\t\t}\n\n\t\tlet tmpFormValueElements = this._Dependencies.jquery(`\n\t\t\t\tinput[data-i-form=${this._Settings.Form}],\n\t\t\t\tselect[data-i-form=${this._Settings.Form}],\n\t\t\t\ttextarea[data-i-form=${this._Settings.Form}]\n\t\t\t`);\n\n\t\tlet tmpUnknownValueIndex = 0;\n\n\t\t// For any state that the form doesn't want to store in html elements, but still be merged into the informary record object\n\t\tpRecordObject[this._NonHTMLStateProperty] = this._NonHTMLState;\n\n\t\tthis._Dependencies.jquery.each(tmpFormValueElements,\n\t\t\t(pRecordIndex, pRecordAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpFormValueAddress = this._Dependencies.jquery(pRecordAddress).attr('data-i-datum');\n\t\t\t\tlet tmpFormContainerAddress = this._Dependencies.jquery(pRecordAddress).attr('data-i-container');\n\t\t\t\tlet tmpFormContainerIndex = this._Dependencies.jquery(pRecordAddress).attr('data-i-index');\n\t\t\t\tlet tmpFormContainerGUID = this._Dependencies.jquery(pRecordAddress).attr('data-i-guid');\n\t\t\t\tlet tmpFormValue;\n\t\t\t\t// check to see which element type this is before trying to collect the value\n\t\t\t\tif (this._Dependencies.jquery(pRecordAddress).tagName === 'TEXTAREA') {\n\t\t\t\t\ttmpFormValue = this._Dependencies.jquery(pRecordAddress).textContent;\n\t\t\t\t} else {\n\t\t\t\t\ttmpFormValue = this._Dependencies.jquery(pRecordAddress).val();\n\t\t\t\t}\n\t\t\t\t// If the value is non existant, set it to null\n\t\t\t\tif (typeof(tmpFormValue) === 'undefined')\n\t\t\t\t{\n\t\t\t\t\ttmpFormValue = null;\n\t\t\t\t}\n\n\t\t\t\tif (typeof(tmpFormValueAddress) === 'undefined')\n\t\t\t\t{\n\t\t\t\t\ttmpFormValueAddress = '__ERROR.UnsetDatum.'+tmpUnknownValueIndex;\n\t\t\t\t\ttmpUnknownValueIndex++;\n\t\t\t\t}\n\t\t\t\tif (tmpFormContainerGUID)\n\t\t\t\t{\n\t\t\t\t\tlet tmpGUIDValueAddress = '__GUID.'+tmpFormContainerGUID;\n\t\t\t\t\tthis.setValueAtAddress(pRecordObject, tmpGUIDValueAddress, tmpFormContainerGUID);\n\t\t\t\t}\n\t\t\t\tif (tmpFormContainerAddress && tmpFormContainerIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.setValueAtAddressInContainer(pRecordObject, tmpFormContainerAddress, tmpFormContainerIndex, tmpFormValueAddress, tmpFormValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.setValueAtAddress(pRecordObject, tmpFormValueAddress, tmpFormValue);\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn fCallback();\n\t}\n};\n\nmodule.exports = Informary;\n\n},{\"./Informary-Log.js\":80,\"cachetrax\":17,\"deep-object-diff\":26,\"jquery\":82}],82:[function(require,module,exports){\n/*!\n * jQuery JavaScript Library v3.6.4\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright OpenJS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2023-03-08T15:28Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket trac-14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar flat = arr.flat ? function( array ) {\n\treturn arr.flat.call( array );\n} : function( array ) {\n\treturn arr.concat.apply( [], array );\n};\n\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n\t\t// Support: Chrome <=57, Firefox <=52\n\t\t// In some browsers, typeof returns \"function\" for HTML <object> elements\n\t\t// (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n\t\t// We don't want to classify *any* DOM node as a function.\n\t\t// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5\n\t\t// Plus for old WebKit, typeof returns \"function\" for HTML collections\n\t\t// (e.g., `typeof document.getElementsByTagName(\"div\") === \"function\"`). (gh-4756)\n\t\treturn typeof obj === \"function\" && typeof obj.nodeType !== \"number\" &&\n\t\t\ttypeof obj.item !== \"function\";\n\t};\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\nvar document = window.document;\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnonce: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, node, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar i, val,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\n\t\t\t\t// Support: Firefox 64+, Edge 18+\n\t\t\t\t// Some browsers don't support the \"nonce\" property on scripts.\n\t\t\t\t// On the other hand, just using `getAttribute` is not enough as\n\t\t\t\t// the `nonce` attribute is reset to an empty string whenever it\n\t\t\t\t// becomes browsing-context connected.\n\t\t\t\t// See https://github.com/whatwg/html/issues/2369\n\t\t\t\t// See https://html.spec.whatwg.org/#nonce-attributes\n\t\t\t\t// The `node.getAttribute` check was added for the sake of\n\t\t\t\t// `jQuery.globalEval` so that it can fake a nonce-containing node\n\t\t\t\t// via an object.\n\t\t\t\tval = node[ i ] || node.getAttribute && node.getAttribute( i );\n\t\t\t\tif ( val ) {\n\t\t\t\t\tscript.setAttribute( i, val );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.6.4\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teven: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn ( i + 1 ) % 2;\n\t\t} ) );\n\t},\n\n\todd: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn i % 2;\n\t\t} ) );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent Object.prototype pollution\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( name === \"__proto__\" || target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\t\t\t\t\tsrc = target[ name ];\n\n\t\t\t\t\t// Ensure proper type for the source value\n\t\t\t\t\tif ( copyIsArray && !Array.isArray( src ) ) {\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\n\t\t\t\t\t\tclone = {};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src;\n\t\t\t\t\t}\n\t\t\t\t\tcopyIsArray = false;\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a provided context; falls back to the global one\n\t// if not specified.\n\tglobalEval: function( code, options, doc ) {\n\t\tDOMEval( code, { nonce: options && options.nonce }, doc );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn flat( ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\n\tfunction( _i, name ) {\n\t\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n\t} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.10\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://js.foundation/\n *\n * Date: 2023-02-14\n */\n( function( window ) {\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tnonnativeSelectorCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ( {} ).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpushNative = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[ i ] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|\" +\n\t\t\"ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n\tidentifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace +\n\t\t\"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\n\t\t// \"Attribute values must be CSS identifiers [capture 5]\n\t\t// or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" +\n\t\twhitespace + \"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" +\n\t\twhitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trleadingCombinator = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace +\n\t\t\"*\" ),\n\trdescend = new RegExp( whitespace + \"|>\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" +\n\t\t\twhitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" +\n\t\t\twhitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace +\n\t\t\t\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace +\n\t\t\t\"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trhtml = /HTML$/i,\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\" ),\n\tfunescape = function( escape, nonHex ) {\n\t\tvar high = \"0x\" + escape.slice( 1 ) - 0x10000;\n\n\t\treturn nonHex ?\n\n\t\t\t// Strip the backslash prefix from a non-hex escape sequence\n\t\t\tnonHex :\n\n\t\t\t// Replace a hexadecimal escape sequence with the encoded Unicode code point\n\t\t\t// Support: IE <=11+\n\t\t\t// For values outside the Basic Multilingual Plane (BMP), manually construct a\n\t\t\t// surrogate pair\n\t\t\thigh < 0 ?\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" +\n\t\t\t\tch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tinDisabledFieldset = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t( arr = slice.call( preferredDoc.childNodes ) ),\n\t\tpreferredDoc.childNodes\n\t);\n\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\t// eslint-disable-next-line no-unused-expressions\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpushNative.apply( target, slice.call( els ) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( ( target[ j++ ] = els[ i++ ] ) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\t\tsetDocument( context );\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( ( m = match[ 1 ] ) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( ( elem = context.getElementById( m ) ) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && ( elem = newContext.getElementById( m ) ) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[ 2 ] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!nonnativeSelectorCache[ selector + \" \" ] &&\n\t\t\t\t( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&\n\n\t\t\t\t// Support: IE 8 only\n\t\t\t\t// Exclude object elements\n\t\t\t\t( nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\" ) ) {\n\n\t\t\t\tnewSelector = selector;\n\t\t\t\tnewContext = context;\n\n\t\t\t\t// qSA considers elements outside a scoping root when evaluating child or\n\t\t\t\t// descendant combinators, which is not what we want.\n\t\t\t\t// In such cases, we work around the behavior by prefixing every selector in the\n\t\t\t\t// list with an ID selector referencing the scope context.\n\t\t\t\t// The technique has to be used as well when a leading combinator is used\n\t\t\t\t// as such selectors are not recognized by querySelectorAll.\n\t\t\t\t// Thanks to Andrew Dupont for this technique.\n\t\t\t\tif ( nodeType === 1 &&\n\t\t\t\t\t( rdescend.test( selector ) || rleadingCombinator.test( selector ) ) ) {\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\n\t\t\t\t\t// We can use :scope instead of the ID hack if the browser\n\t\t\t\t\t// supports it & if we're not changing the context.\n\t\t\t\t\tif ( newContext !== context || !support.scope ) {\n\n\t\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\t\tif ( ( nid = context.getAttribute( \"id\" ) ) ) {\n\t\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext.setAttribute( \"id\", ( nid = expando ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[ i ] = ( nid ? \"#\" + nid : \":scope\" ) + \" \" +\n\t\t\t\t\t\t\ttoSelector( groups[ i ] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\tnonnativeSelectorCache( selector, true );\n\t\t\t\t} finally {\n\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn ( cache[ key + \" \" ] = value );\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement( \"fieldset\" );\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch ( e ) {\n\t\treturn false;\n\t} finally {\n\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split( \"|\" ),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[ i ] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( ( cur = cur.nextSibling ) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn ( name === \"input\" || name === \"button\" ) && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\tinDisabledFieldset( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction( function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction( function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ ( j = matchIndexes[ i ] ) ] ) {\n\t\t\t\t\tseed[ j ] = !( matches[ j ] = seed[ j ] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t} );\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\tvar namespace = elem && elem.namespaceURI,\n\t\tdocElem = elem && ( elem.ownerDocument || elem ).documentElement;\n\n\t// Support: IE <=8\n\t// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n\t// https://bugs.jquery.com/ticket/4833\n\treturn !rhtml.test( namespace || docElem && docElem.nodeName || \"HTML\" );\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( preferredDoc != document &&\n\t\t( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,\n\t// Safari 4 - 5 only, Opera <=11.6 - 12.x only\n\t// IE/Edge & older browsers don't support the :scope pseudo-class.\n\t// Support: Safari 6.0 only\n\t// Safari 6.0 supports :scope but it's an alias of :root there.\n\tsupport.scope = assert( function( el ) {\n\t\tdocElem.appendChild( el ).appendChild( document.createElement( \"div\" ) );\n\t\treturn typeof el.querySelectorAll !== \"undefined\" &&\n\t\t\t!el.querySelectorAll( \":scope fieldset div\" ).length;\n\t} );\n\n\t// Support: Chrome 105 - 110+, Safari 15.4 - 16.3+\n\t// Make sure the the `:has()` argument is parsed unforgivingly.\n\t// We include `*` in the test to detect buggy implementations that are\n\t// _selectively_ forgiving (specifically when the list includes at least\n\t// one valid selector).\n\t// Note that we treat complete lack of support for `:has()` as if it were\n\t// spec-compliant support, which is fine because use of `:has()` in such\n\t// environments will fail in the qSA path and fall back to jQuery traversal\n\t// anyway.\n\tsupport.cssHas = assert( function() {\n\t\ttry {\n\t\t\tdocument.querySelector( \":has(*,:jqfake)\" );\n\t\t\treturn false;\n\t\t} catch ( e ) {\n\t\t\treturn true;\n\t\t}\n\t} );\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert( function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute( \"className\" );\n\t} );\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert( function( el ) {\n\t\tel.appendChild( document.createComment( \"\" ) );\n\t\treturn !el.getElementsByTagName( \"*\" ).length;\n\t} );\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert( function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t} );\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[ \"ID\" ] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute( \"id\" ) === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[ \"ID\" ] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode( \"id\" );\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( ( elem = elems[ i++ ] ) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[ \"TAG\" ] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[ \"CLASS\" ] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {\n\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert( function( el ) {\n\n\t\t\tvar input;\n\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll( \"[msallowcapture^='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll( \"[selected]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"~=\" );\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 15 - 18+\n\t\t\t// IE 11/Edge don't find elements on a `[name='']` query in some cases.\n\t\t\t// Adding a temporary attribute to the document before the selection works\n\t\t\t// around the issue.\n\t\t\t// Interestingly, IE 10 & older don't seem to have the issue.\n\t\t\tinput = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"name\", \"\" );\n\t\t\tel.appendChild( input );\n\t\t\tif ( !el.querySelectorAll( \"[name='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" +\n\t\t\t\t\twhitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll( \":checked\" ).length ) {\n\t\t\t\trbuggyQSA.push( \":checked\" );\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push( \".#.+[+~]\" );\n\t\t\t}\n\n\t\t\t// Support: Firefox <=3.6 - 5 only\n\t\t\t// Old Firefox doesn't throw on a badly-escaped identifier.\n\t\t\tel.querySelectorAll( \"\\\\\\f\" );\n\t\t\trbuggyQSA.push( \"[\\\\r\\\\n\\\\f]\" );\n\t\t} );\n\n\t\tassert( function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll( \"[name=d]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll( \":enabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll( \":disabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: Opera 10 - 11 only\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll( \"*,:x\" );\n\t\t\trbuggyQSA.push( \",.*:\" );\n\t\t} );\n\t}\n\n\tif ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector ) ) ) ) {\n\n\t\tassert( function( el ) {\n\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t} );\n\t}\n\n\tif ( !support.cssHas ) {\n\n\t\t// Support: Chrome 105 - 110+, Safari 15.4 - 16.3+\n\t\t// Our regular `try-catch` mechanism fails to detect natively-unsupported\n\t\t// pseudo-classes inside `:has()` (such as `:has(:contains(\"Foo\"))`)\n\t\t// in browsers that parse the `:has()` argument as a forgiving selector list.\n\t\t// https://drafts.csswg.org/selectors/#relational now requires the argument\n\t\t// to be parsed unforgivingly, but browsers have not yet fully adjusted.\n\t\trbuggyQSA.push( \":has\" );\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( \"|\" ) );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( \"|\" ) );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\n\t\t\t// Support: IE <9 only\n\t\t\t// IE doesn't have `contains` on `document` so we need to check for\n\t\t\t// `documentElement` presence.\n\t\t\t// We need to fall back to `a` when `documentElement` is missing\n\t\t\t// as `ownerDocument` of elements within `<template/>` may have\n\t\t\t// a null one - a default behavior of all modern browsers.\n\t\t\tvar adown = a.nodeType === 9 && a.documentElement || a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t) );\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( ( b = b.parentNode ) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t// two documents; shallow comparisons work.\n\t\t// eslint-disable-next-line eqeqeq\n\t\tcompare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( a == document || a.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, a ) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( b == document || b.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, b ) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\treturn a == document ? -1 :\n\t\t\t\tb == document ? 1 :\n\t\t\t\t/* eslint-enable eqeqeq */\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[ i ] === bp[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[ i ], bp[ i ] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\tap[ i ] == preferredDoc ? -1 :\n\t\t\tbp[ i ] == preferredDoc ? 1 :\n\t\t\t/* eslint-enable eqeqeq */\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\tsetDocument( elem );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!nonnativeSelectorCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\n\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t// fragment in IE 9\n\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\tnonnativeSelectorCache( expr, true );\n\t\t}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( context.ownerDocument || context ) != document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( elem.ownerDocument || elem ) != document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn ( sel + \"\" ).replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( ( node = elem[ i++ ] ) ) {\n\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[ 1 ] = match[ 1 ].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[ 3 ] = ( match[ 3 ] || match[ 4 ] ||\n\t\t\t\tmatch[ 5 ] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[ 2 ] === \"~=\" ) {\n\t\t\t\tmatch[ 3 ] = \" \" + match[ 3 ] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[ 1 ] = match[ 1 ].toLowerCase();\n\n\t\t\tif ( match[ 1 ].slice( 0, 3 ) === \"nth\" ) {\n\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[ 3 ] ) {\n\t\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[ 4 ] = +( match[ 4 ] ?\n\t\t\t\t\tmatch[ 5 ] + ( match[ 6 ] || 1 ) :\n\t\t\t\t\t2 * ( match[ 3 ] === \"even\" || match[ 3 ] === \"odd\" ) );\n\t\t\t\tmatch[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === \"odd\" );\n\n\t\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[ 3 ] ) {\n\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[ 6 ] && match[ 2 ];\n\n\t\t\tif ( matchExpr[ \"CHILD\" ].test( match[ 0 ] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[ 3 ] ) {\n\t\t\t\tmatch[ 2 ] = match[ 4 ] || match[ 5 ] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t( excess = tokenize( unquoted, true ) ) &&\n\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t( excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length ) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[ 0 ] = match[ 0 ].slice( 0, excess );\n\t\t\t\tmatch[ 2 ] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() {\n\t\t\t\t\treturn true;\n\t\t\t\t} :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t( pattern = new RegExp( \"(^|\" + whitespace +\n\t\t\t\t\t\")\" + className + \"(\" + whitespace + \"|$)\" ) ) && classCache(\n\t\t\t\t\t\tclassName, function( elem ) {\n\t\t\t\t\t\t\treturn pattern.test(\n\t\t\t\t\t\t\t\ttypeof elem.className === \"string\" && elem.className ||\n\t\t\t\t\t\t\t\ttypeof elem.getAttribute !== \"undefined\" &&\n\t\t\t\t\t\t\t\t\telem.getAttribute( \"class\" ) ||\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\t/* eslint-disable max-len */\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t\t/* eslint-enable max-len */\n\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, _argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( ( node = node[ dir ] ) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction( function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[ i ] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction( function( selector ) {\n\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction( function( seed, matches, _context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\t\t\t\t\tseed[ i ] = !( matches[ i ] = elem );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} ) :\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tinput[ 0 ] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[ 0 ] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t} ),\n\n\t\t\"has\": markFunction( function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t} ),\n\n\t\t\"contains\": markFunction( function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t} ),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test( lang || \"\" ) ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( ( elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute( \"xml:lang\" ) || elem.getAttribute( \"lang\" ) ) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t} ),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement &&\n\t\t\t\t( !document.hasFocus || document.hasFocus() ) &&\n\t\t\t\t!!( elem.type || elem.href || ~elem.tabIndex );\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn ( nodeName === \"input\" && !!elem.checked ) ||\n\t\t\t\t( nodeName === \"option\" && !!elem.selected );\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[ \"empty\" ]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE <10 only\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( ( attr = elem.getAttribute( \"type\" ) ) == null ||\n\t\t\t\t\tattr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo( function() {\n\t\t\treturn [ 0 ];\n\t\t} ),\n\n\t\t\"last\": createPositionalPseudo( function( _matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t} ),\n\n\t\t\"eq\": createPositionalPseudo( function( _matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t} ),\n\n\t\t\"even\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"odd\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"lt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ?\n\t\t\t\targument + length :\n\t\t\t\targument > length ?\n\t\t\t\t\tlength :\n\t\t\t\t\targument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"gt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} )\n\t}\n};\n\nExpr.pseudos[ \"nth\" ] = Expr.pseudos[ \"eq\" ];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || ( match = rcomma.exec( soFar ) ) ) {\n\t\t\tif ( match ) {\n\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[ 0 ].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( ( tokens = [] ) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( ( match = rleadingCombinator.exec( soFar ) ) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push( {\n\t\t\t\tvalue: matched,\n\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[ 0 ].replace( rtrim, \" \" )\n\t\t\t} );\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||\n\t\t\t\t( match = preFilters[ type ]( match ) ) ) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push( {\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t} );\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[ i ].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || ( elem[ expando ] = {} );\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] ||\n\t\t\t\t\t\t\t( outerCache[ elem.uniqueID ] = {} );\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( ( oldCache = uniqueCache[ key ] ) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn ( newCache[ 2 ] = oldCache[ 2 ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[ i ]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[ 0 ];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[ i ], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction( function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts(\n\t\t\t\tselector || \"*\",\n\t\t\t\tcontext.nodeType ? [ context ] : context,\n\t\t\t\t[]\n\t\t\t),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( ( elem = temp[ i ] ) ) {\n\t\t\t\t\tmatcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) ) {\n\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( ( matcherIn[ i ] = elem ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, ( matcherOut = [] ), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) &&\n\t\t\t\t\t\t( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {\n\n\t\t\t\t\t\tseed[ temp ] = !( results[ temp ] = elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t} );\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[ 0 ].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[ \" \" ],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t( checkContext = context ).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {\n\t\t\tmatchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[ j ].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\n\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\ttokens\n\t\t\t\t\t\t.slice( 0, i - 1 )\n\t\t\t\t\t\t.concat( { value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" } )\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[ \"TAG\" ]( \"*\", outermost ),\n\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\n\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\toutermostContext = context == document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\n\t\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\t\tif ( !context && elem.ownerDocument != document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( ( matcher = elementMatchers[ j++ ] ) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( ( elem = !matcher && elem ) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( ( matcher = setMatchers[ j++ ] ) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !( unmatched[ i ] || setMatched[ i ] ) ) {\n\t\t\t\t\t\t\t\tsetMatched[ i ] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[ i ] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache(\n\t\t\tselector,\n\t\t\tmatcherFromGroupMatchers( elementMatchers, setMatchers )\n\t\t);\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( ( selector = compiled.selector || selector ) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[ 0 ] = match[ 0 ].slice( 0 );\n\t\tif ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === \"ID\" &&\n\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {\n\n\t\t\tcontext = ( Expr.find[ \"ID\" ]( token.matches[ 0 ]\n\t\t\t\t.replace( runescape, funescape ), context ) || [] )[ 0 ];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[ \"needsContext\" ].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[ i ];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ ( type = token.type ) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( ( find = Expr.find[ type ] ) ) {\n\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( ( seed = find(\n\t\t\t\t\ttoken.matches[ 0 ].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext\n\t\t\t\t) ) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split( \"\" ).sort( sortOrder ).join( \"\" ) === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert( function( el ) {\n\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement( \"fieldset\" ) ) & 1;\n} );\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert( function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute( \"href\" ) === \"#\";\n} ) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert( function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n} ) ) {\n\taddHandle( \"value\", function( elem, _name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert( function( el ) {\n\treturn el.getAttribute( \"disabled\" ) == null;\n} ) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\t\tnull;\n\t\t}\n\t} );\n}\n\nreturn Sizzle;\n\n} )( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n}\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (trac-9521)\n\t// Strict HTML recognition (trac-11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\tif ( elem.contentDocument != null &&\n\n\t\t\t// Support: IE 11+\n\t\t\t// <object> elements with no `data` attribute has an object\n\t\t\t// `contentDocument` with a `null` prototype.\n\t\t\tgetProto( elem.contentDocument ) ) {\n\n\t\t\treturn elem.contentDocument;\n\t\t}\n\n\t\t// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n\t\t// Treat the template element as a regular one in browsers that\n\t\t// don't support it.\n\t\tif ( nodeName( elem, \"template\" ) ) {\n\t\t\telem = elem.content || elem;\n\t\t}\n\n\t\treturn jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( _i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the primary Deferred\n\t\t\tprimary = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tprimary.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( primary.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn primary.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );\n\t\t}\n\n\t\treturn primary.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See trac-6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, _key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\t\tvalue :\n\t\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( _all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (trac-9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see trac-8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (trac-14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar documentElement = document.documentElement;\n\n\n\n\tvar isAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem );\n\t\t},\n\t\tcomposed = { composed: true };\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n\t// Check attachment across shadow DOM boundaries when possible (gh-3504)\n\t// Support: iOS 10.0-10.2 only\n\t// Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n\t// leading to errors. We need to check for `getRootNode`.\n\tif ( documentElement.getRootNode ) {\n\t\tisAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem ) ||\n\t\t\t\telem.getRootNode( composed ) === elem.ownerDocument;\n\t\t};\n\t}\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tisAttached( elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = elem.nodeType &&\n\t\t\t( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (trac-11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (trac-14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n\n\t// Support: IE <=9 only\n\t// IE <=9 replaces <option> tags with their contents when inserted outside of\n\t// the select element.\n\tdiv.innerHTML = \"<option></option>\";\n\tsupport.option = !!div.lastChild;\n} )();\n\n\n// We have to close these tags to support XHTML (trac-13200)\nvar wrapMap = {\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n// Support: IE <=9 only\nif ( !support.option ) {\n\twrapMap.optgroup = wrapMap.option = [ 1, \"<select multiple='multiple'>\", \"</select>\" ];\n}\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (trac-15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, attached, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (trac-12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tattached = isAttached( elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( attached ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\nvar rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 - 11+\n// focus() and blur() are asynchronous, except when they are no-op.\n// So expect focus to be synchronous when the element is already active,\n// and blur to be synchronous when the element is not already active.\n// (focus and blur are always synchronous in other supported browsers,\n// this just defines when we can count on it).\nfunction expectSync( elem, type ) {\n\treturn ( elem === safeActiveElement() ) === ( type === \"focus\" );\n}\n\n// Support: IE <=9 only\n// Accessing document.activeElement can throw unexpectedly\n// https://bugs.jquery.com/ticket/13393\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Only attach events to objects that accept data\n\t\tif ( !acceptData( elem ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = Object.create( null );\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\n\t\t\t// Make a writable jQuery.Event from the native event object\n\t\t\tevent = jQuery.event.fix( nativeEvent ),\n\n\t\t\thandlers = (\n\t\t\t\tdataPriv.get( this, \"events\" ) || Object.create( null )\n\t\t\t)[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// If the event is namespaced, then each handler is only invoked if it is\n\t\t\t\t// specially universal or its namespaces are a superset of the event's.\n\t\t\t\tif ( !event.rnamespace || handleObj.namespace === false ||\n\t\t\t\t\tevent.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (trac-13208)\n\t\t\t\t// Don't process clicks on disabled elements (trac-6911, trac-8165, trac-11382, trac-11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (trac-13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tclick: {\n\n\t\t\t// Utilize native event to ensure correct state for checkable inputs\n\t\t\tsetup: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Claim the first handler\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\t// dataPriv.set( el, \"click\", ... )\n\t\t\t\t\tleverageNative( el, \"click\", returnTrue );\n\t\t\t\t}\n\n\t\t\t\t// Return false to allow normal processing in the caller\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\ttrigger: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Force setup before triggering a click\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\tleverageNative( el, \"click\" );\n\t\t\t\t}\n\n\t\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, suppress native .click() on links\n\t\t\t// Also prevent it if we're currently inside a leveraged native-event stack\n\t\t\t_default: function( event ) {\n\t\t\t\tvar target = event.target;\n\t\t\t\treturn rcheckableType.test( target.type ) &&\n\t\t\t\t\ttarget.click && nodeName( target, \"input\" ) &&\n\t\t\t\t\tdataPriv.get( target, \"click\" ) ||\n\t\t\t\t\tnodeName( target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Ensure the presence of an event listener that handles manually-triggered\n// synthetic events by interrupting progress until reinvoked in response to\n// *native* events that it fires directly, ensuring that state changes have\n// already occurred before other listeners are invoked.\nfunction leverageNative( el, type, expectSync ) {\n\n\t// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n\tif ( !expectSync ) {\n\t\tif ( dataPriv.get( el, type ) === undefined ) {\n\t\t\tjQuery.event.add( el, type, returnTrue );\n\t\t}\n\t\treturn;\n\t}\n\n\t// Register the controller as a special universal handler for all event namespaces\n\tdataPriv.set( el, type, false );\n\tjQuery.event.add( el, type, {\n\t\tnamespace: false,\n\t\thandler: function( event ) {\n\t\t\tvar notAsync, result,\n\t\t\t\tsaved = dataPriv.get( this, type );\n\n\t\t\tif ( ( event.isTrigger & 1 ) && this[ type ] ) {\n\n\t\t\t\t// Interrupt processing of the outer synthetic .trigger()ed event\n\t\t\t\t// Saved data should be false in such cases, but might be a leftover capture object\n\t\t\t\t// from an async native handler (gh-4350)\n\t\t\t\tif ( !saved.length ) {\n\n\t\t\t\t\t// Store arguments for use when handling the inner native event\n\t\t\t\t\t// There will always be at least one argument (an event object), so this array\n\t\t\t\t\t// will not be confused with a leftover capture object.\n\t\t\t\t\tsaved = slice.call( arguments );\n\t\t\t\t\tdataPriv.set( this, type, saved );\n\n\t\t\t\t\t// Trigger the native event and capture its result\n\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t// focus() and blur() are asynchronous\n\t\t\t\t\tnotAsync = expectSync( this, type );\n\t\t\t\t\tthis[ type ]();\n\t\t\t\t\tresult = dataPriv.get( this, type );\n\t\t\t\t\tif ( saved !== result || notAsync ) {\n\t\t\t\t\t\tdataPriv.set( this, type, false );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = {};\n\t\t\t\t\t}\n\t\t\t\t\tif ( saved !== result ) {\n\n\t\t\t\t\t\t// Cancel the outer synthetic event\n\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t\t// Support: Chrome 86+\n\t\t\t\t\t\t// In Chrome, if an element having a focusout handler is blurred by\n\t\t\t\t\t\t// clicking outside of it, it invokes the handler synchronously. If\n\t\t\t\t\t\t// that handler calls `.remove()` on the element, the data is cleared,\n\t\t\t\t\t\t// leaving `result` undefined. We need to guard against this.\n\t\t\t\t\t\treturn result && result.value;\n\t\t\t\t\t}\n\n\t\t\t\t// If this is an inner synthetic event for an event with a bubbling surrogate\n\t\t\t\t// (focus or blur), assume that the surrogate already propagated from triggering the\n\t\t\t\t// native event and prevent that from happening again here.\n\t\t\t\t// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n\t\t\t\t// bubbling surrogate propagates *after* the non-bubbling base), but that seems\n\t\t\t\t// less bad than duplication.\n\t\t\t\t} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\n\t\t\t// If this is a native event triggered above, everything is now in order\n\t\t\t// Fire an inner synthetic event with the original arguments\n\t\t\t} else if ( saved.length ) {\n\n\t\t\t\t// ...and capture the result\n\t\t\t\tdataPriv.set( this, type, {\n\t\t\t\t\tvalue: jQuery.event.trigger(\n\n\t\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t\t// Extend with the prototype to reset the above stopImmediatePropagation()\n\t\t\t\t\t\tjQuery.extend( saved[ 0 ], jQuery.Event.prototype ),\n\t\t\t\t\t\tsaved.slice( 1 ),\n\t\t\t\t\t\tthis\n\t\t\t\t\t)\n\t\t\t\t} );\n\n\t\t\t\t// Abort handling of the native event\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t}\n\t\t}\n\t} );\n}\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (trac-504, trac-13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcode: true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\twhich: true\n}, jQuery.event.addProp );\n\njQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( type, delegateType ) {\n\tjQuery.event.special[ type ] = {\n\n\t\t// Utilize native event if possible so blur/focus sequence is correct\n\t\tsetup: function() {\n\n\t\t\t// Claim the first handler\n\t\t\t// dataPriv.set( this, \"focus\", ... )\n\t\t\t// dataPriv.set( this, \"blur\", ... )\n\t\t\tleverageNative( this, type, expectSync );\n\n\t\t\t// Return false to allow normal processing in the caller\n\t\t\treturn false;\n\t\t},\n\t\ttrigger: function() {\n\n\t\t\t// Force setup before trigger\n\t\t\tleverageNative( this, type );\n\n\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\treturn true;\n\t\t},\n\n\t\t// Suppress native focus or blur if we're currently inside\n\t\t// a leveraged native-event stack\n\t\t_default: function( event ) {\n\t\t\treturn dataPriv.get( event.target, type );\n\t\t},\n\n\t\tdelegateType: delegateType\n\t};\n} );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\n\trcleanScript = /^\\s*<!\\[CDATA\\[|\\]\\]>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.get( src );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdataPriv.remove( dest, \"handle events\" );\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = flat( args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (trac-8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl && !node.noModule ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src, {\n\t\t\t\t\t\t\t\t\tnonce: node.nonce || node.getAttribute( \"nonce\" )\n\t\t\t\t\t\t\t\t}, doc );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Unwrap a CDATA section containing script contents. This shouldn't be\n\t\t\t\t\t\t\t// needed as in XML documents they're already not visible when\n\t\t\t\t\t\t\t// inspecting element contents and in HTML documents they have no\n\t\t\t\t\t\t\t// meaning but we're preserving that logic for backwards compatibility.\n\t\t\t\t\t\t\t// This will be removed completely in 4.0. See gh-4904.\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), node, doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && isAttached( node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html;\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = isAttached( elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar rcustomProp = /^--/;\n\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (trac-15098, trac-14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar swap = function( elem, options, callback ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.call( elem );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\nvar whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\";\n\n\nvar rtrimCSS = new RegExp(\n\t\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\",\n\t\"g\"\n);\n\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\t// Support: Chrome <=64\n\t\t// Don't get tricked when zoom affects offsetWidth (gh-4029)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableTrDimensionsVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (trac-8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t},\n\n\t\t// Support: IE 9 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Behavior in IE 9 is more subtle than in newer versions & it passes\n\t\t// some versions of this test; make sure not to make it pass there!\n\t\t//\n\t\t// Support: Firefox 70+\n\t\t// Only Firefox includes border widths\n\t\t// in computed dimensions. (gh-4529)\n\t\treliableTrDimensions: function() {\n\t\t\tvar table, tr, trChild, trStyle;\n\t\t\tif ( reliableTrDimensionsVal == null ) {\n\t\t\t\ttable = document.createElement( \"table\" );\n\t\t\t\ttr = document.createElement( \"tr\" );\n\t\t\t\ttrChild = document.createElement( \"div\" );\n\n\t\t\t\ttable.style.cssText = \"position:absolute;left:-11111px;border-collapse:separate\";\n\t\t\t\ttr.style.cssText = \"border:1px solid\";\n\n\t\t\t\t// Support: Chrome 86+\n\t\t\t\t// Height set through cssText does not get applied.\n\t\t\t\t// Computed height then comes back as 0.\n\t\t\t\ttr.style.height = \"1px\";\n\t\t\t\ttrChild.style.height = \"9px\";\n\n\t\t\t\t// Support: Android 8 Chrome 86+\n\t\t\t\t// In our bodyBackground.html iframe,\n\t\t\t\t// display for all div elements is set to \"inline\",\n\t\t\t\t// which causes a problem only in Android 8 Chrome 86.\n\t\t\t\t// Ensuring the div is display: block\n\t\t\t\t// gets around this issue.\n\t\t\t\ttrChild.style.display = \"block\";\n\n\t\t\t\tdocumentElement\n\t\t\t\t\t.appendChild( table )\n\t\t\t\t\t.appendChild( tr )\n\t\t\t\t\t.appendChild( trChild );\n\n\t\t\t\ttrStyle = window.getComputedStyle( tr );\n\t\t\t\treliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +\n\t\t\t\t\tparseInt( trStyle.borderTopWidth, 10 ) +\n\t\t\t\t\tparseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;\n\n\t\t\t\tdocumentElement.removeChild( table );\n\t\t\t}\n\t\t\treturn reliableTrDimensionsVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tisCustomProp = rcustomProp.test( name ),\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, trac-12537)\n\t//   .css('--customProperty) (gh-3144)\n\tif ( computed ) {\n\n\t\t// Support: IE <=9 - 11+\n\t\t// IE only supports `\"float\"` in `getPropertyValue`; in computed styles\n\t\t// it's only available as `\"cssFloat\"`. We no longer modify properties\n\t\t// sent to `.css()` apart from camelCasing, so we need to check both.\n\t\t// Normally, this would create difference in behavior: if\n\t\t// `getPropertyValue` returns an empty string, the value returned\n\t\t// by `.css()` would be `undefined`. This is usually the case for\n\t\t// disconnected elements. However, in IE even disconnected elements\n\t\t// with no styles return `\"none\"` for `getPropertyValue( \"float\" )`\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( isCustomProp && ret ) {\n\n\t\t\t// Support: Firefox 105+, Chrome <=105+\n\t\t\t// Spec requires trimming whitespace for custom properties (gh-4926).\n\t\t\t// Firefox only trims leading whitespace. Chrome just collapses\n\t\t\t// both leading & trailing whitespace to a single space.\n\t\t\t//\n\t\t\t// Fall back to `undefined` if empty string returned.\n\t\t\t// This collapses a missing definition with property defined\n\t\t\t// and set to an empty string but there's no standard API\n\t\t\t// allowing us to differentiate them without a performance penalty\n\t\t\t// and returning `undefined` aligns with older jQuery.\n\t\t\t//\n\t\t\t// rtrimCSS treats U+000D CARRIAGE RETURN and U+000C FORM FEED\n\t\t\t// as whitespace while CSS does not, but this is not a problem\n\t\t\t// because CSS preprocessing replaces them with U+000A LINE FEED\n\t\t\t// (which *is* CSS whitespace)\n\t\t\t// https://www.w3.org/TR/css-syntax-3/#input-preprocessing\n\t\t\tret = ret.replace( rtrimCSS, \"$1\" ) || undefined;\n\t\t}\n\n\t\tif ( ret === \"\" && !isAttached( elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar cssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style,\n\tvendorProps = {};\n\n// Return a vendor-prefixed property or undefined\nfunction vendorPropName( name ) {\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a potentially-mapped jQuery.cssProps or vendor prefixed property\nfunction finalPropName( name ) {\n\tvar final = jQuery.cssProps[ name ] || vendorProps[ name ];\n\n\tif ( final ) {\n\t\treturn final;\n\t}\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\treturn vendorProps[ name ] = vendorPropName( name ) || name;\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t};\n\nfunction setPositiveNumber( _elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\n\t\t// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n\t\t// Use an explicit zero to avoid NaN (gh-3964)\n\t\t) ) || 0;\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\n\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n\t\t// Fake content-box until we know it's needed to know the true value.\n\t\tboxSizingNeeded = !support.boxSizingReliable() || extra,\n\t\tisBorderBox = boxSizingNeeded &&\n\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox,\n\n\t\tval = curCSS( elem, dimension, styles ),\n\t\toffsetProp = \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\n\t// Support: IE 9 - 11 only\n\t// Use offsetWidth/offsetHeight for when box sizing is unreliable.\n\t// In those cases, the computed value can be trusted to be border-box.\n\tif ( ( !support.boxSizingReliable() && isBorderBox ||\n\n\t\t// Support: IE 10 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Interestingly, in some cases IE 9 doesn't suffer from this issue.\n\t\t!support.reliableTrDimensions() && nodeName( elem, \"tr\" ) ||\n\n\t\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t\t// This happens for inline elements with no explicit setting (gh-3571)\n\t\tval === \"auto\" ||\n\n\t\t// Support: Android <=4.1 - 4.3 only\n\t\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) &&\n\n\t\t// Make sure the element is visible & connected\n\t\telem.getClientRects().length ) {\n\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t\t// Where available, offsetWidth/offsetHeight approximate border box dimensions.\n\t\t// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n\t\t// retrieved value as a content box dimension.\n\t\tvalueIsBorderBox = offsetProp in elem;\n\t\tif ( valueIsBorderBox ) {\n\t\t\tval = elem[ offsetProp ];\n\t\t}\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"gridArea\": true,\n\t\t\"gridColumn\": true,\n\t\t\"gridColumnEnd\": true,\n\t\t\"gridColumnStart\": true,\n\t\t\"gridRow\": true,\n\t\t\"gridRowEnd\": true,\n\t\t\"gridRowStart\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (trac-7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug trac-9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (trac-7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\t// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n\t\t\t// \"px\" to a few hardcoded values.\n\t\t\tif ( type === \"number\" && !isCustomProp ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( _i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t} ) :\n\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\n\t\t\t\t// Only read styles.position if the test has a chance to fail\n\t\t\t\t// to avoid forcing a reflow.\n\t\t\t\tscrollboxSizeBuggy = !support.scrollboxSize() &&\n\t\t\t\t\tstyles.position === \"absolute\",\n\n\t\t\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n\t\t\t\tboxSizingNeeded = scrollboxSizeBuggy || extra,\n\t\t\t\tisBorderBox = boxSizingNeeded &&\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra ?\n\t\t\t\t\tboxModelAdjustment(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\tdimension,\n\t\t\t\t\t\textra,\n\t\t\t\t\t\tisBorderBox,\n\t\t\t\t\t\tstyles\n\t\t\t\t\t) :\n\t\t\t\t\t0;\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && scrollboxSizeBuggy ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 && (\n\t\t\t\tjQuery.cssHooks[ tween.prop ] ||\n\t\t\t\t\ttween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (trac-12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\n\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( _i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( _i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// Use proper attribute retrieval (trac-12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classNames, cur, curValue, className, i, finalValue;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclassNames = classesToArray( value );\n\n\t\tif ( classNames.length ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tcurValue = getClass( this );\n\t\t\t\tcur = this.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\n\t\t\t\t\t\tclassName = classNames[ i ];\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + className + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += className + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\tthis.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classNames, cur, curValue, className, i, finalValue;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclassNames = classesToArray( value );\n\n\t\tif ( classNames.length ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tcurValue = getClass( this );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = this.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\n\t\t\t\t\t\tclassName = classNames[ i ];\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + className + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + className + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\tthis.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar classNames, className, i, self,\n\t\t\ttype = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tclassNames = classesToArray( value );\n\n\t\treturn this.each( function() {\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\tself = jQuery( this );\n\n\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\n\t\t\t\t\tclassName = classNames[ i ];\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (trac-14686, trac-14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (trac-2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (trac-9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (trac-9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || Object.create( null ) )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (trac-6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\n\t\t\t\t// Handle: regular nodes (via `this.ownerDocument`), window\n\t\t\t\t// (via `this.document`) & document (via `this`).\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = { guid: Date.now() };\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml, parserErrorElem;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {}\n\n\tparserErrorElem = xml && xml.getElementsByTagName( \"parsererror\" )[ 0 ];\n\tif ( !xml || parserErrorElem ) {\n\t\tjQuery.error( \"Invalid XML: \" + (\n\t\t\tparserErrorElem ?\n\t\t\t\tjQuery.map( parserErrorElem.childNodes, function( el ) {\n\t\t\t\t\treturn el.textContent;\n\t\t\t\t} ).join( \"\\n\" ) :\n\t\t\t\tdata\n\t\t) );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\tif ( a == null ) {\n\t\treturn \"\";\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} ).filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} ).map( function( _i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// trac-7653, trac-8125, trac-8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (trac-10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\noriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes trac-9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() + \" \" ] =\n\t\t\t\t\t\t\t\t\t( responseHeaders[ match[ 1 ].toLowerCase() + \" \" ] || [] )\n\t\t\t\t\t\t\t\t\t\t.concat( match[ 2 ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() + \" \" ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match.join( \", \" );\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (trac-10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket trac-12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (trac-15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// trac-9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce.guid++ ) +\n\t\t\t\t\tuncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Use a noop converter for missing script but not if jsonp\n\t\t\tif ( !isSuccess &&\n\t\t\t\tjQuery.inArray( \"script\", s.dataTypes ) > -1 &&\n\t\t\t\tjQuery.inArray( \"json\", s.dataTypes ) < 0 ) {\n\t\t\t\ts.converters[ \"text script\" ] = function() {};\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( _i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\njQuery.ajaxPrefilter( function( s ) {\n\tvar i;\n\tfor ( i in s.headers ) {\n\t\tif ( i.toLowerCase() === \"content-type\" ) {\n\t\t\ts.contentType = s.headers[ i ] || \"\";\n\t\t}\n\t}\n} );\n\n\njQuery._evalUrl = function( url, options, doc ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (trac-11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\n\t\t// Only evaluate the response if it is successful (gh-4126)\n\t\t// dataFilter is not invoked for failure responses, so using it instead\n\t\t// of the default converter is kludgy but it works.\n\t\tconverters: {\n\t\t\t\"text script\": function() {}\n\t\t},\n\t\tdataFilter: function( response ) {\n\t\t\tjQuery.globalEval( response, options, doc );\n\t\t}\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// trac-1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see trac-8605, trac-14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// trac-14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain or forced-by-attrs requests\n\tif ( s.crossDomain || s.scriptAttrs ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" )\n\t\t\t\t\t.attr( s.scriptAttrs || {} )\n\t\t\t\t\t.prop( { charset: s.scriptCharset, src: s.url } )\n\t\t\t\t\t.on( \"load error\", callback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce.guid++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( _i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( {\n\t\tpadding: \"inner\" + name,\n\t\tcontent: type,\n\t\t\"\": \"outer\" + name\n\t}, function( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( _i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t},\n\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\njQuery.each(\n\t( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( _i, name ) {\n\n\t\t// Handle event binding\n\t\tjQuery.fn[ name ] = function( data, fn ) {\n\t\t\treturn arguments.length > 0 ?\n\t\t\t\tthis.on( name, null, data, fn ) :\n\t\t\t\tthis.trigger( name );\n\t\t};\n\t}\n);\n\n\n\n\n// Support: Android <=4.0 only\n// Make sure we trim BOM and NBSP\n// Require that the \"whitespace run\" starts from a non-whitespace\n// to avoid O(N^2) behavior when the engine would try matching \"\\s+$\" at each space position.\nvar rtrim = /^[\\s\\uFEFF\\xA0]+|([^\\s\\uFEFF\\xA0])[\\s\\uFEFF\\xA0]+$/g;\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\njQuery.trim = function( text ) {\n\treturn text == null ?\n\t\t\"\" :\n\t\t( text + \"\" ).replace( rtrim, \"$1\" );\n};\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (trac-7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (trac-13566)\nif ( typeof noGlobal === \"undefined\" ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n\n},{}],83:[function(require,module,exports){\n// When a boxed property is passed in, it should have quotes of some\n// kind around it.\n//\n// For instance:\n// \t\tMyValues['Name']\n// \t\tMyValues[\"Age\"]\n// \t\tMyValues[`Cost`]\n//\n// This function removes the wrapping quotes.\n//\n// Please note it *DOES NOT PARSE* template literals, so backticks just\n// end up doing the same thing as other quote types.\n//\n// TODO: Should template literals be processed?  If so what state do they have access to?  That should happen here if so.\n// TODO: Make a simple class include library with these\nlet cleanWrapCharacters = (pCharacter, pString) =>\n{\n\tif (pString.startsWith(pCharacter) && pString.endsWith(pCharacter))\n\t{\n\t\treturn pString.substring(1, pString.length - 1);\n\t}\n\telse\n\t{\n\t\treturn pString;\n\t}\n};\n\nmodule.exports = cleanWrapCharacters;\n},{}],84:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Hash Translation\n*\n* This is a very simple translation table for hashes, which allows the same schema to resolve\n* differently based on a loaded translation table.\n*\n* This is to prevent the requirement for mutating schemas over and over again when we want to\n* reuse the structure but look up data elements by different addresses.\n*\n* One side-effect of this is that a translation table can \"override\" the built-in hashes, since\n* this is always used to resolve hashes before any of the functionCallByHash(pHash, ...) perform\n* their lookups by hash.\n*\n* @class ManyfestHashTranslation\n*/\nclass ManyfestHashTranslation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n        this.translationTable = {};\n\t}\n\n    translationCount()\n    {\n        return Object.keys(this.translationTable).length;\n    }\n\n    addTranslation(pTranslation)\n    {\n        // This adds a translation in the form of:\n        // { \"SourceHash\": \"DestinationHash\", \"SecondSourceHash\":\"SecondDestinationHash\" }\n        if (typeof(pTranslation) != 'object')\n        {\n            this.logError(`Hash translation addTranslation expected a translation be type object but was passed in ${typeof(pTranslation)}`);\n            return false;\n        }\n\n        let tmpTranslationSources = Object.keys(pTranslation)\n\n        tmpTranslationSources.forEach(\n            (pTranslationSource) =>\n            {\n                if (typeof(pTranslation[pTranslationSource]) != 'string')\n                {\n                    this.logError(`Hash translation addTranslation expected a translation destination hash for [${pTranslationSource}] to be a string but the referrant was a ${typeof(pTranslation[pTranslationSource])}`);\n                }\n                else\n                {\n                    this.translationTable[pTranslationSource] = pTranslation[pTranslationSource];\n                }\n            });\n    }\n\n    removeTranslationHash(pTranslationHash)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslationHash))\n        {\n            delete this.translationTable[pTranslationHash];\n        }\n    }\n\n    // This removes translations.\n    // If passed a string, just removes the single one.\n    // If passed an object, it does all the source keys.\n    removeTranslation(pTranslation)\n    {\n        if (typeof(pTranslation) == 'string')\n        {\n            this.removeTranslationHash(pTranslation);\n            return true;\n        }\n        else if (typeof(pTranslation) == 'object')\n        {\n            let tmpTranslationSources = Object.keys(pTranslation)\n\n            tmpTranslationSources.forEach(\n                (pTranslationSource) =>\n                {\n                    this.removeTranslation(pTranslationSource);\n                });\n            return true;\n        }\n        else\n        {\n            this.logError(`Hash translation removeTranslation expected either a string or an object but the passed-in translation was type ${typeof(pTranslation)}`);\n            return false;\n        }\n    }\n\n    clearTranslations()\n    {\n        this.translationTable = {};\n    }\n\n    translate(pTranslation)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslation))\n        {\n            return this.translationTable[pTranslation];\n        }\n        else\n        {\n            return pTranslation;\n        }\n    }\n}\n\nmodule.exports = ManyfestHashTranslation;\n},{\"./Manyfest-LogToConsole.js\":85}],85:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n/**\n* Manyfest simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n\n    console.log(`[Manyfest] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject));\n};\n\nmodule.exports = logToConsole;\n},{}],86:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Resolver\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressResolverCheckAddressExists\n*/\nclass ManyfestObjectAddressResolverCheckAddressExists\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.elucidatorSolver = false;\n\t\tthis.elucidatorSolverState = {};\n\t}\n\n\t// Check if an address exists.\n\t//\n\t// This is necessary because the getValueAtAddress function is ambiguous on\n\t// whether the element/property is actually there or not (it returns\n\t// undefined whether the property exists or not).  This function checks for\n\t// existance and returns true or false dependent.\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\t// TODO: Should these throw an error?\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Check if the property exists.\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName].hasOwnProperty(tmpBoxedPropertyReference);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Use the new in operator to see if the element is in the array\n\t\t\t\t\treturn (tmpBoxedPropertyNumber in pObject[tmpBoxedPropertyName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Check if the property exists\n\t\t\t\treturn pObject.hasOwnProperty(pAddress);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// Because this is an impossible address, the property doesn't exist\n\t\t\t\t\t// TODO: Should we throw an error in this condition?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverCheckAddressExists;\n},{\"./Manyfest-LogToConsole.js\":85}],87:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet libPrecedent = require('precedent');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - DeleteValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverDeleteValue\n*/\nclass ManyfestObjectAddressResolverDeleteValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.elucidatorSolver = false;\n\t\tthis.elucidatorSolverState = {};\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\tlet tmpPrecedent = new libPrecedent();\n\t\t// If we don't copy the string, precedent takes it out for good.\n\t\t// TODO: Consider adding a \"don't replace\" option for precedent\n\t\tlet tmpAddress = pAddress;\n\n\t\tif (!this.elucidatorSolver)\n\t\t{\n\t\t\t// Again, manage against circular dependencies\n\t\t\tlet libElucidator = require('elucidator');\n\t\t\tthis.elucidatorSolver = new libElucidator({}, this.logInfo, this.logError);\n\t\t}\n\n\t\tif (this.elucidatorSolver)\n\t\t{\n\t\t\t// This allows the magic filtration with elucidator configuration\n\t\t\t// TODO: We could pass more state in (e.g. parent address, object, etc.)\n\t\t\t// TODO: Discuss this metaprogramming AT LENGTH\n\t\t\tlet tmpFilterState = (\n\t\t\t\t{\n\t\t\t\t\tRecord: pRecord,\n\t\t\t\t\tkeepRecord: true\n\t\t\t\t});\n\n\t\t\t// This is about as complex as it gets.\n\t\t\t// TODO: Optimize this so it is only initialized once.\n\t\t\t// TODO: That means figuring out a healthy pattern for passing in state to this\n\t\t\ttmpPrecedent.addPattern('<<~~', '~~>>',\n\t\t\t\t(pInstructionHash) =>\n\t\t\t\t{\n\t\t\t\t\t// This is for internal config on the solution steps.  Right now config is not shared across steps.\n\t\t\t\t\tif (this.elucidatorSolverState.hasOwnProperty(pInstructionHash))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpFilterState.SolutionState = this.elucidatorSolverState[pInstructionHash];\n\t\t\t\t\t}\n\t\t\t\t\tthis.elucidatorSolver.solveInternalOperation('Custom', pInstructionHash, tmpFilterState);\n\t\t\t\t});\n\t\t\ttmpPrecedent.addPattern('<<~?', '?~>>',\n\t\t\t\t(pMagicSearchExpression) =>\n\t\t\t\t{\n\t\t\t\t\tif (typeof(pMagicSearchExpression) !== 'string')\n\t\t\t\t\t{\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// This expects a comma separated expression:\n\t\t\t\t\t//     Some.Address.In.The.Object,==,Search Term to Match\n\t\t\t\t\tlet tmpMagicComparisonPatternSet = pMagicSearchExpression.split(',');\n\n\t\t\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\t\t\t\t\tlet tmpSearchComparator = tmpMagicComparisonPatternSet[1];\n\t\t\t\t\tlet tmpSearchValue = tmpMagicComparisonPatternSet[2];\n\n\t\t\t\t\ttmpFilterState.ComparisonState = (\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tSearchAddress: tmpSearchAddress,\n\t\t\t\t\t\t\tComparator: tmpSearchComparator,\n\t\t\t\t\t\t\tSearchTerm: tmpSearchValue\n\t\t\t\t\t\t});\n\n\t\t\t\t\tthis.elucidatorSolver.solveOperation(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"Description\":\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"Operation\": \"Simple_If\",\n\t\t\t\t\t\t\t\t\"Synopsis\": \"Test for \"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Steps\":\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"Namespace\": \"Logic\",\n\t\t\t\t\t\t\t\t\t\"Instruction\": \"if\",\n\n\t\t\t\t\t\t\t\t\t\"InputHashAddressMap\":\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t// This is ... dynamically assigning the address in the instruction\n\t\t\t\t\t\t\t\t\t\t\t// The complexity is astounding.\n\t\t\t\t\t\t\t\t\t\t\t\"leftValue\": `Record.${tmpSearchAddress}`,\n\t\t\t\t\t\t\t\t\t\t\t\"rightValue\": \"ComparisonState.SearchTerm\",\n\t\t\t\t\t\t\t\t\t\t\t\"comparator\": \"ComparisonState.Comparator\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"OutputHashAddressMap\": { \"truthinessResult\":\"keepRecord\" }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}, tmpFilterState);\n\t\t\t\t});\n\t\t\ttmpPrecedent.parseString(tmpAddress);\n\n\t\t\t// It is expected that the operation will mutate this to some truthy value\n\t\t\treturn tmpFilterState.keepRecord;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Count from the end to the beginning so splice doesn't %&%#$ up the array\n\t\t\t\tfor (let i = tmpInputArray.length - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Delete elements end to beginning\n\t\t\t\t\t\ttmpInputArray.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tdelete pObject[tmpObjectPropertyName];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tdelete pObject[pAddress];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverDeleteValue;\n},{\"./Manyfest-CleanWrapCharacters.js\":83,\"./Manyfest-LogToConsole.js\":85,\"elucidator\":31,\"precedent\":95}],88:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet libPrecedent = require('precedent');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - GetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverGetValue\n*/\nclass ManyfestObjectAddressResolverGetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.elucidatorSolver = false;\n\t\tthis.elucidatorSolverState = {};\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\tlet tmpPrecedent = new libPrecedent();\n\t\t// If we don't copy the string, precedent takes it out for good.\n\t\t// TODO: Consider adding a \"don't replace\" option for precedent\n\t\tlet tmpAddress = pAddress;\n\n\t\tif (!this.elucidatorSolver)\n\t\t{\n\t\t\t// Again, manage against circular dependencies\n\t\t\tlet libElucidator = require('elucidator');\n\t\t\tthis.elucidatorSolver = new libElucidator({}, this.logInfo, this.logError);\n\t\t}\n\n\t\tif (this.elucidatorSolver)\n\t\t{\n\t\t\t// This allows the magic filtration with elucidator configuration\n\t\t\t// TODO: We could pass more state in (e.g. parent address, object, etc.)\n\t\t\t// TODO: Discuss this metaprogramming AT LENGTH\n\t\t\tlet tmpFilterState = (\n\t\t\t\t{\n\t\t\t\t\tRecord: pRecord,\n\t\t\t\t\tkeepRecord: true\n\t\t\t\t});\n\n\t\t\t// This is about as complex as it gets.\n\t\t\t// TODO: Optimize this so it is only initialized once.\n\t\t\t// TODO: That means figuring out a healthy pattern for passing in state to this\n\t\t\ttmpPrecedent.addPattern('<<~~', '~~>>',\n\t\t\t\t(pInstructionHash) =>\n\t\t\t\t{\n\t\t\t\t\t// This is for internal config on the solution steps.  Right now config is not shared across steps.\n\t\t\t\t\tif (this.elucidatorSolverState.hasOwnProperty(pInstructionHash))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpFilterState.SolutionState = this.elucidatorSolverState[pInstructionHash];\n\t\t\t\t\t}\n\t\t\t\t\tthis.elucidatorSolver.solveInternalOperation('Custom', pInstructionHash, tmpFilterState);\n\t\t\t\t});\n\t\t\ttmpPrecedent.addPattern('<<~?', '?~>>',\n\t\t\t\t(pMagicSearchExpression) =>\n\t\t\t\t{\n\t\t\t\t\tif (typeof(pMagicSearchExpression) !== 'string')\n\t\t\t\t\t{\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// This expects a comma separated expression:\n\t\t\t\t\t//     Some.Address.In.The.Object,==,Search Term to Match\n\t\t\t\t\tlet tmpMagicComparisonPatternSet = pMagicSearchExpression.split(',');\n\n\t\t\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\t\t\t\t\tlet tmpSearchComparator = tmpMagicComparisonPatternSet[1];\n\t\t\t\t\tlet tmpSearchValue = tmpMagicComparisonPatternSet[2];\n\n\t\t\t\t\ttmpFilterState.ComparisonState = (\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tSearchAddress: tmpSearchAddress,\n\t\t\t\t\t\t\tComparator: tmpSearchComparator,\n\t\t\t\t\t\t\tSearchTerm: tmpSearchValue\n\t\t\t\t\t\t});\n\n\t\t\t\t\tthis.elucidatorSolver.solveOperation(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"Description\":\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"Operation\": \"Simple_If\",\n\t\t\t\t\t\t\t\t\"Synopsis\": \"Test for \"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Steps\":\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"Namespace\": \"Logic\",\n\t\t\t\t\t\t\t\t\t\"Instruction\": \"if\",\n\n\t\t\t\t\t\t\t\t\t\"InputHashAddressMap\":\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t// This is ... dynamically assigning the address in the instruction\n\t\t\t\t\t\t\t\t\t\t\t// The complexity is astounding.\n\t\t\t\t\t\t\t\t\t\t\t\"leftValue\": `Record.${tmpSearchAddress}`,\n\t\t\t\t\t\t\t\t\t\t\t\"rightValue\": \"ComparisonState.SearchTerm\",\n\t\t\t\t\t\t\t\t\t\t\t\"comparator\": \"ComparisonState.Comparator\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"OutputHashAddressMap\": { \"truthinessResult\":\"keepRecord\" }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}, tmpFilterState);\n\t\t\t\t});\n\t\t\ttmpPrecedent.parseString(tmpAddress);\n\n\t\t\t// It is expected that the operation will mutate this to some truthy value\n\t\t\treturn tmpFilterState.keepRecord;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\tlet tmpOutputArray = [];\n\t\t\t\tfor (let i = 0; i < tmpInputArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOutputArray.push(tmpInputArray[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpOutputArray;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn pObject[tmpObjectPropertyName];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\treturn pObject[pAddress];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverGetValue;\n},{\"./Manyfest-CleanWrapCharacters.js\":83,\"./Manyfest-LogToConsole.js\":85,\"elucidator\":31,\"precedent\":95}],89:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet libPrecedent = require('precedent');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - SetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressSetValue\n*/\nclass ManyfestObjectAddressSetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.elucidatorSolver = false;\n\t\tthis.elucidatorSolverState = {};\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyReference] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the time in recursion to set the value in the object\n\t\t\t\tpObject[pAddress] = pValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressSetValue;\n},{\"./Manyfest-CleanWrapCharacters.js\":83,\"./Manyfest-LogToConsole.js\":85,\"precedent\":95}],90:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Generation\n*\n* Automagically generate addresses and properties based on a passed-in object,\n* to be used for easy creation of schemas.  Meant to simplify the lives of\n* developers wanting to create schemas without typing a bunch of stuff.\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressGeneration\n*/\nclass ManyfestObjectAddressGeneration\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// generateAddressses\n\t//\n\t// This flattens an object into a set of key:value pairs for *EVERY SINGLE\n\t// POSSIBLE ADDRESS* in the object.  It can get ... really insane really\n\t// quickly.  This is not meant to be used directly to generate schemas, but\n\t// instead as a starting point for scripts or UIs.\n\t//\n\t// This will return a mega set of key:value pairs with all possible schema\n\t// permutations and default values (when not an object) and everything else.\n\tgenerateAddressses (pObject, pBaseAddress, pSchema)\n\t{\n\t\tlet tmpBaseAddress = (typeof(pBaseAddress) == 'string') ? pBaseAddress : '';\n\t\tlet tmpSchema = (typeof(pSchema) == 'object') ? pSchema : {};\n\n\t\tlet tmpObjectType = typeof(pObject);\n\n\t\tlet tmpSchemaObjectEntry = (\n\t\t\t{\n\t\t\t\tAddress: tmpBaseAddress,\n\t\t\t\tHash: tmpBaseAddress,\n\t\t\t\tName: tmpBaseAddress,\n\t\t\t\t// This is so scripts and UI controls can force a developer to opt-in.\n\t\t\t\tInSchema: false\n\t\t\t}\n\t\t)\n\n\t\tif ((tmpObjectType == 'object') && (pObject == null))\n\t\t{\n\t\t\ttmpObjectType = 'null';\n\t\t}\n\n\t\tswitch(tmpObjectType)\n\t\t{\n\t\t\tcase 'string':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'String';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\tcase 'bigint':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Number';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\tcase 'null':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Any';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif (Array.isArray(pObject))\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Array';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < pObject.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[i], `${tmpBaseAddress}[${i}]`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Object';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t\ttmpBaseAddress += '.';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectProperties = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectProperties.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[tmpObjectProperties[i]], `${tmpBaseAddress}${tmpObjectProperties[i]}`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'symbol':\n\t\t\tcase 'function':\n\t\t\t\t// Symbols and functions neither recurse nor get added to the schema\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tmpSchema;\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressGeneration;\n},{\"./Manyfest-LogToConsole.js\":85}],91:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Schema Manipulation Functions\n*\n* @class ManyfestSchemaManipulation\n*/\nclass ManyfestSchemaManipulation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n    // This translates the default address mappings to something different.\n    //\n    // For instance you can pass in manyfest schema descriptor object:\n    // \t{\n\t//\t  \"Address.Of.a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t//\t  \"Address.Of.b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t//  }\n    //\n    //\n    // And then an address mapping (basically a Hash->Address map)\n    //  {\n    //    \"a\": \"New.Address.Of.a\",\n    //    \"b\": \"New.Address.Of.b\"\n    //  }\n    //\n    // NOTE: This mutates the schema object permanently, altering the base hash.\n    //       If there is a collision with an existing address, it can lead to overwrites.\n    // TODO: Discuss what should happen on collisions.\n\tresolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\tif (typeof(pManyfestSchemaDescriptors) != 'object')\n\t\t{\n\t\t\tthis.logError(`Attempted to resolve address mapping but the descriptor was not an object.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof(pAddressMapping) != 'object')\n\t\t{\n\t\t\t// No mappings were passed in\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the arrays of both the schema definition and the hash mapping\n\t\tlet tmpManyfestAddresses = Object.keys(pManyfestSchemaDescriptors);\n\t\tlet tmpHashMapping = {};\n\t\ttmpManyfestAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tif (pManyfestSchemaDescriptors[pAddress].hasOwnProperty('Hash'))\n\t\t\t\t{\n\t\t\t\t\ttmpHashMapping[pManyfestSchemaDescriptors[pAddress].Hash] = pAddress;\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet tmpAddressMappingSet = Object.keys(pAddressMapping);\n\n\t\ttmpAddressMappingSet.forEach(\n\t\t\t(pInputAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpNewDescriptorAddress = pAddressMapping[pInputAddress];\n\t\t\t\tlet tmpOldDescriptorAddress = false;\n\t\t\t\tlet tmpDescriptor = false;\n\n\t\t\t\t// See if there is a matching descriptor either by Address directly or Hash\n\t\t\t\tif (pManyfestSchemaDescriptors.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = pInputAddress;\n\t\t\t\t}\n\t\t\t\telse if (tmpHashMapping.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = tmpHashMapping[pInputAddress];\n\t\t\t\t}\n\n\t\t\t\t// If there was a matching descriptor in the manifest, store it in the temporary descriptor\n\t\t\t\tif (tmpOldDescriptorAddress)\n\t\t\t\t{\n\t\t\t\t\ttmpDescriptor = pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t\tdelete pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Create a new descriptor!  Map it to the input address.\n\t\t\t\t\ttmpDescriptor = { Hash:pInputAddress };\n\t\t\t\t}\n\n\t\t\t\t// Now re-add the descriptor to the manyfest schema\n\t\t\t\tpManyfestSchemaDescriptors[tmpNewDescriptorAddress] = tmpDescriptor;\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tsafeResolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\t// This returns the descriptors as a new object, safely remapping without mutating the original schema Descriptors\n\t\tlet tmpManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptors));\n\t\tthis.resolveAddressMappings(tmpManyfestSchemaDescriptors, pAddressMapping);\n\t\treturn tmpManyfestSchemaDescriptors;\n\t}\n\n\tmergeAddressMappings(pManyfestSchemaDescriptorsDestination, pManyfestSchemaDescriptorsSource)\n\t{\n\t\tif ((typeof(pManyfestSchemaDescriptorsSource) != 'object') || (typeof(pManyfestSchemaDescriptorsDestination) != 'object'))\n\t\t{\n\t\t\tthis.logError(`Attempted to merge two schema descriptors but both were not objects.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpSource = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsSource));\n\t\tlet tmpNewManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsDestination));\n\n\t\t// The first passed-in set of descriptors takes precedence.\n\t\tlet tmpDescriptorAddresses = Object.keys(tmpSource);\n\n\t\ttmpDescriptorAddresses.forEach(\n\t\t\t(pDescriptorAddress) =>\n\t\t\t{\n\t\t\t\tif (!tmpNewManyfestSchemaDescriptors.hasOwnProperty(pDescriptorAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpNewManyfestSchemaDescriptors[pDescriptorAddress] = tmpSource[pDescriptorAddress];\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpNewManyfestSchemaDescriptors;\n\t}\n}\n\nmodule.exports = ManyfestSchemaManipulation;\n},{\"./Manyfest-LogToConsole.js\":85}],92:[function(require,module,exports){\n/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\nlet libPrecedent = require('precedent');\n\nlet libHashTranslation = require('./Manyfest-HashTranslation.js');\nlet libObjectAddressCheckAddressExists = require('./Manyfest-ObjectAddress-CheckAddressExists.js');\nlet libObjectAddressGetValue = require('./Manyfest-ObjectAddress-GetValue.js');\nlet libObjectAddressSetValue = require('./Manyfest-ObjectAddress-SetValue.js');\nlet libObjectAddressDeleteValue = require('./Manyfest-ObjectAddress-DeleteValue.js');\nlet libObjectAddressGeneration = require('./Manyfest-ObjectAddressGeneration.js');\nlet libSchemaManipulation = require('./Manyfest-SchemaManipulation.js');\n\n\n/**\n* Manyfest object address-based descriptions and manipulations.\n*\n* @class Manyfest\n*/\nclass Manyfest\n{\n\tconstructor(pManifest, pInfoLog, pErrorLog, pOptions)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n\t\t// Create an object address resolver and map in the functions\n\t\tthis.objectAddressCheckAddressExists = new libObjectAddressCheckAddressExists(this.logInfo, this.logError);\n\t\tthis.objectAddressGetValue = new libObjectAddressGetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressSetValue = new libObjectAddressSetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressDeleteValue = new libObjectAddressDeleteValue(this.logInfo, this.logError);\n\n\t\tthis.options = (\n\t\t\t{\n\t\t\t\tstrict: false,\n\t\t\t\tdefaultValues:\n\t\t\t\t\t{\n\t\t\t\t\t\t\"String\": \"\",\n\t\t\t\t\t\t\"Number\": 0,\n\t\t\t\t\t\t\"Float\": 0.0,\n\t\t\t\t\t\t\"Integer\": 0,\n\t\t\t\t\t\t\"Boolean\": false,\n\t\t\t\t\t\t\"Binary\": 0,\n\t\t\t\t\t\t\"DateTime\": 0,\n\t\t\t\t\t\t\"Array\": [],\n\t\t\t\t\t\t\"Object\": {},\n\t\t\t\t\t\t\"Null\": null\n\t\t\t\t\t}\n\t\t\t});\n\n\t\tthis.scope = undefined;\n\t\tthis.elementAddresses = undefined;\n\t\tthis.elementHashes = undefined;\n\t\tthis.elementDescriptors = undefined;\n\t\t// This can cause a circular dependency chain, so it only gets initialized if the schema specifically calls for it.\n\t\tthis.dataSolvers = undefined;\n\t\t// So solvers can use their own state\n\t\tthis.dataSolverState = undefined;\n\n\t\tthis.reset();\n\n\t\tif (typeof(pManifest) === 'object')\n\t\t{\n\t\t\tthis.loadManifest(pManifest);\n\t\t}\n\n\t\tthis.schemaManipulations = new libSchemaManipulation(this.logInfo, this.logError);\n\t\tthis.objectAddressGeneration = new libObjectAddressGeneration(this.logInfo, this.logError);\n\n\t\tthis.hashTranslations = new libHashTranslation(this.logInfo, this.logError);\n\t}\n\n\t/*************************************************************************\n\t * Schema Manifest Loading, Reading, Manipulation and Serialization Functions\n\t */\n\n\t// Reset critical manifest properties\n\treset()\n\t{\n\t\tthis.scope = 'DEFAULT';\n\t\tthis.elementAddresses = [];\n\t\tthis.elementHashes = {};\n\t\tthis.elementDescriptors = {};\n\t\tthis.dataSolvers = undefined;\n\t\tthis.dataSolverState = {};\n\n\t\tthis.libElucidator = undefined;\n\t}\n\n\tsetElucidatorSolvers(pElucidatorSolver, pElucidatorSolverState)\n\t{\n\t\tthis.objectAddressCheckAddressExists.elucidatorSolver = pElucidatorSolver;\n\t\tthis.objectAddressGetValue.elucidatorSolver = pElucidatorSolver;\n\t\tthis.objectAddressSetValue.elucidatorSolver = pElucidatorSolver;\n\t\tthis.objectAddressDeleteValue.elucidatorSolver = pElucidatorSolver;\n\n\t\tthis.objectAddressCheckAddressExists.elucidatorSolverState = pElucidatorSolverState;\n\t\tthis.objectAddressGetValue.elucidatorSolverState = pElucidatorSolverState;\n\t\tthis.objectAddressSetValue.elucidatorSolverState = pElucidatorSolverState;\n\t\tthis.objectAddressDeleteValue.elucidatorSolverState = pElucidatorSolverState;\n\t}\n\n\tclone()\n\t{\n\t\t// Make a copy of the options in-place\n\t\tlet tmpNewOptions = JSON.parse(JSON.stringify(this.options));\n\n\t\tlet tmpNewManyfest = new Manyfest(this.getManifest(), this.logInfo, this.logError, tmpNewOptions);\n\n\t\t// Import the hash translations\n\t\ttmpNewManyfest.hashTranslations.addTranslation(this.hashTranslations.translationTable);\n\n\t\treturn tmpNewManyfest;\n\t}\n\n\t// Deserialize a Manifest from a string\n\tdeserialize(pManifestString)\n\t{\n\t\t// TODO: Add guards for bad manifest string\n\t\treturn this.loadManifest(JSON.parse(pManifestString));\n\t}\n\n\t// Load a manifest from an object\n\tloadManifest(pManifest)\n\t{\n\t\tif (typeof(pManifest) !== 'object')\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading manifest; expecting an object but parameter was type ${typeof(pManifest)}.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (pManifest.hasOwnProperty('Scope'))\n\t\t{\n\t\t\tif (typeof(pManifest.Scope) === 'string')\n\t\t\t{\n\t\t\t\tthis.scope = pManifest.Scope;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest; expecting a string but property was type ${typeof(pManifest.Scope)}.`, pManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest object.  Property \"Scope\" does not exist in the root of the object.`, pManifest);\n\t\t}\n\n\t\tif (pManifest.hasOwnProperty('Descriptors'))\n\t\t{\n\t\t\tif (typeof(pManifest.Descriptors) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpDescriptionAddresses = Object.keys(pManifest.Descriptors);\n\t\t\t\tfor (let i = 0; i < tmpDescriptionAddresses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.addDescriptor(tmpDescriptionAddresses[i], pManifest.Descriptors[tmpDescriptionAddresses[i]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading description object from manifest object.  Expecting an object in 'Manifest.Descriptors' but the property was type ${typeof(pManifest.Descriptors)}.`, pManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object description from manifest object.  Property \"Descriptors\" does not exist in the root of the Manifest object.`, pManifest);\n\t\t}\n\n\t\t// This seems like it would create a circular dependency issue but it only goes as deep as the schema defines Solvers\n\t\tif ((pManifest.hasOwnProperty('Solvers')) && (typeof(pManifest.Solvers) == 'object'))\n\t\t{\n\t\t\t// There are elucidator solvers passed-in, so we will create one to filter data.\n\t\t\tlet libElucidator = require('elucidator');\n\t\t\t// WARNING THESE CAN MUTATE THE DATA\n\t\t\t\t// The pattern for the solver is: {<~~SolverName~~>} anywhere in a property.\n\t\t\t\t//   Yes, this means your Javascript elements can't have my self-styled jellyfish brackets in them.\n\t\t\t\t//   This does, though, mean we can filter at multiple layers safely.\n\t\t\t\t//   Because these can be put at any address\n\t\t\t// The solver themselves:\n\t\t\t\t//   They are passed-in an object, and the current record is in the Record subobject.\n\t\t\t\t//   Basic operations can just write to the root object but...\n\t\t\t\t//   IF YOU PERMUTE THE Record SUBOBJECT YOU CAN AFFECT RECURSION\n\t\t\t// This is mostly meant for if statements to filter.\n\t\t\t\t//   Basically on aggregation, if a filter is set it will set \"keep record\" to true and let the solver decide differently.\n\t\t\tthis.dataSolvers = new libElucidator(pManifest.Solvers, this.logInfo, this.logError);\n\n\t\t\t// Load the solver state in so each instruction can have internal config\n\t\t\t// TODO: Should this just be a part of the lower layer pattern?\n\t\t\tlet tmpSolverKeys = Object.keys(pManifest.Solvers)\n\t\t\tfor (let i = 0; i < tmpSolverKeys.length; i++)\n\t\t\t{\n\t\t\t\tthis.dataSolverState[tmpSolverKeys] = pManifest.Solvers[tmpSolverKeys[i]];\n\t\t\t}\n\n\t\t\tthis.setElucidatorSolvers(this.dataSolvers, this.dataSolverState);\n\t\t}\n\t}\n\n\t// Serialize the Manifest to a string\n\t// TODO: Should this also serialize the translation table?\n\tserialize()\n\t{\n\t\treturn JSON.stringify(this.getManifest());\n\t}\n\n\tgetManifest()\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tScope: this.scope,\n\t\t\t\tDescriptors: JSON.parse(JSON.stringify(this.elementDescriptors))\n\t\t\t});\n\t}\n\n\t// Add a descriptor to the manifest\n\taddDescriptor(pAddress, pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) === 'object')\n\t\t{\n\t\t\t// Add the Address into the Descriptor if it doesn't exist:\n\t\t\tif (!pDescriptor.hasOwnProperty('Address'))\n\t\t\t{\n\t\t\t\tpDescriptor.Address = pAddress;\n\t\t\t}\n\n\t\t\tif (!this.elementDescriptors.hasOwnProperty(pAddress))\n\t\t\t{\n\t\t\t\tthis.elementAddresses.push(pAddress);\n\t\t\t}\n\n\t\t\t// Add the element descriptor to the schema\n\t\t\tthis.elementDescriptors[pAddress] = pDescriptor;\n\n\t\t\t// Always add the address as a hash\n\t\t\tthis.elementHashes[pAddress] = pAddress;\n\n\t\t\tif (pDescriptor.hasOwnProperty('Hash'))\n\t\t\t{\n\t\t\t\t// TODO: Check if this is a good idea or not..\n\t\t\t\t//       Collisions are bound to happen with both representations of the address/hash in here and developers being able to create their own hashes.\n\t\t\t\tthis.elementHashes[pDescriptor.Hash] = pAddress;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpDescriptor.Hash = pAddress;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object descriptor for address '${pAddress}' from manifest object.  Expecting an object but property was type ${typeof(pDescriptor)}.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetDescriptorByHash(pHash)\n\t{\n\t\treturn this.getDescriptor(this.resolveHashAddress(pHash));\n\t}\n\n\tgetDescriptor(pAddress)\n\t{\n\t\treturn this.elementDescriptors[pAddress];\n\t}\n\n\t// execute an action function for each descriptor\n\teachDescriptor(fAction)\n\t{\n        let tmpDescriptorAddresses = Object.keys(this.elementDescriptors);\n        for (let i = 0; i < tmpDescriptorAddresses.length; i++)\n        {\n            fAction(this.elementDescriptors[tmpDescriptorAddresses[i]]);\n        }\n\n\t}\n\n\t/*************************************************************************\n\t * Beginning of Object Manipulation (read & write) Functions\n\t */\n\t// Check if an element exists by its hash\n\tcheckAddressExistsByHash (pObject, pHash)\n\t{\n\t\treturn this.checkAddressExists(pObject,this.resolveHashAddress(pHash));\n\t}\n\n\t// Check if an element exists at an address\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\treturn this.objectAddressCheckAddressExists.checkAddressExists(pObject, pAddress);\n\t}\n\n\t// Turn a hash into an address, factoring in the translation table.\n\tresolveHashAddress(pHash)\n\t{\n\t\tlet tmpAddress = undefined;\n\n\t\tlet tmpInElementHashTable = this.elementHashes.hasOwnProperty(pHash);\n\t\tlet tmpInTranslationTable = this.hashTranslations.translationTable.hasOwnProperty(pHash);\n\n\t\t// The most straightforward: the hash exists, no translations.\n\t\tif (tmpInElementHashTable && !tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[pHash];\n\t\t}\n\t\t// There is a translation from one hash to another, and, the elementHashes contains the pointer end\n\t\telse if (tmpInTranslationTable && this.elementHashes.hasOwnProperty(this.hashTranslations.translate(pHash)))\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[this.hashTranslations.translate(pHash)];\n\t\t}\n\t\t// Use the level of indirection only in the Translation Table\n\t\telse if (tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.hashTranslations.translate(pHash);\n\t\t}\n\t\t// Just treat the hash as an address.\n\t\t// TODO: Discuss this ... it is magic but controversial\n\t\telse\n\t\t{\n\t\t\ttmpAddress = pHash;\n\t\t}\n\n\t\treturn tmpAddress;\n\t}\n\n\t// Get the value of an element by its hash\n\tgetValueByHash (pObject, pHash)\n\t{\n\t\tlet tmpValue = this.getValueAtAddress(pObject, this.resolveHashAddress(pHash));\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptorByHash(pHash));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\tlet tmpValue = this.objectAddressGetValue.getValueAtAddress(pObject, pAddress);\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptor(pAddress));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Set the value of an element by its hash\n\tsetValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.setValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressSetValue.setValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Delete the value of an element by its hash\n\tdeleteValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.deleteValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressDeleteValue.deleteValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Validate the consistency of an object against the schema\n\tvalidate(pObject)\n\t{\n\t\tlet tmpValidationData =\n\t\t{\n\t\t\tError: null,\n\t\t\tErrors: [],\n\t\t\tMissingElements:[]\n\t\t};\n\n\t\tif (typeof(pObject) !== 'object')\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Expected passed in object to be type object but was passed in ${typeof(pObject)}`);\n\t\t}\n\n\t\tlet addValidationError = (pAddress, pErrorMessage) =>\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Element at address \"${pAddress}\" ${pErrorMessage}.`);\n\t\t};\n\n\t\t// Now enumerate through the values and check for anomalies based on the schema\n\t\tfor (let i = 0; i < this.elementAddresses.length; i++)\n\t\t{\n\t\t\tlet tmpDescriptor = this.getDescriptor(this.elementAddresses[i]);\n\t\t\tlet tmpValueExists = this.checkAddressExists(pObject, tmpDescriptor.Address);\n\t\t\tlet tmpValue = this.getValueAtAddress(pObject, tmpDescriptor.Address);\n\n\t\t\tif ((typeof(tmpValue) == 'undefined') || !tmpValueExists)\n\t\t\t{\n\t\t\t\t// This will technically mean that `Object.Some.Value = undefined` will end up showing as \"missing\"\n\t\t\t\t// TODO: Do we want to do a different message based on if the property exists but is undefined?\n\t\t\t\ttmpValidationData.MissingElements.push(tmpDescriptor.Address);\n\t\t\t\tif (tmpDescriptor.Required || this.options.strict)\n\t\t\t\t{\n\t\t\t\t\taddValidationError(tmpDescriptor.Address, 'is flagged REQUIRED but is not set in the object');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now see if there is a data type specified for this element\n\t\t\tif (tmpDescriptor.DataType)\n\t\t\t{\n\t\t\t\tlet tmpElementType = typeof(tmpValue);\n\t\t\t\tswitch(tmpDescriptor.DataType.toString().trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpValueString = tmpValue.toString();\n\t\t\t\t\t\t\tif (tmpValueString.indexOf('.') > -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// TODO: Is this an error?\n\t\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but has a decimal point in the number.`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DateTime':\n\t\t\t\t\t\tlet tmpValueDate = new Date(tmpValue);\n\t\t\t\t\t\tif (tmpValueDate.toString() == 'Invalid Date')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is not parsable as a Date by Javascript`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Check if this is a string, in the default case\n\t\t\t\t\t\t// Note this is only when a DataType is specified and it is an unrecognized data type.\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} (which auto-converted to String because it was unrecognized) but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpValidationData;\n\t}\n\n\t// Returns a default value, or, the default value for the data type (which is overridable with configuration)\n\tgetDefaultValue(pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) != 'object')\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (pDescriptor.hasOwnProperty('Default'))\n\t\t{\n\t\t\treturn pDescriptor.Default;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Default to a null if it doesn't have a type specified.\n\t\t\t// This will ensure a placeholder is created but isn't misinterpreted.\n\t\t\tlet tmpDataType = (pDescriptor.hasOwnProperty('DataType')) ? pDescriptor.DataType : 'String';\n\t\t\tif (this.options.defaultValues.hasOwnProperty(tmpDataType))\n\t\t\t{\n\t\t\t\treturn this.options.defaultValues[tmpDataType];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// give up and return null\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enumerate through the schema and populate default values if they don't exist.\n\tpopulateDefaults(pObject, pOverwriteProperties)\n\t{\n\t\treturn this.populateObject(pObject, pOverwriteProperties,\n\t\t\t// This just sets up a simple filter to see if there is a default set.\n\t\t\t(pDescriptor) =>\n\t\t\t{\n\t\t\t\treturn pDescriptor.hasOwnProperty('Default');\n\t\t\t});\n\t}\n\n\t// Forcefully populate all values even if they don't have defaults.\n\t// Based on type, this can do unexpected things.\n\tpopulateObject(pObject, pOverwriteProperties, fFilter)\n\t{\n\t\t// Automatically create an object if one isn't passed in.\n\t\tlet tmpObject = (typeof(pObject) === 'object') ? pObject : {};\n\t\t// Default to *NOT OVERWRITING* properties\n\t\tlet tmpOverwriteProperties = (typeof(pOverwriteProperties) == 'undefined') ? false : pOverwriteProperties;\n\t\t// This is a filter function, which is passed the schema and allows complex filtering of population\n\t\t// The default filter function just returns true, populating everything.\n\t\tlet tmpFilterFunction = (typeof(fFilter) == 'function') ? fFilter : (pDescriptor) => { return true; };\n\n\t\tthis.elementAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpDescriptor = this.getDescriptor(pAddress);\n\t\t\t\t// Check the filter function to see if this is an address we want to set the value for.\n\t\t\t\tif (tmpFilterFunction(tmpDescriptor))\n\t\t\t\t{\n\t\t\t\t\t// If we are overwriting properties OR the property does not exist\n\t\t\t\t\tif (tmpOverwriteProperties || !this.checkAddressExists(tmpObject, pAddress))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setValueAtAddress(tmpObject, pAddress, this.getDefaultValue(tmpDescriptor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpObject;\n\t}\n};\n\nmodule.exports = Manyfest;\n},{\"./Manyfest-HashTranslation.js\":84,\"./Manyfest-LogToConsole.js\":85,\"./Manyfest-ObjectAddress-CheckAddressExists.js\":86,\"./Manyfest-ObjectAddress-DeleteValue.js\":87,\"./Manyfest-ObjectAddress-GetValue.js\":88,\"./Manyfest-ObjectAddress-SetValue.js\":89,\"./Manyfest-ObjectAddressGeneration.js\":90,\"./Manyfest-SchemaManipulation.js\":91,\"elucidator\":31,\"precedent\":95}],93:[function(require,module,exports){\n/*global define:false */\n/**\n * Copyright 2012-2017 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.5\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n\n        // This needs to use a string cause otherwise since 0 is falsey\n        // mousetrap will never fire for numpad 0 pressed as part of a keydown\n        // event.\n        //\n        // @see https://github.com/ccampbell/mousetrap/pull/258\n        _MAP[i + 96] = i.toString();\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // Events originating from a shadow DOM are re-targetted and `e.target` is the shadow host,\n        // not the initial event target in the shadow tree. Note that not all events cross the\n        // shadow boundary.\n        // For shadow trees with `mode: 'open'`, the initial event target is the first element in\n        // the event’s composed path. For shadow trees with `mode: 'closed'`, the initial event\n        // target cannot be obtained.\n        if ('composedPath' in e && typeof e.composedPath === 'function') {\n            // For open shadow trees, update `element` so that the following check works.\n            var initialEventTarget = e.composedPath()[0];\n            if (initialEventTarget !== e.target) {\n                element = initialEventTarget;\n            }\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n\n},{}],94:[function(require,module,exports){\n(function (process){(function (){\n// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":98}],95:[function(require,module,exports){\n/**\n* Precedent Meta-Templating\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Process text streams, parsing out meta-template expressions.\n*/\nvar libWordTree = require(`./WordTree.js`);\nvar libStringParser = require(`./StringParser.js`);\n\nclass Precedent\n{\n\t/**\n\t * Precedent Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser();\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData);\n\t}\n}\n\nmodule.exports = Precedent;\n\n},{\"./StringParser.js\":96,\"./WordTree.js\":97}],96:[function(require,module,exports){\n/**\n* String Parser\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: false,\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchOutputBuffer: ''\n\t\t});\n\t}\n\n\t/**\n\t * Assign a node of the parser tree to be the next potential match.\n\t * If the node has a PatternEnd property, it is a valid match and supercedes the last valid match (or becomes the initial match).\n\t * @method assignNode\n\t * @param {Object} pNode - A node on the parse tree to assign\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tassignNode (pNode, pParserState)\n\t{\n\t\tpParserState.PatternMatch = pNode;\n\n\t\t// If the pattern has a END we can assume it has a parse function...\n\t\tif (pParserState.PatternMatch.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\t// ... this is the legitimate start of a pattern.\n\t\t\tpParserState.Pattern = pParserState.PatternMatch;\n\t\t}\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\n\t/**\n\t * Check if the pattern has ended.  If it has, properly flush the buffer and start looking for new patterns.\n\t * @method checkPatternEnd\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tcheckPatternEnd (pParserState, pData)\n\t{\n\t\tif ((pParserState.OutputBuffer.length >= pParserState.Pattern.PatternEnd.length+pParserState.Pattern.PatternStart.length) &&\n\t\t\t(pParserState.OutputBuffer.substr(-pParserState.Pattern.PatternEnd.length) === pParserState.Pattern.PatternEnd))\n\t\t{\n\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStart.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStart.length+pParserState.Pattern.PatternEnd.length)), pData);\n\t\t\t// Flush the output buffer.\n\t\t\tthis.flushOutputBuffer(pParserState);\n\t\t\t// End pattern mode\n\t\t\tpParserState.Pattern = false;\n\t\t\tpParserState.PatternMatch = false;\n\t\t}\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// (1) If we aren't in a pattern match, and we aren't potentially matching, and this may be the start of a new pattern....\n\t\tif (!pParserState.PatternMatch && pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t{\n\t\t\t// ... assign the node as the matched node.\n\t\t\tthis.assignNode(pParserState.ParseTree[pCharacter], pParserState);\n\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t}\n\t\t// (2) If we are in a pattern match (actively seeing if this is part of a new pattern token)\n\t\telse if (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern has a subpattern with this key\n\t\t\tif (pParserState.PatternMatch.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// Continue matching patterns.\n\t\t\t\tthis.assignNode(pParserState.PatternMatch[pCharacter], pParserState);\n\t\t\t}\n\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\tif (pParserState.Pattern)\n\t\t\t{\n\t\t\t\t// ... Check if this is the end of the pattern (if we are matching a valid pattern)...\n\t\t\t\tthis.checkPatternEnd(pParserState, pData);\n\t\t\t}\n\t\t}\n\t\t// (3) If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\telse\n\t\t{\n\t\t\tpParserState.Output += pCharacter;\n\t\t}\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second paramter\n\t */\n\tparseString (pString, pParseTree, pData)\n\t{\n\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\tfor (var i = 0; i < pString.length; i++)\n\t\t{\n\t\t\t// TODO: This is not fast.\n\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData);\n\t\t}\n\n\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\treturn tmpParserState.Output;\n\t}\n}\n\nmodule.exports = StringParser;\n\n},{}],97:[function(require,module,exports){\n/**\n* Word Tree\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\t\n\t/** \n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - The index of the character in the pattern\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern, pIndex)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern[pIndex]))\n\t\t\tpTree[pPattern[pIndex]] = {};\n\t\t\n\t\treturn pTree[pPattern[pIndex]];\n\t}\n\t\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {number} pParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, pParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t\treturn false;\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t\treturn false;\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart, i);\n\n\t\ttmpLeaf.PatternStart = pPatternStart;\n\t\ttmpLeaf.PatternEnd = ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length > 0)) ? pPatternEnd : pPatternStart;\n\t\ttmpLeaf.Parse = (typeof(pParser) === 'function') ? pParser : \n\t\t\t\t\t\t(typeof(pParser) === 'string') ? () => { return pParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n\n},{}],98:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],99:[function(require,module,exports){\n(function (setImmediate,clearImmediate){(function (){\nvar nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n}).call(this)}).call(this,require(\"timers\").setImmediate,require(\"timers\").clearImmediate)\n\n},{\"process/browser.js\":98,\"timers\":99}],100:[function(require,module,exports){\n/**\n* Pict browser shim loader\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n// Load the pict module into the browser global automatically.\nconst libPict = require('./Pict.js');\n\nif (typeof(window) === 'object')\n{\n    window.Pict = libPict;\n}\n\nmodule.exports = libPict;\n},{\"./Pict.js\":104}],101:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst libElucidator = require('elucidator');\n\nclass FableServiceElucidator extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Solver';\n\n        this.solver = new libElucidator(this.options);\n\t}\n}\n\nmodule.exports = FableServiceElucidator;\n},{\"elucidator\":31,\"fable\":79}],102:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst libInformary = require('informary');\n\nclass FableServiceInformary extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n                super(pFable, pOptions, pServiceHash);\n\n                this.serviceType = 'Informary';\n\n                this.informary = new libInformary(this.options.Settings, this.options.Context, this.options.ContextGUID);\n\t}\n}\n\nmodule.exports = FableServiceInformary;\n},{\"fable\":79,\"informary\":81}],103:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst libManyfest = require('manyfest');\n\nclass FableServiceManyfest extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Manifest';\n\n        this.manyfest = false;\n\n        if (JSON.stringify(this.options) != '{}')\n        {\n            this.manyfest = new libManyfest(this.options);\n        }\n        else\n        {\n            this.manyfest = new libManyfest();\n        }\n\n        // Kinda the same thing, yo\n        this.manifest = this.manyfest;\n\t}\n}\n\nmodule.exports = FableServiceManyfest;\n},{\"fable\":79,\"manyfest\":92}],104:[function(require,module,exports){\n/**\n* Pict browser shim loader\n* @license MIT\n* @author <steven@velozo.com>\n*/\nconst libFable = require('fable');\n\nconst libFableServiceManyfest = require('./Pict-Fable-Service-Manyfest.js');\nconst libFableServiceElucidator = require('./Pict-Fable-Service-Elucidator.js');\nconst libFableServiceInformary = require('./Pict-Fable-Service-Informary.js');\n\nconst libMouseTrap = require('mousetrap');\n\nclass Pict\n{\n\tconstructor(pOptions)\n\t{\n\t\tthis.fable = new libFable(pOptions);\n\n\t\tthis.log = this.fable.log;\n\t\tthis.settings = this.fable.settings;\n\n\t\tthis.serviceManager = this.fable.serviceManager;\n\n\t\tthis.fable.serviceManager.addServiceType('Manifest', libFableServiceManyfest);\n\t\tthis.fable.serviceManager.addServiceType('Solver', libFableServiceElucidator);\n\t\tthis.fable.serviceManager.addServiceType('Informary', libFableServiceInformary);\n\n\t\t// Register the services\n\t\tthis.defaultTemplateProcessor = this.fable.serviceManager.instantiateServiceProvider('MetaTemplate', {}, 'defaultTemplateProcessor');\n\t\tthis._DefaultTemplateMethodsInitialized = false;\n\n\t\tthis.manifestServiceProvider = this.fable.serviceManager.instantiateServiceProvider('Manifest', {}, 'defaultManifest');\n\t\tthis.manifest = this.manifestServiceProvider.manifest;\n\n\t\tthis._TemplateContainer = {};\n\n\t\tthis.appData = {};\n\t}\n\n\tinitializeTemplateMethods(fExtraTemplateMethods)\n\t{\n\t\tif (!this._DefaultTemplateMethodsInitialized)\n\t\t{\n\t\t\tthis.defaultTemplateProcessor.addPattern('{~Data:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpValue = this.manifest.getValueAtAddress({AppData: this.appData, Record: pData}, tmpHash);\n\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('undefined!');\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpValue;\n\t\t\t\t});\n\n\t\t\tthis.defaultTemplateProcessor.addPattern('{~Dollars:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpValue = this.manifest.getValueAtAddress({AppData: this.appData, Record: pData}, tmpHash);\n\n\t\t\t\t\treturn this.fable.DataArithmatic.formatterDollars(tmpValue);\n\t\t\t\t});\n\n\t\t\tthis.defaultTemplateProcessor.addPattern('{~Digits:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpValue = this.manifest.getValueAtAddress({AppData: this.appData, Record: pData}, tmpHash);\n\n\t\t\t\t\treturn this.fable.DataArithmatic.formatterAddCommasToNumber(this.fable.DataArithmatic.formatterRoundNumber(tmpValue, 2));\n\t\t\t\t});\n\n\t\t\tthis.defaultTemplateProcessor.addPattern('{~NotEmpty:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpHashParts = tmpHash.split('|');\n\n\t\t\t\t\tif (tmpHashParts.length != 2)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueAtAddress({AppData: this.appData, Record: pData}, tmpHashParts[0]);\n\n\t\t\t\t\t// For now just check truthiness\n\t\t\t\t\tif (tmpValue)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpHashParts[1];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tthis._DefaultTemplateMethodsInitialized = true;\n\t\t}\n\t}\n\n\tparseTemplate (pTemplateString, pData)\n\t{\n\t\treturn this.defaultTemplateProcessor.parseString(pTemplateString, pData);\n\t}\n};\n\nmodule.exports = Pict;\n},{\"./Pict-Fable-Service-Elucidator.js\":101,\"./Pict-Fable-Service-Informary.js\":102,\"./Pict-Fable-Service-Manyfest.js\":103,\"fable\":79,\"mousetrap\":93}]},{},[100])(100)\n});\n\n","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\nvar eachOfLimit = require('async.util.eachoflimit');\nvar withoutIndex = require('async.util.withoutindex');\n\nmodule.exports = function eachLimit(arr, limit, iterator, cb) {\n    return eachOfLimit(limit)(arr, withoutIndex(iterator), cb);\n};\n","'use strict';\n\nmodule.exports = function(tasks) {\n    function makeCallback(index) {\n        function fn() {\n            if (tasks.length) {\n                tasks[index].apply(null, arguments);\n            }\n            return fn.next();\n        }\n        fn.next = function() {\n            return (index < tasks.length - 1) ? makeCallback(index + 1) : null;\n        };\n        return fn;\n    }\n    return makeCallback(0);\n};\n","var once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar onlyOnce = require('async.util.onlyonce');\nvar keyIterator = require('async.util.keyiterator');\n\nmodule.exports = function eachOfLimit(limit) {\n    return function(obj, iterator, cb) {\n        cb = once(cb || noop);\n        obj = obj || [];\n        var nextKey = keyIterator(obj);\n        if (limit <= 0) {\n            return cb(null);\n        }\n        var done = false;\n        var running = 0;\n        var errored = false;\n\n        (function replenish() {\n            if (done && running <= 0) {\n                return cb(null);\n            }\n\n            while (running < limit && !errored) {\n                var key = nextKey();\n                if (key === null) {\n                    done = true;\n                    if (running <= 0) {\n                        cb(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iterator(obj[key], key, onlyOnce(function(err) {\n                    running -= 1;\n                    if (err) {\n                        cb(err);\n                        errored = true;\n                    } else {\n                        replenish();\n                    }\n                }));\n            }\n        })();\n    };\n};\n","'use strict';\nvar setImmediate = require('async.util.setimmediate');\nvar restParam = require('async.util.restparam');\n\nmodule.exports = function(fn) {\n    return restParam(function(args) {\n        var callback = args.pop();\n        args.push(function() {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate(function() {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        var sync = true;\n        fn.apply(this, args);\n        sync = false;\n    });\n};\n","'use strict';\n\nmodule.exports = Array.isArray || function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n","'use strict';\n\nvar isArray = require('async.util.isarray');\n\nmodule.exports = function isArrayLike(arr) {\n    return isArray(arr) || (\n        // has a positive integer length property\n        typeof arr.length === 'number' &&\n        arr.length >= 0 &&\n        arr.length % 1 === 0\n    );\n};\n","'use strict';\n\nvar _keys = require('async.util.keys');\nvar isArrayLike = require('async.util.isarraylike');\n\nmodule.exports = function keyIterator(coll) {\n    var i = -1;\n    var len;\n    var keys;\n    if (isArrayLike(coll)) {\n        len = coll.length;\n        return function next() {\n            i++;\n            return i < len ? i : null;\n        };\n    } else {\n        keys = _keys(coll);\n        len = keys.length;\n        return function next() {\n            i++;\n            return i < len ? keys[i] : null;\n        };\n    }\n};\n","'use strict';\n\nmodule.exports = Object.keys || function keys(obj) {\n    var _keys = [];\n    for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            _keys.push(k);\n        }\n    }\n    return _keys;\n};\n","'use strict';\n\nmodule.exports = function noop () {};\n","'use strict';\n\nmodule.exports = function once(fn) {\n    return function() {\n        if (fn === null) return;\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n","'use strict';\n\nmodule.exports = function only_once(fn) {\n    return function() {\n        if (fn === null) throw new Error('Callback was already called.');\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n","'use strict';\nmodule.exports = function restParam(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n        var length = Math.max(arguments.length - startIndex, 0);\n        var rest = new Array(length);\n        for (var index = 0; index < length; index++) {\n            rest[index] = arguments[index + startIndex];\n        }\n        switch (startIndex) {\n            case 0:\n                return func.call(this, rest);\n            case 1:\n                return func.call(this, arguments[0], rest);\n        }\n    };\n};\n","'use strict';\n\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\nvar fallback = function(fn) {\n    setTimeout(fn, 0);\n};\n\nmodule.exports = function setImmediate(fn) {\n    // not a direct alias for IE10 compatibility\n    return (_setImmediate || fallback)(fn);\n};\n","'use strict';\n\nmodule.exports = function withoutIndex(iterator) {\n    return function(value, index, callback) {\n        return iterator(value, callback);\n    };\n};\n","'use strict';\n\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar isArray = require('async.util.isarray');\nvar restParam = require('async.util.restparam');\nvar ensureAsync = require('async.util.ensureasync');\nvar iterator = require('async.iterator');\n\nmodule.exports = function(tasks, cb) {\n    cb = once(cb || noop);\n    if (!isArray(tasks)) return cb(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return cb();\n\n    function wrapIterator(iterator) {\n        return restParam(function(err, args) {\n            if (err) {\n                cb.apply(null, [err].concat(args));\n            } else {\n                var next = iterator.next();\n                if (next) {\n                    args.push(wrapIterator(next));\n                } else {\n                    args.push(cb);\n                }\n                ensureAsync(iterator).apply(null, args);\n            }\n        });\n    }\n    wrapIterator(iterator(tasks))();\n};\n","/**\n* Cache data structure with:\n*  - enumerable items\n*  - unique hash item access (if none is passed in, one is generated)\n*  - size (length) expiration\n*  - controllable expiration (e.g. keep in cache longer if older/less likely to change)\n*  - time-based expiration\n*  - custom expiration based on passed-in function\n*\n* Also:\n*  - built to work well with browserify\n*  - no dependencies at all\n*  - pet friendly\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nconst libLinkedList = require(`./LinkedList.js`);\n\nclass CashMoney\n{\n\tconstructor()\n\t{\n\t\t// The map of node objects by hash because Reasons.\n\t\tthis._HashMap = {};\n\n\t\tthis._List = new libLinkedList();\n\n\t\t// If the list gets over maxLength, we will automatically remove nodes on insertion.\n\t\tthis.maxLength = 0;\n\n\t\t// If cache entries get over this age, they are removed with prune\n\t\tthis.maxAge = 0;\n\t}\n\n\t// Add (or update) a node in the cache\n\tput(pData, pHash)\n\t{\n\t\t// If the hash of the record exists\n\t\tif (this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\t// Just update the hashed records datum\n\t\t\tthis._HashMap[pHash].Datum = pData;\n\t\t\treturn this._HashMap[pHash].Datum;\n\t\t}\n\n\t\tlet tmpNode = this._List.push(pData, pHash);\n\t\tthis._HashMap[tmpNode.Hash] = tmpNode;\n\n\t\t// Automatically prune if over length, but only prune this nodes worth.\n\t\tif (this.maxLength > 0   &&   this._List.length > this.maxLength)\n\t\t{\n\t\t\t// Pop it off the head of the list\n\t\t\ttmpNode = this._List.pop();\n\t\t\t// Also remove it from the hashmap\n\t\t\tdelete this._HashMap[tmpNode.Hash];\n\t\t}\n\n\t\t// Now some expiration properties on the node metadata... namely the birthdate in ms of the node\n\t\ttmpNode.Metadata.Created = +new Date();\n\n\t\treturn tmpNode.Datum;\n\t}\n\n\t// Reinvigorate a node based on hash, updating the timestamp and moving it to the head of the list (also removes custom metadata)\n\ttouch(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\t\t\n\t\t// Get the old node out of the list\n\t\tlet tmpNode = this._List.remove(this._HashMap[pHash]);\n\t\t// Remove it from the hash map\n\t\tdelete this._HashMap[pHash];\n\n\t\t// Now put it back, fresh.\n\t\treturn this.put(tmpNode.Datum, tmpNode.Hash);\n\t}\n\n\t// Expire a cached record based on hash\n\texpire(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\t\t\n\t\tlet tmpNode = this._HashMap[pHash];\n\n\t\t// Remove it from the list of cached records\n\t\ttmpNode = this._List.remove(tmpNode);\n\t\t// Also remove it from the hashmap\n\t\tdelete this._HashMap[tmpNode.Hash];\n\n\t\t// Return it in case the consumer wants to do anything with it\n\t\treturn tmpNode;\n\t}\n\n\t// Prune records from the cached set based on maxAge\n\tpruneBasedOnExpiration(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tif (this.maxAge < 1)\n\t\t\treturn fComplete(tmpRemovedRecords);\n\n\t\t// Now enumerate each record and remove any that are expired\n\t\tlet tmpNow = +new Date();\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\t// Expire the node if it is older than max age milliseconds\n\t\t\tif (tmpNow - this._HashMap[tmpKeys[i]].Metadata.Created >= this.maxAge)\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on maxLength\n\tpruneBasedOnLength(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\t// Pop records off until we have reached maxLength unless it's 0\n\t\tif (this.maxLength > 0)\n\t\t\twhile (this._List.length > this.maxLength)\n\t\t\t\ttmpRemovedRecords.push(this._List.pop());\n\n\t\treturn fComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on passed in pPruneFunction(pDatum, pHash, pNode) -- returning true expires it\n\tpruneCustom(fComplete, fPruneFunction, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\tlet tmpNode = this._HashMap[tmpKeys[i]];\n\t\t\t// Expire the node if the passed in function returns true\n\t\t\tif (fPruneFunction(tmpNode.Datum, tmpNode.Hash, tmpNode))\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\t\n\t// Prune the list down to the asserted rules (max age then max length if still too long)\n\tprune(fComplete)\n\t{\n\t\tlet tmpRemovedRecords = [];\n\n\t\t// If there are no cached records, we are done.\n\t\tif (this._List.length < 1)\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t\n\t\t// Now prune based on expiration time\n\t\tthis.pruneBasedOnExpiration((fExpirationPruneComplete)=>\n\t\t\t{\n\t\t\t\t// Now prune based on length, then return the removed records in the callback.\n\t\t\t\tthis.pruneBasedOnLength(fComplete, tmpRemovedRecords);\n\t\t\t}, tmpRemovedRecords);\n\t}\n\t\n\t// Read a datum by hash from the cache\n\tread(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\t\t\n\t\treturn this._HashMap[pHash].Datum;\n\t}\n\t\n\t// Get a low level node (including metadata statistics) by hash from the cache\n\tgetNode(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\t\t\n\t\treturn this._HashMap[pHash];\n\t}\n}\n\nmodule.exports = CashMoney;","/**\n* Double Linked List Node\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Linked List Node Prototype\n*\n* @class LinkedListNode\n* @constructor\n*/\n\nclass LinkedListNode\n{\n\tconstructor()\n\t{\n\t\tthis.Hash = false;\n\t\tthis.Datum = false;\n\n\t\t// This is where expiration and other elements are stored;\n\t\tthis.Metadata = {};\n\n\t\tthis.LeftNode = false;\n\t\tthis.RightNode = false;\n\n\t\t// To allow safe specialty operations on nodes\n\t\tthis.__ISNODE = true;\n\t}\n}\n\nmodule.exports = LinkedListNode;","\"use strict\"\n/**\n* Simple double linked list to hold the cache entries in, in order.\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module FeeFiFo\n*/\n\nconst libLinkedListNode = require('./LinkedList-Node.js');\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nclass LinkedList\n{\n\tconstructor()\n\t{\n\t\t// Total number of nodes ever processed by this ADT\n\t\tthis.totalNodes = 0;\n\n\t\t// The length of the set of nodes currently in the list\n\t\tthis.length = 0;\n\n\t\tthis.head = false;\n\t\tthis.tail = false;\n\t}\n\n\t// Create a node object.\n\tinitializeNode(pDatum, pHash)\n\t{\n\t\t// Don't allow undefined to be added to the list because of reasons\n\t\tif (typeof(pDatum) === 'undefined')\n\t\t\treturn false;\n\n\t\tthis.totalNodes++;\n\n\t\t// Get (or create) a unique hash\n\t\tlet tmpHash = (typeof(pHash) != 'undefined') ? pHash : `NODE[${this.totalNodes}]`;\n\n\t\tlet tmpNode = new libLinkedListNode();\n\n\t\ttmpNode.Hash = tmpHash;\n\t\ttmpNode.Datum = pDatum;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Add a node to the end (right of tail) of the list.\n\tappend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.tail.RightNode = tmpNode;\n\t\ttmpNode.LeftNode = this.tail;\n\t\tthis.tail = tmpNode;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Append to tail of list (FIFO)\n\tpush(pDatum, pHash)\n\t{\n\t\treturn this.append(pDatum, pHash);\n\t}\n\n\t// Add a node to the beginning (left of head) of the list.\n\tprepend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.head.LeftNode = tmpNode;\n\t\ttmpNode.RightNode = this.head;\n\t\tthis.head = tmpNode;\n\t\treturn tmpNode;\n\t}\n\n\t// Remove a node from the list\n\tremove(pNode)\n\t{\n\t\tif (typeof(pNode) === 'undefined')\n\t\t\treturn false;\n\n\t\tif (!pNode.__ISNODE)\n\t\t\treturn false;\n\n\t\tthis.length--;\n\n\t\t// Last element in list.  Empty it out.\n\t\tif (this.length < 1)\n\t\t{\n\t\t\tthis.head = false;\n\t\t\tthis.tail = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's somewhere in the middle, surgically remove it.\n\t\tif (pNode.LeftNode && pNode.RightNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = pNode.RightNode;\n\t\t\tpNode.RightNode.LeftNode = pNode.LeftNode;\n\n\t\t\tpNode.RightNode = false;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's the tail\n\t\tif (pNode.LeftNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = false;\n\t\t\tthis.tail = pNode.LeftNode;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It must be the head\n\t\tpNode.RightNode.LeftNode = false;\n\t\tthis.head = pNode.RightNode;\n\t\tpNode.RightNode = false;\n\t\treturn pNode;\n\t}\n\n\t// Remove the head of the list (FIFO)\n\tpop()\n\t{\n\t\treturn this.remove(this.head);\n\t}\n\n\t// Enumerate over each node IN ORDER, running the function fAction(pDatum, pHash, fCallback) then calling the function fComplete callback when done\n\teach(fAction, fComplete)\n\t{\n\t\tif (this.length < 1)\n\t\t\treturn fComplete();\n\n\t\tlet tmpNode = false;\n\n\t\tlet fIterator = (pError)=>\n\t\t{\n\t\t\t// If the user passed in a callback with an error, call their callback with the error\n\t\t\tif (pError)\n\t\t\t\treturn fComplete(pError);\n\n\t\t\t// If there is no node, this must be the initial run.\n\t\t\tif (!tmpNode)\n\t\t\t\ttmpNode = this.head;\n\t\t\t// Check if we are at the tail of the list\n\t\t\telse if (!tmpNode.RightNode)\n\t\t\t\treturn fComplete();\n\t\t\t// Proceed to the next node\n\t\t\telse\n\t\t\t\ttmpNode = tmpNode.RightNode;\n\n\t\t\t// Call the actual action\n\t\t\t// I hate this pattern because long tails eventually cause stack overflows.\n\t\t\tfAction(tmpNode.Datum, tmpNode.Hash, fIterator);\n\t\t};\n\n\t\t// Now kick off the iterator\n\t\treturn fIterator();\n\t}\n\n\t// Seek a specific node, 0 is the index of the first node.\n\tseek(pNodeIndex)\n\t{\n\t\tif (!pNodeIndex)\n\t\t\treturn false;\n\t\tif (this.length < 1)\n\t\t\treturn false;\n\t\tif (pNodeIndex >= this.length)\n\t\t\treturn false;\n\n\t\tlet tmpNode = this.head;\n\t\tfor (let i = 0; i < pNodeIndex; i++)\n\t\t{\n\t\t\ttmpNode = tmpNode.RightNode;\n\t\t}\n\n\t\treturn tmpNode;\n\t}\n}\n\nmodule.exports = LinkedList;","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n/**\n* Data Arithmatic\n*\n* @class DataArithmatic\n*/\nclass DataArithmatic\n{\n\tconstructor()\n\t{\n\t\t// Regular Expressions (so they don't have to be recompiled every time)\n\t\t// These could be defined as static, but I'm not sure if that will work with browserify ... and specifically the QT browser.\n\t\tthis._Regex_formatterInsertCommas = /.{1,3}/g;\n\t\t// Match Function:\n\t\t// function(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t\t// Thoughts about below:   /^([+-]?)(0*)(\\d+)(\\.(\\d+))?$/;\n\t\tthis._Regex_formatterAddCommasToNumber = /^([-+]?)(0?)(\\d+)(.?)(\\d+)$/g;\n\t\tthis._Regex_formatterDollarsRemoveCommas = /,/gi;\n\t\tthis._Regex_formatterCleanNonAlpha = /[^a-z0-9]/gi;\n\n\t\t// TODO: Potentially pull these in from a configuration.\n\t\t// TODO: Use locale data for this if it's defaults all the way down.\n\t\tthis._Value_MoneySign_Currency = '$';\n\t\tthis._Value_NaN_Currency = '--';\n\t\tthis._Value_GroupSeparator_Number = ',';\n\n\t\tthis._Value_Prefix_StringHash = 'HSH';\n\t\tthis._Value_Clean_formatterCleanNonAlpha = '_';\n\n\t\tthis._UseEngineStringStartsWith = (typeof(String.prototype.startsWith) === 'function');\n\t\tthis._UseEngineStringEndsWith = (typeof(String.prototype.endsWith) === 'function');\n\t}\n\n\n\t/*************************************************************************\n\t * String Manipulation and Comparison Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Reverse a string\n\t *\n\t * @param {string} pString - The string to reverse\n\t * @returns {string}\n\t */\n\tstringReverse (pString)\n\t{\n\t\t// TODO: Benchmark if there are faster ways we want to do this with all the newer JS stuff\n\t\t//       ... and if it will work with browserify in a clean way.\n\t    return pString.split('').reverse().join('');\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pStartIndex\n\t * @returns {*}\n\t */\n\tstringStartsWith (pString, pSearchString, pStartIndex)\n\t{\n\t\tif (this._UseEngineStringStartsWith)\n\t\t{\n\t\t\treturn pString.startsWith(pSearchString, pStartIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringStartsWith_Polyfill.call(pString, pSearchString, pStartIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pStartIndex - The index to start the search at\n\t * @returns {boolean}\n\t */\n\tstringStartsWith_Polyfill (pSearchString, pStartIndex)\n\t{\n\t\treturn this.slice(pStartIndex || 0, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pEndIndex\n\t * @returns {*}\n\t */\n\tstringEndsWith (pString, pSearchString, pEndIndex)\n\t{\n\t\tif (this._UseEngineStringEndsWith)\n\t\t{\n\t\t\treturn pString.endsWith(pSearchString, pEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringEndsWith_Polyfill.call(pString, pSearchString, pEndIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pEndIndex - The index to end the search at\n\t * @returns {boolean}\n\t */\n\tstringEndsWith_Polyfill (pSearchString, pEndIndex)\n\t{\n\t\t// This works much better than >= because\n\t\t// it compensates for NaN:\n\t\tif (!(pEndIndex < this.length))\n\t\t{\n\t\t\tpEndIndex = this.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpEndIndex |= 0; // round position\n\t\t}\n\t\treturn this.substr(pEndIndex - pSearchString.length, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Generate an insecure string hash.  Not meant to be secure, just a quick way to generate a hash for a string.  This is not a cryptographic hash.  Additional warranty and disclaimer ... this is not for passwords!\n\t *\n\t * @param {string} pString\n\t * @returns {string}\n\t */\n\tinsecureStringHash (pString)\n\t{\n\t    let tmpHash = 0;\n\t    let tmpStringLength = pString.length;\n\t    let tmpCharacterIndex = 0;\n\n\t    while (tmpCharacterIndex < tmpStringLength)\n\t    {\n\t        tmpHash = (tmpHash << 5) - tmpHash + pString.charCodeAt(tmpCharacterIndex++) | 0;\n\t    }\n\n\t    return `${this._Value_Prefix_StringHash}${tmpHash}`;\n\t}\n\n\t/**\n\t * Clean wrapping characters if they exist consistently around the string.  If they do not, the string is returned unchanged.\n\t *\n\t * @param {string} pWrapCharacter - The character expected as the wrapping character\n\t * @param {string} pString - the string to clean\n\t * @returns {string}\n\t */\n\tcleanEnclosureWrapCharacters (pWrapCharacter, pString)\n\t{\n\t\t// # Use case from ManyFest DSL:\n\t\t//\n\t\t// When a boxed property is passed in, it should have quotes of some\n\t\t// kind around it.\n\t\t//\n\t\t// For instance:\n\t\t// \t\tMyValues['Name']\n\t\t// \t\tMyValues[\"Age\"]\n\t\t// \t\tMyValues[`Cost`]\n\t\t//\n\t\t// This function is necessary to remove the wrapping quotes before object\n\t\t// resolution can occur.\n\t\tif (pString.startsWith(pWrapCharacter) && pString.endsWith(pWrapCharacter))\n\t\t{\n\t\t\treturn pString.substring(1, pString.length - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn pString;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {*} pString\n\t * @returns\n\t */\n\tcleanNonAlphaCharacters (pString)\n\t{\n\t    if ((typeof(pString) == 'string') && (pString != ''))\n\t    {\n\t        return pString.replace(this._Regex_formatterCleanNonAlpha, this._Value_Clean_formatterCleanNonAlpha);\n\t    }\n\t}\n\n\n\t/*************************************************************************\n\t * Number Formatting Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Insert commas every 3 characters from the right.  Used by formatterAddCommasToNumber().\n\t *\n\t * @param {*} pString\n\t * @returns {*}\n\t */\n\tformatterInsertCommas (pString)\n\t{\n\t    // Reverse, because it's easier to do things from the left, given arbitrary digit counts\n\t    let tmpReversed = this.stringReverse(pString);\n\t    // Add commas every three characters\n\t    let tmpReversedWithCommas = tmpReversed.match(this._Regex_formatterInsertCommas).join(',');\n\t    // Reverse again (back to normal direction)\n\t    return this.stringReverse(tmpReversedWithCommas);\n\t}\n\n\tprocessAddCommasToNumberRegex(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t{\n\t\t// If there was no decimal, the last capture grabs the final digit, so\n\t\t// we have to put it back together with the 'before' substring\n\t\treturn pSign + (pDecimal ? this.formatterInsertCommas(pBefore) + pDecimal + pAfter : this.formatterInsertCommas(pBefore + pAfter));\n\t}\n\n\t/**\n\t * Add Commas to a Number for readability.\n\t *\n\t * @param {*} pNumber\n\t * @returns {string}\n\t */\n\tformatterAddCommasToNumber (pNumber)\n\t{\n\t    // If the regex doesn't match, `replace` returns the string unmodified\n\t    return (pNumber.toString()).replace\n\t    (\n\t\t\tthis._Regex_formatterAddCommasToNumber,\n\t        this.processAddCommasToNumberRegex.bind(this)\n\t    );\n\t}\n\n\t/**\n\t * This will take a number and format it as a dollar string.  It will also add commas to the number.  If the number is not a number, it will return '--'.\n\t *\n\t * @param {*} pValue\n\t * @returns {string}\n\t */\n\tformatterDollars (pValue)\n\t{\n\t    let tmpDollarAmount = parseFloat(pValue).toFixed(2);\n\n\t    if (isNaN(tmpDollarAmount))\n\t    {\n\t        // Try again and see if what was passed in was a dollars string.\n\t        if (typeof(pValue) == 'string')\n\t        {\n\t\t\t\t// TODO: Better rounding function?  This is a hack to get rid of the currency symbol and commas.\n\t            tmpDollarAmount = parseFloat(pValue.replace(this._Value_MoneySign_Currency,'').replace(this._Regex_formatterDollarsRemoveCommas,'')).toFixed(2);\n\t        }\n\t\t\t// If we didn't get a number, return the \"not a number\" string.\n\t        if (isNaN(tmpDollarAmount))\n\t        {\n\t            return this._Value_NaN_Currency;\n\t        }\n\t    }\n\n\t    // TODO: Get locale data and use that for this stuff.\n\t    return `$${this.formatterAddCommasToNumber(tmpDollarAmount)}`;\n\t}\n\n\t/**\n\t * Round a number to a certain number of digits.  If the number is not a number, it will return 0.  If no digits are specified, it will default to 2 significant digits.\n\t *\n\t * @param {*} pValue\n\t * @param {number} pDigits\n\t * @returns {string}\n\t */\n\tformatterRoundNumber (pValue, pDigits)\n\t{\n\t    let tmpDigits = (typeof(pDigits) == 'undefined') ? 2 : pDigits;\n\n\t    let tmpValue = Number.parseFloat(pValue).toFixed(tmpDigits);\n\t    if (isNaN(tmpValue))\n\t    {\n\t        let tmpZed = 0;\n\t        return tmpZed.toFixed(tmpDigits);\n\t    }\n\t    else\n\t    {\n\t        return tmpValue;\n\t    }\n\t}\n\n\n\t/*************************************************************************\n\t * String Tokenization Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Return the string before the matched substring.\n\t *\n\t * If the substring is not found, the entire string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringBeforeMatch (pString, pMatch)\n\t{\n\t\treturn pString.split(pMatch)[0];\n\t}\n\n\t/**\n\t * Return the string after the matched substring.\n\t *\n\t * If the substring is not found, an empty string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringAfterMatch (pString, pMatch)\n\t{\n\t    let tmpStringSplitLocation = pString.indexOf(pMatch);\n\n\t\tif ((tmpStringSplitLocation < 0) || ((tmpStringSplitLocation + pMatch.length) >= pString.length))\n\t    {\n\t        return '';\n\t    }\n\n\t    return pString.substring(tmpStringSplitLocation + pMatch.length);\n\t}\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures (pString, pEnclosureStart, pEnclosureEnd)\n\t{\n\t    let tmpString = (typeof(pString) == 'string') ? pString : '';\n\t    let tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t    let tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t    let tmpEnclosureCount = 0;\n\t    let tmpEnclosureDepth = 0;\n\t    for (let i = 0; i < tmpString.length; i++)\n\t    {\n\t        // This is the start of an enclosure\n\t        if (tmpString[i] == tmpEnclosureStart)\n\t        {\n\t            if (tmpEnclosureDepth == 0)\n\t            {\n\t                tmpEnclosureCount++;\n\t            }\n\t            tmpEnclosureDepth++;\n\t        }\n\t        else if (tmpString[i] == tmpEnclosureEnd)\n\t        {\n\t            tmpEnclosureDepth--;\n\t        }\n\t    }\n\n\t    return tmpEnclosureCount;\n\t}\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd)\n\t{\n\t    let tmpString = (typeof(pString) == 'string') ? pString : '';\n\t    let tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t    let tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t    let tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t    let tmpEnclosureCount = 0;\n\t    let tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t    let tmpEnclosedValueStartIndex = 0;\n\t    let tmpEnclosedValueEndIndex = 0;\n\n\t    for (let i = 0; i < tmpString.length; i++)\n\t    {\n\t        // This is the start of an enclosure\n\t        if (tmpString[i] == tmpEnclosureStart)\n\t        {\n\t            tmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t        }\n\t\t\t// This is the end of an enclosure\n\t        else if (tmpString[i] == tmpEnclosureEnd)\n\t        {\n\t            tmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t        }\n\t    }\n\n\t    if (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t    {\n\t\t\t// Return an empty string if the enclosure is not found\n\t        return '';\n\t    }\n\n\t    if ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t    {\n\t        return tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t    }\n\t    else\n\t    {\n\t        return tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t    }\n\t}\n\n\n\t/**\n\t * Remove an enclosure from a string based on the index of the enclosure.\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToRemove\n\t * @param {number} pEnclosureStart\n\t * @param {number} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringRemoveEnclosureByIndex (pString, pEnclosureIndexToRemove, pEnclosureStart, pEnclosureEnd)\n\t{\n\t    let tmpString = (typeof(pString) == 'string') ? pString : '';\n\t    let tmpEnclosureIndexToRemove = (typeof(pEnclosureIndexToRemove) == 'number') ? pEnclosureIndexToRemove : 0;\n\t    let tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t    let tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t    let tmpEnclosureCount = 0;\n\t    let tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t    let tmpEnclosureStartIndex = 0;\n\t    let tmpEnclosureEndIndex = 0;\n\n\t    for (let i = 0; i < tmpString.length; i++)\n\t    {\n\t        // This is the start of an enclosure\n\t        if (tmpString[i] == tmpEnclosureStart)\n\t        {\n\t            tmpEnclosureDepth++;\n\n\t            if (tmpEnclosureDepth == 1)\n\t            {\n\t                tmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToRemove == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosureStartIndex = i;\n\t\t\t\t\t}\n\t            }\n\t        }\n\t        else if (tmpString[i] == tmpEnclosureEnd)\n\t        {\n\t            tmpEnclosureDepth--;\n\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosureEndIndex <= tmpEnclosureStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t        }\n\t    }\n\n\t    if (tmpEnclosureCount <= tmpEnclosureIndexToRemove)\n\t    {\n\t        return tmpString;\n\t    }\n\n\t    let tmpReturnString = '';\n\n\t    if (tmpEnclosureStartIndex > 1)\n\t    {\n\t        tmpReturnString = tmpString.substring(0, tmpEnclosureStartIndex);\n\t    }\n\n\t    if ((tmpString.length > (tmpEnclosureEndIndex + 1)) && (tmpEnclosureEndIndex > tmpEnclosureStartIndex))\n\t    {\n\t        tmpReturnString += tmpString.substring(tmpEnclosureEndIndex+1);\n\t    }\n\n\t    return tmpReturnString;\n\t}\n}\n\nmodule.exports = DataArithmatic;",";(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*!\r\n   *  decimal.js v10.4.3\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n    tag = '[object Decimal]',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { toStringTag: tag };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  clampedTo                 clamp\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n   * delineated by `min` and `max`.\r\n   *\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  P.clampedTo = P.clamp = function (min, max) {\r\n    var k,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n    min = new Ctor(min);\r\n    max = new Ctor(max);\r\n    if (!min.s || !max.s) return new Ctor(NaN);\r\n    if (min.gt(max)) throw Error(invalidArgument + max);\r\n    k = x.cmp(min);\r\n    return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var halfPi,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.asin();\r\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return halfPi.minus(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, len, y;\r\n\r\n    if (x.isZero()) return x;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    len = x.d.length;\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\r\n  function maxOrMin(Ctor, args, ltgt) {\r\n    var y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      } else if (x[ltgt](y)) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str.indexOf('_') > -1) {\r\n      str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n      if (isDecimal.test(str)) return parseDecimal(x, str);\r\n    } else if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n    }\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clamp\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  sum\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  function clamp(x, min, max) {\r\n    return new this(x).clamp(min, max);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (isDecimalInstance(v)) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n\r\n        // Infinity, NaN.\r\n        } else if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n\r\n      } else if (t !== 'string') {\r\n        throw Error(invalidArgument + v);\r\n      }\r\n\r\n      // Minus sign?\r\n      if ((i = v.charCodeAt(0)) === 45) {\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        // Plus sign?\r\n        if (i === 43) v = v.slice(1);\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.clamp = clamp;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.sum = sum;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, 'lt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 'gt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * Only the result is rounded, not the intermediate calculations.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function sum() {\r\n    var i = 0,\r\n      args = arguments,\r\n      x = new this(args[i]);\r\n\r\n    external = false;\r\n    for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n    external = true;\r\n\r\n    return finalise(x, this.precision, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n  Decimal.prototype.constructor = Decimal;\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol['for']('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils.js\");\n\nconst addedDiff = (lhs, rhs) => {\n  if (lhs === rhs || !(0, _utils.isObject)(lhs) || !(0, _utils.isObject)(rhs)) return {};\n  return Object.keys(rhs).reduce((acc, key) => {\n    if ((0, _utils.hasOwnProperty)(lhs, key)) {\n      const difference = addedDiff(lhs[key], rhs[key]);\n      if ((0, _utils.isObject)(difference) && (0, _utils.isEmpty)(difference)) return acc;\n      acc[key] = difference;\n      return acc;\n    }\n\n    acc[key] = rhs[key];\n    return acc;\n  }, (0, _utils.makeObjectWithoutPrototype)());\n};\n\nvar _default = addedDiff;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils.js\");\n\nconst deletedDiff = (lhs, rhs) => {\n  if (lhs === rhs || !(0, _utils.isObject)(lhs) || !(0, _utils.isObject)(rhs)) return {};\n  return Object.keys(lhs).reduce((acc, key) => {\n    if ((0, _utils.hasOwnProperty)(rhs, key)) {\n      const difference = deletedDiff(lhs[key], rhs[key]);\n      if ((0, _utils.isObject)(difference) && (0, _utils.isEmpty)(difference)) return acc;\n      acc[key] = difference;\n      return acc;\n    }\n\n    acc[key] = undefined;\n    return acc;\n  }, (0, _utils.makeObjectWithoutPrototype)());\n};\n\nvar _default = deletedDiff;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _added = _interopRequireDefault(require(\"./added.js\"));\n\nvar _deleted = _interopRequireDefault(require(\"./deleted.js\"));\n\nvar _updated = _interopRequireDefault(require(\"./updated.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst detailedDiff = (lhs, rhs) => ({\n  added: (0, _added.default)(lhs, rhs),\n  deleted: (0, _deleted.default)(lhs, rhs),\n  updated: (0, _updated.default)(lhs, rhs)\n});\n\nvar _default = detailedDiff;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils.js\");\n\nconst diff = (lhs, rhs) => {\n  if (lhs === rhs) return {}; // equal return no diff\n\n  if (!(0, _utils.isObject)(lhs) || !(0, _utils.isObject)(rhs)) return rhs; // return updated rhs\n\n  const deletedValues = Object.keys(lhs).reduce((acc, key) => {\n    if (!(0, _utils.hasOwnProperty)(rhs, key)) {\n      acc[key] = undefined;\n    }\n\n    return acc;\n  }, (0, _utils.makeObjectWithoutPrototype)());\n\n  if ((0, _utils.isDate)(lhs) || (0, _utils.isDate)(rhs)) {\n    if (lhs.valueOf() == rhs.valueOf()) return {};\n    return rhs;\n  }\n\n  return Object.keys(rhs).reduce((acc, key) => {\n    if (!(0, _utils.hasOwnProperty)(lhs, key)) {\n      acc[key] = rhs[key]; // return added r key\n\n      return acc;\n    }\n\n    const difference = diff(lhs[key], rhs[key]); // If the difference is empty, and the lhs is an empty object or the rhs is not an empty object\n\n    if ((0, _utils.isEmptyObject)(difference) && !(0, _utils.isDate)(difference) && ((0, _utils.isEmptyObject)(lhs[key]) || !(0, _utils.isEmptyObject)(rhs[key]))) return acc; // return no diff\n\n    acc[key] = difference; // return updated key\n\n    return acc; // return updated key\n  }, deletedValues);\n};\n\nvar _default = diff;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"addedDiff\", {\n  enumerable: true,\n  get: function () {\n    return _added.default;\n  }\n});\nObject.defineProperty(exports, \"deletedDiff\", {\n  enumerable: true,\n  get: function () {\n    return _deleted.default;\n  }\n});\nObject.defineProperty(exports, \"detailedDiff\", {\n  enumerable: true,\n  get: function () {\n    return _detailed.default;\n  }\n});\nObject.defineProperty(exports, \"diff\", {\n  enumerable: true,\n  get: function () {\n    return _diff.default;\n  }\n});\nObject.defineProperty(exports, \"updatedDiff\", {\n  enumerable: true,\n  get: function () {\n    return _updated.default;\n  }\n});\n\nvar _diff = _interopRequireDefault(require(\"./diff.js\"));\n\nvar _added = _interopRequireDefault(require(\"./added.js\"));\n\nvar _deleted = _interopRequireDefault(require(\"./deleted.js\"));\n\nvar _updated = _interopRequireDefault(require(\"./updated.js\"));\n\nvar _detailed = _interopRequireDefault(require(\"./detailed.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils.js\");\n\nconst updatedDiff = (lhs, rhs) => {\n  if (lhs === rhs) return {};\n  if (!(0, _utils.isObject)(lhs) || !(0, _utils.isObject)(rhs)) return rhs;\n\n  if ((0, _utils.isDate)(lhs) || (0, _utils.isDate)(rhs)) {\n    if (lhs.valueOf() == rhs.valueOf()) return {};\n    return rhs;\n  }\n\n  return Object.keys(rhs).reduce((acc, key) => {\n    if ((0, _utils.hasOwnProperty)(lhs, key)) {\n      const difference = updatedDiff(lhs[key], rhs[key]); // If the difference is empty, and the lhs is an empty object or the rhs is not an empty object\n\n      if ((0, _utils.isEmptyObject)(difference) && !(0, _utils.isDate)(difference) && ((0, _utils.isEmptyObject)(lhs[key]) || !(0, _utils.isEmptyObject)(rhs[key]))) return acc; // return no diff\n\n      acc[key] = difference;\n      return acc;\n    }\n\n    return acc;\n  }, (0, _utils.makeObjectWithoutPrototype)());\n};\n\nvar _default = updatedDiff;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeObjectWithoutPrototype = exports.isObject = exports.isEmptyObject = exports.isEmpty = exports.isDate = exports.hasOwnProperty = void 0;\n\nconst isDate = d => d instanceof Date;\n\nexports.isDate = isDate;\n\nconst isEmpty = o => Object.keys(o).length === 0;\n\nexports.isEmpty = isEmpty;\n\nconst isObject = o => o != null && typeof o === 'object';\n\nexports.isObject = isObject;\n\nconst hasOwnProperty = (o, ...args) => Object.prototype.hasOwnProperty.call(o, ...args);\n\nexports.hasOwnProperty = hasOwnProperty;\n\nconst isEmptyObject = o => isObject(o) && isEmpty(o);\n\nexports.isEmptyObject = isEmptyObject;\n\nconst makeObjectWithoutPrototype = () => Object.create(null);\n\nexports.makeObjectWithoutPrototype = makeObjectWithoutPrototype;","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n/**\n* Instruction Set Bace Class.\n*\n* @class ElucidatorInstructionSet\n*/\nclass ElucidatorInstructionSet\n{\n    constructor(pElucidator)\n    {\n        this.elucidator = pElucidator;\n\n        this.namespace = 'default';\n    }\n\n    // Create an empty namespace for instructions and operations if either one doesn't exist\n    initializeNamespace(pNamespace)\n    {\n        if (typeof(pNamespace) == 'string')\n        {\n            this.namespace = pNamespace;\n        }\n        if (!this.elucidator.instructionSets.hasOwnProperty(this.namespace))\n        {\n            this.elucidator.instructionSets[this.namespace.toLowerCase()] = {};\n        }\n        if (!this.elucidator.operationSets.hasOwnProperty(this.namespace))\n        {\n            this.elucidator.operationSets[this.namespace.toLowerCase()] = {};\n        }\n    }\n\n    // Add an instruction to the set\n    addInstruction(pInstructionHash, fInstructionFunction)\n    {\n        if (typeof(pInstructionHash) != 'string')\n        {\n            this.elucidator.logError(`Attempted to add an instruction with an invalid hash; expected a string but the instruction hash type was ${typeof(pInstructionHash)}`);\n            return false;\n        }\n        if (typeof(fInstructionFunction) != 'function')\n        {\n            this.elucidator.logError(`Attempted to add an instruction with an invalid function; expected a function but type was ${typeof(fInstructionFunction)}`);\n            return false;\n        }\n\n        this.elucidator.instructionSets[this.namespace.toLowerCase()][pInstructionHash] = fInstructionFunction;\n        return true;\n    }\n\n    initializeInstructions()\n    {\n        // This is where we map in the instructions.\n        // If the extending class calls super it will inject a harmless noop into the scope.\n        // It isn't recommended to do these inline as lambdas, but this code is generally not expected to be called.\n        // Unless the developer wants a noop in their instruction set...........\n        this.addInstruction('noop', \n            (pOperation) =>\n            {\n                pOperation.logInfo('Executing a no-operation operation.');\n                return true;\n            });\n\n        return true;\n    }\n\n    // Add an operation to the set\n    addOperation(pOperationHash, pOperation)\n    {\n        if (typeof(pOperationHash) != 'string')\n        {\n            this.elucidator.logError(`Attempted to add an operation with an invalid hash; expected a string but the operation hash type was ${typeof(pOperationHash)}`, pOperation);\n            return false;\n        }\n        if (typeof(pOperation) != 'object')\n        {\n            this.elucidator.logError(`Attempted to add an invalid operation; expected an object data type but the type was ${typeof(pOperation)}`, pOperation);\n            return false;\n        }\n        // Validate the Description subobject, which is key to functioning.\n        if (!pOperation.hasOwnProperty(\"Description\"))\n        {\n            this.elucidator.logError(`Attempted to add an operation with an invalid description; no Description subobject set.`, pOperation);\n            return false;\n        }\n        if (typeof(pOperation.Description) != 'object')\n        {\n            this.elucidator.logError(`Attempted to add an operation with an invalid description; Description subobject was not an object.  The type was ${typeof(pOperation.Description)}.`, pOperation);\n            return false;\n        }\n        if (typeof(pOperation.Description.Hash) != 'string')\n        {\n            if (typeof(pOperation.Description.Operation) == 'string')\n            {\n                // Use the \"Operation\" as the \"Hash\"\n                pOperation.Description.Hash = pOperation.Description.Operation;\n            }\n            else\n            {\n                this.elucidator.logError(`Attempted to add an operation with an invalid description; Description subobject did not contain a valid Hash which is required to call the operation.`, pOperation);\n                return false;\n            }\n        }\n\n        // Now auto create data if it is missing or wrong in the Description\n        if ((typeof(pOperation.Description.Namespace) != 'string') || (pOperation.Description.Namespace != this.namespace))\n        {\n            pOperation.Description.Namespace = this.namespace;\n        }\n        if (typeof(pOperation.Description.Summary) != 'string')\n        {\n            pOperation.Description.Summary = `[${pOperation.Description.Namespace}] [${pOperation.Description.Hash}] operation.`;\n        }\n\n        // If there are no inputs, or outputs, or steps, add them.\n        if (!pOperation.hasOwnProperty('Inputs'))\n        {\n            pOperation.Inputs = {};\n        }\n        if (!pOperation.hasOwnProperty('Outputs'))\n        {\n            pOperation.Outputs = {};\n        }\n        if (!pOperation.hasOwnProperty('Steps'))\n        {\n            pOperation.Steps = [];\n        }\n\n        // If there are no inputs, or outputs, or steps, add them.\n        // TODO: Add a step where we try to load this into Manyfest and see that it's valid.\n        if (typeof(pOperation.Inputs) !== 'object')\n        {\n            this.elucidator.logError(`Attempted to add an operation with an invalid Inputs object.`, pOperation);\n            return false;\n        }\n        // If there are no inputs, or outputs, or steps, add them.\n        // TODO: Add a step where we try to load this into Manyfest and see that it's valid.\n        if (typeof(pOperation.Outputs) !== 'object')\n        {\n            this.elucidator.logError(`Attempted to add an operation with an invalid Outputs object.`, pOperation);\n            return false;\n        }\n        if (!Array.isArray(pOperation.Steps))\n        {\n            this.elucidator.logError(`Attempted to add an operation with an invalid Steps array.`, pOperation);\n            return false;\n        }\n\n\n        this.elucidator.operationSets[this.namespace.toLowerCase()][pOperationHash.toLowerCase()] = pOperation;\n        return true;\n    }\n\n    initializeOperations()\n    {\n        this.addOperation('noop', \n            {\n                \"Description\":\n                {\n                    \"Operation\": \"noop\",\n                    \"Description\": \"No operation - no affect on any data.\"\n                }\n            });\n\n        return true;\n    }\n};\n\nmodule.exports = ElucidatorInstructionSet;","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n/**\n* Elucidator simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject, pLogLevel) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n    let tmpLogLevel = (typeof(pLogLevel) === 'string') ? pLogLevel : 'INFO';\n\n    console.log(`[Elucidator:${tmpLogLevel}] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject,null,4)+\"\\n\");\n};\n\nconst logInfo = (pLogLine, pLogObject) =>\n{\n    logToConsole(pLogLine, pLogObject, 'Info');\n};\n\n\nconst logWarning = (pLogLine, pLogObject) =>\n{\n    logToConsole(pLogLine, pLogObject, 'Warning');\n};\n\n\nconst logError = (pLogLine, pLogObject) =>\n{\n    logToConsole(pLogLine, pLogObject, 'Error');\n};\n\nmodule.exports = (\n{\n    logToConsole: logToConsole,\n    info: logInfo,\n    warning: logWarning,\n    error: logError\n});","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nconst libSimpleLog = require('./Elucidator-LogToConsole.js');\nconst libManyfest = require('manyfest');\nconst libPrecedent = require('precedent');\n\nconst libElucidatorInstructionSet = require('./Elucidator-InstructionSet.js');\n\n/**\n* Elucidator object address-based descriptions and manipulations.\n*\n* @class Elucidator\n*/\nclass Elucidator\n{\n    constructor(pOperations, fInfoLog, fErrorLog)\n    {\n        // Wire in logging\n        this.logInfo = (typeof(fInfoLog) === 'function') ? fInfoLog : libSimpleLog.info;\n        this.logWarning = (typeof(fWarningLog) === 'function') ? fWarningLog : libSimpleLog.warning;\n        this.logError = (typeof(fErrorLog) === 'function') ? fErrorLog : libSimpleLog.error;\n\n\t\t// Instructions are the basic building blocks for operations\n\t\tthis.instructionSets = {};\n\n\t\t// Operations are the solvers that can be called (instructions can't be called directly)\n\t\t// These can be added at run-time as well\n\t\tthis.operationSets = {};\n\n\t\t// Decide later how to make this truly unique.\n\t\tthis.UUID = 0;\n\n\t\tthis.loadDefaultInstructionSets();\n\n\t\tif (pOperations)\n\t\t{\n\t\t\tlet tmpSolverHashes = Object.keys(pOperations);\n\t\t\tfor (let i = 0; i < tmpSolverHashes.length; i++)\n\t\t\t{\n\t\t\t\tthis.addOperation('Custom',tmpSolverHashes[i], pOperations[tmpSolverHashes[i]]);\n\t\t\t}\n\t\t}\n    }\n\n\t// Load an instruction set\n\tloadInstructionSet(cInstructionSet)\n\t{\n\t\tlet tmpInstructionSet = new cInstructionSet(this);\n\t\t// Setup the namespace\n\t\ttmpInstructionSet.initializeNamespace();\n\t\ttmpInstructionSet.initializeInstructions();\n\t\ttmpInstructionSet.initializeOperations();\n\t}\n\n\tloadDefaultInstructionSets()\n\t{\n\t\t// The javascript math instructions and operations\n\t\t// These provide the \"Math\" namespace\n\t\tthis.loadInstructionSet(require(`./InstructionSets/Math-Javascript.js`));\n\n\t\t// A precision javascript math library that is consistent across browsers, stable and without mantissa issues\n\t\t// Uses Decimal.js\n\t\t// These provide the \"PreciseMath\" namespace\n\t\tthis.loadInstructionSet(require(`./InstructionSets/PreciseMath-Decimal.js`));\n\n\t\t// The abstract geometry instructions and operations (rectangle area, circle area, etc.)\n\t\t// These provide the \"Geometry\" namespace\n\t\tthis.loadInstructionSet(require(`./InstructionSets/Geometry.js`));\n\n\t\t// The logic operations (if, execution of instructions, etc.)\n\t\t// These provide the \"Logic\" namespace\n\t\tthis.loadInstructionSet(require(`./InstructionSets/Logic.js`));\n\n\t\t// Basic string manipulation instructions and operations\n\t\t// These provide the \"String\" namespace\n\t\tthis.loadInstructionSet(require(`./InstructionSets/String.js`));\n\n\t\t// Basic set manipulation instructions and operations\n\t\t// These provide the \"Set\" namespace\n\t\tthis.loadInstructionSet(require(`./InstructionSets/Set.js`));\n\t}\n\n\toperationExists(pNamespace, pOperationHash)\n\t{\n\t\tif ((typeof(pNamespace) != 'string') || (typeof(pOperationHash) != 'string'))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpNamespace = pNamespace.toLowerCase();\n\t\treturn (this.operationSets.hasOwnProperty(tmpNamespace) && this.operationSets[tmpNamespace].hasOwnProperty(pOperationHash.toLowerCase()));\n\t}\n\n\taddOperation(pNamespace, pOperationHash, pOperation)\n\t{\n        if (typeof(pNamespace) != 'string')\n        {\n            this.logError(`Attempted to add an operation at runtime via Elucidator.addOperation with an invalid namespace; expected a string but the type was ${typeof(pNamespace)}`, pOperation);\n            return false;\n        }\n\n\t\tlet tmpOperationInjector = new libElucidatorInstructionSet(this);\n\t\ttmpOperationInjector.initializeNamespace(pNamespace);\n\n\t\treturn tmpOperationInjector.addOperation(pOperationHash, pOperation);\n\t}\n\n\tsolveInternalOperation(pNamespace, pOperationHash, pInputObject, pOutputObject, pDescriptionManyfest, pInputAddressMapping, pOutputAddressMapping, pSolutionContext)\n\t{\n\t\tif (!this.operationExists(pNamespace, pOperationHash))\n\t\t{\n\t\t\tthis.logError(`Attempted to solveInternalOperation for namespace ${pNamespace} operationHash ${pOperationHash} but the operation was not found.`);\n\t\t\t// TODO: Should this return something with an error log populated?\n\t\t\treturn false;\n\t\t}\n\t\tlet tmpOperation = this.operationSets[pNamespace.toLowerCase()][pOperationHash.toLowerCase()];\n\t\treturn this.solveOperation(tmpOperation, pInputObject, pOutputObject, pDescriptionManyfest, pInputAddressMapping, pOutputAddressMapping, pSolutionContext);\n\t}\n\n\tsolveOperation(pOperationObject, pInputObject, pOutputObject, pDescriptionManyfest, pInputAddressMapping, pOutputAddressMapping, pSolutionContext)\n\t{\n\t\tlet tmpOperation = JSON.parse(JSON.stringify(pOperationObject));\n\n\t\tif (typeof(pInputObject) != 'object')\n\t\t{\n            this.logError(`Attempted to run a solve but the passed in Input was not an object.  The type was ${typeof(pInputObject)}.`);\n\t\t\treturn false;\n\t\t}\n\t\tlet tmpInputObject = pInputObject;\n\n\t\t// Default to reusing the input object as the output object.\n\t\tlet tmpOutputObject = tmpInputObject;\n\n\t\t// This is how recursive solutions bind their context together.\n\t\tlet tmpSolutionContext = pSolutionContext;\n\t\tif (typeof(tmpSolutionContext) === 'undefined')\n\t\t{\n\t\t\ttmpSolutionContext = (\n\t\t\t\t{\n\t\t\t\t\t\"SolutionGUID\": `Solution-${this.UUID++}`, \n\t\t\t\t\t\"SolutionBaseNamespace\": pOperationObject.Description.Namespace,\n\t\t\t\t\t\"SolutionBaseOperation\": pOperationObject.Description.Operation,\n\t\t\t\t\t\"SolutionLog\": []\n\t\t\t\t});\n\t\t\t\n\t\t\t// This is the root operation, see if there are Inputs and Outputs created ... if not, create them.\n\t\t\tif (!tmpOperation.hasOwnProperty('Inputs'))\n\t\t\t{\n\t\t\t\ttmpOperation.Inputs = {};\n\t\t\t}\n\t\t\tif (!tmpOperation.hasOwnProperty('Outputs'))\n\t\t\t{\n\t\t\t\ttmpOperation.Outputs = {};\n\t\t\t}\n\n\t\t\t// This is the root Operation, see if there is a hash translation available for either side (input or output)\n\t\t\tif (tmpOperation.hasOwnProperty('InputHashTranslationTable'))\n\t\t\t{\n\t\t\t\ttmpSolutionContext.InputHashMapping = JSON.parse(JSON.stringify(tmpOperation.InputHashTranslationTable));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpSolutionContext.InputHashMapping = {};\n\t\t\t}\n\n\t\t\tif (tmpOperation.hasOwnProperty('OutputHashTranslationTable'))\n\t\t\t{\n\t\t\t\ttmpSolutionContext.OutputHashMapping = JSON.parse(JSON.stringify(tmpOperation.OutputHashTranslationTable));\n\t\t\t}\n\n\t\t\tif ((typeof(pOutputObject) != 'object')\n\t\t\t\t&& (typeof(tmpOutputHashMapping) == 'undefined') \n\t\t\t\t&& (typeof(tmpInputHashMapping) != 'undefined'))\n\t\t\t{\n\t\t\t\t// Reuse the input hash mapping if:\n\t\t\t\t//   1) we auto-mapped the input hash mapping to the output because only an input object was supplied\n\t\t\t\t//   2) there *was not* an output hash mapping supplied\n\t\t\t\t//   3) there *was* an input hash mapping supplied\n\t\t\t\t//\n\t\t\t\t// This seems simple at first but exposes some really interesting behaviors in terms of\n\t\t\t\t// reusing the same object and schema for input and output, but having different hash\n\t\t\t\t// mappings for each of them.\n\t\t\t\ttmpSolutionContext.OutputHashMapping = tmpSolutionContext.InputHashMapping;\n\t\t\t}\n\t\t}\n\n\t\tif (typeof(pOutputObject) == 'object')\n\t\t{\n\t\t\t// If the call defined an explicit, different output object from the input object use that instead.\n\t\t\ttmpOutputObject = pOutputObject;\n\t\t}\n\n\t\tlet tmpDescriptionManyfest = false;\n\t\tif (typeof(pDescriptionManyfest) === 'undefined')\n\t\t{\n\t\t\t// We are going to use this for some clever schema manipulations, then recreate the object\n\t\t\ttmpDescriptionManyfest = new libManyfest();\n\t\t\t// Synthesize a manyfest from the Input and Output properties\n\t\t\tlet tmpManyfestSchema = (\n\t\t\t\t{\n\t\t\t\t\tScope: 'Solver Data Part Descriptions',\n\t\t\t\t\tDescriptors: tmpDescriptionManyfest.schemaManipulations.mergeAddressMappings(tmpOperation.Inputs, tmpOperation.Outputs)\n\t\t\t\t});\n\t\t\t}\n\t\telse\n\t\t{\n\t\t\t// Clone the passed-in manyfest, so mutations do not alter the upstream version\n\t\t\ttmpDescriptionManyfest = pDescriptionManyfest.clone();\n\t\t}\n\t\t// Now that the operation object has been created uniquely, apply any passed-in address-hash and hash-hash remappings\n\t\tif (pInputAddressMapping)\n\t\t{\n\t\t\ttmpDescriptionManyfest.schemaManipulations.resolveAddressMappings(tmpOperation.Inputs, pInputAddressMapping);\n\t\t}\n\t\tif (pOutputAddressMapping)\n\t\t{\n\t\t\ttmpDescriptionManyfest.schemaManipulations.resolveAddressMappings(tmpOperation.Inputs, pOutputAddressMapping);\n\t\t}\n\t\tif (tmpSolutionContext.InputHashMapping)\n\t\t{\n\t\t\ttmpDescriptionManyfest.hashTranslations.addTranslation(tmpSolutionContext.InputHashMapping);\n\t\t}\n\t\tif (tmpSolutionContext.OutputHashMapping)\n\t\t{\n\t\t\ttmpDescriptionManyfest.hashTranslations.addTranslation(tmpSolutionContext.OutputHashMapping);\t\t\t\n\t\t}\n\n\n\t\t// Set some kind of unique identifier for the operation\n\t\ttmpOperation.UUID = this.UUID++;\n\t\ttmpOperation.SolutionContext = tmpSolutionContext;\n\n\t\tif (tmpOperation.Description.Synopsys)\n\t\t{\n\t\t\ttmpSolutionContext.SolutionLog.push(`[${tmpOperation.UUID}]: Solver running operation ${tmpOperation.Description.Synopsys}`);\n\t\t}\n\n\t\tlet tmpPrecedent = new libPrecedent();\n\t\ttmpPrecedent.addPattern('{{Name:', '}}',\n\t\t\t(pHash)=>\n\t\t\t{\n\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\tlet tmpDescriptor = tmpDescriptionManyfest.getDescriptorByHash(tmpHash)\n\n\t\t\t\t// Return a human readable value\n\t\t\t\tif ((typeof(tmpDescriptor) == 'object')  && tmpDescriptor.hasOwnProperty('Name'))\n\t\t\t\t{\n\t\t\t\t\treturn tmpDescriptor.Name;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpHash;\n\t\t\t\t}\n\t\t\t});\n\t\ttmpPrecedent.addPattern('{{InputValue:', '}}',\n\t\t\t(pHash)=>\n\t\t\t{\n\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\treturn tmpDescriptionManyfest.getValueByHash(tmpInputObject,tmpHash);\n\t\t\t});\n\t\ttmpPrecedent.addPattern('{{OutputValue:', '}}',\n\t\t\t(pHash)=>\n\t\t\t{\n\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\treturn tmpDescriptionManyfest.getValueByHash(tmpOutputObject,tmpHash);\n\t\t\t});\n\n\t\tif (tmpOperation.hasOwnProperty('Log') && tmpOperation.Log.hasOwnProperty('PreOperation'))\n\t\t{\n\t\t\tif (typeof(tmpOperation.Log.PreOperation) == 'string')\n\t\t\t{\n\t\t\t\ttmpOperation.SolutionContext.SolutionLog.push(tmpPrecedent.parseString(tmpOperation.Log.PreOperation));\n\t\t\t}\n\t\t\telse if (Array.isArray(tmpOperation.Log.PreOperation))\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < tmpOperation.Log.PreOperation.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif ((typeof(tmpOperation.Log.PreOperation[i]) == 'string'))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOperation.SolutionContext.SolutionLog.push(tmpPrecedent.parseString(tmpOperation.Log.PreOperation[i]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now step through each operation and solve\n\t\tfor (let i = 0; i < tmpOperation.Steps.length; i++)\n\t\t{\n\t\t\tlet tmpStep = tmpOperation.Steps[i];\n\n\t\t\t// Instructions are always endpoints -- they *do not* recurse.\n\t\t\tif (tmpStep.hasOwnProperty('Instruction'))\n\t\t\t{\n\t\t\t\tlet tmpInputSchema = (\n\t\t\t\t\t{\n\t\t\t\t\t\t\"Scope\": \"InputObject\",\n\t\t\t\t\t\t\"Descriptors\": JSON.parse(JSON.stringify(tmpOperation.Inputs))\n\t\t\t\t\t});\n\t\t\t\t// Perform step-specific address mappings.\n\t\t\t\ttmpDescriptionManyfest.schemaManipulations.resolveAddressMappings(tmpInputSchema.Descriptors, tmpStep.InputHashAddressMap);\n\t\t\t\tlet tmpInputManyfest = new libManyfest(tmpInputSchema);\n\t\t\t\tif (tmpSolutionContext.InputHashMapping)\n\t\t\t\t{\n\t\t\t\t\ttmpInputManyfest.hashTranslations.addTranslation(tmpSolutionContext.InputHashMapping);\n\t\t\t\t}\n\n\t\t\t\tlet tmpOutputSchema = (\n\t\t\t\t\t{\n\t\t\t\t\t\t\"Scope\": \"OutputObject\",\n\t\t\t\t\t\t\"Descriptors\": JSON.parse(JSON.stringify(tmpOperation.Outputs))\n\t\t\t\t\t});\n\t\t\t\t\ttmpDescriptionManyfest.schemaManipulations.resolveAddressMappings(tmpOutputSchema.Descriptors, tmpStep.OutputHashAddressMap);\n\t\t\t\tlet tmpOutputManyfest = new libManyfest(tmpOutputSchema);\n\t\t\t\tif (tmpSolutionContext.OutputHashMapping)\n\t\t\t\t{\n\t\t\t\t\ttmpOutputManyfest.hashTranslations.addTranslation(tmpSolutionContext.OutputHashMapping);\n\t\t\t\t}\n\t\n\t\t\t\t// Construct the instruction state object\n\t\t\t\tlet tmpInstructionState = (\n\t\t\t\t{\n\t\t\t\t\tElucidator: this,\n\n\t\t\t\t\tNamespace: tmpStep.Namespace.toLowerCase(),\n\t\t\t\t\tInstruction: tmpStep.Instruction.toLowerCase(),\n\n\t\t\t\t\tOperation: tmpOperation,\n\n\t\t\t\t\tSolutionContext: tmpSolutionContext,\n\n\t\t\t\t\tDescriptionManyfest: tmpDescriptionManyfest,\n\n\t\t\t\t\tInputObject: tmpInputObject,\n\t\t\t\t\tInputManyfest: tmpInputManyfest,\n\n\t\t\t\t\tOutputObject: tmpOutputObject,\n\t\t\t\t\tOutputManyfest: tmpOutputManyfest\n\t\t\t\t});\n\n\t\t\t\ttmpInstructionState.logError = \n\t\t\t\t\t(pMessage) => \n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSolutionContext.SolutionLog.push(`[ERROR][Operation ${tmpInstructionState.Operation.Description.Namespace}:${tmpInstructionState.Operation.Description.Hash} - Step #${i}:${tmpStep.Namespace}:${tmpStep.Instruction}] ${pMessage}`)\n\t\t\t\t\t};\n\n\t\t\t\ttmpInstructionState.logInfo = \n\t\t\t\t\t(pMessage) => \n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSolutionContext.SolutionLog.push(`[INFO][Operation ${tmpInstructionState.Operation.Description.Namespace}:${tmpInstructionState.Operation.Description.Hash} - Step #${i}:${tmpStep.Namespace}:${tmpStep.Instruction}] ${pMessage}`)\n\t\t\t\t\t};\n\n\t\t\t\tif (this.instructionSets[tmpInstructionState.Namespace].hasOwnProperty(tmpInstructionState.Instruction))\n\t\t\t\t{\n\t\t\t\t\tlet fInstruction = this.instructionSets[tmpInstructionState.Namespace][tmpInstructionState.Instruction];\n\t\t\t\t\tfInstruction(tmpInstructionState);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Operations recurse.\n\t\t\tif (tmpStep.hasOwnProperty('Operation'))\n\t\t\t{\n\t\t\t\tif (typeof(tmpStep.Operation) == 'string')\n\t\t\t\t{\n\t\t\t\t\tthis.solveInternalOperation(tmpStep.Namespace, tmpStep.Operation, tmpInputObject, tmpOutputObject, tmpDescriptionManyfest, tmpStep.InputHashAddressMap, tmpStep.OutputHashAddressMap, tmpSolutionContext);\n\t\t\t\t}\n\t\t\t\telse if (typeof(tmpStep.Operation) == 'object')\n\t\t\t\t{\n\t\t\t\t\t// You can even define an inline object operation!  This gets crazy fast\n\t\t\t\t\tthis.solveOperation(tmpStep.Operation, tmpInputObject, tmpOutputObject, tmpDescriptionManyfest, tmpStep.InputHashAddressMap, tmpStep.OutputHashAddressMap, tmpSolutionContext);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpOperation.hasOwnProperty('Log') && tmpOperation.Log.hasOwnProperty('PostOperation'))\n\t\t{\n\t\t\tif (typeof(tmpOperation.Log.PostOperation) == 'string')\n\t\t\t{\n\t\t\t\ttmpOperation.SolutionContext.SolutionLog.push(tmpPrecedent.parseString(tmpOperation.Log.PostOperation));\n\t\t\t}\n\t\t\telse if (Array.isArray(tmpOperation.Log.PreOperation))\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < tmpOperation.Log.PostOperation.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif ((typeof(tmpOperation.Log.PostOperation[i]) == 'string'))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOperation.SolutionContext.SolutionLog.push(tmpPrecedent.parseString(tmpOperation.Log.PostOperation[i]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpSolutionContext;\n\t}\n};\n\nmodule.exports = Elucidator;","// Solution providers are meant to be stateless, and not classes.\n// These solution providers are akin to drivers, connecting code libraries or \n// other types of behavior to mapping operations.\n\nlet libElucidatorInstructionSet = require('../Elucidator-InstructionSet.js');\n\nclass Geometry extends libElucidatorInstructionSet\n{\n    constructor(pElucidator)\n    {\n        super(pElucidator);\n        this.namespace = 'Geometry';\n    }\n\n    // Geometry provides no instructions\n    initializeInstructions()\n    {\n        return true;\n    }\n\n    initializeOperations()\n    {\n        this.addOperation('rectanglearea', require(`./Operations/Geometry-RectangleArea.json`));\n\n        return true;\n    }\n}\n\nmodule.exports = Geometry;","// Solution providers are meant to be stateless, and not classes.\n// These solution providers are akin to drivers, connecting code libraries or \n// other types of behavior to mapping operations.\n\nlet libElucidatorInstructionSet = require('../Elucidator-InstructionSet.js');\n\nconst ifInstruction = (pOperation) =>\n{\n    let tmpLeftValue = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'leftValue');\n    let tmpRightValue = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'rightValue');\n    let tmpComparator = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'comparator').toString().toLowerCase();\n\n    let tmpComparisonOperator = 'equal';\n\n    // This may eventually come from configuration; for now just leave it here.\n    let tmpComparisonOperatorMapping = (\n        {\n            '==':'equal',\n            'eq':'equal',\n            'equal':'equal',\n\n            '!=':'notequal',\n            'noteq':'notequal',\n            'notequal':'notequal',\n\n            '===':'identity',\n            'id':'identity',\n            'identity':'identity',\n\n            '>':'greaterthan',\n            'gt':'greaterthan',\n            'greaterthan':'greaterthan',\n\n            '>=':'greaterthanorequal',\n            'gte':'greaterthanorequal',\n            'greaterthanorequal':'greaterthanorequal',\n\n            '<':'lessthan',\n            'lt':'lessthan',\n            'lessthan':'lessthan',\n\n            '<=':'lessthanorequal',\n            'lte':'lessthanorequal',\n            'lessthanorequal':'lessthanorequal'\n        });\n\n    if (tmpComparisonOperatorMapping.hasOwnProperty(tmpComparator))\n    {\n        tmpComparisonOperator = tmpComparisonOperatorMapping[tmpComparator];\n    }\n\n    let tmpTrueNamespace = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'trueNamespace');\n    let tmpTrueOperation = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'trueOperation');\n\n    let tmpFalseNamespace = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'falseNamespace');\n    let tmpFalseOperation = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'falseOperation');\n\n    let tmpTruthiness = null;\n\n    switch(tmpComparisonOperator)\n    {\n        case 'equal':\n            tmpTruthiness = (tmpLeftValue == tmpRightValue);\n            break;\n        case 'identity':\n            tmpTruthiness = (tmpLeftValue === tmpRightValue);\n            break;\n        case 'notequal':\n            tmpTruthiness = (tmpLeftValue != tmpRightValue);\n            break;\n        case 'greaterthan':\n            tmpTruthiness = (tmpLeftValue > tmpRightValue);\n            break;\n        case 'greaterthanorequal':\n            tmpTruthiness = (tmpLeftValue >= tmpRightValue);\n            break;\n        case 'lessthan':\n            tmpTruthiness = (tmpLeftValue < tmpRightValue);\n            break;\n        case 'lessthanorequal':\n            tmpTruthiness = (tmpLeftValue <= tmpRightValue);\n            break;\n    }\n\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'truthinessResult', tmpTruthiness);\n\n    // Now execute the operations (unless it is a noop or a bunk operation)\n    // This is, frankly, kindof a mind-blowing amount of recursion possibility.\n    // Both of these are falling back on the base solution hash mapping.\n    // --> Not certain if this is the correct approach and the only way to tell will be through exercise of this\n    if (tmpTruthiness && (typeof(tmpTrueNamespace) == 'string') && (typeof(tmpTrueOperation) == 'string') && (tmpTrueOperation != 'noop'))\n    {\n        pOperation.Elucidator.solveInternalOperation(tmpTrueNamespace, tmpTrueOperation, pOperation.InputObject, pOperation.OutputObject, pOperation.DescriptionManyfest, pOperation.SolutionContext.InputHashMapping, pOperation.SolutionContext.OutputHashMapping, pOperation.SolutionContext);\n    }\n    else if ((typeof(tmpFalseNamespace) == 'string') &&  (typeof(tmpFalseOperation) == 'string') && (tmpFalseOperation != 'noop'))\n    {\n        pOperation.Elucidator.solveInternalOperation(tmpFalseNamespace, tmpFalseOperation, pOperation.InputObject, pOperation.OutputObject, pOperation.DescriptionManyfest, pOperation.SolutionContext.InputHashMapping, pOperation.SolutionContext.OutputHashMapping, pOperation.SolutionContext);\n    }\n\n    return true;\n};\n\nconst executeOperation = (pOperation) =>\n{\n    let tmpNamespace = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'namespace');\n    let tmpOperation = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'operation');\n\n    pOperation.Elucidator.solveInternalOperation(tmpNamespace, tmpOperation, pOperation.InputObject, pOperation.OutputObject, pOperation.DescriptionManyfest, pOperation.SolutionContext.InputHashMapping, pOperation.SolutionContext.OutputHashMapping, pOperation.SolutionContext);\n\n    return true;\n}\n\nclass Logic extends libElucidatorInstructionSet\n{\n    constructor(pElucidator)\n    {\n        super(pElucidator);\n        this.namespace = 'Logic';\n    }\n\n    initializeInstructions()\n    {\n        // Logic actually wants a noop instruction!\n        super.initializeInstructions();\n\n        this.addInstruction('if', ifInstruction);\n        this.addInstruction('execute', executeOperation);\n\n        return true;\n    }\n\n    initializeOperations()\n    {\n        this.addOperation('if', require(`./Operations/Logic-If.json`));\n        this.addOperation('execute', require(`./Operations/Logic-Execute.json`));\n\n        return true;\n    }\n}\n\nmodule.exports = Logic;","// Solution providers are meant to be stateless, and not classes.\n// These solution providers are akin to drivers, connecting code libraries or \n// other types of behavior to mapping operations.\n\nlet libElucidatorInstructionSet = require('../Elucidator-InstructionSet.js');\n\nlet add = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a');\n    let tmpB = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'b');\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA + tmpB);\n    return true;\n};\n\nlet subtract = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a');\n    let tmpB = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'b');\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA - tmpB);\n    return true;\n};\n\nlet multiply = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a');\n    let tmpB = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'b');\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA * tmpB);\n    return true;\n};\n\nlet divide = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a');\n    let tmpB = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'b');\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA / tmpB);\n    return true;\n};\n\nlet aggregate = (pOperation) =>\n{\n    let tmpA = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a');\n\n    let tmpObjectType = typeof(tmpA);\n\n    let tmpAggregationValue = 0;\n\n    if (tmpObjectType == 'object')\n    {\n        if (Array.isArray(tmpA))\n        {\n            for (let i = 0; i < tmpA.length; i++)\n            {\n                // If this is an array, enumerate it and try to aggregate each number\n                let tmpValue = parseInt(tmpA[i]);\n\n                if (isNaN(tmpValue))\n                {\n                    pOperation.logError(`Array element index [${i}] could not be parsed as a number; skipping.  (${tmpA[i]})`);\n                }\n                else\n                {\n                    tmpAggregationValue += tmpValue;\n                    pOperation.logInfo(`Adding element [${i}] value ${tmpValue} totaling: ${tmpAggregationValue}`)\n                }\n            }\n        }\n        else\n        {\n            let tmpObjectKeys = Object.keys(tmpA);\n            for (let i = 0; i < tmpObjectKeys.length; i++)\n            {\n                let tmpValue = parseInt(tmpA[tmpObjectKeys[i]]);\n\n                if (isNaN(tmpValue))\n                {\n                    pOperation.logError(`Object property [${tmpObjectKeys[i]}] could not be parsed as a number; skipping.  (${tmpA[tmpObjectKeys[i]]})`);\n                }\n                else\n                {\n                    tmpAggregationValue += tmpValue;\n                    pOperation.logInfo(`Adding object property [${tmpObjectKeys[i]}] value ${tmpValue} totaling: ${tmpAggregationValue}`)\n                }\n            }\n        }\n    }\n    else\n    {\n        let tmpValue = parseInt(tmpA);\n\n        if (isNaN(tmpValue))\n        {\n            pOperation.logError(`Direct value could not be parsed as a number; skipping.  (${tmpA})`);\n        }\n        else\n        {\n            tmpAggregationValue += tmpValue;\n        }\n    }\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpAggregationValue);\n    return true;\n};\n\nclass MathJavascript extends libElucidatorInstructionSet\n{\n    constructor(pElucidator)\n    {\n        super(pElucidator);\n        this.namespace = 'Math';\n    }\n\n    initializeInstructions()\n    {\n        this.addInstruction('add', add);\n\n        this.addInstruction('subtract', subtract);\n        this.addInstruction('sub', subtract);\n\n        this.addInstruction('multiply', multiply);\n        this.addInstruction('mul', multiply);\n\n        this.addInstruction('divide', divide);\n        this.addInstruction('div', divide);\n\n        this.addInstruction('aggregate', aggregate);\n\n        return true;\n    }\n\n    initializeOperations()\n    {\n        this.addOperation('add', require(`./Operations/Math-Add.json`));\n        this.addOperation('subtract', require(`./Operations/Math-Subtract.json`));\n        this.addOperation('multiply', require(`./Operations/Math-Multiply.json`));\n        this.addOperation('divide', require(`./Operations/Math-Divide.json`));\n\n        this.addOperation('aggregate', require(`./Operations/Math-Aggregate.json`));\n\n        return true;\n    }\n}\n\nmodule.exports = MathJavascript;","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Geometry\",\n\t\t\"Operation\": \"RectangleArea\",\n\t\t\"Synopsis\": \"Solve for the area of a rectangle:  Area = Width * Height\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"Width\": { \"Hash\":\"Width\", \"Type\":\"Number\" },\n\t\t\"Height\": { \"Hash\":\"Height\", \"Type\":\"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"Area\": { \"Hash\":\"Area\", \"Name\": \"Area of the Rectangle\"},\n\t\t\"Ratio\": { \"Hash\":\"Ratio\", \"Name\": \"The Ratio between the Width and the Height\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Solve for [ {{Name:Area}} ] based on [ {{Name:Width}} ] and [ {{Name:Height}} ].\",\n\t\t\"PostOperation\": \"Operation complete; [ {{Name:Area}} ] = {{InputValue:Width}} * {{InputValue:Height}} = {{OutputValue:Area}}\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"multiply\",\n\t\t\t\"InputHashAddressMap\": \n\t\t\t\t{\n\t\t\t\t\t\"a\": \"Width\",\n\t\t\t\t\t\"b\": \"Height\"\n\t\t\t\t},\n\t\t\t\"OutputHashAddressMap\":\n\t\t\t\t{\n\t\t\t\t\t\"x\": \"Area\"\n\t\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"divide\",\n\t\t\t\"InputHashAddressMap\": \n\t\t\t\t{\n\t\t\t\t\t\"a\": \"Width\",\n\t\t\t\t\t\"b\": \"Height\"\n\t\t\t\t},\n\t\t\t\"OutputHashAddressMap\":\n\t\t\t\t{\n\t\t\t\t\t\"x\": \"Ratio\"\n\t\t\t\t}\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Logic\",\n\t\t\"Operation\": \"Execute\",\n\t\t\"Synopsis\": \"Execute an operation based on namespace and operation.\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"namespace\": { \"Hash\": \"namespace\", \"Type\": \"string\", \"Default\":\"logic\" },\n\t\t\"operation\": { \"Hash\": \"operation\", \"Type\": \"string\", \"Default\":\"noop\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Execute the {{InputValue:operation}} operation in namespace {{InputValue:namespace}}.\",\n\t\t\"PostOperation\": \"Operation [{{InputValue:namespace}}:{{InputValue:operation}}] execution complete.\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"Logic\",\n\t\t\t\"Instruction\": \"execute\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Logic\",\n\t\t\"Operation\": \"If\",\n\t\t\"Synopsis\": \"Comparison-based if of leftValue and RightValue based on comparator.  Executes trueNamespace:trueOperation or falseNamespace:falseOperation based on truthiness of result.  Also outputs a true or false to truthinessResult.\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"leftValue\": { \"Hash\":\"leftValue\", \"Type\":\"Any\" },\n\t\t\"rightValue\": { \"Hash\":\"rightValue\", \"Type\":\"Any\", \"Default\": true },\n\t\t\"comparator\": { \"Hash\":\"comparator\", \"Type\":\"String\", \"Default\":\"==\" },\n\n\t\t\"trueNamespace\": {\"Hash\":\"trueNamespace\", \"Type\":\"String\", \"Default\":\"logic\" },\n\t\t\"trueOperation\": {\"Hash\":\"trueOperation\", \"Type\":\"String\", \"Default\":\"noop\" },\n\n\t\t\"falseNamespace\": {\"Hash\":\"falseNamespace\", \"Type\":\"String\", \"Default\":\"logic\" },\n\t\t\"falseOperation\": {\"Hash\":\"falseOperation\", \"Type\":\"String\", \"Default\":\"noop\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"truthinessResult\": { \"Hash\": \"truthinessResult\", \"Type\": \"Boolean\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Compare {{Name:leftValue}} and {{Name:rightValue}} with the {{InputValue:comparator}} operator, storing the truthiness in {{Name:truthinessResult}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{InputValue:leftValue}} {{InputValue:comparator}} {{InputValue:rightValue}} evaluated to {{OutputValue:truthinessResult}}\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"Logic\",\n\t\t\t\"Instruction\": \"If\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Math\",\n\t\t\"Operation\": \"Add\",\n\t\t\"Synopsis\": \"Add two numbers:  x = a + b\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Add {{Name:a}} and {{Name:b}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{InputValue:a}} + {{InputValue:b}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"Math\",\n\t\t\t\"Instruction\": \"add\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Math\",\n\t\t\"Operation\": \"Aggregate\",\n\t\t\"Synopsis\": \"Aggregate a set of numbers (from array or object address):  x = a + b + ... + z\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Set\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Aggregate all numeric values in {{Name:a}}, storing the resultant in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"Math\",\n\t\t\t\"Instruction\": \"aggregate\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Math\",\n\t\t\"Operation\": \"Divide\",\n\t\t\"Synopsis\": \"Divide two numbers:  x = a / b\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Divide {{Name:a}} over {{Name:b}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{InputValue:a}} / {{InputValue:b}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"Math\",\n\t\t\t\"Instruction\": \"divide\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Math\",\n\t\t\"Operation\": \"Multiply\",\n\t\t\"Synopsis\": \"Multiply two numbers:  x = a * b\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Multiply {{Name:a}} and {{Name:b}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{InputValue:a}} * {{InputValue:b}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"Math\",\n\t\t\t\"Instruction\": \"multiply\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Math\",\n\t\t\"Operation\": \"Subtract\",\n\t\t\"Synopsis\": \"Subtract two numbers:  x = a - b\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Subtract {{Name:a}} and {{Name:b}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{InputValue:a}} - {{InputValue:b}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"Math\",\n\t\t\t\"Instruction\": \"subtract\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"Add\",\n\t\t\"Synopsis\": \"Precisely add two numbers:  x = a + b\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Add {{Name:a}} and {{Name:b}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{InputValue:a}} + {{InputValue:b}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"add\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"Aggregate\",\n\t\t\"Synopsis\": \"Precisely aggregate a set of numbers (from array or object address):  x = a + b + ... + z\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Set\" },\n\t\t\"ValueNames\": { \"Hash\": \"ValueNames\", \"Type\": \"Set\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Aggregate all numeric values in {{Name:a}}, storing the resultant in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"aggregate\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"Divide\",\n\t\t\"Synopsis\": \"Precisely divide two numbers:  x = a / b\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Divide {{Name:a}} over {{Name:b}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{InputValue:a}} / {{InputValue:b}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"divide\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"GroupValuesAndAggregate\",\n\t\t\"Synopsis\": \"Group values in a set and aggregate the set of numbers (from array or object addresses)\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"inputDataSet\": { \"Hash\":\"inputDataSet\", \"Type\":\"Set\" },\n\t\t\"groupByProperty\": { \"Hash\":\"groupByProperty\", \"Type\":\"Any\"},\n\t\t\"groupValueProperty\": { \"Hash\":\"groupValueProperty\", \"Type\":\"Any\"},\n\t\t\"recordIndicatorProperty\": { \"Hash\":\"recordIndicatorProperty\", \"Type\":\"String\", \"Default\":false}\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"outputDataSet\": { \"Hash\": \"outputDataSet\", \"Type\": \"Set\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Group {{Name:inputDataSet}} by {{Name:groupByProperty}} and create a map, storing the resultant in {{Name:outputDataSet}}.\",\n\t\t\"PostOperation\": \"Operation complete: Grouping {{Name:inputDataSet}} by {{Name:groupByProperty}} into aggregated values in {{Name:outputDataSet}}\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"groupvaluesandaggregate\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"Multiply\",\n\t\t\"Synopsis\": \"Precisely multiply two numbers:  x = a * b\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Multiply {{Name:a}} and {{Name:b}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{InputValue:a}} * {{InputValue:b}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"multiply\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"Round\",\n\t\t\"Synopsis\": \"Precisely round a number.\"\n\t},\n\n\t\"Inputs\":\n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"precision\": { \"Hash\": \"precision\", \"Type\": \"Number\" },\n\t\t\"roundingmode\": { \"Hash\": \"roundingmode\", \"Type\":\"String\" }\n\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Round {{Name:a}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = Round({{InputValue:a}}) = {{OutputValue:x}}\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"round\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"SetPrecision\",\n\t\t\"Synopsis\": \"Set the precision.\"\n\t},\n\n\t\"Inputs\":\n\t{\n\t\t\"precision\": { \"Hash\": \"precision\", \"Type\":\"Number\", \"Default\":2}\n\n\t},\n\n\t\"Outputs\":\n\t{\n\t},\n\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Set precision to {{InputValue:precision}}.\",\n\t\t\"PostOperation\": \"Operation complete: Default precision set to {{InputValue:precision}}.\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"setprecision\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"SetRoundingMode\",\n\t\t\"Synopsis\": \"Set the rounding mode.\"\n\t},\n\n\t\"Inputs\":\n\t{\n\t\t\"roundingmode\": { \"Hash\": \"roundingmode\", \"Type\":\"String\", \"Default\":\"ROUND_HALF_UP\"}\n\n\t},\n\n\t\"Outputs\":\n\t{\n\t},\n\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Set rounding mode to {{InputValue:roundingmode}}.\",\n\t\t\"PostOperation\": \"Operation complete: Default rounding mode set to {{InputValue:roundingmode}}.\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"setroundingmode\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"Subtract\",\n\t\t\"Synopsis\": \"Precisely subtract two numbers:  x = a - b\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Subtract {{Name:a}} and {{Name:b}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = {{InputValue:a}} - {{InputValue:b}} = {{OutputValue:x}}\"\t\t\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"subtract\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"ToDecimalPlaces\",\n\t\t\"Synopsis\": \"Precisely round a number to a certain number of decimal places.\"\n\t},\n\n\t\"Inputs\":\n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"decimalplaces\": { \"Hash\": \"decimalplaces\", \"Type\": \"Number\", \"Default\":2 },\n\t\t\"roundingmode\": { \"Hash\": \"roundingmode\", \"Type\":\"String\" }\n\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Round {{Name:a}} to {{Value:decimalplaces}} decimal places, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = Round({{InputValue:a}} TO {{Value:decimalplaces}} decimal places) = {{OutputValue:x}}\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"todecimalplaces\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"PreciseMath\",\n\t\t\"Operation\": \"ToSignificantDigits\",\n\t\t\"Synopsis\": \"Precisely round a number to a specific number of significant digits.\"\n\t},\n\n\t\"Inputs\":\n\t{\n\t\t\"a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t\t\"digits\": { \"Hash\": \"digits\", \"Type\": \"Number\", \"Default\":12 },\n\t\t\"roundingmode\": { \"Hash\": \"roundingmode\", \"Type\":\"String\" }\n\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"x\": { \"Hash\": \"x\", \"Type\": \"Number\" }\n\t},\n\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Round {{Name:a}} to {{InputValue:digits}}, storing the value in {{Name:x}}.\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:x}} = Round({{InputValue:a}} TO {{InputValue:digits}}) = {{OutputValue:x}}\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"PreciseMath\",\n\t\t\t\"Instruction\": \"tosignificantdigits\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"Set\",\n\t\t\"Operation\": \"GroupValuesBy\",\n\t\t\"Synopsis\": \"Group set of Sub object values by another property in the objects.\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"inputDataSet\": { \"Hash\":\"inputDataSet\", \"Type\":\"Set\" },\n\t\t\"groupByProperty\": { \"Hash\":\"groupByProperty\", \"Type\":\"Any\"},\n\t\t\"groupValueProperty\": { \"Hash\":\"groupValueProperty\", \"Type\":\"Any\"}\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"outputDataSet\": { \"Hash\": \"outputDataSet\", \"Type\": \"Set\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Group {{Name:inputDataSet}} by {{Name:groupByProperty}} and create a mapped result set into {{Name:outputDataSet}}.\",\n\t\t\"PostOperation\": \"Operation complete: Grouping {{Name:inputDataSet}} by {{Name:groupByProperty}} into {{Name:outputDataSet}}\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"Set\",\n\t\t\t\"Instruction\": \"GroupValuesBy\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"String\",\n\t\t\"Operation\": \"Replace\",\n\t\t\"Synopsis\": \"Replace all instances of searchFor with replaceWith in inputString\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"inputString\": { \"Hash\": \"inputString\", \"Type\": \"String\" },\n\t\t\"searchFor\": { \"Hash\": \"searchFor\", \"Type\": \"String\" },\n\t\t\"replaceWith\": { \"Hash\": \"replaceWith\", \"Type\": \"String\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"outputString\": { \"Hash\": \"outputString\", \"Type\": \"String\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Search for [{{InputValue:searchFor}}] and replace it with [{{InputValue:replaceWith}}] in [{{InputValue:inputString}}].\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:outputString}} = [{{OutputValue:outputString}}] from [{{InputValue:inputString}}] replacing [{{InputValue:searchFor}}] with [{{InputValue:replaceWith}}].\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"String\",\n\t\t\t\"Instruction\": \"replace\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"String\",\n\t\t\"Operation\": \"Substring\",\n\t\t\"Synopsis\": \"Get all characters between indexStart and indexEnd (optional) for a given inputString.\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"inputString\": { \"Hash\": \"inputString\", \"Type\": \"String\" },\n\t\t\"indexStart\": { \"Hash\": \"indexStart\", \"Type\": \"Number\", \"Default\":0 },\n\t\t\"indexEnd\": { \"Hash\": \"indexEnd\", \"Type\": \"String\", \"Default\":null }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"outputString\": { \"Hash\": \"outputString\", \"Type\": \"String\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Get all characters between {{InputValue:indexStart}} and {{InputValue:indexEnd}} in [{{InputValue:inputString}}].\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:outputString}} = [{{OutputValue:outputString}}] from [{{InputValue:inputString}}] between {{InputValue:indexStart}} and {{InputValue:indexEnd}}.\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"String\",\n\t\t\t\"Instruction\": \"substring\"\n\t\t}\n\t]\n}","module.exports={\n\t\"Description\":\n\t{\n\t\t\"Namespace\": \"String\",\n\t\t\"Operation\": \"Trim\",\n\t\t\"Synopsis\": \"Trim whitespace off the end of string in inputString, putting the result in outputString\"\n\t},\n\n\t\"Inputs\": \n\t{\n\t\t\"inputString\": { \"Hash\": \"inputString\", \"Type\": \"String\" }\n\t},\n\n\t\"Outputs\":\n\t{\n\t\t\"outputString\": { \"Hash\": \"outputString\", \"Type\": \"String\" }\n\t},\n\t\n\t\"Log\":\n\t{\n\t\t\"PreOperation\": \"Trim the whitespace from value [{{InputValue:inputString}}].\",\n\t\t\"PostOperation\": \"Operation complete: {{Name:outputString}} = [{{OutputValue:outputString}}] from [{{InputValue:inputString}}]\"\n\t},\n\n\t\"Steps\":\n\t[\n\t\t{\n\t\t\t\"Namespace\": \"String\",\n\t\t\t\"Instruction\": \"trim\"\n\t\t}\n\t]\n}","let libElucidatorInstructionSet = require('../Elucidator-InstructionSet.js');\n\nconst libDecimal = require('decimal.js');\n\nlet add = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a'));\n    let tmpB = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'b'));\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA.plus(tmpB).toString());\n    return true;\n};\n\nlet subtract = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a'));\n    let tmpB = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'b'));\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA.sub(tmpB).toString());\n    return true;\n};\n\nlet multiply = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a'));\n    let tmpB = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'b'));\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA.mul(tmpB).toString());\n    return true;\n};\n\nlet divide = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a'));\n    let tmpB = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'b'));\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA.div(tmpB).toString());\n    return true;\n};\n\nlet round = (pOperation) =>\n{\n    let tmpA = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a'));\n\n    let tmpPrecision = parseInt(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'precision'));\n    let tmpRoundingMode = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'roundingmode')\n\n    // Eventually don't set this every time...\n    if (tmpRoundingMode)\n    {\n        switch (tmpRoundingMode.toString().toLowerCase())\n        {\n            case 'round_up':\n                libDecimal.set({ rounding: libDecimal.ROUND_UP });\n                break;\n            case 'round_down':\n                libDecimal.set({ rounding: libDecimal.ROUND_DOWN });\n                break;\n            case 'round_ceil':\n                libDecimal.set({ rounding: libDecimal.ROUND_CEIL });\n                break;\n            case 'round_floor':\n                libDecimal.set({ rounding: libDecimal.ROUND_FLOOR });\n                break;\n            default:\n            case 'round_half_up':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_UP });\n                break;\n            case 'round_half_down':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_DOWN });\n                break;\n            case 'round_half_even':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_EVEN });\n                break;\n            case 'round_half_ceil':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_CEIL });\n                break;\n            case 'round_half_floor':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_FLOOR });\n                break;\n            case 'euclid':\n                libDecimal.set({ rounding: libDecimal.EUCLID });\n                break;\n        }\n    }\n    \n    if (!isNaN(tmpPrecision))\n    {\n        libDecimal.set({ precision: tmpPrecision });\n    }\n\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', libDecimal.round(tmpA).toString());\n};\n\n\nlet tosignificantdigits = (pOperation) =>\n{\n    let tmpA = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a'));\n\n    let tmpDigits = parseInt(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'digits'));\n    let tmpRoundingMode = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'roundingmode')\n\n    // Eventually don't set this every time...\n    if (tmpRoundingMode)\n    {\n        switch (tmpRoundingMode.toString().toLowerCase())\n        {\n            case 'round_up':\n                libDecimal.set({ rounding: libDecimal.ROUND_UP });\n                break;\n            case 'round_down':\n                libDecimal.set({ rounding: libDecimal.ROUND_DOWN });\n                break;\n            case 'round_ceil':\n                libDecimal.set({ rounding: libDecimal.ROUND_CEIL });\n                break;\n            case 'round_floor':\n                libDecimal.set({ rounding: libDecimal.ROUND_FLOOR });\n                break;\n            default:\n            case 'round_half_up':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_UP });\n                break;\n            case 'round_half_down':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_DOWN });\n                break;\n            case 'round_half_even':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_EVEN });\n                break;\n            case 'round_half_ceil':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_CEIL });\n                break;\n            case 'round_half_floor':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_FLOOR });\n                break;\n            case 'euclid':\n                libDecimal.set({ rounding: libDecimal.EUCLID });\n                break;\n        }\n    }\n    \n    if (isNaN(tmpDigits))\n    {\n        tmpDigits = 12;\n    }\n\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA.toSignificantDigits(tmpDigits).toString());\n};\n\nlet todecimalplaces = (pOperation) =>\n{\n    let tmpA = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a'));\n\n    let tmpDecimalPlaces = parseInt(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'decimalplaces'));\n    let tmpRoundingMode = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'roundingmode')\n\n    // Eventually don't set this every time...\n    if (tmpRoundingMode)\n    {\n        switch (tmpRoundingMode.toString().toLowerCase())\n        {\n            case 'round_up':\n                libDecimal.set({ rounding: libDecimal.ROUND_UP });\n                break;\n            case 'round_down':\n                libDecimal.set({ rounding: libDecimal.ROUND_DOWN });\n                break;\n            case 'round_ceil':\n                libDecimal.set({ rounding: libDecimal.ROUND_CEIL });\n                break;\n            case 'round_floor':\n                libDecimal.set({ rounding: libDecimal.ROUND_FLOOR });\n                break;\n            default:\n            case 'round_half_up':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_UP });\n                break;\n            case 'round_half_down':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_DOWN });\n                break;\n            case 'round_half_even':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_EVEN });\n                break;\n            case 'round_half_ceil':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_CEIL });\n                break;\n            case 'round_half_floor':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_FLOOR });\n                break;\n            case 'euclid':\n                libDecimal.set({ rounding: libDecimal.EUCLID });\n                break;\n        }\n    }\n    \n    if (isNaN(tmpDecimalPlaces))\n    {\n        tmpDecimalPlaces = 2;\n    }\n\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA.toDecimalPlaces(tmpDecimalPlaces).toString());\n};\n\nlet setprecision = (pOperation) =>\n{\n    let tmpPrecision = parseInt(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'precision'));\n    \n    console.log(tmpPrecision)\n    if (!isNaN(tmpPrecision))\n    {\n        libDecimal.set({ precision: tmpPrecision });\n    }\n};\n\nlet setroundingmode = (pOperation) =>\n{\n    let tmpRoundingMode = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'roundingmode')\n\n    // Eventually don't set this every time...\n    if (tmpRoundingMode)\n    {\n        switch (tmpRoundingMode.toString().toLowerCase())\n        {\n            case 'round_up':\n                libDecimal.set({ rounding: libDecimal.ROUND_UP });\n                break;\n            case 'round_down':\n                libDecimal.set({ rounding: libDecimal.ROUND_DOWN });\n                break;\n            case 'round_ceil':\n                libDecimal.set({ rounding: libDecimal.ROUND_CEIL });\n                break;\n            case 'round_floor':\n                libDecimal.set({ rounding: libDecimal.ROUND_FLOOR });\n                break;\n            default:\n            case 'round_half_up':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_UP });\n                break;\n            case 'round_half_down':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_DOWN });\n                break;\n            case 'round_half_even':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_EVEN });\n                break;\n            case 'round_half_ceil':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_CEIL });\n                break;\n            case 'round_half_floor':\n                libDecimal.set({ rounding: libDecimal.ROUND_HALF_FLOOR });\n                break;\n            case 'euclid':\n                libDecimal.set({ rounding: libDecimal.EUCLID });\n                break;\n        }\n    }\n};\n\nlet aggregate = (pOperation) =>\n{\n    let tmpA = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a');\n\n    let tmpObjectType = typeof(tmpA);\n\n    let tmpAggregationValue = new libDecimal(0);\n\n    if (tmpObjectType == 'object')\n    {\n        if (Array.isArray(tmpA))\n        {\n            for (let i = 0; i < tmpA.length; i++)\n            {\n                // If this is an array, enumerate it and try to aggregate each number\n                let tmpValue = new libDecimal(tmpA[i]);\n\n                if (isNaN(tmpValue))\n                {\n                    pOperation.logError(`Array element index [${i}] could not be parsed as a number by Decimal.js; skipping.  (${tmpA[i]})`);\n                }\n                else\n                {\n                    tmpAggregationValue = tmpAggregationValue.plus(tmpValue);\n                    pOperation.logInfo(`Adding element [${i}] value ${tmpValue} totaling: ${tmpAggregationValue}`)\n                }\n            }\n        }\n        else\n        {\n            let tmpObjectKeys = Object.keys(tmpA);\n            for (let i = 0; i < tmpObjectKeys.length; i++)\n            {\n                let tmpValue = new libDecimal(tmpA[tmpObjectKeys[i]]);\n\n                if (isNaN(tmpValue))\n                {\n                    pOperation.logError(`Object property [${tmpObjectKeys[i]}] could not be parsed as a number; skipping.  (${tmpA[tmpObjectKeys[i]]})`);\n                }\n                else\n                {\n                    tmpAggregationValue = tmpAggregationValue.plus(tmpValue);\n                    pOperation.logInfo(`Adding object property [${tmpObjectKeys[i]}] value ${tmpValue} totaling: ${tmpAggregationValue}`)\n                }\n            }\n        }\n    }\n    else\n    {\n        let tmpValue = new libDecimal(tmpA);\n\n        if (isNaN(tmpValue))\n        {\n            pOperation.logError(`Direct value could not be parsed as a number; skipping.  (${tmpA})`);\n        }\n        else\n        {\n            tmpAggregationValue = tmpValue;\n        }\n    }\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpAggregationValue.toString());\n    return true;\n};\n\nconst groupValuesAndAggregate = (pOperation) =>\n{\n    let tmpInputDataSet = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'inputDataSet');\n    let tmpGroupByProperty = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'groupByProperty');\n    let tmpGroupValueProperty = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'groupValueProperty');\n\n    let tmpOutputDataSet = {};\n    let tmpProcessedOutputDataSet = {};\n \n    let tmpObjectType = typeof(tmpInputDataSet);\n\n    if (tmpObjectType == 'object')\n    {\n        if (Array.isArray(tmpInputDataSet))\n        {\n            for (let i = 0; i < tmpInputDataSet.length; i++)\n            {\n                if (typeof(tmpInputDataSet[i]) !== 'object')\n                {\n                    pOperation.logInfo(`Element [${i}] was not an object; skipping group operation.`);\n                }\n                else\n                {\n                    let tmpValue = tmpInputDataSet[i];\n                    let tmpGroupByValue = tmpValue[tmpGroupByProperty];\n                    if (!tmpValue.hasOwnProperty(tmpGroupByProperty))\n                    {\n                        pOperation.logInfo(`Element [${i}] doesn't have the group by property [${tmpGroupByProperty}]; setting group to [__NO_GROUP].`);\n                        tmpGroupByValue = '__NO_GROUP';\n                    }\n\n                    if (!tmpValue.hasOwnProperty(tmpGroupValueProperty))\n                    {\n                        pOperation.logInfo(`Element [${i}] doesn't have the group value property [${tmpGroupValueProperty}]; skipping group operation.`);\n                    }\n                    else\n                    {\n                        let tmpDecimalValue = new libDecimal(tmpValue[tmpGroupValueProperty]);\n\n                        if (isNaN(tmpDecimalValue))\n                        {\n                            pOperation.logError(`Object property [${i}] could not be parsed as a number; skipping.  (${tmpValue[tmpGroupValueProperty]})`);\n                        }\n                        else\n                        {\n                            if (!tmpOutputDataSet.hasOwnProperty(tmpGroupByValue))\n                            {\n                                tmpOutputDataSet[tmpGroupByValue] = tmpDecimalValue;\n                            }\n                            else\n                            {\n                                tmpOutputDataSet[tmpGroupByValue] = tmpOutputDataSet[tmpGroupByValue].plus(tmpDecimalValue);\n                            }\n                            pOperation.logInfo(`Adding object property [${i}] value ${tmpDecimalValue} totaling: ${tmpOutputDataSet[tmpGroupByValue]}`)\n                        }\n                    }\n                }\n            }\n        }\n        else\n        {\n            let tmpObjectKeys = Object.keys(tmpInputDataSet);\n            for (let i = 0; i < tmpObjectKeys.length; i++)\n            {\n                if (typeof(tmpInputDataSet[tmpObjectKeys[i]]) !== 'object')\n                {\n                    pOperation.logInfo(`Element [${i}] was not an object; skipping group operation.`);\n                }\n                else\n                {\n                    let tmpValue = tmpInputDataSet[tmpObjectKeys[i]];\n                    let tmpGroupByValue = tmpValue[tmpGroupByProperty];\n                    if (!tmpValue.hasOwnProperty(tmpGroupByProperty))\n                    {\n                        pOperation.logInfo(`Element [${tmpObjectKeys[i]}][${i}] doesn't have the group by property [${tmpGroupByProperty}]; setting group to [__NO_GROUP].`);\n                        tmpGroupByValue = '__NO_GROUP';\n                    }\n\n                    if (!tmpValue.hasOwnProperty(tmpGroupValueProperty))\n                    {\n                        pOperation.logInfo(`Element [${tmpObjectKeys[i]}][${i}] doesn't have the group value property [${tmpGroupValueProperty}]; skipping group operation.`);\n                    }\n                    else\n                    {\n                        let tmpDecimalValue = new libDecimal(tmpValue[tmpGroupValueProperty]);\n\n                        if (isNaN(tmpDecimalValue))\n                        {\n                            pOperation.logError(`Object property [${tmpObjectKeys[i]}][${i}] to group ${tmpGroupByValue} could not be parsed as a number; skipping.  (${tmpValue[tmpGroupValueProperty]})`);\n                        }\n                        else\n                        {\n                            if (!tmpOutputDataSet.hasOwnProperty(tmpGroupByValue))\n                            {\n                                tmpOutputDataSet[tmpGroupByValue] = tmpDecimalValue;\n                            }\n                            else\n                            {\n                                tmpOutputDataSet[tmpGroupByValue] = tmpOutputDataSet[tmpGroupByValue].plus(tmpDecimalValue);\n                            }\n                            pOperation.logInfo(`Adding object property [${tmpObjectKeys[i]}][${i}] to group ${tmpGroupByValue} value ${tmpDecimalValue} totaling: ${tmpOutputDataSet[tmpGroupByValue]}`)\n                        }\n                    }\n                }\n            }\n        }\n\n        // Now marshal the aggregated values\n        let tmpOutputGroups = Object.keys(tmpOutputDataSet);\n        for (let j = 0; j < tmpOutputGroups.length; j++)\n        {\n            tmpProcessedOutputDataSet[tmpOutputGroups[j]] = tmpOutputDataSet[tmpOutputGroups[j]].toString();\n        }\n    }\n    else\n    {\n        pOperation.logError(`Input set is neither an Array nor an Object`);\n    }\n\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'outputDataSet', tmpProcessedOutputDataSet);\n\n    return true;\n}\n\nlet toFraction = (pOperation) =>\n{\n    // This could be done in one line, but, would be more difficult to comprehend.\n    let tmpA = new libDecimal(pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'a'));\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'x', tmpA.toFraction().toString());\n    return true;\n};\n\n\nclass PreciseMath extends libElucidatorInstructionSet\n{\n    constructor(pElucidator)\n    {\n        super(pElucidator);\n        this.namespace = 'PreciseMath';\n    }\n\n    initializeInstructions()\n    {\n        this.addInstruction('add', add);\n\n        this.addInstruction('subtract', subtract);\n        this.addInstruction('sub', subtract);\n\n        this.addInstruction('multiply', multiply);\n        this.addInstruction('mul', multiply);\n\n        this.addInstruction('divide', divide);\n        this.addInstruction('div', divide);\n\n        this.addInstruction('aggregate', aggregate);\n        this.addInstruction('groupvaluesandaggregate', groupValuesAndAggregate);\n\n        this.addInstruction('setprecision', setprecision);\n        this.addInstruction('setroundingmode', setroundingmode);\n\n        this.addInstruction('todecimalplaces', todecimalplaces);\n        this.addInstruction('tosignificantdigits', tosignificantdigits);\n        this.addInstruction('round', round);\n        this.addInstruction('tofraction', toFraction);\n\n\n        return true;\n    }\n\n    initializeOperations()\n    {\n        this.addOperation('add', require(`./Operations/PreciseMath-Add.json`));\n        this.addOperation('subtract', require(`./Operations/PreciseMath-Subtract.json`));\n        this.addOperation('multiply', require(`./Operations/PreciseMath-Multiply.json`));\n        this.addOperation('divide', require(`./Operations/PreciseMath-Divide.json`));\n\n        this.addOperation('aggregate', require('./Operations/PreciseMath-Aggregate.json'));\n        this.addOperation('groupvaluesandaggregate', require('./Operations/PreciseMath-GroupValuesAndAggregate.json'));\n\n        this.addOperation('setprecision', require('./Operations/PreciseMath-SetPrecision.json'));\n        this.addOperation('setroundingmode', require('./Operations/PreciseMath-SetRoundingMode.json'));\n\n        this.addOperation('tosignificantdigits', require('./Operations/PreciseMath-ToSignificantDigits.json'));\n        this.addOperation('todecimalplaces', require('./Operations/PreciseMath-ToDecimalPlaces.json'));\n        this.addOperation('round', require('./Operations/PreciseMath-Round.json'));\n\n        return true;\n    }\n}\n\nmodule.exports = PreciseMath;","// Solution providers are meant to be stateless, and not classes.\n// These solution providers are akin to drivers, connecting code libraries or \n// other types of behavior to mapping operations.\n\nlet libElucidatorInstructionSet = require('../Elucidator-InstructionSet.js');\n\nconst groupValuesBy = (pOperation) =>\n{\n    let tmpInputDataSet = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'inputDataSet');\n    let tmpGroupByProperty = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'groupByProperty');\n    let tmpGroupValueProperty = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'groupValueProperty');\n\n    let tmpOutputDataSet = {};\n \n    let tmpObjectType = typeof(tmpInputDataSet);\n\n    if (tmpObjectType == 'object')\n    {\n        if (Array.isArray(tmpInputDataSet))\n        {\n            for (let i = 0; i < tmpInputDataSet.length; i++)\n            {\n                if (typeof(tmpInputDataSet[i]) !== 'object')\n                {\n                    pOperation.logInfo(`Element [${i}] was not an object; skipping group operation.`);\n                }\n                else\n                {\n                    let tmpValue = tmpInputDataSet[i];\n                    let tmpGroupByValue = tmpValue[tmpGroupByProperty];\n                    if (!tmpValue.hasOwnProperty(tmpGroupByProperty))\n                    {\n                        pOperation.logInfo(`Element [${i}] doesn't have the group by property [${tmpGroupByProperty}]; setting group to [__NO_GROUP].`);\n                        tmpGroupByValue = '__NO_GROUP';\n                    }\n\n                    if (!tmpValue.hasOwnProperty(tmpGroupValueProperty))\n                    {\n                        pOperation.logInfo(`Element [${i}] doesn't have the group value property [${tmpGroupValueProperty}]; skipping group operation.`);\n                    }\n                    else\n                    {\n                        if (!tmpOutputDataSet.hasOwnProperty(tmpGroupByValue))\n                        {\n                            // Create a new grouped value\n                            pOperation.logInfo(`Creating a new group [${tmpGroupByValue}] for element [${i}].`);\n                            tmpOutputDataSet[tmpGroupByValue] = [];\n                        }\n\n                        tmpOutputDataSet[tmpGroupByValue].push(tmpValue[tmpGroupValueProperty]);\n                    }\n                }\n            }\n        }\n        else\n        {\n            let tmpObjectKeys = Object.keys(tmpInputDataSet);\n            for (let i = 0; i < tmpObjectKeys.length; i++)\n            {\n                if (typeof(tmpInputDataSet[tmpObjectKeys[i]]) !== 'object')\n                {\n                    pOperation.logInfo(`Element [${i}] was not an object; skipping group operation.`);\n                }\n                else\n                {\n                    let tmpValue = tmpInputDataSet[tmpObjectKeys[i]];\n                    let tmpGroupByValue = tmpValue[tmpGroupByProperty];\n                    if (!tmpValue.hasOwnProperty(tmpGroupByProperty))\n                    {\n                        pOperation.logInfo(`Element [${tmpObjectKeys[i]}][${i}] doesn't have the group by property [${tmpGroupByProperty}]; setting group to [__NO_GROUP].`);\n                        tmpGroupByValue = '__NO_GROUP';\n                    }\n\n                    if (!tmpValue.hasOwnProperty(tmpGroupValueProperty))\n                    {\n                        pOperation.logInfo(`Element [${tmpObjectKeys[i]}][${i}] doesn't have the group value property [${tmpGroupValueProperty}]; skipping group operation.`);\n                    }\n                    else\n                    {\n                        if (!tmpOutputDataSet.hasOwnProperty(tmpGroupByValue))\n                        {\n                            // Create a new grouped value\n                            pOperation.logInfo(`Creating a new group [${tmpGroupByValue}] for element [${tmpObjectKeys[i]}][${i}].`);\n                            tmpOutputDataSet[tmpGroupByValue] = [];\n                        }\n\n                        tmpOutputDataSet[tmpGroupByValue].push(tmpValue[tmpGroupValueProperty]);\n                    }\n                }\n            }\n        }\n    }\n    else\n    {\n        pOperation.logError(`Input set is neither an Array nor an Object`);\n    }\n\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'outputDataSet', tmpOutputDataSet);\n\n    return true;\n}\n\nclass Set extends libElucidatorInstructionSet\n{\n    constructor(pElucidator)\n    {\n        super(pElucidator);\n        this.namespace = 'Set';\n    }\n\n    initializeInstructions()\n    {\n        // Logic actually wants a noop instruction!\n        super.initializeInstructions();\n\n        this.addInstruction('groupvaluesby', groupValuesBy);\n\n        return true;\n    }\n\n    initializeOperations()\n    {\n        this.addOperation('groupvaluesby', require(`./Operations/Set-GroupValuesBy.json`));\n\n        return true;\n    }\n}\n\nmodule.exports = Set;","// Solution providers are meant to be stateless, and not classes.\n// These solution providers are akin to drivers, connecting code libraries or \n// other types of behavior to mapping operations.\n\nlet libElucidatorInstructionSet = require('../Elucidator-InstructionSet.js');\n\nlet trim = (pOperation) =>\n{\n    let tmpInputString = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'inputString');\n\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'outputString', tmpInputString.trim());\n\n    return true;\n};\n\nlet replace = (pOperation) =>\n{\n    let tmpInputString = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'inputString');\n    let tmpSearchFor = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'searchFor');\n    let tmpReplaceWith = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'replaceWith');\n\n    pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'outputString', tmpInputString.replace(tmpSearchFor, tmpReplaceWith));\n\n    return true;\n};\n\nlet substring = (pOperation) =>\n{\n    let tmpInputString = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'inputString');\n    let indexStart = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'indexStart');\n    let indexEnd = pOperation.InputManyfest.getValueByHash(pOperation.InputObject, 'indexEnd');\n\n    if (indexEnd != null)\n    {\n        pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'outputString', tmpInputString.substring(indexStart, indexEnd));\n    }\n    else\n    {\n        pOperation.OutputManyfest.setValueByHash(pOperation.OutputObject, 'outputString', tmpInputString.substring(indexStart));\n    }\n\n    return true;\n};\n\nclass StringOperations extends libElucidatorInstructionSet\n{\n    constructor(pElucidator)\n    {\n        super(pElucidator);\n        this.namespace = 'String';\n    }\n\n    initializeInstructions()\n    {\n        this.addInstruction('trim', trim);\n        this.addInstruction('replace', replace);\n        this.addInstruction('substring', substring);\n\n        return true;\n    }\n\n    initializeOperations()\n    {\n        this.addOperation('trim', require(`./Operations/String-Trim.json`));\n        this.addOperation('replace', require(`./Operations/String-Replace.json`));\n        this.addOperation('substring', require(`./Operations/String-Substring.json`));\n\n        return true;\n    }\n}\n\nmodule.exports = StringOperations;","/**\n* Base Logger Class\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\nclass BaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = (typeof(pLogStreamSettings) == 'object') ? pLogStreamSettings : {};\n\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\t// We added this as the mechanism for tracking loggers to allow multiple simultaneous streams\n\t\t// to the same provider.\n\t\tthis.loggerUUID = this.generateInsecureUUID();\n\n\t\t// Eventually we can use this array to ompute which levels the provider allows.\n\t\t// For now it's just used to precompute some string concatenations.\n\t\tthis.levels = (\n\t\t\t[\n\t\t\t\t\"trace\",\n\t\t\t\t\"debug\",\n\t\t\t\t\"info\",\n\t\t\t\t\"warn\",\n\t\t\t\t\"error\",\n\t\t\t\t\"fatal\"\n\t\t\t]);\n\t}\n\n\t// This is meant to generate programmatically insecure UUIDs to identify loggers\n\tgenerateInsecureUUID()\n\t{\n\t\tlet tmpDate = new Date().getTime();\n\t\tlet tmpUUID = 'LOGSTREAM-xxxxxx-yxxxxx'.replace(/[xy]/g,\n\t\t\t\t(pCharacter) =>\n\t\t\t\t{\n\t\t\t\t\t// Funny algorithm from w3resource that is twister-ish without the deep math and security\n\t\t\t\t\t// ..but good enough for unique log stream identifiers\n\t\t\t\t\tlet tmpRandomData = (tmpDate + Math.random()*16)%16 | 0;\n\t\t\t\t\ttmpDate = Math.floor(tmpDate/16);\n\n\t\t\t\t\treturn (pCharacter =='x' ? tmpRandomData : (tmpRandomData&0x3|0x8)).toString(16);\n\t\t\t\t});\n\t\treturn tmpUUID;\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n","/**\n* Default Logger Provider Function\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\ngetDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\ttmpDefaultProviders.default = tmpDefaultProviders.console;\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();","module.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]","let libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings);\n\n\t\tthis._ShowTimeStamps = this._Settings.hasOwnProperty('showtimestamps') ? (this._Settings.showtimestamps == true) : true;\n\t\tthis._FormattedTimeStamps = this._Settings.hasOwnProperty('formattedtimestamps') ? (this._Settings.formattedtimestamps == true) : true;\n\n\t\tthis._ContextMessage = this._Settings.hasOwnProperty('Context') ? `(${this._Settings.Context})` : \n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? `(${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'Unnamed_Log_Context';\n\n\t\t// Allow the user to decide what gets output to the console\n\t\tthis._OutputLogLinesToConsole = this._Settings.hasOwnProperty('outputloglinestoconsole') ? this._Settings.outputloglinestoconsole : true;\n\t\tthis._OutputObjectsToConsole = this._Settings.hasOwnProperty('outputobjectstoconsole') ? this._Settings.outputobjectstoconsole : true;\n\n\t\t// Precompute the prefix for each level\n\t\tthis.prefixCache = {};\n\t\tfor (let i = 0; i <= this.levels.length; i++)\n\t\t{\n\t\t\tthis.prefixCache[this.levels[i]] = `[${this.levels[i]}] ${this._ContextMessage}: `;\n\n\t\t\tif (this._ShowTimeStamps)\n\t\t\t{\n\t\t\t\t// If there is a timestamp we need a to prepend space before the prefixcache string, since the timestamp comes first\n\t\t\t\tthis.prefixCache[this.levels[i]] = ' '+this.prefixCache[this.levels[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpTimeStamp = '';\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = (new Date()).toISOString();\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = +new Date();\n\t\t}\n\n\t\tlet tmpLogLine = `${tmpTimeStamp}${this.prefixCache[pLevel]}${pLogText}`;\n\n\t\tif (this._OutputLogLinesToConsole)\n\t\t{\n\t\t\tconsole.log(tmpLogLine);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (this._OutputObjectsToConsole && (typeof(pObject) !== 'undefined'))\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 2));\n\t\t}\n\n\t\t// Provide an easy way to be overridden and be consistent\n\t\treturn tmpLogLine;\n\t}\n}\n\nmodule.exports = ConsoleLogger;","const libConsoleLog = require('./Fable-Log-Logger-Console.js');\nconst libFS = require('fs');\nconst libPath = require('path');\n\nclass SimpleFlatFileLogger extends libConsoleLog\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings, pFableLog);\n\n\t\t// If a path isn't provided for the logfile, it tries to use the ProductName or Context\n\t\tthis.logFileRawPath = (this._Settings.hasOwnProperty('path')) ? this._Settings.path : `./${this._ContextMessage}.log`;\n\t\tthis.logFilePath = libPath.normalize(this.logFileRawPath);\n\n\t\tthis.logFileStreamOptions = (this._Settings.hasOwnProperty('fileStreamoptions')) ? this._Settings.fileStreamOptions : (\n\t\t\t{\n\t\t\t\t\"flags\": \"a\",\n\t\t\t\t\"encoding\": \"utf8\"\n\t\t\t})\n\n\t\tthis.fileWriter = libFS.createWriteStream(this.logFilePath, this.logFileStreamOptions);\n\n\t\tthis.activelyWriting = false;\n\n\t\tthis.logLineStrings = [];\n\t\tthis.logObjectStrings = [];\n\n\t\tthis.defaultWriteCompleteCallback = ()=>{};\n\t\tthis.defaultBufferFlushCallback = ()=>{};\n\t}\n\n\tcloseWriter(fCloseComplete)\n\t{\n\t\tlet tmpCloseComplete = (typeof(fCloseComplete) == 'function') ? fCloseComplete : ()=>{};\n\t\tif (this.fileWriter)\n\t\t{\n\t\t\tthis.fileWriter.end('\\n');\n\t\t\treturn this.fileWriter.once('finish', tmpCloseComplete.bind(this));\n\t\t}\n\t};\n\n\tcompleteBufferFlushToLogFile(fFlushComplete)\n\t{\n\t\tthis.activelyWriting = false;\n\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\tif (this.logLineStrings.length > 0)\n\t\t{\n\t\t\tthis.flushBufferToLogFile(tmpFlushComplete);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpFlushComplete();\n\t\t}\n\t}\n\n\tflushBufferToLogFile(fFlushComplete)\n\t{\n\t\tif (!this.activelyWriting)\n\t\t{\n\t\t\t// Only want to be writing one thing at a time....\n\t\t\tthis.activelyWriting = true;\n\n\t\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\t\t// Get the current buffer arrays.  These should always have matching number of elements.\n\t\t\tlet tmpLineStrings = this.logLineStrings;\n\t\t\tlet tmpObjectStrings = this.logObjectStrings;\n\n\t\t\t// Reset these to be filled while we process this queue...\n\t\t\tthis.logLineStrings = [];\n\t\t\tthis.logObjectStrings = [];\n\n\t\t\t// This is where we will put each line before writing it to the file...\n\t\t\tlet tmpConstructedBufferOutputString = '';\n\n\t\t\tfor (let i = 0; i < tmpLineStrings.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: Windows Newline?   ....... yo no se!\n\t\t\t\ttmpConstructedBufferOutputString += `${tmpLineStrings[i]}\\n`;\n\t\t\t\tif (tmpObjectStrings[i] !== false)\n\t\t\t\t{\n\t\t\t\t\ttmpConstructedBufferOutputString += `${tmpObjectStrings[i]}\\n`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.fileWriter.write(tmpConstructedBufferOutputString, 'utf8'))\n\t\t\t{\n\t\t\t\t// If the streamwriter returns false, we need to wait for it to drain.\n\t\t\t\tthis.fileWriter.once('drain', this.completeBufferFlushToLogFile.bind(this, tmpFlushComplete));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.completeBufferFlushToLogFile(tmpFlushComplete);\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpLogLine = super.write(pLevel, pLogText, pObject);\n\n\t\t// Use a very simple array as the write buffer\n\t\tthis.logLineStrings.push(tmpLogLine);\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tthis.logObjectStrings.push(JSON.stringify(pObject, null, 4));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logObjectStrings.push(false);\n\t\t}\n\n\t\tthis.flushBufferToLogFile();\n\t}\n}\n\nmodule.exports = SimpleFlatFileLogger;","/**\n* Fable Logging Add-on\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Logger\n*/\n\n/**\n* Fable Solution Log Wrapper Main Class\n*\n* @class FableLog\n* @constructor\n*/\nclass FableLog\n{\n\tconstructor(pFableSettings, pFable)\n\t{\n\t\tlet tmpSettings = (typeof(pFableSettings) === 'object') ? pFableSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders-Node.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.datumDecorator = (pDatum) => pDatum;\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetDatumDecorator(fDatumDecorator)\n\t{\n\t\tif (typeof(fDatumDecorator) === 'function')\n\t\t{\n\t\t\tthis.datumDecorator = fDatumDecorator;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.datumDecorator = (pDatum) => pDatum;\n\t\t}\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'default',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableLog(pSettings);\n}\n\n\nmodule.exports = FableLog;\nmodule.exports.new = autoConstruct;\nmodule.exports.LogProviderBase = require('./Fable-Log-BaseLogger.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-Console.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-SimpleFlatFile.js');\n","module.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n","/**\n* Fable Settings Template Processor\n*\n* This class allows environment variables to come in via templated expressions, and defaults to be set.\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nclass FableSettingsTemplateProcessor\n{\n\tconstructor(pDependencies)\n\t{\n        // Use a no-dependencies templating engine to parse out environment variables\n\t\tthis.templateProcessor = new pDependencies.precedent();\n\n        // TODO: Make the environment variable wrap expression demarcation characters configurable?\n\t\tthis.templateProcessor.addPattern('${', '}',\n\t\t\t(pTemplateValue)=>\n\t\t\t{\n\t\t\t\tlet tmpTemplateValue = pTemplateValue.trim();\n\n\t\t\t\tlet tmpSeparatorIndex = tmpTemplateValue.indexOf('|');\n\n\t\t\t\t// If there is no pipe, the default value will end up being whatever the variable name is.\n\t\t\t\tlet tmpDefaultValue = tmpTemplateValue.substring(tmpSeparatorIndex+1);\n\n\t\t\t\tlet tmpEnvironmentVariableName = (tmpSeparatorIndex > -1) ? tmpTemplateValue.substring(0, tmpSeparatorIndex) : tmpTemplateValue;\n\n\t\t\t\tif (process.env.hasOwnProperty(tmpEnvironmentVariableName))\n\t\t\t\t{\n\t\t\t\t\treturn process.env[tmpEnvironmentVariableName];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpDefaultValue;\n\t\t\t\t}\n\t\t\t});\n    }\n\n    parseSetting(pString)\n    {\n        return this.templateProcessor.parseString(pString);\n    }\n}\n\nmodule.exports = FableSettingsTemplateProcessor;","/**\n* Fable Settings Add-on\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nconst libPrecedent = require('precedent');\nconst libFableSettingsTemplateProcessor = require('./Fable-Settings-TemplateProcessor.js');\n\nclass FableSettings\n{\n\tconstructor(pFableSettings)\n\t{\n\t\t// Expose the dependencies for downstream re-use\n\t\tthis.dependencies = (\n\t\t\t{\n\t\t\t\tprecedent: libPrecedent\n\t\t\t});\n\n\t\t// Initialize the settings value template processor\n\t\tthis.settingsTemplateProcessor = new libFableSettingsTemplateProcessor(this.dependencies);\n\n\t\t// set straight away so anything that uses it respects the initial setting\n\t\tthis._configureEnvTemplating(pFableSettings);\n\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pFableSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')));\n\t}\n\n\t// Update the configuration for environment variable templating based on the current settings object\n\t_configureEnvTemplating(pSettings)\n\t{\n\t\t// default environment variable templating to on\n\t\tthis._PerformEnvTemplating = !pSettings || pSettings.NoEnvReplacement !== true;\n\t}\n\n\t// Resolve (recursive) any environment variables found in settings object.\n\t_resolveEnv(pSettings)\n\t{\n\t\tfor (const tmpKey in pSettings)\n\t\t{\n\t\t\tif (typeof(pSettings[tmpKey]) === 'object')\n\t\t\t{\n\t\t\t\tthis._resolveEnv(pSettings[tmpKey]);\n\t\t\t}\n\t\t\telse if (typeof(pSettings[tmpKey]) === 'string')\n\t\t\t{\n\t\t\t\tpSettings[tmpKey] = this.settingsTemplateProcessor.parseSetting(pSettings[tmpKey]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if a value is an object (but not an array).\n\t */\n\t_isObject(value)\n\t{\n\t\treturn typeof(value) === 'object' && !Array.isArray(value);\n\t}\n\n\t/**\n\t * Merge two plain objects. Keys that are objects in both will be merged property-wise.\n\t */\n\t_deepMergeObjects(toObject, fromObject)\n\t{\n\t\tif (!fromObject || !this._isObject(fromObject))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject.keys(fromObject).forEach((key) =>\n\t\t{\n\t\t\tconst fromValue = fromObject[key];\n\t\t\tif (this._isObject(fromValue))\n\t\t\t{\n\t\t\t\tconst toValue = toObject[key];\n\t\t\t\tif (toValue && this._isObject(toValue))\n\t\t\t\t{\n\t\t\t\t\t// both are objects, so do a recursive merge\n\t\t\t\t\tthis._deepMergeObjects(toValue, fromValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoObject[key] = fromValue;\n\t\t});\n\t\treturn toObject;\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\t\ttmpSettingsTo = this._deepMergeObjects(tmpSettingsTo, tmpSettingsFromCopy);\n\n\t\tif (this._PerformEnvTemplating)\n\t\t{\n\t\t\tthis._resolveEnv(tmpSettingsTo);\n\t\t}\n\t\t// Update env tempating config, since we just updated the config object, and it may have changed\n\t\tthis._configureEnvTemplating(tmpSettingsTo);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\n\t\tthis.settings = this._deepMergeObjects(tmpSettingsFromCopy, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = FableSettings;\nmodule.exports.new = autoConstruct;\nmodule.exports.precedent = libPrecedent;","/**\n* Random Byte Generator - Browser version\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn this.generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n","/**\n* Fable UUID Generator\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable UUID\n*/\n\n/**\n* Fable Solution UUID Generation Main Class\n*\n* @class FableUUID\n* @constructor\n*/\n\nvar libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID\n{\n\tconstructor(pSettings)\n\t{\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = FableUUID;\nmodule.exports.new = autoConstruct;\n","const _OperationStatePrototype = JSON.stringify(\n{\n\t\"Metadata\": {\n\t\t\"GUID\": false,\n\t\t\"Hash\": false,\n\n\t\t\"Title\": \"\",\n\t\t\"Summary\": \"\",\n\n\t\t\"Version\": 0\n\t},\n\t\"Status\": {\n        \"Completed\": false,\n\n        \"CompletionProgress\": 0,\n        \"CompletionTimeElapsed\": 0,\n\n        \"Steps\": 1,\n        \"StepsCompleted\": 0,\n\n        \"StartTime\": 0,\n        \"EndTime\": 0\n\t},\n\t\"Errors\": [],\n\t\"Log\": []\n});\n\nclass FableOperation\n{\n\tconstructor(pFable, pOperationName, pOperationHash)\n\t{\n\t\tthis.fable = pFable;\n\n\t\tthis.name = pOperationName;\n\n\t\tthis.state = JSON.parse(_OperationStatePrototype);\n\n\t\tthis.state.Metadata.GUID = this.fable.getUUID();\n\t\tthis.state.Metadata.Hash = this.state.GUID;\n\n\t\tif (typeof(pOperationHash) == 'string')\n\t\t{\n\t\t\tthis.state.Metadata.Hash = pOperationHash;\n\t\t}\n\t}\n\n\tget GUID()\n\t{\n\t\treturn this.state.Metadata.GUID;\n\t}\n\n\tget Hash()\n\t{\n\t\treturn this.state.Metadata.Hash;\n\t}\n\n\tget log()\n\t{\n\t\treturn this;\n\t}\n\n\twriteOperationLog(pLogLevel, pLogText, pLogObject)\n\t{\n\t\tthis.state.Log.push(`${new Date().toUTCString()} [${pLogLevel}]: ${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Log.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\twriteOperationErrors(pLogText, pLogObject)\n\t{\n\t\tthis.state.Errors.push(`${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Errors.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('TRACE', pLogText, pLogObject);\n\t\tthis.fable.log.trace(pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('DEBUG', pLogText, pLogObject);\n\t\tthis.fable.log.debug(pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('INFO', pLogText, pLogObject);\n\t\tthis.fable.log.info(pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('WARN', pLogText, pLogObject);\n\t\tthis.fable.log.warn(pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('ERROR', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.error(pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('FATAL', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.fatal(pLogText, pLogObject);\n\t}\n}\n\nmodule.exports = FableOperation;","const libFableServiceBase = require('./Fable-ServiceProviderBase.js');\nconst libDataArithmatic = require('data-arithmatic');\n\nclass FableServiceDataArithmatic extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'DataArithmatic';\n\n        this._DataArithmaticLibrary = new libDataArithmatic();\n\t}\n}\n\nmodule.exports = FableServiceDataArithmatic;","const libFableServiceBase = require('./Fable-ServiceProviderBase.js');\n\nconst libPrecedent = require('precedent');\n\nclass FableServiceMetaTemplate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'MetaTemplate';\n\n        this._MetaTemplateLibrary = new libPrecedent(this.options);\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this._MetaTemplateLibrary.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this._MetaTemplateLibrary.parseString(pString, pData);\n\t}\n}\n\nmodule.exports = FableServiceMetaTemplate;","const libFableServiceBase = require('./Fable-ServiceProviderBase.js');\n\nclass FableServiceTemplate extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Template';\n\n\t\t// These are the exact regex's used in lodash/underscore\n\t\t// TODO: Switch this to precedent\n\t\tthis.Matchers = (\n\t\t\t{\n\t\t\t\tEvaluate: /<%([\\s\\S]+?)%>/g,\n\t\t\t\tInterpolate: /<%=([\\s\\S]+?)%>/g,\n\t\t\t\tEscaper: /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g,\n\t\t\t\tUnescaper: /\\\\(\\\\|'|r|n|t|u2028|u2029)/g,\n\t\t\t\t// This is how underscore does it, so we are keeping it for now.\n\t\t\t\tGuaranteedNonMatch: /.^/\n\t\t\t});\n\n\t\t// This is a helper for the escaper and unescaper functions.\n\t\t// Right now we are going to keep what underscore is doing, but, not forever.\n\t\tthis.templateEscapes = {\n\t\t\t'\\\\': '\\\\',\n\t\t\t\"'\": \"'\",\n\t\t\t'r': '\\r',\n\t\t\t'\\r': 'r',\n\t\t\t'n': '\\n',\n\t\t\t'\\n': 'n',\n\t\t\t't': '\\t',\n\t\t\t'\\t': 't',\n\t\t\t'u2028': '\\u2028',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'u2029': '\\u2029',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\t// This is defined as such to underscore that it is a dynamic programming\n\t\t// function on this class.\n\t\tthis.renderFunction = false;\n        this.templateString = false;\n\t}\n\n\trenderTemplate(pData)\n\t{\n\t\treturn this.renderFunction(pData);\n\t}\n\n\ttemplateFunction(pData)\n\t{\n\t\tlet fRenderTemplateBound = this.renderTemplate.bind(this);\n\t\treturn fRenderTemplateBound;\n\t}\n\n\tbuildTemplateFunction(pTemplateText, pData)\n\t{\n\t\t// For now this is being kept in a weird form ... this is to mimic the old\n\t\t// underscore code until this is rewritten using precedent.\n\t\tthis.TemplateSource = \"__p+='\" + pTemplateText\n\t\t\t.replace(this.Matchers.Escaper,\n\t\t\t\t(pMatch)=>\n\t\t\t\t{\n\t\t\t\t\treturn `\\\\${this.templateEscapes[pMatch]}`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Interpolate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `'+\\n(${decodeURIComponent(pCode)})+\\n'`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Evaluate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `';\\n${decodeURIComponent(pCode)}\\n;__p+='`;\n\t\t\t\t}) + `';\\n`;\n\n\n\t\tthis.TemplateSource = `with(pTemplateDataObject||{}){\\n${this.TemplateSource}}\\n`;\n\t\tthis.TemplateSource = `var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n${this.TemplateSource}return __p;\\n`;\n\n\t\tthis.renderFunction = new Function('pTemplateDataObject', this.TemplateSource);\n\n\t\tif (typeof(pData) != 'undefined')\n\t\t{\n\t\t\treturn this.renderFunction(pData);\n\t\t}\n\n\t\t// Provide the compiled function source as a convenience for build time\n\t\t// precompilation.\n\t\tthis.TemplateSourceCompiled = 'function(obj){\\n' + this.TemplateSource + '}';\n\n\t\treturn this.templateFunction();\n\t}\n}\n\nmodule.exports = FableServiceTemplate;","const libFableServiceBase = require('./Fable-ServiceProviderBase.js');\n\n\n// TODO: These are still pretty big -- consider the smaller polyfills\nconst libAsyncWaterfall = require('async.waterfall');\nconst libAsyncEachLimit = require('async.eachlimit');\n\nclass FableServiceUtility extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\tthis.templates = {};\n\n\t\t// These two functions are used extensively throughout\n\t\tthis.waterfall = libAsyncWaterfall;\n\t\tthis.eachLimit = libAsyncEachLimit;\n\t}\n\n\t// Underscore and lodash have a behavior, _.extend, which merges objects.\n\t// Now that es6 gives us this, use the native thingy.\n\textend(pDestinationObject, ...pSourceObjects)\n\t{\n\t\treturn Object.assign(pDestinationObject, ...pSourceObjects);\n\t}\n\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\ttemplate(pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Template');\n\n\t\treturn tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t}\n\n\t// Build a template function from a template hash, and, register it with the service provider\n\tbuildHashedTemplate(pTemplateHash, pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.serviceManager.instantiateServiceProvider('Template', {}, pTemplateHash);\n\n\t\tthis.templates[pTemplateHash] = tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\n\t\treturn this.templates[pTemplateHash];\n\t}\n\n\t// This is a safe, modern version of chunk from underscore\n\t// Algorithm pulled from a mix of these two polyfills:\n\t// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\n\t// https://youmightnotneed.com/lodash\n\t// This implementation was most tolerant in browsers.  Uglify can fix the rest.\n\tchunk (pInput, pChunkSize, pChunkCache)\n\t{\n\t\tlet tmpInputArray = [...pInput];\n\t\t// Note lodash defaults to 1, underscore defaults to 0\n\t\tlet tmpChunkSize = (typeof(pChunkSize) == 'number') ? pChunkSize : 0;\n\t\tlet tmpChunkCache = (typeof(pChunkCache) != 'undefined') ? pChunkCache : [];\n\n\t\tif (tmpChunkSize <= 0)\n\t\t{\n\t\t\treturn tmpChunkCache;\n\t\t}\n\n\t\twhile (tmpInputArray.length)\n\t\t{\n\t\t\ttmpChunkCache.push(tmpInputArray.splice(0, tmpChunkSize));\n\t\t}\n\n\t\treturn tmpChunkCache;\n\t}\n}\n\nmodule.exports = FableServiceUtility;","/**\n* Fable Application Services Management\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\nconst libFableServiceBase = require('./Fable-ServiceProviderBase.js');\n\nclass FableService\n{\n\tconstructor(pFable)\n\t{\n\t\tthis.fable = pFable;\n\n\t\tthis.serviceTypes = [];\n\n\t\t// A map of instantiated services\n\t\tthis.services = {};\n\n\t\t// A map of the default instantiated service by type\n\t\tthis.defaultServices = {};\n\n\t\t// A map of class constructors for services\n\t\tthis.serviceClasses = {};\n\t}\n\n\taddServiceType(pServiceType, pServiceClass)\n\t{\n\t\t// Add the type to the list of types\n\t\tthis.serviceTypes.push(pServiceType);\n\n\t\t// Add the container for instantiated services to go in\n\t\tthis.services[pServiceType] = {};\n\n\t\tif ((typeof(pServiceClass) == 'function') && (pServiceClass.prototype instanceof libFableServiceBase))\n\t\t{\n\t\t\t// Add the class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = pServiceClass;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the base class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = libFableServiceBase;\n\t\t}\n\t}\n\n\tinstantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = this.instantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.services[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.defaultServices.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.defaultServices[pServiceType] = tmpService;\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\t// Create a service provider but don't register it to live forever in fable.services\n\tinstantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new this.serviceClasses[pServiceType](this.fable, pOptions, pCustomServiceHash);\n\t\treturn tmpService;\n\t}\n\n\tsetDefaultServiceInstantiation(pServiceType, pServiceHash)\n\t{\n\t\tif (this.services[pServiceType].hasOwnProperty(pServiceHash))\n\t\t{\n\t\t\tthis.defaultServices[pServiceType] = this.services[pServiceType][pServiceHash];\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nmodule.exports = FableService;\n\nmodule.exports.ServiceProviderBase = libFableServiceBase;","/**\n* Fable Service Base\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tthis.fable = pFable;\n\n\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions : {};\n\n        this.serviceType = 'Unknown';\n\n        this.UUID = pFable.getUUID();\n\n        this.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash : `${this.UUID}`;\n\t}\n}\n\nmodule.exports = FableServiceProviderBase;\n","/**\n* Fable Application Services Support Library\n* @license MIT\n* @author <steven@velozo.com>\n*/\nconst libFableSettings = require('fable-settings');\nconst libFableUUID = require('fable-uuid');\nconst libFableLog = require('fable-log');\n\nconst libFableServiceManager = require('./Fable-ServiceManager.js');\n\nconst libFableServiceDataArithmatic = require('./Fable-Service-DataArithmatic.js');\nconst libFableServiceTemplate = require('./Fable-Service-Template.js');\nconst libFableServiceMetaTemplate = require('./Fable-Service-MetaTemplate.js');\nconst libFableServiceUtility = require('./Fable-Service-Utility.js');\n\nconst libFableOperation = require('./Fable-Operation.js');\n\nclass Fable\n{\n\tconstructor(pSettings)\n\t{\n\t\tlet tmpSettings = new libFableSettings(pSettings);\n\n\t\tthis.settingsManager = tmpSettings;\n\n\t\t// Instantiate the UUID generator\n\t\tthis.libUUID = new libFableUUID(this.settingsManager.settings);\n\n\t\tthis.log = new libFableLog(this.settingsManager.settings);\n\t\tthis.log.initialize();\n\n\t\t// Built-in dependencies\n\t\tthis.Dependencies = (\n\t\t\t{\n\t\t\t\tprecedent: libFableSettings.precedent\n\t\t\t});\n\n\t\t// Location for Operation state\n\t\tthis.Operations = {};\n\n\t\tthis.serviceManager = new libFableServiceManager(this);\n\n\t\t// Initialize and instantiate the default baked-in Data Arithmatic service\n\t\tthis.serviceManager.addServiceType('DataArithmatic', libFableServiceDataArithmatic);\n\t\tthis.fable.serviceManager.instantiateServiceProvider('DataArithmatic', {}, 'Default-Service-DataArithmatic');\n\t\t// This service is passing through the data arithmatic library\n\t\tthis.DataArithmatic = this.serviceManager.defaultServices.DataArithmatic._DataArithmaticLibrary;\n\n\t\t// Initialize the template service\n\t\tthis.serviceManager.addServiceType('Template', libFableServiceTemplate);\n\n\t\t// Initialize the metatemplate service\n\t\tthis.serviceManager.addServiceType('MetaTemplate', libFableServiceMetaTemplate);\n\n\t\t// Initialize and instantiate the default baked-in Utility service\n\t\tthis.serviceManager.addServiceType('Utility', libFableServiceUtility)\n\t\tthis.fable.serviceManager.instantiateServiceProvider('Utility', {}, 'Default-Service-Utility');\n\t\tthis.Utility = this.serviceManager.defaultServices.Utility;\n\n\t\tthis.services = this.serviceManager.services;\n\t\tthis.defaultServices = this.serviceManager.defaultServices;\n\t}\n\n\tget settings()\n\t{\n\t\treturn this.settingsManager.settings;\n\t}\n\n\tget fable()\n\t{\n\t\treturn this;\n\t}\n\n\tgetUUID()\n\t{\n\t\treturn this.libUUID.getUUID();\n\t}\n\n\tcreateOperation(pOperationName, pOperationHash)\n\t{\n\t\tlet tmpOperation = new libFableOperation(this, pOperationName, pOperationHash);\n\n\t\tif (this.Operations.hasOwnProperty(tmpOperation.Hash))\n\t\t{\n\t\t\t// Uh Oh ...... Operation Hash Collision!\n\t\t\t// TODO: What to do?!\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.Operations[tmpOperation.Hash] = tmpOperation;\n\t\t}\n\n\t\treturn tmpOperation;\n\t}\n\n\tgetOperation(pOperationHash)\n\t{\n\t\tif (!this.Operations.hasOwnProperty(pOperationHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.Operations[pOperationHash];\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new Fable(pSettings);\n}\n\nmodule.exports = Fable;\nmodule.exports.new = autoConstruct;\n\nmodule.exports.LogProviderBase = libFableLog.LogProviderBase;\nmodule.exports.ServiceProviderBase = libFableServiceManager.ServiceProviderBase;\n\nmodule.exports.precedent = libFableSettings.precedent;","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n/**\n* Informary Logging\n*\n* @class InformaryLog\n*/\n\nclass InformaryLog\n{\n\tconstructor(pSettings)\n\t{\n\t\tthis._Settings = pSettings;\n\t}\n\n\twriteConsole(pLevel, pMessage, pObject)\n\t{\n\t\t// Write the message\n\t\tconsole.log('['+pLevel+'] ('+this._Settings.Form+') '+pMessage);\n\n\t\t// Write out the object if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 4));\n\t\t}\n\t}\n\n\ttrace(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('TRACE', pMessage, pObject);\n\t}\n\n\tdebug(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('DEBUG', pMessage, pObject);\n\t}\n\n\tinfo(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('INFO', pMessage, pObject);\n\t}\n\n\twarning(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('WARNING', pMessage, pObject);\n\t}\n\n\terror(pMessage, pObject)\n\t{\n\t\tthis.writeConsole('ERROR', pMessage, pObject);\n\t}\n\n\n\t// Log the current date and time, well formatted (with Moment-Timezone)\n\tlogTime(pMessage)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpDate = new Date();\n\n\t\tthis.info(tmpMessage+': '+tmpDate.toString())\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeStamp, pMessage)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\t\tlet tmpOperationTime = tmpEndTime-pTimeStamp;\n\n\t\tthis.info(tmpMessage +' ('+tmpOperationTime+'ms)');\n\t}\n\n}\n\nmodule.exports = InformaryLog;\n","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\nlet libObjectDiff = require('deep-object-diff');\nlet libCacheTraxx = require('cachetrax');\n\n/**\n* Informary browser sync library\n*\n* @class Informary\n*/\nclass Informary\n{\n\tconstructor(pSettings, pContext, pContextGUID)\n\t{\n\t\tthis._Dependencies = {};\n\t\tthis._Dependencies.jqueryLibrary = require('jquery');\n\n\t\t// Adding a container for non-html state to be stored in, which will be marshalled into and out of the passed in FormData.\n\t\tthis._NonHTMLState = {};\n\t\tthis._NonHTMLStateProperty = `__InformaryNonHTMLState`;\n\n\t\tthis._Settings = (typeof(pSettings) === 'object') ? pSettings : (\n\t\t\t{\n\t\t\t\t// The form we are dealing with (this is a hash set on the form itself)\n\t\t\t\tForm: 'UNSET_HTML_FORM_ID',\n\n\t\t\t\tUser: 0,\n\n\t\t\t\t// The number of undo levels available\n\t\t\t\tUndoLevels: 25,\n\n\t\t\t\t// If this is true, show a whole lotta logs\n\t\t\t\tDebugLog: false\n\t\t\t});\n\n\t\tif (this._Settings.__VirtualDOM)\n\t\t{\n\t\t\t// If a virtual dom was passed in for unit tests, use that.\n\t\t\tthis._Dependencies.jquery = this._Dependencies.jqueryLibrary(this._Settings.__VirtualDOM);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._Dependencies.jquery = this._Dependencies.jqueryLibrary;\n\t\t}\n\n\t\tif (!this._Settings.User)\n\t\t{\n\t\t\t// If no user was passed in, set a default of 0\n\t\t\tthis._Settings.User = 0;\n\t\t}\n\n\t\tif (!this._Settings.Form)\n\t\t{\n\t\t\tthis._Settings.Form = 'UNSET_HTML_FORM_ID';\n\t\t}\n\n\t\t// This has behaviors similar to bunyan, for consistency\n\t\tthis._Log = new (require('./Informary-Log.js'))(this._Settings);\n\t\tthis.log = this._Log;\n\n\t\t// This is lazily set so unit tests can set an external provider for harnesses\n\t\tthis._LocalStorage = null;\n\n\t\tthis._UndoKeys = [];\n\t\tthis._UndoBuffer = new libCacheTraxx();\n\t\t// Default to 25 undo levels if it isn't passed in via settings\n\t\tthis._UndoBuffer.maxLength = this._Settings.UndoLevels ? this._Settings.UndoLevels : 25;\n\t\tthis._RedoKeys = [];\n\t\tthis._RedoBuffer = new libCacheTraxx();\n\t\tthis._RedoBuffer.maxLength = this._UndoBuffer.maxLength;\n\n\t\t// The initially loaded document state (filled out when pushed to form)\n\t\tthis._SourceDocumentState = false;\n\t\t// The latest current document state\n\t\tthis._CurrentDocumentState = false;\n\n\t\t// If no context is passed in, use `Context_0`\n\t\t// This could cause undo/redo leakage.\n\t\tthis._Context = pContext ? pContext.toString() : 'InformaryDefaultContext';\n\t\tthis._ContextGUID = pContextGUID ? pContextGUID.toString() : '0x000000001';\n\t}\n\n\t/******************************************************\n\t * Storage Provider\n\t * --\n\t * This could be abstracted to another class\n\t */\n\tsetStorageProvider (pStorageProvider)\n\t{\n\t\tthis._LocalStorage = pStorageProvider;\n\t}\n\n\tcheckStorageProvider()\n\t{\n\t\t// When running in a browser, this likely won't be set.  If it isn't,\n\t\tif (!this._LocalStorage)\n\t\t{\n\t\t\tthis._LocalStorage = window.localStorage;\n\t\t\tif (!this._LocalStorage)\n\t\t\t{\n\t\t\t\tconst cache = { };\n\t\t\t\tthis._LocalStorage =\n\t\t\t\t{\n\t\t\t\t\tsetItem: (key, value) => { cache[key] = value; },\n\t\t\t\t\tgetItem: (key) => { return cache[key]; },\n\t\t\t\t\tremoveItem: (key) => { delete cache[key]; },\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tgetIndexKey(pValueType)\n\t{\n\t\treturn `Informary_Index_User[${this._Settings.User.toString()}]_ValueType[${pValueType}]`;\n\t}\n\n\tgetStorageKey(pValueType)\n\t{\n\t\treturn `Informary_Data_User[${this._Settings.User.toString()}]_ValueType[${pValueType}]_Context[${this._Context}]_ContextGUID[${this._ContextGUID}]`;\n\t}\n\n\t// Read the whole index\n\treadIndex(pValueType)\n\t{\n\t\tthis.checkStorageProvider();\n\n\t\tlet tmpIndex = false;\n\n\t\tlet tmpData = this._LocalStorage.getItem(this.getIndexKey(pValueType));\n\n\t\tif (tmpData)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\ttmpIndex = JSON.parse(tmpData);\n\t\t\t}\n\t\t\tcatch(pError)\n\t\t\t{\n\t\t\t\tthis.log.error(`Error parsing local storage index key [${this.getIndexKey(pValueType)}]`);\n\t\t\t}\n\t\t}\n\n\t\tif (!tmpIndex)\n\t\t{\n\t\t\ttmpIndex =\n\t\t\t{\n\t\t\t\tIndexCreateTime: Date.now(),\n\t\t\t\tIndexUser: this._Settings.User\n\t\t\t}\n\t\t}\n\n\t\ttmpIndex.IndexLastReadTime = Date.now();\n\n\t\treturn tmpIndex;\n\t}\n\n\t// Read just the record key for the index\n\treadIndexValue(pValueType)\n\t{\n\t\tlet tmpIndex = this.readIndex(pValueType);\n\t\tlet tmpIndexKeyValue = tmpIndex[this.getStorageKey(pValueType)];\n\n\t\t// Rather than return undefined, return false if it's a miss\n\t\treturn (tmpIndexKeyValue) ? tmpIndexKeyValue : false;\n\t}\n\n\t// Touch the index for a value type\n\ttouchIndex(pValueType)\n\t{\n\t\tthis.checkStorageProvider();\n\n\t\tlet tmpIndex = this.readIndex(pValueType);\n\t\tlet tmpKey = this.getStorageKey(pValueType);\n\n\t\ttmpIndex[tmpKey] = {Time: Date.now(), ValueType: pValueType, User: this._Settings.User, Context: this._Context, ContextGUID: this._ContextGUID};\n\n\t\t// This relies on the readIndex above to initialize the localstorage provider\n\t\tthis._LocalStorage.setItem(this.getIndexKey(pValueType), JSON.stringify(tmpIndex));\n\t}\n\n\treadData(pValueType)\n\t{\n\t\t// Check that the storage provider is initialized\n\t\tthis.checkStorageProvider();\n\n\t\tlet tmpData = this._LocalStorage.getItem(this.getStorageKey(pValueType));\n\n\t\tif (tmpData)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\ttmpData = JSON.parse(tmpData);\n\t\t\t}\n\t\t\tcatch(pError)\n\t\t\t{\n\t\t\t\tthis.log.error(`Error parsing local storage key [${this.getStorageKey(pValueType)}]`);\n\t\t\t\ttmpData = false;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpData = false;\n\t\t}\n\n\t\treturn tmpData;\n\t}\n\n\twriteData(pValueType, pData)\n\t{\n\t\t// Check that the storage provider is initialized\n\t\tthis.checkStorageProvider();\n\n\t\t// Touch the index with a timestamp for the value\n\t\tthis.touchIndex(pValueType);\n\n\t\t// set the actual item\n\t\tthis._LocalStorage.setItem(this.getStorageKey(pValueType), JSON.stringify(pData));\n\t}\n\n\tdeleteData(pValueType)\n\t{\n\t\t// Check that the storage provider is initialized\n\t\tthis.checkStorageProvider();\n\n\t\t// Touch the index with a timestamp for the value.  Should we tell it it's a delete operation?  Hmmm..\n\t\tthis.touchIndex(pValueType);\n\n\t\t// set the actual item\n\t\tthis._LocalStorage.removeItem(this.getStorageKey(pValueType));\n\t}\n\t/*\n\t * End of Storage Provider section\n\t ******************************************************/\n\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (!typeof(pObject) === 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (!typeof(pAddress) === 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex === -1)\n\t\t{\n\t\t\t// Now is the time to return the value in the address\n\t\t\treturn pObject[pAddress];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (!typeof(pObject) === 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (!typeof(pAddress) === 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex === -1)\n\t\t{\n\t\t\t// Now is the time to set the value in the object\n\t\t\tpObject[pAddress] = pValue;\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetValueAtAddressInContainer(pRecordObject, pFormContainerAddress, pFormContainerIndex, pFormValueAddress, pFormValue)\n\t{\n\t\t// First see if there *is* a container object\n\t\tlet tmpContainerObject = this.getValueAtAddress(pRecordObject, pFormContainerAddress);\n\n\t\tif (typeof(pFormContainerAddress) !== 'string') return false;\n\n\t\tlet tmpFormContainerIndex = parseInt(pFormContainerIndex, 10);\n\t\tif (isNaN(tmpFormContainerIndex)) return false;\n\n\t\tif ((typeof(tmpContainerObject) !== 'object') || (!Array.isArray(tmpContainerObject)))\n\t\t{\n\t\t\t// Check if there is a value here and we want to store it in the \"__OverwrittenData\" thing\n\t\t\ttmpContainerObject = [];\n\t\t\tthis.setValueAtAddress(pRecordObject, pFormContainerAddress, tmpContainerObject);\n\t\t}\n\n\t\tfor (let i = 0; (tmpContainerObject.length + i) <= (tmpFormContainerIndex+1); i++)\n\t\t{\n\t\t\t// Add objects to this container until it has enough\n\t\t\ttmpContainerObject.push({});\n\t\t}\n\n\t\t// Now set the value *in* the container object\n\t\treturn this.setValueAtAddress(tmpContainerObject[tmpFormContainerIndex], pFormValueAddress, pFormValue);\n\t}\n\n\t// Write out source data\n\tstoreSourceData(pData)\n\t{\n\t\treturn this.writeData('Source', pData);\n\t}\n\n\t// Write out recovery data\n\tstoreRecoveryData(fCallback)\n\t{\n\t\tlet tmpCallback = (typeof(fCallback) == 'function') ? fCallback : ()=>{};\n\n\t\tlet tmpRecoveryData = {};\n\t\tthis.marshalFormToData(tmpRecoveryData,\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tthis._RecoveryDocumentState = tmpRecoveryData;\n\t\t\t\treturn tmpCallback(this.writeData('Recovery', this._RecoveryDocumentState));\n\t\t\t});\n\t}\n\n\tsnapshotData()\n\t{\n\t\tlet tmpNewUndoKey = Date.now().toString();\n\n\t\t// Check to see if there are any changes to the data to be stored\n\t\tlet tmpOldRecoveryState = JSON.stringify(this._RecoveryDocumentState);\n\n\t\tthis.storeRecoveryData(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tif (tmpOldRecoveryState != JSON.stringify(this._RecoveryDocumentState))\n\t\t\t\t{\n\t\t\t\t\tif (this._Settings.DebugLog)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.debug(`Creating recovery snapshot at [${tmpNewUndoKey}]...`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Destroy all data in the redo ring, because this new snapshot invalidates it.\n\t\t\t\t\twhile (this._RedoKeys.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpRedoKey = this._RedoKeys.pop();\n\t\t\t\t\t\tthis._RedoBuffer.expire(tmpRedoKey);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._UndoKeys.push(tmpNewUndoKey);\n\t\t\t\t\tthis._UndoBuffer.put(this._RecoveryDocumentState, tmpNewUndoKey);\n\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (this._Settings.DebugLog)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.debug(`Skipped creating recovery snapshot at [${tmpNewUndoKey}] because there were no changes to the recovery state...`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tsnapshotDataInitial()\n\t{\n\t\tlet tmpNewUndoKey = Date.now().toString();\n\n\t\tif (this._UndoKeys.length > 0)\n\t\t{\n\t\t\tthis.log.info(`Skipping creation of initial snapshot because one already exists.`);\n\t\t\treturn false;\n\t\t}\n\n\n\t\tthis.storeRecoveryData(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tif (this._Settings.DebugLog)\n\t\t\t\t{\n\t\t\t\t\tthis.log.debug(`Creating recovery snapshot at [${tmpNewUndoKey}]...`);\n\t\t\t\t}\n\n\t\t\t\tthis._UndoKeys.push(tmpNewUndoKey);\n\t\t\t\tthis._UndoBuffer.put(this._RecoveryDocumentState, tmpNewUndoKey);\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tundoSnapshotCount()\n\t{\n\t\t// The initial snapshot is special to prevent confusing conditions when form data hasn't been edited.\n\t\treturn this._UndoKeys.length;\n\t}\n\n\tredoSnapshotCount()\n\t{\n\t\treturn this._RedoKeys.length;\n\t}\n\n\trevertToPreviousSnapshot(fCallback)\n\t{\n\t\tlet tmpCallback = (typeof(fCallback) == 'function') ? fCallback : ()=>{};\n\n\t\tif (this._UndoKeys.length < 1)\n\t\t{\n\t\t\tthis.log.info(`Not enough undo snapshots; skipping undo.`);\n\t\t\treturn tmpCallback(false);\n\t\t}\n\n\t\tlet tmpSnapshotKey = this._UndoKeys.pop();\n\t\tlet tmpSnapshotData = this._UndoBuffer.read(tmpSnapshotKey);\n\n\t\tif (tmpSnapshotData)\n\t\t{\n\t\t\t// Add it to the redo buffer\n\t\t\tthis._RedoKeys.push(tmpSnapshotKey);\n\t\t\tthis._RedoBuffer.put(tmpSnapshotData, tmpSnapshotKey);\n\n\t\t\t// Check if the form data matches and if so advance back one step\n\t\t\tlet tmpCurrentFormData = {};\n\t\t\tthis.marshalFormToData(tmpCurrentFormData,\n\t\t\t\t()=>\n\t\t\t\t{\n\t\t\t\t\t// Remove the expired snapshot of data from the Undu buffer\n\t\t\t\t\tthis._UndoBuffer.expire(tmpSnapshotKey);\n\n\t\t\t\t\tthis.marshalDataToForm(tmpSnapshotData,\n\t\t\t\t\t\t()=>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis._RecoveryDocumentState = tmpSnapshotData;\n\n\t\t\t\t\t\t\tthis.log.info(`Informary reverted to snapshot ID ${tmpSnapshotKey}`);\n\t\t\t\t\t\t\tif ((JSON.stringify(tmpCurrentFormData) == JSON.stringify(tmpSnapshotData)) && this._UndoKeys.length > 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.revertToPreviousSnapshot(tmpCallback);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (this._UndoKeys.length == 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.info(`Snapshot Data Depleted -- Creating Extra Undo Snapshot`)\n\t\t\t\t\t\t\t\tthis.snapshotDataInitial();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn tmpCallback(true);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\n\t\treturn tmpCallback(false);\n\t}\n\n\n\treapplyNextRevertedSnapshot(fCallback)\n\t{\n\t\tlet tmpCallback = (typeof(fCallback) == 'function') ? fCallback : ()=>{};\n\n\t\tlet tmpSnapshotKey = this._RedoKeys.pop();\n\t\tlet tmpSnapshotData = this._RedoBuffer.read(tmpSnapshotKey);\n\n\t\tif (tmpSnapshotData)\n\t\t{\n\t\t\t// Add it to the undo buffer\n\t\t\tthis._UndoKeys.push(tmpSnapshotKey);\n\t\t\tthis._UndoBuffer.put(tmpSnapshotData, tmpSnapshotKey);\n\n\t\t\t// Remove the expired snapshot of data from the Redo buffer\n\t\t\tthis._RedoBuffer.expire(tmpSnapshotKey);\n\n\t\t\t// Check if the form data matches and if so advance back one step\n\t\t\tlet tmpCurrentFormData = {};\n\t\t\tthis.marshalFormToData(tmpCurrentFormData,\n\t\t\t\t()=>\n\t\t\t\t{\n\t\t\t\t\tthis.marshalDataToForm(tmpSnapshotData,\n\t\t\t\t\t\t()=>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis._RecoveryDocumentState = tmpSnapshotData;\n\n\t\t\t\t\t\t\tthis.log.info(`Informary reapplied snapshot ID ${tmpSnapshotKey}`);\n\t\t\t\t\t\t\tif ((JSON.stringify(tmpCurrentFormData) == JSON.stringify(tmpSnapshotData)) && this._RedoKeys.length > 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// If the old form data matches the applied data, roll back farther\n\t\t\t\t\t\t\t\treturn this.reapplyNextRevertedSnapshot(tmpCallback);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn tmpCallback(true);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\n\t\treturn tmpCallback(false);\n\t}\n\n\tclearRecoveryData()\n\t{\n\t\treturn this.deleteData('Recovery');\n\t}\n\n\treadRecoveryData()\n\t{\n\t\treturn this.readData('Recovery');\n\t}\n\n\trestoreRecoveryScenarioData(fCallback)\n\t{\n\t\tlet tmpCallback = (typeof(fCallback) == 'function') ? fCallback : ()=>{};\n\n\t\tlet tmpRecoveryScenarioData = this.readRecoveryScenario();\n\n\t\tif (tmpRecoveryScenarioData && tmpRecoveryScenarioData.ExistingRecovery)\n\t\t{\n\t\t\tthis.marshalDataToForm(tmpRecoveryScenarioData.ExistingRecovery,\n\t\t\t\t()=>\n\t\t\t\t{\n\t\t\t\t\tthis.clearRecoveryScenarioData();\n\t\t\t\t\t// Store a new recovery data\n\t\t\t\t\t//this.storeSourceData();\n\t\t\t\t\treturn tmpCallback(true);\n\t\t\t\t});\n\t\t}\n\n\t\treturn tmpCallback(false);\n\t}\n\n\tclearRecoveryScenarioData()\n\t{\n\t\treturn this.deleteData('RecoveryScenario');\n\t}\n\n\tstoreRecoveryScenarioData(pRecoveryScenarioData)\n\t{\n\t\treturn this.writeData('RecoveryScenario', pRecoveryScenarioData);\n\t}\n\n\treadRecoveryScenario()\n\t{\n\t\treturn this.readData('RecoveryScenario');\n\t}\n\n\t// Checks if there is a recovery record, and detailed data about what it might be\n\tcheckRecoveryState(pSourceData)\n\t{\n\t\tlet tmpRecoveryData = (\n\t\t\t{\n\t\t\t\tNewSource: pSourceData,\n\t\t\t\tExistingSource: this.readData('Source'),\n\t\t\t\tExistingRecovery: this.readData('Recovery')\n\t\t\t});\n\n\t\tif (!tmpRecoveryData.ExistingSource || !tmpRecoveryData.ExistingRecovery)\n\t\t{\n\t\t\t// There is either no source or no read data, so we are not in a recovery state\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Now check the differences\n\t\t\tlet tmpRecoveryDifferences = libObjectDiff.detailedDiff(tmpRecoveryData.ExistingSource, tmpRecoveryData.ExistingRecovery);\n\n\t\t\tif (JSON.stringify(tmpRecoveryDifferences) == JSON.stringify(libObjectDiff.detailedDiff({},{})))\n\t\t\t{\n\t\t\t\t// No differences -- we're good for now\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis._Log.info(`Informary found recovery data at ${this.getStorageKey('Recovery')}!`);\n\t\t\t\t// Put the recovery changes in the object for helpfulness\n\t\t\t\ttmpRecoveryData.Diffs = {};\n\t\t\t\ttmpRecoveryData.Diffs.ExistingRecovery_ExistingSource = tmpRecoveryDifferences;\n\t\t\t\ttmpRecoveryData.Diffs.ExistingSource_NewSource = libObjectDiff.detailedDiff(tmpRecoveryData.ExistingSource, tmpRecoveryData.NewSource);\n\t\t\t\ttmpRecoveryData.Diffs.ExistingRecovery_NewSource = libObjectDiff.detailedDiff(tmpRecoveryData.ExistingRecovery, tmpRecoveryData.NewSource);\n\n\t\t\t\t// Put the index data in the object for helpfulness\n\t\t\t\ttmpRecoveryData.Index = {};\n\t\t\t\ttmpRecoveryData.Index.ExistingSource = this.readIndexValue('Source');\n\t\t\t\ttmpRecoveryData.Index.ExistingRecovery = this.readIndexValue('Recovery');\n\n\t\t\t\tthis.writeData('RecoveryScenario', tmpRecoveryData);\n\n\t\t\t\treturn tmpRecoveryData;\n\t\t\t}\n\t\t}\n\t}\n\n\tcompareCurrentStateToUndoAndRedo(fCallback)\n\t{\n\t\tlet tmpCallBack = (typeof(fCallback) === 'function') ? fCallback : () => {};\n\t\tlet tmpCurrentStateData = {};\n\t\tlet tmpCurrentUndoObject = {};\n\t\tlet tmpCurrentRedoObject = {};\n\n\t\tthis.marshalFormToData(tmpCurrentStateData,\n\t\t\t() =>\n\t\t\t{\n\t\t\t\tlet tmpCurrentStateDataJSON = JSON.stringify(tmpCurrentStateData);\n\n\t\t\t\tif (this._UndoKeys.length > 0)\n\t\t\t\t{\n\t\t\t\t\tlet tmpCurrentUndoBufferSnapshotKey = this._UndoKeys[this._UndoKeys.length - 1];\n\t\t\t\t\ttmpCurrentUndoObject = this._UndoBuffer.read(tmpCurrentUndoBufferSnapshotKey);\n\t\t\t\t}\n\n\t\t\t\tif (this._RedoKeys.length > 0)\n\t\t\t\t{\n\t\t\t\t\t// Because there can be duplication of records in the redo buffer that may include\n\t\t\t\t\t// the current data in the form multiple times, we need to enumerate the redo buffer\n\t\t\t\t\t// until the JSON doesn't match the current data.\n\t\t\t\t\tlet tmpFirstRedoIndexWithDifferences = this._RedoKeys.length - 1;\n\t\t\t\t\tfor (let i = this._RedoKeys.length-1; i >= 0; i--)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpRedoComparisonJSON = JSON.stringify(this._RedoBuffer.read(this._RedoKeys[i]));\n\t\t\t\t\t\tif (tmpRedoComparisonJSON != tmpCurrentStateDataJSON)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpFirstRedoIndexWithDifferences = i;\n\t\t\t\t\t\t\t// Once we have found a set of redo data that doesn't match, we don't want to keep looking\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttmpCurrentRedoObject = this._RedoBuffer.read(this._RedoKeys[tmpFirstRedoIndexWithDifferences]);\n\t\t\t\t}\n\n\t\t\t\tlet tmpComparisonData = (\n\t\t\t\t\t{\n\t\t\t\t\t\tUndoDelta: libObjectDiff.detailedDiff(tmpCurrentStateData, tmpCurrentUndoObject),\n\t\t\t\t\t\tUndoGUIDDelta: {Added: [], Deleted: []},\n\t\t\t\t\t\tRedoDelta: libObjectDiff.detailedDiff(tmpCurrentStateData, tmpCurrentRedoObject),\n\t\t\t\t\t\tRedoGUIDDelta: {Added: [], Deleted: []}\n\t\t\t\t\t});\n\n\n\t\t\t\t// Perform GUID diff operations\n\t\t\t\t// Get all GUID values from the form\n\t\t\t\tlet tmpCurrentGUIDElements = [];\n\t\t\t\tlet tmpCurrentDataIndex = 0;\n\t\t\t\tif (tmpCurrentStateData.hasOwnProperty('__GUID'))\n\t\t\t\t{\n\t\t\t\t\ttmpCurrentGUIDElements = Object.keys(tmpCurrentStateData.__GUID).sort();\n\t\t\t\t}\n\n\t\t\t\t// Get the deltas for undo data\n\t\t\t\tlet tmpUndoGUIDElements = [];\n\t\t\t\tif (tmpCurrentUndoObject.hasOwnProperty('__GUID'))\n\t\t\t\t{\n\t\t\t\t\ttmpUndoGUIDElements = Object.keys(tmpCurrentUndoObject.__GUID).sort();\n\t\t\t\t}\n\t\t\t\tlet tmpUndoDataIndex = 0;\n\t\t\t\tlet tmpUndoDataMaxIndex = tmpUndoGUIDElements.length - 1;\n\t\t\t\tfor(tmpCurrentDataIndex = 0; tmpCurrentDataIndex < tmpCurrentGUIDElements.length; tmpCurrentDataIndex++)\n\t\t\t\t{\n\t\t\t\t\twhile((tmpUndoDataIndex <= tmpUndoDataMaxIndex)\n\t\t\t\t\t\t\t&& (tmpUndoGUIDElements[tmpUndoDataIndex] != tmpCurrentGUIDElements[tmpCurrentDataIndex]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Check to see if the string in the Undo keys is less than the string in the current form element.\n\t\t\t\t\t\t// If so, it was deleted\n\t\t\t\t\t\tif (tmpUndoGUIDElements[tmpUndoDataIndex] < tmpCurrentGUIDElements[tmpCurrentDataIndex])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpComparisonData.UndoGUIDDelta.Added.push(tmpUndoGUIDElements[tmpUndoDataIndex]);\n\t\t\t\t\t\t\ttmpUndoDataIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// It must be greater if it is inequal, so break out of the while\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((tmpUndoDataIndex <= tmpUndoDataMaxIndex)\n\t\t\t\t\t\t&& (tmpUndoGUIDElements[tmpUndoDataIndex] == tmpCurrentGUIDElements[tmpCurrentDataIndex]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// If the elements match, skip it because it exists on both sides.\n\t\t\t\t\t\ttmpUndoDataIndex++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpComparisonData.UndoGUIDDelta.Deleted.push(tmpCurrentGUIDElements[tmpCurrentDataIndex]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// If there are any GUIDS left in the Undo GUID list, they are additions\n\t\t\t\tfor(let i = tmpUndoDataIndex; i <= tmpUndoDataMaxIndex; i++)\n\t\t\t\t{\n\t\t\t\t\ttmpComparisonData.UndoGUIDDelta.Added.push(tmpUndoGUIDElements[i]);\n\t\t\t\t}\n\n\n\t\t\t\t// Get the deltas for Redo data\n\t\t\t\tlet tmpRedoGUIDElements = [];\n\t\t\t\tif (tmpCurrentRedoObject.hasOwnProperty('__GUID'))\n\t\t\t\t{\n\t\t\t\t\ttmpRedoGUIDElements = Object.keys(tmpCurrentRedoObject.__GUID).sort();\n\t\t\t\t}\n\t\t\t\tlet tmpRedoDataIndex = 0;\n\t\t\t\tlet tmpRedoDataMaxIndex = tmpRedoGUIDElements.length - 1;\n\t\t\t\tfor(tmpCurrentDataIndex = 0; tmpCurrentDataIndex < tmpCurrentGUIDElements.length; tmpCurrentDataIndex++)\n\t\t\t\t{\n\t\t\t\t\twhile((tmpRedoDataIndex <= tmpRedoDataMaxIndex)\n\t\t\t\t\t\t\t&& (tmpRedoGUIDElements[tmpRedoDataIndex] != tmpCurrentGUIDElements[tmpCurrentDataIndex]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Check to see if the string in the Redo keys is less than the string in the current form element.\n\t\t\t\t\t\t// If so, it was deleted\n\t\t\t\t\t\tif (tmpRedoGUIDElements[tmpRedoDataIndex] < tmpCurrentGUIDElements[tmpCurrentDataIndex])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpComparisonData.RedoGUIDDelta.Added.push(tmpRedoGUIDElements[tmpRedoDataIndex]);\n\t\t\t\t\t\t\ttmpRedoDataIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// It must be greater if it is inequal, so break out of the while\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((tmpRedoDataIndex <= tmpRedoDataMaxIndex)\n\t\t\t\t\t\t&& (tmpRedoGUIDElements[tmpRedoDataIndex] == tmpCurrentGUIDElements[tmpCurrentDataIndex]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// If the elements match, skip it because it exists on both sides.\n\t\t\t\t\t\ttmpRedoDataIndex++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpComparisonData.RedoGUIDDelta.Deleted.push(tmpCurrentGUIDElements[tmpCurrentDataIndex]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// If there are any GUIDS left in the Redo GUID list, they are additions\n\t\t\t\tfor(let i = tmpRedoDataIndex; i <= tmpRedoDataMaxIndex; i++)\n\t\t\t\t{\n\t\t\t\t\ttmpComparisonData.RedoGUIDDelta.Added.push(tmpRedoGUIDElements[i]);\n\t\t\t\t}\n\n\t\t\t\ttmpCallBack(tmpComparisonData);\n\t\t\t});\n\t}\n\n\tcreateArrayContainers(pRecordObject, fCallback, pArrayPropertyAddress)\n\t{\n\t\t// Much simplified recursion that generates array containers\n\t\tif (this._Settings.DebugLog)\n\t\t{\n\t\t\tthis.log.debug(`Informary Data->Form marshalling recursive entry...`);\n\t\t}\n\t}\n\n\tget nonFormData ()\n\t{\n\t\treturn this._NonHTMLState;\n\t}\n\n\tmarshalDataToForm (pRecordObject, fCallback, pParentPropertyAddress, pContainerPropertyAddress, pContainerIndex)\n\t{\n\t\t// Because this is recursive, we only want to call this on the outermost call of the stack.\n\t\tlet tmpRecoveryState = false;\n\n\t\tif (this._Settings.DebugLog)\n\t\t{\n\t\t\tthis.log.debug(`Informary Data->Form marshalling recursive entry...`);\n\t\t}\n\t\t// Guard against bad record objects being passed in\n\t\tif (typeof(pRecordObject) !== 'object')\n\t\t{\n\t\t\tthis.log.error('Invalid record object passed in!');\n\t\t\treturn fCallback('Invalid record object passed in!');\n\t\t}\n\n\t\tif (pRecordObject === null)\n\t\t{\n\t\t\treturn fCallback();\n\t\t}\n\n\t\tif (pRecordObject === undefined)\n\t\t{\n\t\t\treturn fCallback();\n\t\t}\n\n\t\tlet tmpParentPropertyAddress = (typeof(pParentPropertyAddress) !== 'undefined') ? pParentPropertyAddress : false;\n\t\tlet tmpParentPropertyAddressString = (typeof(pParentPropertyAddress) !== 'undefined') ? pParentPropertyAddress : 'JSON OBJECT ROOT';\n\n\t\tlet tmpContainerPropertyAddress = (typeof(pContainerPropertyAddress) !== 'undefined') ? pContainerPropertyAddress : false;\n\t\tlet tmpContainerPropertyIndex = (typeof(pContainerIndex) !== 'undefined') ? pContainerIndex : false;\n\n\t\tif (this._Settings.DebugLog)\n\t\t{\n\t\t\tthis.log.debug(`Informary Data->Form found parent address [${tmpParentPropertyAddress}] and is parsing properties`);\n\t\t}\n\n\t\tif (tmpParentPropertyAddressString == 'JSON OBJECT ROOT')\n\t\t{\n\t\t\t// Check if there is data to go into the NonHTMLState object\n\t\t\tif ((pRecordObject.hasOwnProperty(this._NonHTMLStateProperty)) && (typeof(pRecordObject[this._NonHTMLStateProperty]) === 'object'))\n\t\t\t{\n\t\t\t\t// Every time we marshal data to the form, we will overwrite this.\n\t\t\t\t// TODO: Should we warn or anything?  This is a potentially destructive operation.\n\t\t\t\tthis._NonHTMLState = pRecordObject[this._NonHTMLStateProperty];\n\t\t\t}\n\t\t}\n\n\t\tlet tmpRecordObjectKeys = Object.keys(pRecordObject);\n\t\ttmpRecordObjectKeys.forEach(\n\t\t\t(pKey) =>\n\t\t\t{\n\t\t\t\tlet tmpRecord = pRecordObject[pKey];\n\t\t\t\tlet tmpPropertyAddress = (tmpParentPropertyAddress.length > 0) ? `${pParentPropertyAddress}.${pKey}` : pKey;\n\n\t\t\t\tif (this._Settings.DebugLog)\n\t\t\t\t{\n\t\t\t\t\tthis.log.debug(`Informary Data->Form parent address [${tmpParentPropertyAddressString}] parsing property [${tmpPropertyAddress}]`);\n\t\t\t\t}\n\n\t\t\t\tswitch (typeof(tmpRecord))\n\t\t\t\t{\n\t\t\t\t\t// If it's an object, check if we should be marshaling the whole value in or recursing.\n\t\t\t\t\tcase 'object':\n\t\t\t\t\t\t// Check to see if it's an array, as we will put it into the extended object.\n\t\t\t\t\t\tif (Array.isArray(tmpRecord))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (let i = 0; i < tmpRecord.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// The undefined is in the Property Address because this is an array element, and needs to be put in the array.\n\t\t\t\t\t\t\t\tthis.marshalDataToForm(tmpRecord[i], ()=>{}, undefined, tmpPropertyAddress, i.toString());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// We've switched this to synchronous for safe browser mode\n\t\t\t\t\t\t\t// Leaving an empty callback in there in case we decide to switch back.\n\t\t\t\t\t\t\treturn this.marshalDataToForm(tmpRecord, ()=>{}, tmpPropertyAddress, tmpContainerPropertyAddress, tmpContainerPropertyIndex.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// Ignore undefined properties\n\t\t\t\t\tcase 'undefined':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// Otherwise marshal it into the form\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tlet tmpFormElement = [];\n\n\t\t\t\t\t\tif (tmpContainerPropertyAddress && tmpContainerPropertyIndex)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// This is an array element\n\t\t\t\t\t\t\ttmpFormElement = this._Dependencies.jquery(`\n\t\t\t\t\t\t\t\tinput[data-i-form=\"${this._Settings.Form}\"][data-i-datum=\"${tmpPropertyAddress}\"][data-i-container=\"${tmpContainerPropertyAddress}\"][data-i-index=\"${tmpContainerPropertyIndex}\"],\n\t\t\t\t\t\t\t\tselect[data-i-form=\"${this._Settings.Form}\"][data-i-datum=\"${tmpPropertyAddress}\"][data-i-container=\"${tmpContainerPropertyAddress}\"][data-i-index=\"${tmpContainerPropertyIndex}\"],\n\t\t\t\t\t\t\t\ttextarea[data-i-form=\"${this._Settings.Form}\"][data-i-datum=\"${tmpPropertyAddress}\"][data-i-container=\"${tmpContainerPropertyAddress}\"][data-i-index=\"${tmpContainerPropertyIndex}\"]\n\t\t\t\t\t\t\t`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpFormElement = this._Dependencies.jquery(`\n\t\t\t\t\t\t\t\tinput[data-i-form=\"${this._Settings.Form}\"][data-i-datum=\"${tmpPropertyAddress}\"],\n\t\t\t\t\t\t\t\tselect[data-i-form=\"${this._Settings.Form}\"][data-i-datum=\"${tmpPropertyAddress}\"],\n\t\t\t\t\t\t\t\ttextarea[data-i-form=\"${this._Settings.Form}\"][data-i-datum=\"${tmpPropertyAddress}\"]\n\t\t\t\t\t\t\t`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpFormElement.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// set the text area to the text content\n\t\t\t\t\t\t\tif (this._Dependencies.jquery(tmpFormElement)[0].tagName === 'TEXTAREA') {\n\t\t\t\t\t\t\t\tthis._Dependencies.jquery(tmpFormElement)[0].textContent = tmpRecord;\n\t\t\t\t\t\t\t// set the correct option to 'selected' for select tags\n\t\t\t\t\t\t\t} else if (this._Dependencies.jquery(tmpFormElement)[0].tagName === 'SELECT') {\n\t\t\t\t\t\t\t\tthis._Dependencies.jquery(`select[data-i-form=\"${this._Settings.Form}\"][data-i-datum=\"${tmpPropertyAddress}\"] option[value=\"${tmpRecord}\"]`).prop('selected', true);\n\t\t\t\t\t\t\t// otherwise just set the value for input\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._Dependencies.jquery(tmpFormElement).val(tmpRecord);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Check if this is a GUID value and set the data-i-guid property in it\n\t\t\t\t\t\t\tvar tmpGUIDAttribute = this._Dependencies.jquery(this).attr('data-i-guid');\n\t\t\t\t\t\t\t// For some browsers, `attr` is undefined; for others,\n\t\t\t\t\t\t\t// `attr` is false.  Check for both.\n\t\t\t\t\t\t\tif (typeof(tmpGUIDAttribute) !== 'undefined' && tmpGUIDAttribute !== false)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis._Dependencies.jquery(tmpFormElement).attr('data-i-guid', tmpRecord);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\n\t\tif (!pParentPropertyAddress)\n\t\t{\n\t\t\treturn fCallback(tmpRecoveryState);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tmarshalFormToData (pRecordObject, fCallback)\n\t{\n\t\tif (this._Settings.DebugLog)\n\t\t{\n\t\t\tthis.log.debug(`Informary Form->Data marshalling recursive entry...`);\n\t\t}\n\t\t// Guard against bad record objects being passed in\n\t\tif (typeof(pRecordObject) !== 'object')\n\t\t{\n\t\t\tthis.log.error('Invalid record object passed in!  Informary needs a Javascript object to put values into.');\n\t\t\treturn fCallback('Invalid record object passed in!  Informary needs a Javascript object to put values into.');\n\t\t}\n\n\t\tlet tmpFormValueElements = this._Dependencies.jquery(`\n\t\t\t\tinput[data-i-form=${this._Settings.Form}],\n\t\t\t\tselect[data-i-form=${this._Settings.Form}],\n\t\t\t\ttextarea[data-i-form=${this._Settings.Form}]\n\t\t\t`);\n\n\t\tlet tmpUnknownValueIndex = 0;\n\n\t\t// For any state that the form doesn't want to store in html elements, but still be merged into the informary record object\n\t\tpRecordObject[this._NonHTMLStateProperty] = this._NonHTMLState;\n\n\t\tthis._Dependencies.jquery.each(tmpFormValueElements,\n\t\t\t(pRecordIndex, pRecordAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpFormValueAddress = this._Dependencies.jquery(pRecordAddress).attr('data-i-datum');\n\t\t\t\tlet tmpFormContainerAddress = this._Dependencies.jquery(pRecordAddress).attr('data-i-container');\n\t\t\t\tlet tmpFormContainerIndex = this._Dependencies.jquery(pRecordAddress).attr('data-i-index');\n\t\t\t\tlet tmpFormContainerGUID = this._Dependencies.jquery(pRecordAddress).attr('data-i-guid');\n\t\t\t\tlet tmpFormValue;\n\t\t\t\t// check to see which element type this is before trying to collect the value\n\t\t\t\tif (this._Dependencies.jquery(pRecordAddress).tagName === 'TEXTAREA') {\n\t\t\t\t\ttmpFormValue = this._Dependencies.jquery(pRecordAddress).textContent;\n\t\t\t\t} else {\n\t\t\t\t\ttmpFormValue = this._Dependencies.jquery(pRecordAddress).val();\n\t\t\t\t}\n\t\t\t\t// If the value is non existant, set it to null\n\t\t\t\tif (typeof(tmpFormValue) === 'undefined')\n\t\t\t\t{\n\t\t\t\t\ttmpFormValue = null;\n\t\t\t\t}\n\n\t\t\t\tif (typeof(tmpFormValueAddress) === 'undefined')\n\t\t\t\t{\n\t\t\t\t\ttmpFormValueAddress = '__ERROR.UnsetDatum.'+tmpUnknownValueIndex;\n\t\t\t\t\ttmpUnknownValueIndex++;\n\t\t\t\t}\n\t\t\t\tif (tmpFormContainerGUID)\n\t\t\t\t{\n\t\t\t\t\tlet tmpGUIDValueAddress = '__GUID.'+tmpFormContainerGUID;\n\t\t\t\t\tthis.setValueAtAddress(pRecordObject, tmpGUIDValueAddress, tmpFormContainerGUID);\n\t\t\t\t}\n\t\t\t\tif (tmpFormContainerAddress && tmpFormContainerIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.setValueAtAddressInContainer(pRecordObject, tmpFormContainerAddress, tmpFormContainerIndex, tmpFormValueAddress, tmpFormValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.setValueAtAddress(pRecordObject, tmpFormValueAddress, tmpFormValue);\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn fCallback();\n\t}\n};\n\nmodule.exports = Informary;\n","/*!\n * jQuery JavaScript Library v3.6.4\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright OpenJS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2023-03-08T15:28Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket trac-14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar flat = arr.flat ? function( array ) {\n\treturn arr.flat.call( array );\n} : function( array ) {\n\treturn arr.concat.apply( [], array );\n};\n\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n\t\t// Support: Chrome <=57, Firefox <=52\n\t\t// In some browsers, typeof returns \"function\" for HTML <object> elements\n\t\t// (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n\t\t// We don't want to classify *any* DOM node as a function.\n\t\t// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5\n\t\t// Plus for old WebKit, typeof returns \"function\" for HTML collections\n\t\t// (e.g., `typeof document.getElementsByTagName(\"div\") === \"function\"`). (gh-4756)\n\t\treturn typeof obj === \"function\" && typeof obj.nodeType !== \"number\" &&\n\t\t\ttypeof obj.item !== \"function\";\n\t};\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\nvar document = window.document;\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnonce: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, node, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar i, val,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\n\t\t\t\t// Support: Firefox 64+, Edge 18+\n\t\t\t\t// Some browsers don't support the \"nonce\" property on scripts.\n\t\t\t\t// On the other hand, just using `getAttribute` is not enough as\n\t\t\t\t// the `nonce` attribute is reset to an empty string whenever it\n\t\t\t\t// becomes browsing-context connected.\n\t\t\t\t// See https://github.com/whatwg/html/issues/2369\n\t\t\t\t// See https://html.spec.whatwg.org/#nonce-attributes\n\t\t\t\t// The `node.getAttribute` check was added for the sake of\n\t\t\t\t// `jQuery.globalEval` so that it can fake a nonce-containing node\n\t\t\t\t// via an object.\n\t\t\t\tval = node[ i ] || node.getAttribute && node.getAttribute( i );\n\t\t\t\tif ( val ) {\n\t\t\t\t\tscript.setAttribute( i, val );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.6.4\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teven: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn ( i + 1 ) % 2;\n\t\t} ) );\n\t},\n\n\todd: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn i % 2;\n\t\t} ) );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent Object.prototype pollution\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( name === \"__proto__\" || target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\t\t\t\t\tsrc = target[ name ];\n\n\t\t\t\t\t// Ensure proper type for the source value\n\t\t\t\t\tif ( copyIsArray && !Array.isArray( src ) ) {\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\n\t\t\t\t\t\tclone = {};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src;\n\t\t\t\t\t}\n\t\t\t\t\tcopyIsArray = false;\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a provided context; falls back to the global one\n\t// if not specified.\n\tglobalEval: function( code, options, doc ) {\n\t\tDOMEval( code, { nonce: options && options.nonce }, doc );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn flat( ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\n\tfunction( _i, name ) {\n\t\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n\t} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.10\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://js.foundation/\n *\n * Date: 2023-02-14\n */\n( function( window ) {\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tnonnativeSelectorCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ( {} ).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpushNative = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[ i ] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|\" +\n\t\t\"ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n\tidentifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace +\n\t\t\"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\n\t\t// \"Attribute values must be CSS identifiers [capture 5]\n\t\t// or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" +\n\t\twhitespace + \"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" +\n\t\twhitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trleadingCombinator = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace +\n\t\t\"*\" ),\n\trdescend = new RegExp( whitespace + \"|>\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" +\n\t\t\twhitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" +\n\t\t\twhitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace +\n\t\t\t\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace +\n\t\t\t\"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trhtml = /HTML$/i,\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\" ),\n\tfunescape = function( escape, nonHex ) {\n\t\tvar high = \"0x\" + escape.slice( 1 ) - 0x10000;\n\n\t\treturn nonHex ?\n\n\t\t\t// Strip the backslash prefix from a non-hex escape sequence\n\t\t\tnonHex :\n\n\t\t\t// Replace a hexadecimal escape sequence with the encoded Unicode code point\n\t\t\t// Support: IE <=11+\n\t\t\t// For values outside the Basic Multilingual Plane (BMP), manually construct a\n\t\t\t// surrogate pair\n\t\t\thigh < 0 ?\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" +\n\t\t\t\tch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tinDisabledFieldset = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t( arr = slice.call( preferredDoc.childNodes ) ),\n\t\tpreferredDoc.childNodes\n\t);\n\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\t// eslint-disable-next-line no-unused-expressions\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpushNative.apply( target, slice.call( els ) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( ( target[ j++ ] = els[ i++ ] ) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\t\tsetDocument( context );\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( ( m = match[ 1 ] ) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( ( elem = context.getElementById( m ) ) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && ( elem = newContext.getElementById( m ) ) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[ 2 ] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!nonnativeSelectorCache[ selector + \" \" ] &&\n\t\t\t\t( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&\n\n\t\t\t\t// Support: IE 8 only\n\t\t\t\t// Exclude object elements\n\t\t\t\t( nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\" ) ) {\n\n\t\t\t\tnewSelector = selector;\n\t\t\t\tnewContext = context;\n\n\t\t\t\t// qSA considers elements outside a scoping root when evaluating child or\n\t\t\t\t// descendant combinators, which is not what we want.\n\t\t\t\t// In such cases, we work around the behavior by prefixing every selector in the\n\t\t\t\t// list with an ID selector referencing the scope context.\n\t\t\t\t// The technique has to be used as well when a leading combinator is used\n\t\t\t\t// as such selectors are not recognized by querySelectorAll.\n\t\t\t\t// Thanks to Andrew Dupont for this technique.\n\t\t\t\tif ( nodeType === 1 &&\n\t\t\t\t\t( rdescend.test( selector ) || rleadingCombinator.test( selector ) ) ) {\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\n\t\t\t\t\t// We can use :scope instead of the ID hack if the browser\n\t\t\t\t\t// supports it & if we're not changing the context.\n\t\t\t\t\tif ( newContext !== context || !support.scope ) {\n\n\t\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\t\tif ( ( nid = context.getAttribute( \"id\" ) ) ) {\n\t\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext.setAttribute( \"id\", ( nid = expando ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[ i ] = ( nid ? \"#\" + nid : \":scope\" ) + \" \" +\n\t\t\t\t\t\t\ttoSelector( groups[ i ] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\tnonnativeSelectorCache( selector, true );\n\t\t\t\t} finally {\n\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn ( cache[ key + \" \" ] = value );\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement( \"fieldset\" );\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch ( e ) {\n\t\treturn false;\n\t} finally {\n\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split( \"|\" ),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[ i ] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( ( cur = cur.nextSibling ) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn ( name === \"input\" || name === \"button\" ) && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\tinDisabledFieldset( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction( function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction( function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ ( j = matchIndexes[ i ] ) ] ) {\n\t\t\t\t\tseed[ j ] = !( matches[ j ] = seed[ j ] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t} );\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\tvar namespace = elem && elem.namespaceURI,\n\t\tdocElem = elem && ( elem.ownerDocument || elem ).documentElement;\n\n\t// Support: IE <=8\n\t// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n\t// https://bugs.jquery.com/ticket/4833\n\treturn !rhtml.test( namespace || docElem && docElem.nodeName || \"HTML\" );\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( preferredDoc != document &&\n\t\t( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,\n\t// Safari 4 - 5 only, Opera <=11.6 - 12.x only\n\t// IE/Edge & older browsers don't support the :scope pseudo-class.\n\t// Support: Safari 6.0 only\n\t// Safari 6.0 supports :scope but it's an alias of :root there.\n\tsupport.scope = assert( function( el ) {\n\t\tdocElem.appendChild( el ).appendChild( document.createElement( \"div\" ) );\n\t\treturn typeof el.querySelectorAll !== \"undefined\" &&\n\t\t\t!el.querySelectorAll( \":scope fieldset div\" ).length;\n\t} );\n\n\t// Support: Chrome 105 - 110+, Safari 15.4 - 16.3+\n\t// Make sure the the `:has()` argument is parsed unforgivingly.\n\t// We include `*` in the test to detect buggy implementations that are\n\t// _selectively_ forgiving (specifically when the list includes at least\n\t// one valid selector).\n\t// Note that we treat complete lack of support for `:has()` as if it were\n\t// spec-compliant support, which is fine because use of `:has()` in such\n\t// environments will fail in the qSA path and fall back to jQuery traversal\n\t// anyway.\n\tsupport.cssHas = assert( function() {\n\t\ttry {\n\t\t\tdocument.querySelector( \":has(*,:jqfake)\" );\n\t\t\treturn false;\n\t\t} catch ( e ) {\n\t\t\treturn true;\n\t\t}\n\t} );\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert( function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute( \"className\" );\n\t} );\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert( function( el ) {\n\t\tel.appendChild( document.createComment( \"\" ) );\n\t\treturn !el.getElementsByTagName( \"*\" ).length;\n\t} );\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert( function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t} );\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[ \"ID\" ] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute( \"id\" ) === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[ \"ID\" ] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode( \"id\" );\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( ( elem = elems[ i++ ] ) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[ \"TAG\" ] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[ \"CLASS\" ] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {\n\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert( function( el ) {\n\n\t\t\tvar input;\n\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll( \"[msallowcapture^='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll( \"[selected]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"~=\" );\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 15 - 18+\n\t\t\t// IE 11/Edge don't find elements on a `[name='']` query in some cases.\n\t\t\t// Adding a temporary attribute to the document before the selection works\n\t\t\t// around the issue.\n\t\t\t// Interestingly, IE 10 & older don't seem to have the issue.\n\t\t\tinput = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"name\", \"\" );\n\t\t\tel.appendChild( input );\n\t\t\tif ( !el.querySelectorAll( \"[name='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" +\n\t\t\t\t\twhitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll( \":checked\" ).length ) {\n\t\t\t\trbuggyQSA.push( \":checked\" );\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push( \".#.+[+~]\" );\n\t\t\t}\n\n\t\t\t// Support: Firefox <=3.6 - 5 only\n\t\t\t// Old Firefox doesn't throw on a badly-escaped identifier.\n\t\t\tel.querySelectorAll( \"\\\\\\f\" );\n\t\t\trbuggyQSA.push( \"[\\\\r\\\\n\\\\f]\" );\n\t\t} );\n\n\t\tassert( function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll( \"[name=d]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll( \":enabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll( \":disabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: Opera 10 - 11 only\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll( \"*,:x\" );\n\t\t\trbuggyQSA.push( \",.*:\" );\n\t\t} );\n\t}\n\n\tif ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector ) ) ) ) {\n\n\t\tassert( function( el ) {\n\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t} );\n\t}\n\n\tif ( !support.cssHas ) {\n\n\t\t// Support: Chrome 105 - 110+, Safari 15.4 - 16.3+\n\t\t// Our regular `try-catch` mechanism fails to detect natively-unsupported\n\t\t// pseudo-classes inside `:has()` (such as `:has(:contains(\"Foo\"))`)\n\t\t// in browsers that parse the `:has()` argument as a forgiving selector list.\n\t\t// https://drafts.csswg.org/selectors/#relational now requires the argument\n\t\t// to be parsed unforgivingly, but browsers have not yet fully adjusted.\n\t\trbuggyQSA.push( \":has\" );\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( \"|\" ) );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( \"|\" ) );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\n\t\t\t// Support: IE <9 only\n\t\t\t// IE doesn't have `contains` on `document` so we need to check for\n\t\t\t// `documentElement` presence.\n\t\t\t// We need to fall back to `a` when `documentElement` is missing\n\t\t\t// as `ownerDocument` of elements within `<template/>` may have\n\t\t\t// a null one - a default behavior of all modern browsers.\n\t\t\tvar adown = a.nodeType === 9 && a.documentElement || a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t) );\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( ( b = b.parentNode ) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t// two documents; shallow comparisons work.\n\t\t// eslint-disable-next-line eqeqeq\n\t\tcompare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( a == document || a.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, a ) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( b == document || b.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, b ) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\treturn a == document ? -1 :\n\t\t\t\tb == document ? 1 :\n\t\t\t\t/* eslint-enable eqeqeq */\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[ i ] === bp[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[ i ], bp[ i ] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\tap[ i ] == preferredDoc ? -1 :\n\t\t\tbp[ i ] == preferredDoc ? 1 :\n\t\t\t/* eslint-enable eqeqeq */\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\tsetDocument( elem );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!nonnativeSelectorCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\n\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t// fragment in IE 9\n\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\tnonnativeSelectorCache( expr, true );\n\t\t}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( context.ownerDocument || context ) != document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( elem.ownerDocument || elem ) != document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn ( sel + \"\" ).replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( ( node = elem[ i++ ] ) ) {\n\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[ 1 ] = match[ 1 ].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[ 3 ] = ( match[ 3 ] || match[ 4 ] ||\n\t\t\t\tmatch[ 5 ] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[ 2 ] === \"~=\" ) {\n\t\t\t\tmatch[ 3 ] = \" \" + match[ 3 ] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[ 1 ] = match[ 1 ].toLowerCase();\n\n\t\t\tif ( match[ 1 ].slice( 0, 3 ) === \"nth\" ) {\n\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[ 3 ] ) {\n\t\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[ 4 ] = +( match[ 4 ] ?\n\t\t\t\t\tmatch[ 5 ] + ( match[ 6 ] || 1 ) :\n\t\t\t\t\t2 * ( match[ 3 ] === \"even\" || match[ 3 ] === \"odd\" ) );\n\t\t\t\tmatch[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === \"odd\" );\n\n\t\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[ 3 ] ) {\n\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[ 6 ] && match[ 2 ];\n\n\t\t\tif ( matchExpr[ \"CHILD\" ].test( match[ 0 ] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[ 3 ] ) {\n\t\t\t\tmatch[ 2 ] = match[ 4 ] || match[ 5 ] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t( excess = tokenize( unquoted, true ) ) &&\n\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t( excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length ) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[ 0 ] = match[ 0 ].slice( 0, excess );\n\t\t\t\tmatch[ 2 ] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() {\n\t\t\t\t\treturn true;\n\t\t\t\t} :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t( pattern = new RegExp( \"(^|\" + whitespace +\n\t\t\t\t\t\")\" + className + \"(\" + whitespace + \"|$)\" ) ) && classCache(\n\t\t\t\t\t\tclassName, function( elem ) {\n\t\t\t\t\t\t\treturn pattern.test(\n\t\t\t\t\t\t\t\ttypeof elem.className === \"string\" && elem.className ||\n\t\t\t\t\t\t\t\ttypeof elem.getAttribute !== \"undefined\" &&\n\t\t\t\t\t\t\t\t\telem.getAttribute( \"class\" ) ||\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\t/* eslint-disable max-len */\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t\t/* eslint-enable max-len */\n\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, _argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( ( node = node[ dir ] ) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction( function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[ i ] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction( function( selector ) {\n\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction( function( seed, matches, _context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\t\t\t\t\tseed[ i ] = !( matches[ i ] = elem );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} ) :\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tinput[ 0 ] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[ 0 ] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t} ),\n\n\t\t\"has\": markFunction( function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t} ),\n\n\t\t\"contains\": markFunction( function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t} ),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test( lang || \"\" ) ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( ( elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute( \"xml:lang\" ) || elem.getAttribute( \"lang\" ) ) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t} ),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement &&\n\t\t\t\t( !document.hasFocus || document.hasFocus() ) &&\n\t\t\t\t!!( elem.type || elem.href || ~elem.tabIndex );\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn ( nodeName === \"input\" && !!elem.checked ) ||\n\t\t\t\t( nodeName === \"option\" && !!elem.selected );\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[ \"empty\" ]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE <10 only\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( ( attr = elem.getAttribute( \"type\" ) ) == null ||\n\t\t\t\t\tattr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo( function() {\n\t\t\treturn [ 0 ];\n\t\t} ),\n\n\t\t\"last\": createPositionalPseudo( function( _matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t} ),\n\n\t\t\"eq\": createPositionalPseudo( function( _matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t} ),\n\n\t\t\"even\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"odd\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"lt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ?\n\t\t\t\targument + length :\n\t\t\t\targument > length ?\n\t\t\t\t\tlength :\n\t\t\t\t\targument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"gt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} )\n\t}\n};\n\nExpr.pseudos[ \"nth\" ] = Expr.pseudos[ \"eq\" ];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || ( match = rcomma.exec( soFar ) ) ) {\n\t\t\tif ( match ) {\n\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[ 0 ].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( ( tokens = [] ) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( ( match = rleadingCombinator.exec( soFar ) ) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push( {\n\t\t\t\tvalue: matched,\n\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[ 0 ].replace( rtrim, \" \" )\n\t\t\t} );\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||\n\t\t\t\t( match = preFilters[ type ]( match ) ) ) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push( {\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t} );\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[ i ].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || ( elem[ expando ] = {} );\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] ||\n\t\t\t\t\t\t\t( outerCache[ elem.uniqueID ] = {} );\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( ( oldCache = uniqueCache[ key ] ) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn ( newCache[ 2 ] = oldCache[ 2 ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[ i ]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[ 0 ];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[ i ], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction( function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts(\n\t\t\t\tselector || \"*\",\n\t\t\t\tcontext.nodeType ? [ context ] : context,\n\t\t\t\t[]\n\t\t\t),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( ( elem = temp[ i ] ) ) {\n\t\t\t\t\tmatcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) ) {\n\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( ( matcherIn[ i ] = elem ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, ( matcherOut = [] ), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) &&\n\t\t\t\t\t\t( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {\n\n\t\t\t\t\t\tseed[ temp ] = !( results[ temp ] = elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t} );\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[ 0 ].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[ \" \" ],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t( checkContext = context ).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {\n\t\t\tmatchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[ j ].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\n\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\ttokens\n\t\t\t\t\t\t.slice( 0, i - 1 )\n\t\t\t\t\t\t.concat( { value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" } )\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[ \"TAG\" ]( \"*\", outermost ),\n\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\n\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\toutermostContext = context == document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\n\t\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\t\tif ( !context && elem.ownerDocument != document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( ( matcher = elementMatchers[ j++ ] ) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( ( elem = !matcher && elem ) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( ( matcher = setMatchers[ j++ ] ) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !( unmatched[ i ] || setMatched[ i ] ) ) {\n\t\t\t\t\t\t\t\tsetMatched[ i ] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[ i ] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache(\n\t\t\tselector,\n\t\t\tmatcherFromGroupMatchers( elementMatchers, setMatchers )\n\t\t);\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( ( selector = compiled.selector || selector ) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[ 0 ] = match[ 0 ].slice( 0 );\n\t\tif ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === \"ID\" &&\n\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {\n\n\t\t\tcontext = ( Expr.find[ \"ID\" ]( token.matches[ 0 ]\n\t\t\t\t.replace( runescape, funescape ), context ) || [] )[ 0 ];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[ \"needsContext\" ].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[ i ];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ ( type = token.type ) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( ( find = Expr.find[ type ] ) ) {\n\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( ( seed = find(\n\t\t\t\t\ttoken.matches[ 0 ].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext\n\t\t\t\t) ) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split( \"\" ).sort( sortOrder ).join( \"\" ) === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert( function( el ) {\n\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement( \"fieldset\" ) ) & 1;\n} );\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert( function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute( \"href\" ) === \"#\";\n} ) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert( function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n} ) ) {\n\taddHandle( \"value\", function( elem, _name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert( function( el ) {\n\treturn el.getAttribute( \"disabled\" ) == null;\n} ) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\t\tnull;\n\t\t}\n\t} );\n}\n\nreturn Sizzle;\n\n} )( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n}\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (trac-9521)\n\t// Strict HTML recognition (trac-11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\tif ( elem.contentDocument != null &&\n\n\t\t\t// Support: IE 11+\n\t\t\t// <object> elements with no `data` attribute has an object\n\t\t\t// `contentDocument` with a `null` prototype.\n\t\t\tgetProto( elem.contentDocument ) ) {\n\n\t\t\treturn elem.contentDocument;\n\t\t}\n\n\t\t// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n\t\t// Treat the template element as a regular one in browsers that\n\t\t// don't support it.\n\t\tif ( nodeName( elem, \"template\" ) ) {\n\t\t\telem = elem.content || elem;\n\t\t}\n\n\t\treturn jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( _i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the primary Deferred\n\t\t\tprimary = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tprimary.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( primary.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn primary.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );\n\t\t}\n\n\t\treturn primary.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See trac-6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, _key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\t\tvalue :\n\t\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( _all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (trac-9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see trac-8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (trac-14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar documentElement = document.documentElement;\n\n\n\n\tvar isAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem );\n\t\t},\n\t\tcomposed = { composed: true };\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n\t// Check attachment across shadow DOM boundaries when possible (gh-3504)\n\t// Support: iOS 10.0-10.2 only\n\t// Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n\t// leading to errors. We need to check for `getRootNode`.\n\tif ( documentElement.getRootNode ) {\n\t\tisAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem ) ||\n\t\t\t\telem.getRootNode( composed ) === elem.ownerDocument;\n\t\t};\n\t}\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tisAttached( elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = elem.nodeType &&\n\t\t\t( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (trac-11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (trac-14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n\n\t// Support: IE <=9 only\n\t// IE <=9 replaces <option> tags with their contents when inserted outside of\n\t// the select element.\n\tdiv.innerHTML = \"<option></option>\";\n\tsupport.option = !!div.lastChild;\n} )();\n\n\n// We have to close these tags to support XHTML (trac-13200)\nvar wrapMap = {\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n// Support: IE <=9 only\nif ( !support.option ) {\n\twrapMap.optgroup = wrapMap.option = [ 1, \"<select multiple='multiple'>\", \"</select>\" ];\n}\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (trac-15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, attached, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (trac-12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tattached = isAttached( elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( attached ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\nvar rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 - 11+\n// focus() and blur() are asynchronous, except when they are no-op.\n// So expect focus to be synchronous when the element is already active,\n// and blur to be synchronous when the element is not already active.\n// (focus and blur are always synchronous in other supported browsers,\n// this just defines when we can count on it).\nfunction expectSync( elem, type ) {\n\treturn ( elem === safeActiveElement() ) === ( type === \"focus\" );\n}\n\n// Support: IE <=9 only\n// Accessing document.activeElement can throw unexpectedly\n// https://bugs.jquery.com/ticket/13393\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Only attach events to objects that accept data\n\t\tif ( !acceptData( elem ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = Object.create( null );\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\n\t\t\t// Make a writable jQuery.Event from the native event object\n\t\t\tevent = jQuery.event.fix( nativeEvent ),\n\n\t\t\thandlers = (\n\t\t\t\tdataPriv.get( this, \"events\" ) || Object.create( null )\n\t\t\t)[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// If the event is namespaced, then each handler is only invoked if it is\n\t\t\t\t// specially universal or its namespaces are a superset of the event's.\n\t\t\t\tif ( !event.rnamespace || handleObj.namespace === false ||\n\t\t\t\t\tevent.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (trac-13208)\n\t\t\t\t// Don't process clicks on disabled elements (trac-6911, trac-8165, trac-11382, trac-11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (trac-13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tclick: {\n\n\t\t\t// Utilize native event to ensure correct state for checkable inputs\n\t\t\tsetup: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Claim the first handler\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\t// dataPriv.set( el, \"click\", ... )\n\t\t\t\t\tleverageNative( el, \"click\", returnTrue );\n\t\t\t\t}\n\n\t\t\t\t// Return false to allow normal processing in the caller\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\ttrigger: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Force setup before triggering a click\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\tleverageNative( el, \"click\" );\n\t\t\t\t}\n\n\t\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, suppress native .click() on links\n\t\t\t// Also prevent it if we're currently inside a leveraged native-event stack\n\t\t\t_default: function( event ) {\n\t\t\t\tvar target = event.target;\n\t\t\t\treturn rcheckableType.test( target.type ) &&\n\t\t\t\t\ttarget.click && nodeName( target, \"input\" ) &&\n\t\t\t\t\tdataPriv.get( target, \"click\" ) ||\n\t\t\t\t\tnodeName( target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Ensure the presence of an event listener that handles manually-triggered\n// synthetic events by interrupting progress until reinvoked in response to\n// *native* events that it fires directly, ensuring that state changes have\n// already occurred before other listeners are invoked.\nfunction leverageNative( el, type, expectSync ) {\n\n\t// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n\tif ( !expectSync ) {\n\t\tif ( dataPriv.get( el, type ) === undefined ) {\n\t\t\tjQuery.event.add( el, type, returnTrue );\n\t\t}\n\t\treturn;\n\t}\n\n\t// Register the controller as a special universal handler for all event namespaces\n\tdataPriv.set( el, type, false );\n\tjQuery.event.add( el, type, {\n\t\tnamespace: false,\n\t\thandler: function( event ) {\n\t\t\tvar notAsync, result,\n\t\t\t\tsaved = dataPriv.get( this, type );\n\n\t\t\tif ( ( event.isTrigger & 1 ) && this[ type ] ) {\n\n\t\t\t\t// Interrupt processing of the outer synthetic .trigger()ed event\n\t\t\t\t// Saved data should be false in such cases, but might be a leftover capture object\n\t\t\t\t// from an async native handler (gh-4350)\n\t\t\t\tif ( !saved.length ) {\n\n\t\t\t\t\t// Store arguments for use when handling the inner native event\n\t\t\t\t\t// There will always be at least one argument (an event object), so this array\n\t\t\t\t\t// will not be confused with a leftover capture object.\n\t\t\t\t\tsaved = slice.call( arguments );\n\t\t\t\t\tdataPriv.set( this, type, saved );\n\n\t\t\t\t\t// Trigger the native event and capture its result\n\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t// focus() and blur() are asynchronous\n\t\t\t\t\tnotAsync = expectSync( this, type );\n\t\t\t\t\tthis[ type ]();\n\t\t\t\t\tresult = dataPriv.get( this, type );\n\t\t\t\t\tif ( saved !== result || notAsync ) {\n\t\t\t\t\t\tdataPriv.set( this, type, false );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = {};\n\t\t\t\t\t}\n\t\t\t\t\tif ( saved !== result ) {\n\n\t\t\t\t\t\t// Cancel the outer synthetic event\n\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t\t// Support: Chrome 86+\n\t\t\t\t\t\t// In Chrome, if an element having a focusout handler is blurred by\n\t\t\t\t\t\t// clicking outside of it, it invokes the handler synchronously. If\n\t\t\t\t\t\t// that handler calls `.remove()` on the element, the data is cleared,\n\t\t\t\t\t\t// leaving `result` undefined. We need to guard against this.\n\t\t\t\t\t\treturn result && result.value;\n\t\t\t\t\t}\n\n\t\t\t\t// If this is an inner synthetic event for an event with a bubbling surrogate\n\t\t\t\t// (focus or blur), assume that the surrogate already propagated from triggering the\n\t\t\t\t// native event and prevent that from happening again here.\n\t\t\t\t// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n\t\t\t\t// bubbling surrogate propagates *after* the non-bubbling base), but that seems\n\t\t\t\t// less bad than duplication.\n\t\t\t\t} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\n\t\t\t// If this is a native event triggered above, everything is now in order\n\t\t\t// Fire an inner synthetic event with the original arguments\n\t\t\t} else if ( saved.length ) {\n\n\t\t\t\t// ...and capture the result\n\t\t\t\tdataPriv.set( this, type, {\n\t\t\t\t\tvalue: jQuery.event.trigger(\n\n\t\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t\t// Extend with the prototype to reset the above stopImmediatePropagation()\n\t\t\t\t\t\tjQuery.extend( saved[ 0 ], jQuery.Event.prototype ),\n\t\t\t\t\t\tsaved.slice( 1 ),\n\t\t\t\t\t\tthis\n\t\t\t\t\t)\n\t\t\t\t} );\n\n\t\t\t\t// Abort handling of the native event\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t}\n\t\t}\n\t} );\n}\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (trac-504, trac-13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcode: true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\twhich: true\n}, jQuery.event.addProp );\n\njQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( type, delegateType ) {\n\tjQuery.event.special[ type ] = {\n\n\t\t// Utilize native event if possible so blur/focus sequence is correct\n\t\tsetup: function() {\n\n\t\t\t// Claim the first handler\n\t\t\t// dataPriv.set( this, \"focus\", ... )\n\t\t\t// dataPriv.set( this, \"blur\", ... )\n\t\t\tleverageNative( this, type, expectSync );\n\n\t\t\t// Return false to allow normal processing in the caller\n\t\t\treturn false;\n\t\t},\n\t\ttrigger: function() {\n\n\t\t\t// Force setup before trigger\n\t\t\tleverageNative( this, type );\n\n\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\treturn true;\n\t\t},\n\n\t\t// Suppress native focus or blur if we're currently inside\n\t\t// a leveraged native-event stack\n\t\t_default: function( event ) {\n\t\t\treturn dataPriv.get( event.target, type );\n\t\t},\n\n\t\tdelegateType: delegateType\n\t};\n} );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\n\trcleanScript = /^\\s*<!\\[CDATA\\[|\\]\\]>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.get( src );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdataPriv.remove( dest, \"handle events\" );\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = flat( args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (trac-8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl && !node.noModule ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src, {\n\t\t\t\t\t\t\t\t\tnonce: node.nonce || node.getAttribute( \"nonce\" )\n\t\t\t\t\t\t\t\t}, doc );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Unwrap a CDATA section containing script contents. This shouldn't be\n\t\t\t\t\t\t\t// needed as in XML documents they're already not visible when\n\t\t\t\t\t\t\t// inspecting element contents and in HTML documents they have no\n\t\t\t\t\t\t\t// meaning but we're preserving that logic for backwards compatibility.\n\t\t\t\t\t\t\t// This will be removed completely in 4.0. See gh-4904.\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), node, doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && isAttached( node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html;\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = isAttached( elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar rcustomProp = /^--/;\n\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (trac-15098, trac-14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar swap = function( elem, options, callback ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.call( elem );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\nvar whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\";\n\n\nvar rtrimCSS = new RegExp(\n\t\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\",\n\t\"g\"\n);\n\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\t// Support: Chrome <=64\n\t\t// Don't get tricked when zoom affects offsetWidth (gh-4029)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableTrDimensionsVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (trac-8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t},\n\n\t\t// Support: IE 9 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Behavior in IE 9 is more subtle than in newer versions & it passes\n\t\t// some versions of this test; make sure not to make it pass there!\n\t\t//\n\t\t// Support: Firefox 70+\n\t\t// Only Firefox includes border widths\n\t\t// in computed dimensions. (gh-4529)\n\t\treliableTrDimensions: function() {\n\t\t\tvar table, tr, trChild, trStyle;\n\t\t\tif ( reliableTrDimensionsVal == null ) {\n\t\t\t\ttable = document.createElement( \"table\" );\n\t\t\t\ttr = document.createElement( \"tr\" );\n\t\t\t\ttrChild = document.createElement( \"div\" );\n\n\t\t\t\ttable.style.cssText = \"position:absolute;left:-11111px;border-collapse:separate\";\n\t\t\t\ttr.style.cssText = \"border:1px solid\";\n\n\t\t\t\t// Support: Chrome 86+\n\t\t\t\t// Height set through cssText does not get applied.\n\t\t\t\t// Computed height then comes back as 0.\n\t\t\t\ttr.style.height = \"1px\";\n\t\t\t\ttrChild.style.height = \"9px\";\n\n\t\t\t\t// Support: Android 8 Chrome 86+\n\t\t\t\t// In our bodyBackground.html iframe,\n\t\t\t\t// display for all div elements is set to \"inline\",\n\t\t\t\t// which causes a problem only in Android 8 Chrome 86.\n\t\t\t\t// Ensuring the div is display: block\n\t\t\t\t// gets around this issue.\n\t\t\t\ttrChild.style.display = \"block\";\n\n\t\t\t\tdocumentElement\n\t\t\t\t\t.appendChild( table )\n\t\t\t\t\t.appendChild( tr )\n\t\t\t\t\t.appendChild( trChild );\n\n\t\t\t\ttrStyle = window.getComputedStyle( tr );\n\t\t\t\treliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +\n\t\t\t\t\tparseInt( trStyle.borderTopWidth, 10 ) +\n\t\t\t\t\tparseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;\n\n\t\t\t\tdocumentElement.removeChild( table );\n\t\t\t}\n\t\t\treturn reliableTrDimensionsVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tisCustomProp = rcustomProp.test( name ),\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, trac-12537)\n\t//   .css('--customProperty) (gh-3144)\n\tif ( computed ) {\n\n\t\t// Support: IE <=9 - 11+\n\t\t// IE only supports `\"float\"` in `getPropertyValue`; in computed styles\n\t\t// it's only available as `\"cssFloat\"`. We no longer modify properties\n\t\t// sent to `.css()` apart from camelCasing, so we need to check both.\n\t\t// Normally, this would create difference in behavior: if\n\t\t// `getPropertyValue` returns an empty string, the value returned\n\t\t// by `.css()` would be `undefined`. This is usually the case for\n\t\t// disconnected elements. However, in IE even disconnected elements\n\t\t// with no styles return `\"none\"` for `getPropertyValue( \"float\" )`\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( isCustomProp && ret ) {\n\n\t\t\t// Support: Firefox 105+, Chrome <=105+\n\t\t\t// Spec requires trimming whitespace for custom properties (gh-4926).\n\t\t\t// Firefox only trims leading whitespace. Chrome just collapses\n\t\t\t// both leading & trailing whitespace to a single space.\n\t\t\t//\n\t\t\t// Fall back to `undefined` if empty string returned.\n\t\t\t// This collapses a missing definition with property defined\n\t\t\t// and set to an empty string but there's no standard API\n\t\t\t// allowing us to differentiate them without a performance penalty\n\t\t\t// and returning `undefined` aligns with older jQuery.\n\t\t\t//\n\t\t\t// rtrimCSS treats U+000D CARRIAGE RETURN and U+000C FORM FEED\n\t\t\t// as whitespace while CSS does not, but this is not a problem\n\t\t\t// because CSS preprocessing replaces them with U+000A LINE FEED\n\t\t\t// (which *is* CSS whitespace)\n\t\t\t// https://www.w3.org/TR/css-syntax-3/#input-preprocessing\n\t\t\tret = ret.replace( rtrimCSS, \"$1\" ) || undefined;\n\t\t}\n\n\t\tif ( ret === \"\" && !isAttached( elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar cssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style,\n\tvendorProps = {};\n\n// Return a vendor-prefixed property or undefined\nfunction vendorPropName( name ) {\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a potentially-mapped jQuery.cssProps or vendor prefixed property\nfunction finalPropName( name ) {\n\tvar final = jQuery.cssProps[ name ] || vendorProps[ name ];\n\n\tif ( final ) {\n\t\treturn final;\n\t}\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\treturn vendorProps[ name ] = vendorPropName( name ) || name;\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t};\n\nfunction setPositiveNumber( _elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\n\t\t// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n\t\t// Use an explicit zero to avoid NaN (gh-3964)\n\t\t) ) || 0;\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\n\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n\t\t// Fake content-box until we know it's needed to know the true value.\n\t\tboxSizingNeeded = !support.boxSizingReliable() || extra,\n\t\tisBorderBox = boxSizingNeeded &&\n\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox,\n\n\t\tval = curCSS( elem, dimension, styles ),\n\t\toffsetProp = \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\n\t// Support: IE 9 - 11 only\n\t// Use offsetWidth/offsetHeight for when box sizing is unreliable.\n\t// In those cases, the computed value can be trusted to be border-box.\n\tif ( ( !support.boxSizingReliable() && isBorderBox ||\n\n\t\t// Support: IE 10 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Interestingly, in some cases IE 9 doesn't suffer from this issue.\n\t\t!support.reliableTrDimensions() && nodeName( elem, \"tr\" ) ||\n\n\t\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t\t// This happens for inline elements with no explicit setting (gh-3571)\n\t\tval === \"auto\" ||\n\n\t\t// Support: Android <=4.1 - 4.3 only\n\t\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) &&\n\n\t\t// Make sure the element is visible & connected\n\t\telem.getClientRects().length ) {\n\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t\t// Where available, offsetWidth/offsetHeight approximate border box dimensions.\n\t\t// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n\t\t// retrieved value as a content box dimension.\n\t\tvalueIsBorderBox = offsetProp in elem;\n\t\tif ( valueIsBorderBox ) {\n\t\t\tval = elem[ offsetProp ];\n\t\t}\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"gridArea\": true,\n\t\t\"gridColumn\": true,\n\t\t\"gridColumnEnd\": true,\n\t\t\"gridColumnStart\": true,\n\t\t\"gridRow\": true,\n\t\t\"gridRowEnd\": true,\n\t\t\"gridRowStart\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (trac-7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug trac-9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (trac-7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\t// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n\t\t\t// \"px\" to a few hardcoded values.\n\t\t\tif ( type === \"number\" && !isCustomProp ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( _i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t} ) :\n\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\n\t\t\t\t// Only read styles.position if the test has a chance to fail\n\t\t\t\t// to avoid forcing a reflow.\n\t\t\t\tscrollboxSizeBuggy = !support.scrollboxSize() &&\n\t\t\t\t\tstyles.position === \"absolute\",\n\n\t\t\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n\t\t\t\tboxSizingNeeded = scrollboxSizeBuggy || extra,\n\t\t\t\tisBorderBox = boxSizingNeeded &&\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra ?\n\t\t\t\t\tboxModelAdjustment(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\tdimension,\n\t\t\t\t\t\textra,\n\t\t\t\t\t\tisBorderBox,\n\t\t\t\t\t\tstyles\n\t\t\t\t\t) :\n\t\t\t\t\t0;\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && scrollboxSizeBuggy ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 && (\n\t\t\t\tjQuery.cssHooks[ tween.prop ] ||\n\t\t\t\t\ttween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (trac-12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\n\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( _i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( _i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// Use proper attribute retrieval (trac-12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classNames, cur, curValue, className, i, finalValue;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclassNames = classesToArray( value );\n\n\t\tif ( classNames.length ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tcurValue = getClass( this );\n\t\t\t\tcur = this.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\n\t\t\t\t\t\tclassName = classNames[ i ];\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + className + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += className + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\tthis.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classNames, cur, curValue, className, i, finalValue;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclassNames = classesToArray( value );\n\n\t\tif ( classNames.length ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tcurValue = getClass( this );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = this.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\n\t\t\t\t\t\tclassName = classNames[ i ];\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + className + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + className + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\tthis.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar classNames, className, i, self,\n\t\t\ttype = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tclassNames = classesToArray( value );\n\n\t\treturn this.each( function() {\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\tself = jQuery( this );\n\n\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\n\t\t\t\t\tclassName = classNames[ i ];\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (trac-14686, trac-14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (trac-2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (trac-9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (trac-9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || Object.create( null ) )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (trac-6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\n\t\t\t\t// Handle: regular nodes (via `this.ownerDocument`), window\n\t\t\t\t// (via `this.document`) & document (via `this`).\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = { guid: Date.now() };\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml, parserErrorElem;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {}\n\n\tparserErrorElem = xml && xml.getElementsByTagName( \"parsererror\" )[ 0 ];\n\tif ( !xml || parserErrorElem ) {\n\t\tjQuery.error( \"Invalid XML: \" + (\n\t\t\tparserErrorElem ?\n\t\t\t\tjQuery.map( parserErrorElem.childNodes, function( el ) {\n\t\t\t\t\treturn el.textContent;\n\t\t\t\t} ).join( \"\\n\" ) :\n\t\t\t\tdata\n\t\t) );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\tif ( a == null ) {\n\t\treturn \"\";\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} ).filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} ).map( function( _i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// trac-7653, trac-8125, trac-8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (trac-10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\noriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes trac-9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() + \" \" ] =\n\t\t\t\t\t\t\t\t\t( responseHeaders[ match[ 1 ].toLowerCase() + \" \" ] || [] )\n\t\t\t\t\t\t\t\t\t\t.concat( match[ 2 ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() + \" \" ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match.join( \", \" );\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (trac-10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket trac-12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (trac-15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// trac-9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce.guid++ ) +\n\t\t\t\t\tuncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Use a noop converter for missing script but not if jsonp\n\t\t\tif ( !isSuccess &&\n\t\t\t\tjQuery.inArray( \"script\", s.dataTypes ) > -1 &&\n\t\t\t\tjQuery.inArray( \"json\", s.dataTypes ) < 0 ) {\n\t\t\t\ts.converters[ \"text script\" ] = function() {};\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( _i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\njQuery.ajaxPrefilter( function( s ) {\n\tvar i;\n\tfor ( i in s.headers ) {\n\t\tif ( i.toLowerCase() === \"content-type\" ) {\n\t\t\ts.contentType = s.headers[ i ] || \"\";\n\t\t}\n\t}\n} );\n\n\njQuery._evalUrl = function( url, options, doc ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (trac-11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\n\t\t// Only evaluate the response if it is successful (gh-4126)\n\t\t// dataFilter is not invoked for failure responses, so using it instead\n\t\t// of the default converter is kludgy but it works.\n\t\tconverters: {\n\t\t\t\"text script\": function() {}\n\t\t},\n\t\tdataFilter: function( response ) {\n\t\t\tjQuery.globalEval( response, options, doc );\n\t\t}\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// trac-1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see trac-8605, trac-14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// trac-14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain or forced-by-attrs requests\n\tif ( s.crossDomain || s.scriptAttrs ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" )\n\t\t\t\t\t.attr( s.scriptAttrs || {} )\n\t\t\t\t\t.prop( { charset: s.scriptCharset, src: s.url } )\n\t\t\t\t\t.on( \"load error\", callback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce.guid++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( _i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( {\n\t\tpadding: \"inner\" + name,\n\t\tcontent: type,\n\t\t\"\": \"outer\" + name\n\t}, function( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( _i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t},\n\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\njQuery.each(\n\t( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( _i, name ) {\n\n\t\t// Handle event binding\n\t\tjQuery.fn[ name ] = function( data, fn ) {\n\t\t\treturn arguments.length > 0 ?\n\t\t\t\tthis.on( name, null, data, fn ) :\n\t\t\t\tthis.trigger( name );\n\t\t};\n\t}\n);\n\n\n\n\n// Support: Android <=4.0 only\n// Make sure we trim BOM and NBSP\n// Require that the \"whitespace run\" starts from a non-whitespace\n// to avoid O(N^2) behavior when the engine would try matching \"\\s+$\" at each space position.\nvar rtrim = /^[\\s\\uFEFF\\xA0]+|([^\\s\\uFEFF\\xA0])[\\s\\uFEFF\\xA0]+$/g;\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\njQuery.trim = function( text ) {\n\treturn text == null ?\n\t\t\"\" :\n\t\t( text + \"\" ).replace( rtrim, \"$1\" );\n};\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (trac-7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (trac-13566)\nif ( typeof noGlobal === \"undefined\" ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n","// When a boxed property is passed in, it should have quotes of some\n// kind around it.\n//\n// For instance:\n// \t\tMyValues['Name']\n// \t\tMyValues[\"Age\"]\n// \t\tMyValues[`Cost`]\n//\n// This function removes the wrapping quotes.\n//\n// Please note it *DOES NOT PARSE* template literals, so backticks just\n// end up doing the same thing as other quote types.\n//\n// TODO: Should template literals be processed?  If so what state do they have access to?  That should happen here if so.\n// TODO: Make a simple class include library with these\nlet cleanWrapCharacters = (pCharacter, pString) =>\n{\n\tif (pString.startsWith(pCharacter) && pString.endsWith(pCharacter))\n\t{\n\t\treturn pString.substring(1, pString.length - 1);\n\t}\n\telse\n\t{\n\t\treturn pString;\n\t}\n};\n\nmodule.exports = cleanWrapCharacters;","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Hash Translation\n*\n* This is a very simple translation table for hashes, which allows the same schema to resolve\n* differently based on a loaded translation table.\n*\n* This is to prevent the requirement for mutating schemas over and over again when we want to\n* reuse the structure but look up data elements by different addresses.\n*\n* One side-effect of this is that a translation table can \"override\" the built-in hashes, since\n* this is always used to resolve hashes before any of the functionCallByHash(pHash, ...) perform\n* their lookups by hash.\n*\n* @class ManyfestHashTranslation\n*/\nclass ManyfestHashTranslation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n        this.translationTable = {};\n\t}\n\n    translationCount()\n    {\n        return Object.keys(this.translationTable).length;\n    }\n\n    addTranslation(pTranslation)\n    {\n        // This adds a translation in the form of:\n        // { \"SourceHash\": \"DestinationHash\", \"SecondSourceHash\":\"SecondDestinationHash\" }\n        if (typeof(pTranslation) != 'object')\n        {\n            this.logError(`Hash translation addTranslation expected a translation be type object but was passed in ${typeof(pTranslation)}`);\n            return false;\n        }\n\n        let tmpTranslationSources = Object.keys(pTranslation)\n\n        tmpTranslationSources.forEach(\n            (pTranslationSource) =>\n            {\n                if (typeof(pTranslation[pTranslationSource]) != 'string')\n                {\n                    this.logError(`Hash translation addTranslation expected a translation destination hash for [${pTranslationSource}] to be a string but the referrant was a ${typeof(pTranslation[pTranslationSource])}`);\n                }\n                else\n                {\n                    this.translationTable[pTranslationSource] = pTranslation[pTranslationSource];\n                }\n            });\n    }\n\n    removeTranslationHash(pTranslationHash)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslationHash))\n        {\n            delete this.translationTable[pTranslationHash];\n        }\n    }\n\n    // This removes translations.\n    // If passed a string, just removes the single one.\n    // If passed an object, it does all the source keys.\n    removeTranslation(pTranslation)\n    {\n        if (typeof(pTranslation) == 'string')\n        {\n            this.removeTranslationHash(pTranslation);\n            return true;\n        }\n        else if (typeof(pTranslation) == 'object')\n        {\n            let tmpTranslationSources = Object.keys(pTranslation)\n\n            tmpTranslationSources.forEach(\n                (pTranslationSource) =>\n                {\n                    this.removeTranslation(pTranslationSource);\n                });\n            return true;\n        }\n        else\n        {\n            this.logError(`Hash translation removeTranslation expected either a string or an object but the passed-in translation was type ${typeof(pTranslation)}`);\n            return false;\n        }\n    }\n\n    clearTranslations()\n    {\n        this.translationTable = {};\n    }\n\n    translate(pTranslation)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslation))\n        {\n            return this.translationTable[pTranslation];\n        }\n        else\n        {\n            return pTranslation;\n        }\n    }\n}\n\nmodule.exports = ManyfestHashTranslation;","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n/**\n* Manyfest simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n\n    console.log(`[Manyfest] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject));\n};\n\nmodule.exports = logToConsole;","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Resolver\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressResolverCheckAddressExists\n*/\nclass ManyfestObjectAddressResolverCheckAddressExists\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.elucidatorSolver = false;\n\t\tthis.elucidatorSolverState = {};\n\t}\n\n\t// Check if an address exists.\n\t//\n\t// This is necessary because the getValueAtAddress function is ambiguous on\n\t// whether the element/property is actually there or not (it returns\n\t// undefined whether the property exists or not).  This function checks for\n\t// existance and returns true or false dependent.\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\t// TODO: Should these throw an error?\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Check if the property exists.\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName].hasOwnProperty(tmpBoxedPropertyReference);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Use the new in operator to see if the element is in the array\n\t\t\t\t\treturn (tmpBoxedPropertyNumber in pObject[tmpBoxedPropertyName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Check if the property exists\n\t\t\t\treturn pObject.hasOwnProperty(pAddress);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// Because this is an impossible address, the property doesn't exist\n\t\t\t\t\t// TODO: Should we throw an error in this condition?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverCheckAddressExists;","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet libPrecedent = require('precedent');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - DeleteValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverDeleteValue\n*/\nclass ManyfestObjectAddressResolverDeleteValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.elucidatorSolver = false;\n\t\tthis.elucidatorSolverState = {};\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\tlet tmpPrecedent = new libPrecedent();\n\t\t// If we don't copy the string, precedent takes it out for good.\n\t\t// TODO: Consider adding a \"don't replace\" option for precedent\n\t\tlet tmpAddress = pAddress;\n\n\t\tif (!this.elucidatorSolver)\n\t\t{\n\t\t\t// Again, manage against circular dependencies\n\t\t\tlet libElucidator = require('elucidator');\n\t\t\tthis.elucidatorSolver = new libElucidator({}, this.logInfo, this.logError);\n\t\t}\n\n\t\tif (this.elucidatorSolver)\n\t\t{\n\t\t\t// This allows the magic filtration with elucidator configuration\n\t\t\t// TODO: We could pass more state in (e.g. parent address, object, etc.)\n\t\t\t// TODO: Discuss this metaprogramming AT LENGTH\n\t\t\tlet tmpFilterState = (\n\t\t\t\t{\n\t\t\t\t\tRecord: pRecord,\n\t\t\t\t\tkeepRecord: true\n\t\t\t\t});\n\n\t\t\t// This is about as complex as it gets.\n\t\t\t// TODO: Optimize this so it is only initialized once.\n\t\t\t// TODO: That means figuring out a healthy pattern for passing in state to this\n\t\t\ttmpPrecedent.addPattern('<<~~', '~~>>',\n\t\t\t\t(pInstructionHash) =>\n\t\t\t\t{\n\t\t\t\t\t// This is for internal config on the solution steps.  Right now config is not shared across steps.\n\t\t\t\t\tif (this.elucidatorSolverState.hasOwnProperty(pInstructionHash))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpFilterState.SolutionState = this.elucidatorSolverState[pInstructionHash];\n\t\t\t\t\t}\n\t\t\t\t\tthis.elucidatorSolver.solveInternalOperation('Custom', pInstructionHash, tmpFilterState);\n\t\t\t\t});\n\t\t\ttmpPrecedent.addPattern('<<~?', '?~>>',\n\t\t\t\t(pMagicSearchExpression) =>\n\t\t\t\t{\n\t\t\t\t\tif (typeof(pMagicSearchExpression) !== 'string')\n\t\t\t\t\t{\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// This expects a comma separated expression:\n\t\t\t\t\t//     Some.Address.In.The.Object,==,Search Term to Match\n\t\t\t\t\tlet tmpMagicComparisonPatternSet = pMagicSearchExpression.split(',');\n\n\t\t\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\t\t\t\t\tlet tmpSearchComparator = tmpMagicComparisonPatternSet[1];\n\t\t\t\t\tlet tmpSearchValue = tmpMagicComparisonPatternSet[2];\n\n\t\t\t\t\ttmpFilterState.ComparisonState = (\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tSearchAddress: tmpSearchAddress,\n\t\t\t\t\t\t\tComparator: tmpSearchComparator,\n\t\t\t\t\t\t\tSearchTerm: tmpSearchValue\n\t\t\t\t\t\t});\n\n\t\t\t\t\tthis.elucidatorSolver.solveOperation(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"Description\":\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"Operation\": \"Simple_If\",\n\t\t\t\t\t\t\t\t\"Synopsis\": \"Test for \"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Steps\":\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"Namespace\": \"Logic\",\n\t\t\t\t\t\t\t\t\t\"Instruction\": \"if\",\n\n\t\t\t\t\t\t\t\t\t\"InputHashAddressMap\":\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t// This is ... dynamically assigning the address in the instruction\n\t\t\t\t\t\t\t\t\t\t\t// The complexity is astounding.\n\t\t\t\t\t\t\t\t\t\t\t\"leftValue\": `Record.${tmpSearchAddress}`,\n\t\t\t\t\t\t\t\t\t\t\t\"rightValue\": \"ComparisonState.SearchTerm\",\n\t\t\t\t\t\t\t\t\t\t\t\"comparator\": \"ComparisonState.Comparator\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"OutputHashAddressMap\": { \"truthinessResult\":\"keepRecord\" }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}, tmpFilterState);\n\t\t\t\t});\n\t\t\ttmpPrecedent.parseString(tmpAddress);\n\n\t\t\t// It is expected that the operation will mutate this to some truthy value\n\t\t\treturn tmpFilterState.keepRecord;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Count from the end to the beginning so splice doesn't %&%#$ up the array\n\t\t\t\tfor (let i = tmpInputArray.length - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Delete elements end to beginning\n\t\t\t\t\t\ttmpInputArray.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tdelete pObject[tmpObjectPropertyName];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tdelete pObject[pAddress];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverDeleteValue;","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet libPrecedent = require('precedent');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - GetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverGetValue\n*/\nclass ManyfestObjectAddressResolverGetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.elucidatorSolver = false;\n\t\tthis.elucidatorSolverState = {};\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\tlet tmpPrecedent = new libPrecedent();\n\t\t// If we don't copy the string, precedent takes it out for good.\n\t\t// TODO: Consider adding a \"don't replace\" option for precedent\n\t\tlet tmpAddress = pAddress;\n\n\t\tif (!this.elucidatorSolver)\n\t\t{\n\t\t\t// Again, manage against circular dependencies\n\t\t\tlet libElucidator = require('elucidator');\n\t\t\tthis.elucidatorSolver = new libElucidator({}, this.logInfo, this.logError);\n\t\t}\n\n\t\tif (this.elucidatorSolver)\n\t\t{\n\t\t\t// This allows the magic filtration with elucidator configuration\n\t\t\t// TODO: We could pass more state in (e.g. parent address, object, etc.)\n\t\t\t// TODO: Discuss this metaprogramming AT LENGTH\n\t\t\tlet tmpFilterState = (\n\t\t\t\t{\n\t\t\t\t\tRecord: pRecord,\n\t\t\t\t\tkeepRecord: true\n\t\t\t\t});\n\n\t\t\t// This is about as complex as it gets.\n\t\t\t// TODO: Optimize this so it is only initialized once.\n\t\t\t// TODO: That means figuring out a healthy pattern for passing in state to this\n\t\t\ttmpPrecedent.addPattern('<<~~', '~~>>',\n\t\t\t\t(pInstructionHash) =>\n\t\t\t\t{\n\t\t\t\t\t// This is for internal config on the solution steps.  Right now config is not shared across steps.\n\t\t\t\t\tif (this.elucidatorSolverState.hasOwnProperty(pInstructionHash))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpFilterState.SolutionState = this.elucidatorSolverState[pInstructionHash];\n\t\t\t\t\t}\n\t\t\t\t\tthis.elucidatorSolver.solveInternalOperation('Custom', pInstructionHash, tmpFilterState);\n\t\t\t\t});\n\t\t\ttmpPrecedent.addPattern('<<~?', '?~>>',\n\t\t\t\t(pMagicSearchExpression) =>\n\t\t\t\t{\n\t\t\t\t\tif (typeof(pMagicSearchExpression) !== 'string')\n\t\t\t\t\t{\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// This expects a comma separated expression:\n\t\t\t\t\t//     Some.Address.In.The.Object,==,Search Term to Match\n\t\t\t\t\tlet tmpMagicComparisonPatternSet = pMagicSearchExpression.split(',');\n\n\t\t\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\t\t\t\t\tlet tmpSearchComparator = tmpMagicComparisonPatternSet[1];\n\t\t\t\t\tlet tmpSearchValue = tmpMagicComparisonPatternSet[2];\n\n\t\t\t\t\ttmpFilterState.ComparisonState = (\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tSearchAddress: tmpSearchAddress,\n\t\t\t\t\t\t\tComparator: tmpSearchComparator,\n\t\t\t\t\t\t\tSearchTerm: tmpSearchValue\n\t\t\t\t\t\t});\n\n\t\t\t\t\tthis.elucidatorSolver.solveOperation(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"Description\":\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"Operation\": \"Simple_If\",\n\t\t\t\t\t\t\t\t\"Synopsis\": \"Test for \"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Steps\":\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"Namespace\": \"Logic\",\n\t\t\t\t\t\t\t\t\t\"Instruction\": \"if\",\n\n\t\t\t\t\t\t\t\t\t\"InputHashAddressMap\":\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t// This is ... dynamically assigning the address in the instruction\n\t\t\t\t\t\t\t\t\t\t\t// The complexity is astounding.\n\t\t\t\t\t\t\t\t\t\t\t\"leftValue\": `Record.${tmpSearchAddress}`,\n\t\t\t\t\t\t\t\t\t\t\t\"rightValue\": \"ComparisonState.SearchTerm\",\n\t\t\t\t\t\t\t\t\t\t\t\"comparator\": \"ComparisonState.Comparator\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"OutputHashAddressMap\": { \"truthinessResult\":\"keepRecord\" }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}, tmpFilterState);\n\t\t\t\t});\n\t\t\ttmpPrecedent.parseString(tmpAddress);\n\n\t\t\t// It is expected that the operation will mutate this to some truthy value\n\t\t\treturn tmpFilterState.keepRecord;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\tlet tmpOutputArray = [];\n\t\t\t\tfor (let i = 0; i < tmpInputArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOutputArray.push(tmpInputArray[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpOutputArray;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn pObject[tmpObjectPropertyName];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\treturn pObject[pAddress];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverGetValue;","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet libPrecedent = require('precedent');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - SetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressSetValue\n*/\nclass ManyfestObjectAddressSetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.elucidatorSolver = false;\n\t\tthis.elucidatorSolverState = {};\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyReference] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the time in recursion to set the value in the object\n\t\t\t\tpObject[pAddress] = pValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressSetValue;","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Generation\n*\n* Automagically generate addresses and properties based on a passed-in object,\n* to be used for easy creation of schemas.  Meant to simplify the lives of\n* developers wanting to create schemas without typing a bunch of stuff.\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressGeneration\n*/\nclass ManyfestObjectAddressGeneration\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// generateAddressses\n\t//\n\t// This flattens an object into a set of key:value pairs for *EVERY SINGLE\n\t// POSSIBLE ADDRESS* in the object.  It can get ... really insane really\n\t// quickly.  This is not meant to be used directly to generate schemas, but\n\t// instead as a starting point for scripts or UIs.\n\t//\n\t// This will return a mega set of key:value pairs with all possible schema\n\t// permutations and default values (when not an object) and everything else.\n\tgenerateAddressses (pObject, pBaseAddress, pSchema)\n\t{\n\t\tlet tmpBaseAddress = (typeof(pBaseAddress) == 'string') ? pBaseAddress : '';\n\t\tlet tmpSchema = (typeof(pSchema) == 'object') ? pSchema : {};\n\n\t\tlet tmpObjectType = typeof(pObject);\n\n\t\tlet tmpSchemaObjectEntry = (\n\t\t\t{\n\t\t\t\tAddress: tmpBaseAddress,\n\t\t\t\tHash: tmpBaseAddress,\n\t\t\t\tName: tmpBaseAddress,\n\t\t\t\t// This is so scripts and UI controls can force a developer to opt-in.\n\t\t\t\tInSchema: false\n\t\t\t}\n\t\t)\n\n\t\tif ((tmpObjectType == 'object') && (pObject == null))\n\t\t{\n\t\t\ttmpObjectType = 'null';\n\t\t}\n\n\t\tswitch(tmpObjectType)\n\t\t{\n\t\t\tcase 'string':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'String';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\tcase 'bigint':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Number';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\tcase 'null':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Any';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif (Array.isArray(pObject))\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Array';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < pObject.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[i], `${tmpBaseAddress}[${i}]`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Object';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t\ttmpBaseAddress += '.';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectProperties = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectProperties.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[tmpObjectProperties[i]], `${tmpBaseAddress}${tmpObjectProperties[i]}`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'symbol':\n\t\t\tcase 'function':\n\t\t\t\t// Symbols and functions neither recurse nor get added to the schema\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tmpSchema;\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressGeneration;","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Schema Manipulation Functions\n*\n* @class ManyfestSchemaManipulation\n*/\nclass ManyfestSchemaManipulation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n    // This translates the default address mappings to something different.\n    //\n    // For instance you can pass in manyfest schema descriptor object:\n    // \t{\n\t//\t  \"Address.Of.a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t//\t  \"Address.Of.b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t//  }\n    //\n    //\n    // And then an address mapping (basically a Hash->Address map)\n    //  {\n    //    \"a\": \"New.Address.Of.a\",\n    //    \"b\": \"New.Address.Of.b\"\n    //  }\n    //\n    // NOTE: This mutates the schema object permanently, altering the base hash.\n    //       If there is a collision with an existing address, it can lead to overwrites.\n    // TODO: Discuss what should happen on collisions.\n\tresolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\tif (typeof(pManyfestSchemaDescriptors) != 'object')\n\t\t{\n\t\t\tthis.logError(`Attempted to resolve address mapping but the descriptor was not an object.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof(pAddressMapping) != 'object')\n\t\t{\n\t\t\t// No mappings were passed in\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the arrays of both the schema definition and the hash mapping\n\t\tlet tmpManyfestAddresses = Object.keys(pManyfestSchemaDescriptors);\n\t\tlet tmpHashMapping = {};\n\t\ttmpManyfestAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tif (pManyfestSchemaDescriptors[pAddress].hasOwnProperty('Hash'))\n\t\t\t\t{\n\t\t\t\t\ttmpHashMapping[pManyfestSchemaDescriptors[pAddress].Hash] = pAddress;\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet tmpAddressMappingSet = Object.keys(pAddressMapping);\n\n\t\ttmpAddressMappingSet.forEach(\n\t\t\t(pInputAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpNewDescriptorAddress = pAddressMapping[pInputAddress];\n\t\t\t\tlet tmpOldDescriptorAddress = false;\n\t\t\t\tlet tmpDescriptor = false;\n\n\t\t\t\t// See if there is a matching descriptor either by Address directly or Hash\n\t\t\t\tif (pManyfestSchemaDescriptors.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = pInputAddress;\n\t\t\t\t}\n\t\t\t\telse if (tmpHashMapping.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = tmpHashMapping[pInputAddress];\n\t\t\t\t}\n\n\t\t\t\t// If there was a matching descriptor in the manifest, store it in the temporary descriptor\n\t\t\t\tif (tmpOldDescriptorAddress)\n\t\t\t\t{\n\t\t\t\t\ttmpDescriptor = pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t\tdelete pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Create a new descriptor!  Map it to the input address.\n\t\t\t\t\ttmpDescriptor = { Hash:pInputAddress };\n\t\t\t\t}\n\n\t\t\t\t// Now re-add the descriptor to the manyfest schema\n\t\t\t\tpManyfestSchemaDescriptors[tmpNewDescriptorAddress] = tmpDescriptor;\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tsafeResolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\t// This returns the descriptors as a new object, safely remapping without mutating the original schema Descriptors\n\t\tlet tmpManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptors));\n\t\tthis.resolveAddressMappings(tmpManyfestSchemaDescriptors, pAddressMapping);\n\t\treturn tmpManyfestSchemaDescriptors;\n\t}\n\n\tmergeAddressMappings(pManyfestSchemaDescriptorsDestination, pManyfestSchemaDescriptorsSource)\n\t{\n\t\tif ((typeof(pManyfestSchemaDescriptorsSource) != 'object') || (typeof(pManyfestSchemaDescriptorsDestination) != 'object'))\n\t\t{\n\t\t\tthis.logError(`Attempted to merge two schema descriptors but both were not objects.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpSource = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsSource));\n\t\tlet tmpNewManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsDestination));\n\n\t\t// The first passed-in set of descriptors takes precedence.\n\t\tlet tmpDescriptorAddresses = Object.keys(tmpSource);\n\n\t\ttmpDescriptorAddresses.forEach(\n\t\t\t(pDescriptorAddress) =>\n\t\t\t{\n\t\t\t\tif (!tmpNewManyfestSchemaDescriptors.hasOwnProperty(pDescriptorAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpNewManyfestSchemaDescriptors[pDescriptorAddress] = tmpSource[pDescriptorAddress];\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpNewManyfestSchemaDescriptors;\n\t}\n}\n\nmodule.exports = ManyfestSchemaManipulation;","/**\n* @license MIT\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\nlet libPrecedent = require('precedent');\n\nlet libHashTranslation = require('./Manyfest-HashTranslation.js');\nlet libObjectAddressCheckAddressExists = require('./Manyfest-ObjectAddress-CheckAddressExists.js');\nlet libObjectAddressGetValue = require('./Manyfest-ObjectAddress-GetValue.js');\nlet libObjectAddressSetValue = require('./Manyfest-ObjectAddress-SetValue.js');\nlet libObjectAddressDeleteValue = require('./Manyfest-ObjectAddress-DeleteValue.js');\nlet libObjectAddressGeneration = require('./Manyfest-ObjectAddressGeneration.js');\nlet libSchemaManipulation = require('./Manyfest-SchemaManipulation.js');\n\n\n/**\n* Manyfest object address-based descriptions and manipulations.\n*\n* @class Manyfest\n*/\nclass Manyfest\n{\n\tconstructor(pManifest, pInfoLog, pErrorLog, pOptions)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n\t\t// Create an object address resolver and map in the functions\n\t\tthis.objectAddressCheckAddressExists = new libObjectAddressCheckAddressExists(this.logInfo, this.logError);\n\t\tthis.objectAddressGetValue = new libObjectAddressGetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressSetValue = new libObjectAddressSetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressDeleteValue = new libObjectAddressDeleteValue(this.logInfo, this.logError);\n\n\t\tthis.options = (\n\t\t\t{\n\t\t\t\tstrict: false,\n\t\t\t\tdefaultValues:\n\t\t\t\t\t{\n\t\t\t\t\t\t\"String\": \"\",\n\t\t\t\t\t\t\"Number\": 0,\n\t\t\t\t\t\t\"Float\": 0.0,\n\t\t\t\t\t\t\"Integer\": 0,\n\t\t\t\t\t\t\"Boolean\": false,\n\t\t\t\t\t\t\"Binary\": 0,\n\t\t\t\t\t\t\"DateTime\": 0,\n\t\t\t\t\t\t\"Array\": [],\n\t\t\t\t\t\t\"Object\": {},\n\t\t\t\t\t\t\"Null\": null\n\t\t\t\t\t}\n\t\t\t});\n\n\t\tthis.scope = undefined;\n\t\tthis.elementAddresses = undefined;\n\t\tthis.elementHashes = undefined;\n\t\tthis.elementDescriptors = undefined;\n\t\t// This can cause a circular dependency chain, so it only gets initialized if the schema specifically calls for it.\n\t\tthis.dataSolvers = undefined;\n\t\t// So solvers can use their own state\n\t\tthis.dataSolverState = undefined;\n\n\t\tthis.reset();\n\n\t\tif (typeof(pManifest) === 'object')\n\t\t{\n\t\t\tthis.loadManifest(pManifest);\n\t\t}\n\n\t\tthis.schemaManipulations = new libSchemaManipulation(this.logInfo, this.logError);\n\t\tthis.objectAddressGeneration = new libObjectAddressGeneration(this.logInfo, this.logError);\n\n\t\tthis.hashTranslations = new libHashTranslation(this.logInfo, this.logError);\n\t}\n\n\t/*************************************************************************\n\t * Schema Manifest Loading, Reading, Manipulation and Serialization Functions\n\t */\n\n\t// Reset critical manifest properties\n\treset()\n\t{\n\t\tthis.scope = 'DEFAULT';\n\t\tthis.elementAddresses = [];\n\t\tthis.elementHashes = {};\n\t\tthis.elementDescriptors = {};\n\t\tthis.dataSolvers = undefined;\n\t\tthis.dataSolverState = {};\n\n\t\tthis.libElucidator = undefined;\n\t}\n\n\tsetElucidatorSolvers(pElucidatorSolver, pElucidatorSolverState)\n\t{\n\t\tthis.objectAddressCheckAddressExists.elucidatorSolver = pElucidatorSolver;\n\t\tthis.objectAddressGetValue.elucidatorSolver = pElucidatorSolver;\n\t\tthis.objectAddressSetValue.elucidatorSolver = pElucidatorSolver;\n\t\tthis.objectAddressDeleteValue.elucidatorSolver = pElucidatorSolver;\n\n\t\tthis.objectAddressCheckAddressExists.elucidatorSolverState = pElucidatorSolverState;\n\t\tthis.objectAddressGetValue.elucidatorSolverState = pElucidatorSolverState;\n\t\tthis.objectAddressSetValue.elucidatorSolverState = pElucidatorSolverState;\n\t\tthis.objectAddressDeleteValue.elucidatorSolverState = pElucidatorSolverState;\n\t}\n\n\tclone()\n\t{\n\t\t// Make a copy of the options in-place\n\t\tlet tmpNewOptions = JSON.parse(JSON.stringify(this.options));\n\n\t\tlet tmpNewManyfest = new Manyfest(this.getManifest(), this.logInfo, this.logError, tmpNewOptions);\n\n\t\t// Import the hash translations\n\t\ttmpNewManyfest.hashTranslations.addTranslation(this.hashTranslations.translationTable);\n\n\t\treturn tmpNewManyfest;\n\t}\n\n\t// Deserialize a Manifest from a string\n\tdeserialize(pManifestString)\n\t{\n\t\t// TODO: Add guards for bad manifest string\n\t\treturn this.loadManifest(JSON.parse(pManifestString));\n\t}\n\n\t// Load a manifest from an object\n\tloadManifest(pManifest)\n\t{\n\t\tif (typeof(pManifest) !== 'object')\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading manifest; expecting an object but parameter was type ${typeof(pManifest)}.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (pManifest.hasOwnProperty('Scope'))\n\t\t{\n\t\t\tif (typeof(pManifest.Scope) === 'string')\n\t\t\t{\n\t\t\t\tthis.scope = pManifest.Scope;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest; expecting a string but property was type ${typeof(pManifest.Scope)}.`, pManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest object.  Property \"Scope\" does not exist in the root of the object.`, pManifest);\n\t\t}\n\n\t\tif (pManifest.hasOwnProperty('Descriptors'))\n\t\t{\n\t\t\tif (typeof(pManifest.Descriptors) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpDescriptionAddresses = Object.keys(pManifest.Descriptors);\n\t\t\t\tfor (let i = 0; i < tmpDescriptionAddresses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.addDescriptor(tmpDescriptionAddresses[i], pManifest.Descriptors[tmpDescriptionAddresses[i]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading description object from manifest object.  Expecting an object in 'Manifest.Descriptors' but the property was type ${typeof(pManifest.Descriptors)}.`, pManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object description from manifest object.  Property \"Descriptors\" does not exist in the root of the Manifest object.`, pManifest);\n\t\t}\n\n\t\t// This seems like it would create a circular dependency issue but it only goes as deep as the schema defines Solvers\n\t\tif ((pManifest.hasOwnProperty('Solvers')) && (typeof(pManifest.Solvers) == 'object'))\n\t\t{\n\t\t\t// There are elucidator solvers passed-in, so we will create one to filter data.\n\t\t\tlet libElucidator = require('elucidator');\n\t\t\t// WARNING THESE CAN MUTATE THE DATA\n\t\t\t\t// The pattern for the solver is: {<~~SolverName~~>} anywhere in a property.\n\t\t\t\t//   Yes, this means your Javascript elements can't have my self-styled jellyfish brackets in them.\n\t\t\t\t//   This does, though, mean we can filter at multiple layers safely.\n\t\t\t\t//   Because these can be put at any address\n\t\t\t// The solver themselves:\n\t\t\t\t//   They are passed-in an object, and the current record is in the Record subobject.\n\t\t\t\t//   Basic operations can just write to the root object but...\n\t\t\t\t//   IF YOU PERMUTE THE Record SUBOBJECT YOU CAN AFFECT RECURSION\n\t\t\t// This is mostly meant for if statements to filter.\n\t\t\t\t//   Basically on aggregation, if a filter is set it will set \"keep record\" to true and let the solver decide differently.\n\t\t\tthis.dataSolvers = new libElucidator(pManifest.Solvers, this.logInfo, this.logError);\n\n\t\t\t// Load the solver state in so each instruction can have internal config\n\t\t\t// TODO: Should this just be a part of the lower layer pattern?\n\t\t\tlet tmpSolverKeys = Object.keys(pManifest.Solvers)\n\t\t\tfor (let i = 0; i < tmpSolverKeys.length; i++)\n\t\t\t{\n\t\t\t\tthis.dataSolverState[tmpSolverKeys] = pManifest.Solvers[tmpSolverKeys[i]];\n\t\t\t}\n\n\t\t\tthis.setElucidatorSolvers(this.dataSolvers, this.dataSolverState);\n\t\t}\n\t}\n\n\t// Serialize the Manifest to a string\n\t// TODO: Should this also serialize the translation table?\n\tserialize()\n\t{\n\t\treturn JSON.stringify(this.getManifest());\n\t}\n\n\tgetManifest()\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tScope: this.scope,\n\t\t\t\tDescriptors: JSON.parse(JSON.stringify(this.elementDescriptors))\n\t\t\t});\n\t}\n\n\t// Add a descriptor to the manifest\n\taddDescriptor(pAddress, pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) === 'object')\n\t\t{\n\t\t\t// Add the Address into the Descriptor if it doesn't exist:\n\t\t\tif (!pDescriptor.hasOwnProperty('Address'))\n\t\t\t{\n\t\t\t\tpDescriptor.Address = pAddress;\n\t\t\t}\n\n\t\t\tif (!this.elementDescriptors.hasOwnProperty(pAddress))\n\t\t\t{\n\t\t\t\tthis.elementAddresses.push(pAddress);\n\t\t\t}\n\n\t\t\t// Add the element descriptor to the schema\n\t\t\tthis.elementDescriptors[pAddress] = pDescriptor;\n\n\t\t\t// Always add the address as a hash\n\t\t\tthis.elementHashes[pAddress] = pAddress;\n\n\t\t\tif (pDescriptor.hasOwnProperty('Hash'))\n\t\t\t{\n\t\t\t\t// TODO: Check if this is a good idea or not..\n\t\t\t\t//       Collisions are bound to happen with both representations of the address/hash in here and developers being able to create their own hashes.\n\t\t\t\tthis.elementHashes[pDescriptor.Hash] = pAddress;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpDescriptor.Hash = pAddress;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object descriptor for address '${pAddress}' from manifest object.  Expecting an object but property was type ${typeof(pDescriptor)}.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetDescriptorByHash(pHash)\n\t{\n\t\treturn this.getDescriptor(this.resolveHashAddress(pHash));\n\t}\n\n\tgetDescriptor(pAddress)\n\t{\n\t\treturn this.elementDescriptors[pAddress];\n\t}\n\n\t// execute an action function for each descriptor\n\teachDescriptor(fAction)\n\t{\n        let tmpDescriptorAddresses = Object.keys(this.elementDescriptors);\n        for (let i = 0; i < tmpDescriptorAddresses.length; i++)\n        {\n            fAction(this.elementDescriptors[tmpDescriptorAddresses[i]]);\n        }\n\n\t}\n\n\t/*************************************************************************\n\t * Beginning of Object Manipulation (read & write) Functions\n\t */\n\t// Check if an element exists by its hash\n\tcheckAddressExistsByHash (pObject, pHash)\n\t{\n\t\treturn this.checkAddressExists(pObject,this.resolveHashAddress(pHash));\n\t}\n\n\t// Check if an element exists at an address\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\treturn this.objectAddressCheckAddressExists.checkAddressExists(pObject, pAddress);\n\t}\n\n\t// Turn a hash into an address, factoring in the translation table.\n\tresolveHashAddress(pHash)\n\t{\n\t\tlet tmpAddress = undefined;\n\n\t\tlet tmpInElementHashTable = this.elementHashes.hasOwnProperty(pHash);\n\t\tlet tmpInTranslationTable = this.hashTranslations.translationTable.hasOwnProperty(pHash);\n\n\t\t// The most straightforward: the hash exists, no translations.\n\t\tif (tmpInElementHashTable && !tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[pHash];\n\t\t}\n\t\t// There is a translation from one hash to another, and, the elementHashes contains the pointer end\n\t\telse if (tmpInTranslationTable && this.elementHashes.hasOwnProperty(this.hashTranslations.translate(pHash)))\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[this.hashTranslations.translate(pHash)];\n\t\t}\n\t\t// Use the level of indirection only in the Translation Table\n\t\telse if (tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.hashTranslations.translate(pHash);\n\t\t}\n\t\t// Just treat the hash as an address.\n\t\t// TODO: Discuss this ... it is magic but controversial\n\t\telse\n\t\t{\n\t\t\ttmpAddress = pHash;\n\t\t}\n\n\t\treturn tmpAddress;\n\t}\n\n\t// Get the value of an element by its hash\n\tgetValueByHash (pObject, pHash)\n\t{\n\t\tlet tmpValue = this.getValueAtAddress(pObject, this.resolveHashAddress(pHash));\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptorByHash(pHash));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\tlet tmpValue = this.objectAddressGetValue.getValueAtAddress(pObject, pAddress);\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptor(pAddress));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Set the value of an element by its hash\n\tsetValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.setValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressSetValue.setValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Delete the value of an element by its hash\n\tdeleteValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.deleteValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressDeleteValue.deleteValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Validate the consistency of an object against the schema\n\tvalidate(pObject)\n\t{\n\t\tlet tmpValidationData =\n\t\t{\n\t\t\tError: null,\n\t\t\tErrors: [],\n\t\t\tMissingElements:[]\n\t\t};\n\n\t\tif (typeof(pObject) !== 'object')\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Expected passed in object to be type object but was passed in ${typeof(pObject)}`);\n\t\t}\n\n\t\tlet addValidationError = (pAddress, pErrorMessage) =>\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Element at address \"${pAddress}\" ${pErrorMessage}.`);\n\t\t};\n\n\t\t// Now enumerate through the values and check for anomalies based on the schema\n\t\tfor (let i = 0; i < this.elementAddresses.length; i++)\n\t\t{\n\t\t\tlet tmpDescriptor = this.getDescriptor(this.elementAddresses[i]);\n\t\t\tlet tmpValueExists = this.checkAddressExists(pObject, tmpDescriptor.Address);\n\t\t\tlet tmpValue = this.getValueAtAddress(pObject, tmpDescriptor.Address);\n\n\t\t\tif ((typeof(tmpValue) == 'undefined') || !tmpValueExists)\n\t\t\t{\n\t\t\t\t// This will technically mean that `Object.Some.Value = undefined` will end up showing as \"missing\"\n\t\t\t\t// TODO: Do we want to do a different message based on if the property exists but is undefined?\n\t\t\t\ttmpValidationData.MissingElements.push(tmpDescriptor.Address);\n\t\t\t\tif (tmpDescriptor.Required || this.options.strict)\n\t\t\t\t{\n\t\t\t\t\taddValidationError(tmpDescriptor.Address, 'is flagged REQUIRED but is not set in the object');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now see if there is a data type specified for this element\n\t\t\tif (tmpDescriptor.DataType)\n\t\t\t{\n\t\t\t\tlet tmpElementType = typeof(tmpValue);\n\t\t\t\tswitch(tmpDescriptor.DataType.toString().trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpValueString = tmpValue.toString();\n\t\t\t\t\t\t\tif (tmpValueString.indexOf('.') > -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// TODO: Is this an error?\n\t\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but has a decimal point in the number.`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DateTime':\n\t\t\t\t\t\tlet tmpValueDate = new Date(tmpValue);\n\t\t\t\t\t\tif (tmpValueDate.toString() == 'Invalid Date')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is not parsable as a Date by Javascript`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Check if this is a string, in the default case\n\t\t\t\t\t\t// Note this is only when a DataType is specified and it is an unrecognized data type.\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} (which auto-converted to String because it was unrecognized) but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpValidationData;\n\t}\n\n\t// Returns a default value, or, the default value for the data type (which is overridable with configuration)\n\tgetDefaultValue(pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) != 'object')\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (pDescriptor.hasOwnProperty('Default'))\n\t\t{\n\t\t\treturn pDescriptor.Default;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Default to a null if it doesn't have a type specified.\n\t\t\t// This will ensure a placeholder is created but isn't misinterpreted.\n\t\t\tlet tmpDataType = (pDescriptor.hasOwnProperty('DataType')) ? pDescriptor.DataType : 'String';\n\t\t\tif (this.options.defaultValues.hasOwnProperty(tmpDataType))\n\t\t\t{\n\t\t\t\treturn this.options.defaultValues[tmpDataType];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// give up and return null\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enumerate through the schema and populate default values if they don't exist.\n\tpopulateDefaults(pObject, pOverwriteProperties)\n\t{\n\t\treturn this.populateObject(pObject, pOverwriteProperties,\n\t\t\t// This just sets up a simple filter to see if there is a default set.\n\t\t\t(pDescriptor) =>\n\t\t\t{\n\t\t\t\treturn pDescriptor.hasOwnProperty('Default');\n\t\t\t});\n\t}\n\n\t// Forcefully populate all values even if they don't have defaults.\n\t// Based on type, this can do unexpected things.\n\tpopulateObject(pObject, pOverwriteProperties, fFilter)\n\t{\n\t\t// Automatically create an object if one isn't passed in.\n\t\tlet tmpObject = (typeof(pObject) === 'object') ? pObject : {};\n\t\t// Default to *NOT OVERWRITING* properties\n\t\tlet tmpOverwriteProperties = (typeof(pOverwriteProperties) == 'undefined') ? false : pOverwriteProperties;\n\t\t// This is a filter function, which is passed the schema and allows complex filtering of population\n\t\t// The default filter function just returns true, populating everything.\n\t\tlet tmpFilterFunction = (typeof(fFilter) == 'function') ? fFilter : (pDescriptor) => { return true; };\n\n\t\tthis.elementAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpDescriptor = this.getDescriptor(pAddress);\n\t\t\t\t// Check the filter function to see if this is an address we want to set the value for.\n\t\t\t\tif (tmpFilterFunction(tmpDescriptor))\n\t\t\t\t{\n\t\t\t\t\t// If we are overwriting properties OR the property does not exist\n\t\t\t\t\tif (tmpOverwriteProperties || !this.checkAddressExists(tmpObject, pAddress))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setValueAtAddress(tmpObject, pAddress, this.getDefaultValue(tmpDescriptor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpObject;\n\t}\n};\n\nmodule.exports = Manyfest;","/*global define:false */\n/**\n * Copyright 2012-2017 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.5\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n\n        // This needs to use a string cause otherwise since 0 is falsey\n        // mousetrap will never fire for numpad 0 pressed as part of a keydown\n        // event.\n        //\n        // @see https://github.com/ccampbell/mousetrap/pull/258\n        _MAP[i + 96] = i.toString();\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // Events originating from a shadow DOM are re-targetted and `e.target` is the shadow host,\n        // not the initial event target in the shadow tree. Note that not all events cross the\n        // shadow boundary.\n        // For shadow trees with `mode: 'open'`, the initial event target is the first element in\n        // the event’s composed path. For shadow trees with `mode: 'closed'`, the initial event\n        // target cannot be obtained.\n        if ('composedPath' in e && typeof e.composedPath === 'function') {\n            // For open shadow trees, update `element` so that the following check works.\n            var initialEventTarget = e.composedPath()[0];\n            if (initialEventTarget !== e.target) {\n                element = initialEventTarget;\n            }\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","/**\n* Precedent Meta-Templating\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Process text streams, parsing out meta-template expressions.\n*/\nvar libWordTree = require(`./WordTree.js`);\nvar libStringParser = require(`./StringParser.js`);\n\nclass Precedent\n{\n\t/**\n\t * Precedent Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser();\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData);\n\t}\n}\n\nmodule.exports = Precedent;\n","/**\n* String Parser\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: false,\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchOutputBuffer: ''\n\t\t});\n\t}\n\n\t/**\n\t * Assign a node of the parser tree to be the next potential match.\n\t * If the node has a PatternEnd property, it is a valid match and supercedes the last valid match (or becomes the initial match).\n\t * @method assignNode\n\t * @param {Object} pNode - A node on the parse tree to assign\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tassignNode (pNode, pParserState)\n\t{\n\t\tpParserState.PatternMatch = pNode;\n\n\t\t// If the pattern has a END we can assume it has a parse function...\n\t\tif (pParserState.PatternMatch.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\t// ... this is the legitimate start of a pattern.\n\t\t\tpParserState.Pattern = pParserState.PatternMatch;\n\t\t}\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\n\t/**\n\t * Check if the pattern has ended.  If it has, properly flush the buffer and start looking for new patterns.\n\t * @method checkPatternEnd\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tcheckPatternEnd (pParserState, pData)\n\t{\n\t\tif ((pParserState.OutputBuffer.length >= pParserState.Pattern.PatternEnd.length+pParserState.Pattern.PatternStart.length) &&\n\t\t\t(pParserState.OutputBuffer.substr(-pParserState.Pattern.PatternEnd.length) === pParserState.Pattern.PatternEnd))\n\t\t{\n\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStart.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStart.length+pParserState.Pattern.PatternEnd.length)), pData);\n\t\t\t// Flush the output buffer.\n\t\t\tthis.flushOutputBuffer(pParserState);\n\t\t\t// End pattern mode\n\t\t\tpParserState.Pattern = false;\n\t\t\tpParserState.PatternMatch = false;\n\t\t}\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// (1) If we aren't in a pattern match, and we aren't potentially matching, and this may be the start of a new pattern....\n\t\tif (!pParserState.PatternMatch && pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t{\n\t\t\t// ... assign the node as the matched node.\n\t\t\tthis.assignNode(pParserState.ParseTree[pCharacter], pParserState);\n\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t}\n\t\t// (2) If we are in a pattern match (actively seeing if this is part of a new pattern token)\n\t\telse if (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern has a subpattern with this key\n\t\t\tif (pParserState.PatternMatch.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// Continue matching patterns.\n\t\t\t\tthis.assignNode(pParserState.PatternMatch[pCharacter], pParserState);\n\t\t\t}\n\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\tif (pParserState.Pattern)\n\t\t\t{\n\t\t\t\t// ... Check if this is the end of the pattern (if we are matching a valid pattern)...\n\t\t\t\tthis.checkPatternEnd(pParserState, pData);\n\t\t\t}\n\t\t}\n\t\t// (3) If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\telse\n\t\t{\n\t\t\tpParserState.Output += pCharacter;\n\t\t}\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second paramter\n\t */\n\tparseString (pString, pParseTree, pData)\n\t{\n\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\tfor (var i = 0; i < pString.length; i++)\n\t\t{\n\t\t\t// TODO: This is not fast.\n\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData);\n\t\t}\n\n\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\treturn tmpParserState.Output;\n\t}\n}\n\nmodule.exports = StringParser;\n","/**\n* Word Tree\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\t\n\t/** \n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - The index of the character in the pattern\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern, pIndex)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern[pIndex]))\n\t\t\tpTree[pPattern[pIndex]] = {};\n\t\t\n\t\treturn pTree[pPattern[pIndex]];\n\t}\n\t\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {number} pParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, pParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t\treturn false;\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t\treturn false;\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart, i);\n\n\t\ttmpLeaf.PatternStart = pPatternStart;\n\t\ttmpLeaf.PatternEnd = ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length > 0)) ? pPatternEnd : pPatternStart;\n\t\ttmpLeaf.Parse = (typeof(pParser) === 'function') ? pParser : \n\t\t\t\t\t\t(typeof(pParser) === 'string') ? () => { return pParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};","/**\n* Pict browser shim loader\n* @license MIT\n* @author <steven@velozo.com>\n*/\n\n// Load the pict module into the browser global automatically.\nconst libPict = require('./Pict.js');\n\nif (typeof(window) === 'object')\n{\n    window.Pict = libPict;\n}\n\nmodule.exports = libPict;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst libElucidator = require('elucidator');\n\nclass FableServiceElucidator extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Solver';\n\n        this.solver = new libElucidator(this.options);\n\t}\n}\n\nmodule.exports = FableServiceElucidator;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst libInformary = require('informary');\n\nclass FableServiceInformary extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n                super(pFable, pOptions, pServiceHash);\n\n                this.serviceType = 'Informary';\n\n                this.informary = new libInformary(this.options.Settings, this.options.Context, this.options.ContextGUID);\n\t}\n}\n\nmodule.exports = FableServiceInformary;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst libManyfest = require('manyfest');\n\nclass FableServiceManyfest extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Manifest';\n\n        this.manyfest = false;\n\n        if (JSON.stringify(this.options) != '{}')\n        {\n            this.manyfest = new libManyfest(this.options);\n        }\n        else\n        {\n            this.manyfest = new libManyfest();\n        }\n\n        // Kinda the same thing, yo\n        this.manifest = this.manyfest;\n\t}\n}\n\nmodule.exports = FableServiceManyfest;","/**\n* Pict browser shim loader\n* @license MIT\n* @author <steven@velozo.com>\n*/\nconst libFable = require('fable');\n\nconst libFableServiceManyfest = require('./Pict-Fable-Service-Manyfest.js');\nconst libFableServiceElucidator = require('./Pict-Fable-Service-Elucidator.js');\nconst libFableServiceInformary = require('./Pict-Fable-Service-Informary.js');\n\nconst libMouseTrap = require('mousetrap');\n\nclass Pict\n{\n\tconstructor(pOptions)\n\t{\n\t\tthis.fable = new libFable(pOptions);\n\n\t\tthis.log = this.fable.log;\n\t\tthis.settings = this.fable.settings;\n\n\t\tthis.serviceManager = this.fable.serviceManager;\n\n\t\tthis.fable.serviceManager.addServiceType('Manifest', libFableServiceManyfest);\n\t\tthis.fable.serviceManager.addServiceType('Solver', libFableServiceElucidator);\n\t\tthis.fable.serviceManager.addServiceType('Informary', libFableServiceInformary);\n\n\t\t// Register the services\n\t\tthis.defaultTemplateProcessor = this.fable.serviceManager.instantiateServiceProvider('MetaTemplate', {}, 'defaultTemplateProcessor');\n\t\tthis._DefaultTemplateMethodsInitialized = false;\n\n\t\tthis.manifestServiceProvider = this.fable.serviceManager.instantiateServiceProvider('Manifest', {}, 'defaultManifest');\n\t\tthis.manifest = this.manifestServiceProvider.manifest;\n\n\t\tthis._TemplateContainer = {};\n\n\t\tthis.appData = {};\n\t}\n\n\tinitializeTemplateMethods(fExtraTemplateMethods)\n\t{\n\t\tif (!this._DefaultTemplateMethodsInitialized)\n\t\t{\n\t\t\tthis.defaultTemplateProcessor.addPattern('{~Data:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpValue = this.manifest.getValueAtAddress({AppData: this.appData, Record: pData}, tmpHash);\n\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('undefined!');\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpValue;\n\t\t\t\t});\n\n\t\t\tthis.defaultTemplateProcessor.addPattern('{~Dollars:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpValue = this.manifest.getValueAtAddress({AppData: this.appData, Record: pData}, tmpHash);\n\n\t\t\t\t\treturn this.fable.DataArithmatic.formatterDollars(tmpValue);\n\t\t\t\t});\n\n\t\t\tthis.defaultTemplateProcessor.addPattern('{~Digits:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpValue = this.manifest.getValueAtAddress({AppData: this.appData, Record: pData}, tmpHash);\n\n\t\t\t\t\treturn this.fable.DataArithmatic.formatterAddCommasToNumber(this.fable.DataArithmatic.formatterRoundNumber(tmpValue, 2));\n\t\t\t\t});\n\n\t\t\tthis.defaultTemplateProcessor.addPattern('{~NotEmpty:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpHashParts = tmpHash.split('|');\n\n\t\t\t\t\tif (tmpHashParts.length != 2)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueAtAddress({AppData: this.appData, Record: pData}, tmpHashParts[0]);\n\n\t\t\t\t\t// For now just check truthiness\n\t\t\t\t\tif (tmpValue)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpHashParts[1];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tthis._DefaultTemplateMethodsInitialized = true;\n\t\t}\n\t}\n\n\tparseTemplate (pTemplateString, pData)\n\t{\n\t\treturn this.defaultTemplateProcessor.parseString(pTemplateString, pData);\n\t}\n};\n\nmodule.exports = Pict;"]}