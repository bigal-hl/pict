{"version":3,"sources":["pict.min.js","node_modules/browser-pack/_prelude.js","node_modules/async.eachlimit/index.js","node_modules/async.iterator/index.js","node_modules/async.util.eachoflimit/index.js","node_modules/async.util.ensureasync/index.js","node_modules/async.util.isarray/index.js","node_modules/async.util.isarraylike/index.js","node_modules/async.util.keyiterator/index.js","node_modules/async.util.keys/index.js","node_modules/async.util.noop/index.js","node_modules/async.util.once/index.js","node_modules/async.util.onlyonce/index.js","node_modules/async.util.restparam/index.js","node_modules/async.util.setimmediate/index.js","node_modules/async.util.withoutindex/index.js","node_modules/async.waterfall/index.js","node_modules/base64-js/index.js","node_modules/buffer/index.js","node_modules/builtin-status-codes/browser.js","node_modules/cachetrax/source/CacheTrax.js","node_modules/cachetrax/source/LinkedList-Node.js","node_modules/cachetrax/source/LinkedList.js","node_modules/cookie/index.js","node_modules/events/events.js","node_modules/fable-log/source/Fable-Log-BaseLogger.js","node_modules/fable-log/source/Fable-Log-DefaultProviders-Web.js","node_modules/fable-log/source/Fable-Log-DefaultStreams.json","node_modules/fable-log/source/Fable-Log-Logger-Console.js","node_modules/fable-log/source/Fable-Log-Logger-SimpleFlatFile.js","node_modules/fable-log/source/Fable-Log.js","node_modules/fable-serviceproviderbase/source/Fable-ServiceProviderBase-Preinit.js","node_modules/fable-serviceproviderbase/source/Fable-ServiceProviderBase.js","node_modules/fable-settings/source/Fable-Settings-Default.json","node_modules/fable-settings/source/Fable-Settings-TemplateProcessor.js","node_modules/fable-settings/source/Fable-Settings.js","node_modules/fable-uuid/source/Fable-UUID-Random-Browser.js","node_modules/fable-uuid/source/Fable-UUID.js","node_modules/fable/source/Fable-ServiceManager.js","node_modules/fable/source/Fable.js","node_modules/fable/source/services/Fable-Service-Anticipate.js","node_modules/fable/source/services/Fable-Service-CSVParser.js","node_modules/fable/source/services/Fable-Service-DataFormat.js","node_modules/fable/source/services/Fable-Service-DataGeneration-DefaultValues.json","node_modules/fable/source/services/Fable-Service-DataGeneration.js","node_modules/fable/source/services/Fable-Service-EnvironmentData.js","node_modules/fable/source/services/Fable-Service-FilePersistence.js","node_modules/fable/source/services/Fable-Service-MetaTemplate.js","node_modules/fable/source/services/Fable-Service-MetaTemplate/MetaTemplate-StringParser.js","node_modules/fable/source/services/Fable-Service-MetaTemplate/MetaTemplate-WordTree.js","node_modules/fable/source/services/Fable-Service-Operation-DefaultSettings.js","node_modules/fable/source/services/Fable-Service-Operation.js","node_modules/fable/source/services/Fable-Service-RestClient.js","node_modules/fable/source/services/Fable-Service-Template.js","node_modules/fable/source/services/Fable-Service-Utility.js","node_modules/https-browserify/index.js","node_modules/ieee754/index.js","node_modules/inherits/inherits_browser.js","node_modules/js-big-decimal/dist/node/js-big-decimal.js","node_modules/manyfest/source/Manyfest-CleanWrapCharacters.js","node_modules/manyfest/source/Manyfest-HashTranslation.js","node_modules/manyfest/source/Manyfest-LogToConsole.js","node_modules/manyfest/source/Manyfest-ObjectAddress-CheckAddressExists.js","node_modules/manyfest/source/Manyfest-ObjectAddress-DeleteValue.js","node_modules/manyfest/source/Manyfest-ObjectAddress-GetValue.js","node_modules/manyfest/source/Manyfest-ObjectAddress-SetValue.js","node_modules/manyfest/source/Manyfest-ObjectAddressGeneration.js","node_modules/manyfest/source/Manyfest-ParseConditionals.js","node_modules/manyfest/source/Manyfest-SchemaManipulation.js","node_modules/manyfest/source/Manyfest.js","node_modules/once/once.js","node_modules/path-browserify/index.js","node_modules/pict-application/source/Pict-Application.js","node_modules/pict-view/source/Pict-View.js","node_modules/precedent/source/Precedent.js","node_modules/precedent/source/StringParser.js","node_modules/precedent/source/WordTree.js","node_modules/process/browser.js","node_modules/punycode/punycode.js","node_modules/querystring-es3/decode.js","node_modules/querystring-es3/encode.js","node_modules/querystring-es3/index.js","node_modules/safe-buffer/index.js","node_modules/simple-concat/index.js","node_modules/simple-get/index.js","node_modules/stream-http/index.js","node_modules/stream-http/lib/capability.js","node_modules/stream-http/lib/request.js","node_modules/stream-http/lib/response.js","node_modules/stream-http/node_modules/readable-stream/errors-browser.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/async_iterator.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/buffer_list.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/from-browser.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/pipeline.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/state.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/stream-http/node_modules/readable-stream/readable-browser.js","node_modules/string_decoder/lib/string_decoder.js","node_modules/timers-browserify/main.js","node_modules/url/url.js","node_modules/url/util.js","node_modules/util-deprecate/browser.js","node_modules/wrappy/wrappy.js","node_modules/xtend/immutable.js","source/Pict-CSS.js","source/Pict-Content-Assignment.js","source/Pict-DataProvider.js","source/Pict-Meadow-EntityProvider.js","source/Pict-Template-Provider.js","source/Pict.js","source/environments/Pict-Environment-Log.js"],"names":["_defineProperty2","obj","key","value","_toPropertyKey2","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive2","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","f","exports","module","define","amd","window","global","self","this","Pict","r","e","n","t","o","i","c","require","u","a","Error","code","p","length","eachOfLimit","withoutIndex","arr","limit","iterator","cb","tasks","makeCallback","index","fn","apply","arguments","next","once","noop","onlyOnce","keyIterator","nextKey","done","running","errored","replenish","err","setImmediate","restParam","args","callback","pop","push","innerArgs","sync","Array","isArray","prototype","toString","_keys","isArrayLike","coll","len","keys","k","hasOwnProperty","func","startIndex","Math","max","rest","_setImmediate","fallback","setTimeout","timers","ensureAsync","wrapIterator","concat","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","join","Uint8Array","indexOf","start","end","num","output","dup","Buffer","base64","ieee754","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","__proto__","encodingOrOffset","allocUnsafe","from","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","buffer","array","byteOffset","fromArrayBuffer","valueOf","b","isBuffer","checked","copy","numberIsNaN","type","data","fromObject","assertSize","size","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","foo","typedArraySupport","console","error","get","species","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","x","y","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","constructor","name","libFableServiceProviderBase","libLinkedList","pFable","pManifest","pServiceHash","super","serviceType","_HashMap","_RecordMap","_List","maxLength","maxAge","RecordMap","put","pData","pHash","Datum","tmpNode","Hash","Metadata","Created","Date","touch","remove","expire","pruneBasedOnExpiration","fComplete","pRemovedRecords","tmpRemovedRecords","tmpNow","tmpKeys","pruneBasedOnLength","pruneCustom","fPruneFunction","prune","fExpirationPruneComplete","getNode","LeftNode","RightNode","__ISNODE","libLinkedListNode","totalNodes","head","tail","initializeNode","pDatum","tmpHash","append","prepend","pNode","each","fAction","fIterator","pError","seek","pNodeIndex","parse","options","dec","decode","eqIdx","endIdx","tryDecode","serialize","opt","enc","encode","fieldContentRegExp","test","isNaN","floor","domain","path","expires","__toString","isDate","toUTCString","httpOnly","secure","priority","sameSite","decodeURIComponent","encodeURIComponent","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","EventEmitter","init","emitter","Promise","resolve","reject","errorListener","removeListener","resolver","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","events","existing","warning","create","newListener","emit","unshift","warned","w","count","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","addEventListener","wrapListener","removeEventListener","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","message","context","listeners","addListener","prependListener","prependOnceListener","position","originalListener","shift","spliceOne","off","removeAllListeners","rawListeners","eventNames","pLogStreamSettings","pFableLog","_Settings","loggerUUID","generateInsecureUUID","levels","tmpDate","getTime","pCharacter","tmpRandomData","random","initialize","trace","pLogText","pLogObject","debug","info","fatal","pLogLevel","getDefaultProviders","tmpDefaultProviders","default","loggertype","streamtype","level","libBaseLogger","_ShowTimeStamps","showtimestamps","_FormattedTimeStamps","formattedtimestamps","_ContextMessage","Context","Product","_OutputLogLinesToConsole","outputloglinestoconsole","_OutputObjectsToConsole","outputobjectstoconsole","prefixCache","pLevel","pObject","tmpTimeStamp","toISOString","tmpLogLine","log","JSON","stringify","libConsoleLog","libFS","libPath","logFileRawPath","logFilePath","normalize","logFileStreamOptions","fileStreamOptions","fileWriter","createWriteStream","activelyWriting","logLineStrings","logObjectStrings","defaultWriteCompleteCallback","defaultBufferFlushCallback","closeWriter","fCloseComplete","tmpCloseComplete","completeBufferFlushToLogFile","fFlushComplete","tmpFlushComplete","flushBufferToLogFile","tmpLineStrings","tmpObjectStrings","tmpConstructedBufferOutputString","fs","CoreServiceProviderBase","FableLog","pSettings","tmpSettings","_Providers","_StreamDefinitions","LogStreams","logStreams","logProviders","activeLogStreams","logStreamsTrace","logStreamsDebug","logStreamsInfo","logStreamsWarn","logStreamsError","logStreamsFatal","datumDecorator","uuid","addLogger","pLogger","setDatumDecorator","fDatumDecorator","pMessage","tmpDecoratedDatum","tmpStreamDefinition","assign","logTime","tmpMessage","tmpTime","getTimeStamp","getTimeDelta","pTimeStamp","logTimeDelta","pTimeDelta","tmpEndTime","logTimeDeltaHuman","tmpMs","tmpSeconds","tmpMinutes","tmpHours","logTimeDeltaRelative","pStartTime","logTimeDeltaRelativeHuman","new","LogProviderBase","LogProviderConsole","FableCoreServiceProviderBase","pOptions","fable","UUID","connectFable","FableServiceProviderBase","isFable","getUUID","servicesMap","services","ProductVersion","ConfigFile","process","libPrecedent","pDependencies","templateProcessor","addPattern","pTemplateValue","tmpTemplateValue","tmpSeparatorIndex","tmpDefaultValue","substring","tmpEnvironmentVariableName","env","parseSetting","pString","parseString","_process","precedent","libFableSettingsTemplateProcessor","FableSettings","settingsTemplateProcessor","_configureEnvTemplating","buildDefaultSettings","merge","base","DefaultConfigFile","pException","settings","_PerformEnvTemplating","NoEnvReplacement","_resolveEnv","tmpKey","_isObject","_deepMergeObjects","toObject","forEach","fromValue","toValue","pSettingsFrom","pSettingsTo","tmpSettingsFrom","tmpSettingsTo","tmpSettingsFromCopy","getRandomValues","crypto","msCrypto","generateWhatWGBytes","tmpBuffer","generateRandomBytes","tmpValue","generate","libRandomByteGenerator","FableUUID","_UUIDModeRandom","UUIDModeRandom","_UUIDLength","UUIDLength","_UUIDRandomDictionary","UUIDDictionary","randomByteGenerator","_HexLookup","bytesToUUID","pBuffer","generateUUIDv4","tmpRandomBytes","generateRandom","tmpUUID","charAt","libFableServiceBase","FableService","serviceTypes","serviceClasses","extraServiceInitialization","addServiceType","pServiceType","pServiceClass","isFableService","addAndInstantiateServiceType","instantiateServiceProvider","instantiateServiceProviderFromPrototype","pCustomServiceHash","pServicePrototype","tmpService","setDefaultServiceInstantiation","instantiateServiceProviderWithoutRegistration","connectPreinitServiceProviderInstance","pServiceInstance","tmpServiceType","tmpServiceHash","ServiceProviderBase","libFableSettings","libFableUUID","libFableLog","libFableServiceManager","Fable","_coreServices","SettingsManager","Logging","ServiceManager","serviceManager","settingsManager","cachetrax","manyfest","operationQueue","erroredOperations","executingOperationCount","completedOperationCount","maxOperations","lastError","waitingFunctions","checkQueue","tmpOperation","buildAnticipatorCallback","anticipate","fAsynchronousFunction","tmpCallbackState","Called","OperationSet","wait","fCallback","Header","HeaderFieldNames","Delimiter","QuoteCharacter","CleanCharacters","HeaderLineIndex","HasHeader","HasSetHeader","EmitHeader","EmitJSON","EscapedQuoteString","CurrentLine","CurrentRecord","InQuote","InEscapedQuote","LinesParsed","RowsEmitted","marshalRowToJSON","pRowArray","tmpObject","setHeader","pHeaderArray","resetRowState","pushLine","emitRow","pFormatAsJSON","tmpFormatAsJSON","tmpCompletedRecord","parseCSVLine","pLineString","pTargetLength","pPadString","tmpString","stringGeneratePaddingString","_Regex_formatterInsertCommas","_Regex_formatterAddCommasToNumber","_Regex_formatterDollarsRemoveCommas","_Regex_formatterCleanNonAlphaChar","_Regex_formatterCapitalizeEachWord","_Value_MoneySign_Currency","_Value_NaN_Currency","_Value_GroupSeparator_Number","_Value_Prefix_StringHash","_Value_Clean_formatterCleanNonAlpha","_UseEngineStringStartsWith","startsWith","_UseEngineStringEndsWith","endsWith","stringReverse","reverse","stringStartsWith","pSearchString","pStartIndex","stringStartsWith_Polyfill","stringEndsWith","pEndIndex","stringEndsWith_Polyfill","insecureStringHash","tmpStringLength","tmpCharacterIndex","capitalizeEachWord","pMatch","toUpperCase","cleanEnclosureWrapCharacters","pWrapCharacter","cleanNonAlphaCharacters","formatterInsertCommas","tmpReversedWithCommas","match","processAddCommasToNumberRegex","pSign","pZeros","pBefore","pDecimal","pAfter","formatterAddCommasToNumber","pNumber","formatterDollars","pValue","tmpDollarAmount","Utility","bigDecimal","round","parseFloat","toFixed","formatterRoundNumber","pDigits","tmpDigits","tmpTargetLength","tmpPadLength","repeat","formatTimeSpan","pTimeSpan","stringPadStart","formatTimeDelta","pTimeStart","pTimeEnd","getMonthFromDate","pJavascriptDate","getMonth","getMonthAbbreviatedFromDate","formatSortableStringFromDate","pDate","getFullYear","getDate","stringBeforeMatch","stringAfterMatch","tmpStringSplitLocation","stringCountEnclosures","pEnclosureStart","pEnclosureEnd","tmpEnclosureStart","tmpEnclosureEnd","tmpEnclosureCount","tmpEnclosureDepth","stringGetEnclosureValueByIndex","pEnclosureIndexToGet","tmpEnclosureIndexToGet","tmpMatchedEnclosureIndex","tmpEnclosedValueStartIndex","tmpEnclosedValueEndIndex","stringRemoveEnclosureByIndex","pEnclosureIndexToRemove","tmpEnclosureIndexToRemove","tmpEnclosureStartIndex","tmpEnclosureEndIndex","tmpReturnString","DefaultIntegerMinimum","DefaultIntegerMaximum","DefaultNumericStringLength","MonthSet","WeekDaySet","ColorSet","SurNameSet","NameSet","defaultData","randomIntegerBetween","pMinimum","pMaximum","randomIntegerUpTo","randomInteger","randomNumericString","pLength","pMaxNumber","tmpMaxNumber","DataFormat","randomMonth","randomDayOfWeek","randomColor","randomName","randomSurname","Environment","Mode","umask","currentInputFolder","currentOutputFolder","joinPath","existsSync","pPath","exists","writeFileSync","pFileName","pFileContent","tmpOptions","appendFileSync","pAppendContent","deleteFileSync","unlinkSync","deleteFolderSync","rmdirSync","writeFileSyncFromObject","writeFileSyncFromArray","pFileArray","getDefaultOutputPath","dataFolderWriteSync","dataFolderWriteSyncFromObject","dataFolderWriteSyncFromArray","makeFolderRecursive","pParameters","tmpParameters","Path","CurrentPathIndex","ActualPath","ActualPathParts","sep","CurrentPath","open","pFileDescriptor","closeSync","mkdir","pCreateError","libWordTree","libStringParser","WordTree","StringParser","eachLimit","ParseTree","pPatternStart","pPatternEnd","pParser","addPatternAsync","pParserPromise","fEachLimit","newParserState","pParseTree","Asynchronous","Output","OutputBuffer","Pattern","PatternMatch","PatternMatchEnd","appendOutputBuffer","pParserState","flushOutputBuffer","resetOutputBuffer","PatternStartNode","StartPatternMatchComplete","EndPatternMatchBegan","parseCharacter","PatternEnd","Parse","PatternStartString","PatternEndString","isAsync","parseCharacterAsync","pAsyncOutput","PatternStart","tmpParserState","fCharacterCallback","addChild","pTree","pPattern","addEndChild","fParser","tmpLeaf","tmpPatternEnd","Title","Summary","Version","Status","Completed","CompletionProgress","CompletionTimeElapsed","Steps","StepsCompleted","StartTime","EndTime","Errors","Log","_OperationStatePrototypeString","Name","writeOperationLog","writeOperationErrors","libSimpleGet","libCookie","TraceLog","dataFormat","cookie","prepareRequestOptions","simpleGet","prepareCookies","pRequestOptions","tmpCookieObject","headers","tmpCookieKeys","preRequest","executeChunkedRequest","RequestStartTime","method","url","pResponse","tmpConnectTime","statusCode","tmpData","pChunk","tmpChunkTime","tmpCompletionTime","executeChunkedRequestBinary","json","tmpDataBuffer","executeJSONRequest","tmpJSONData","getJSON","pOptionsOrURL","tmpRequestOptions","putJSON","body","postJSON","patchJSON","headJSON","delJSON","getRawText","Matchers","Evaluate","Interpolate","Escaper","Unescaper","GuaranteedNonMatch","templateEscapes","u2028","u2029","renderFunction","templateString","renderTemplate","templateFunction","buildTemplateFunction","pTemplateText","TemplateSource","pCode","TemplateSourceCompiled","libAsyncWaterfall","libAsyncEachLimit","libBigDecimal","templates","waterfall","extend","pDestinationObject","tmpSourceObject","tmpObjectProperties","template","buildHashedTemplate","pTemplateHash","tmpTemplate","chunk","pInput","pChunkSize","pChunkCache","tmpInputArray","tmpChunkSize","tmpChunkCache","splice","isoStringToDate","pISOString","tmpDateParts","tmpReturnDate","tmpTimeZoneOffsetInHours","tmpTimeZoneOffsetInMinutes","setUTCFullYear","setUTCMonth","setUTCDate","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","setHours","getHours","http","https","validateParams","params","protocol","request","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","LN2","ctor","superCtor","super_","TempCtor","root","factory","__webpack_modules__","__unused_webpack_module","compliment","number","testZero","l","ld","addCore","pad","number1","number2","parts1","parts2","length1","length2","_a","sum","carry","temp","add","neg","ind","__unused_webpack_exports","__webpack_require__","add_1","abs_1","round_1","multiply_1","divide_1","modulus_1","compareTo_1","subtract_1","roundingModes_1","validate","mantisa","exponent","sign","getValue","setValue","getPrettyValue","digits","separator","precision","mode","RoundingModes","HALF_EVEN","roundOff","FLOOR","ceil","CEILING","subtract","multiply","divide","modulus","compareTo","negate","negative","localeCompare","dividend","divisor","precission","pt_dvsr","pt_dvnd","loc","prec","dl","quotent","dvnd","qt","oparand","trailZero","decimalLength1","decimalLength2","decimalLength","decimal","positionVector","currentPosition","result","greaterThanFive","part","pre","DOWN","UP","five","HALF_DOWN","HALF_UP","increment","UNNECESSARY","partInt","partDec","prefix","rem","__webpack_module_cache__","__webpack_exports__","moduleId","cachedModule","cleanWrapCharacters","libSimpleLog","pInfoLog","pErrorLog","logInfo","logError","translationTable","translationCount","addTranslation","pTranslation","pTranslationSource","removeTranslationHash","pTranslationHash","removeTranslation","clearTranslations","translate","logToConsole","pLogLine","checkAddressExists","pAddress","tmpBracketStartIndex","tmpBracketStopIndex","tmpBoxedPropertyName","tmpBoxedPropertyReference","tmpBoxedPropertyNumber","tmpSubObjectName","tmpNewAddress","fCleanWrapCharacters","fParseConditionals","checkFilters","pRecord","deleteValueAtAddress","pParentAddress","tmpParentAddress","tmpObjectTypeMarkerIndex","tmpObjectPropertyName","tmpArrayProperty","tmpContainerObject","tmpPropertyParentAddress","tmpObjectProperty","tmpObjectPropertyKeys","getValueAtAddress","pRootObject","tmpRootObject","tmpParentAddressParts","tmpBackNavigationCount","tmpParentAddressLength","tmpRecurseAddress","tmpOutputArray","setValueAtAddress","generateAddressses","pBaseAddress","pSchema","tmpBaseAddress","tmpSchema","tmpObjectType","tmpSchemaObjectEntry","Address","InSchema","DataType","Default","_ConditionalStanzaStart","_ConditionalStanzaEnd","testCondition","pManyfest","pSearchAddress","pSearchComparator","parseConditionals","tmpKeepRecord","tmpStartIndex","tmpStopIndex","tmpMagicComparisonPatternSet","tmpSearchAddress","tmpSearchComparator","tmpSearchValue","resolveAddressMappings","pManyfestSchemaDescriptors","pAddressMapping","tmpManyfestAddresses","tmpHashMapping","pInputAddress","tmpNewDescriptorAddress","tmpOldDescriptorAddress","tmpDescriptor","safeResolveAddressMappings","tmpManyfestSchemaDescriptors","mergeAddressMappings","pManyfestSchemaDescriptorsDestination","pManyfestSchemaDescriptorsSource","tmpSource","tmpNewManyfestSchemaDescriptors","pDescriptorAddress","libHashTranslation","libObjectAddressCheckAddressExists","libObjectAddressGetValue","libObjectAddressSetValue","libObjectAddressDeleteValue","libObjectAddressGeneration","libSchemaManipulation","_DefaultConfiguration","Scope","Descriptors","Manyfest","objectAddressCheckAddressExists","objectAddressGetValue","objectAddressSetValue","objectAddressDeleteValue","defaultValues","Float","Integer","Boolean","Binary","DateTime","Null","strict","scope","elementAddresses","elementHashes","elementDescriptors","reset","loadManifest","schemaManipulations","objectAddressGeneration","hashTranslations","clone","tmpNewOptions","tmpNewManyfest","getManifest","deserialize","pManifestString","tmpManifest","tmpDescriptorKeys","tmpDescriptionAddresses","addDescriptor","HashTranslations","pDescriptor","getDescriptorByHash","getDescriptor","resolveHashAddress","eachDescriptor","tmpDescriptorAddresses","checkAddressExistsByHash","tmpAddress","tmpInElementHashTable","tmpInTranslationTable","getValueByHash","getDefaultValue","setValueByHash","deleteValueByHash","tmpValidationData","MissingElements","addValidationError","pErrorMessage","tmpValueExists","Required","tmpElementType","tmpDataType","populateDefaults","pOverwriteProperties","populateObject","fFilter","tmpOverwriteProperties","tmpFilterFunction","wrappy","called","onceStrict","onceError","proto","assertPath","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","posix","cwd","resolvedPath","resolvedAbsolute","isAbsolute","trailingSeparator","joined","relative","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","dirname","hasRoot","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","_format","delimiter","win32","defaultPictSettings","MainViewportViewIdentifier","MainViewportRenderableHash","MainViewportDestinationAddress","MainViewportDefaultDataAddress","AutoSolveAfterInitialize","AutoRenderMainViewportViewAfterInitialize","Manifests","IdentifierAddressPrefix","pict","AppData","initializeTimestamp","lastSolvedTimestamp","tmpManifestKeys","tmpManifestKey","onBeforeSolve","LogNoisiness","onBeforeSolveAsync","onSolve","onSolveAsync","solve","tmpLoadedViews","views","tmpViewsToSolve","tmpView","AutoInitialize","sort","AutoInitializeOrdinal","onAfterSolve","solveAsync","tmpAnticipate","AutoSolveWithApp","AutoSolveOrdinal","onAfterSolveAsync","onBeforeInitialize","onBeforeInitializeAsync","onInitialize","onInitializeAsync","tmpViewsToInitialize","onAfterInitialize","render","initializeAsync","fCallBack","onAfterInitializeAsync","renderMainViewportAsync","pViewIdentifier","pRenderableHash","pRenderDestinationAddress","pTemplateDataAddress","tmpViewIdentifier","tmpRenderableHash","tmpRenderDestinationAddress","tmpTemplateDataAddress","PictView","renderMainViewport","renderAsync","tmpErrorMessage","defaultPictViewSettings","DefaultRenderable","DefaultDestinationAddress","DefaultTemplateRecordAddress","ViewIdentifier","AutoRender","AutoRenderOrdinal","CSSHash","CSS","CSSProvider","CSSPriority","Templates","DefaultTemplates","Renderables","lastRenderedTimestamp","Source","TemplateProvider","addTemplate","Template","tmpDefaultTemplate","addDefaultTemplate","Prefix","Postfix","tmpCSSHash","tmpCSSProvider","CSSMap","addCSS","renderables","addRenderable","pDefaultTemplateDataAddress","pDefaultDestinationAddress","pRenderMethod","tmpRenderable","RenderableHash","TemplateHash","DefaultTemplateDataAddress","RenderMethod","onBeforeRender","pRenderable","onBeforeRenderAsync","ContentDestinationAddress","tmpDataAddress","DataProvider","getDataByAddress","tmpContent","parseTemplateByHash","ContentAssignment","appendContent","prependContent","getElement","assignContent","onAfterRender","pContent","onAfterRenderAsync","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","nextTick","title","browser","argv","version","versions","binding","chdir","freeExports","nodeType","freeModule","freeGlobal","punycode","maxInt","tMin","tMax","skew","damp","initialBias","initialN","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","baseMinusTMin","stringFromCharCode","map","mapDomain","ucs2decode","extra","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","basic","oldi","baseMinusT","inputLength","bias","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","ucs2","toASCII","toUnicode","prop","qs","eq","regexp","maxKeys","kstr","vstr","v","idx","xs","stringifyPrimitive","objectKeys","ks","copyProps","SafeBuffer","stream","chunks","decompressResponse","querystring","isStream","pipe","opts","maxRedirects","hostname","port","auth","form","accept","originalHost","req","followRedirects","location","host","resume","redirectHost","authorization","tryUnzip","abort","ClientRequest","response","statusCodes","defaultProtocol","search","IncomingMessage","Agent","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","xtend","xhr","getXHR","XMLHttpRequest","XDomainRequest","checkTypeSupport","responseType","isFunction","fetch","ReadableStream","writableStream","WritableStream","abortController","AbortController","arraybuffer","msstream","mozchunkedarraybuffer","overrideMimeType","capability","inherits","rStates","readyStates","preferBinary","Writable","_opts","_body","_headers","useFetch","_mode","decideMode","_fetchTimer","_socketTimeout","_socketTimer","_onFinish","lowerName","unsafeHeaders","getHeader","header","removeHeader","_destroyed","headersObj","Blob","headersList","keyName","signal","controller","_fetchAbortController","requestTimeout","credentials","withCredentials","then","_fetchResponse","_resetTimers","_connect","reason","_xhr","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","onerror","send","status","statusValid","_write","destroy","flushHeaders","setNoDelay","setSocketKeepAlive","UNSENT","OPENED","HEADERS_RECEIVED","resetTimers","Readable","rawHeaders","trailers","rawTrailers","statusMessage","statusText","_resumeFetch","close","pipeTo","catch","reader","getReader","_pos","responseURL","getAllResponseHeaders","matches","_charset","mimeType","charsetMatch","_read","responseText","newData","MSStreamReader","onload","readAsArrayBuffer","codes","createErrorType","Base","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","getMessage","oneOf","expected","thing","determiner","msg","this_len","Duplex","allowHalfOpen","readable","onend","_writableState","ended","onEndNT","highWaterMark","getBuffer","_readableState","destroyed","PassThrough","Transform","_transform","ReadableState","EElistenerCount","Stream","OurUint8Array","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_INVALID_ARG_TYPE","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","isDuplex","objectMode","readableObjectMode","pipes","pipesCount","flowing","endEmitted","reading","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","decoder","_destroy","readableAddChunk","addToFront","skipChunkCheck","emitReadable","emitReadable_","onEofChunk","chunkInvalid","_uint8ArrayToBuffer","addChunk","maybeReadMore","_undestroy","undestroy","isPaused","setEncoding","content","clear","MAX_HWM","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","nReadingNextTick","resume_","fromList","first","consume","endReadable","endReadableNT","wState","finished","nOrig","doRead","dest","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","onclose","onfinish","ondrain","ondata","cleanedUp","needDrain","pipeOnDrain","pause","event","dests","ev","wrap","_this","asyncIterator","_fromList","iterable","util","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","transform","flush","_flush","prefinish","err2","CorkedRequest","entry","finish","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","deprecate","realHasInstance","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","finalCalled","ending","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","writev","_writev","final","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","rState","current","_","hasInstance","object","writeAfterEnd","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_Object$setPrototypeO","_defineProperty","_toPrimitive","_toPropertyKey","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","promise","lastPromise","wrapForNext","_this2","_Object$create","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","source","getOwnPropertyDescriptors","defineProperties","_defineProperties","props","descriptor","custom","instance","Constructor","_classCallCheck","protoProps","staticProps","hasStrings","_getString","_getBuffer","nb","depth","customInspect","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","ERR_STREAM_PREMATURE_CLOSE","eos","_len","_key","onlegacyfinish","writableEnded","readableEnded","onrequest","isRequest","ERR_MISSING_ARGS","streams","popCallback","destroys","closed","destroyer","reduce","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","pipeline","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckExtraBytes","total","utf8CheckIncomplete","clearImmediate","immediateIds","nextImmediateId","Timeout","id","clearFn","_id","_clearFn","setInterval","clearInterval","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","Url","slashes","hash","query","pathname","href","urlParse","resolveObject","isString","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","hostlessProtocol","slashedProtocol","ftp","gopher","file","parseQueryString","slashesDenoteHost","isObject","queryIndex","splitter","uSplit","simplePath","exec","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","newpart","validParts","notHost","bit","h","ae","esc","escape","qm","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","isNullOrUndefined","authInHost","isNull","hasTrailingSlash","up","config","localStorage","wrapper","defaultConfiguration","CSSElementAddress","inlineCSSMap","pPriority","pProvider","tmpPriority","tmpProvidor","Content","Provider","Priority","removeCSS","generateCSS","tmpCSS","tmpCSSHashes","tmpCSSFragment","tmpCSSComment","injectCSS","inBrowser","hasDocument","document","querySelectorAll","hasJquery","jQuery","customAssignFunction","customPrependFunction","customAppendFunction","customReadFunction","customGetElementFunction","tmpElements","tmpElementSet","html","tmpTargetElementSet","tagName","innerHTML","insertAdjacentHTML","readContent","addClass","pClass","customAddClassFunction","classList","removeClass","customRemoveClassFunction","toggleClass","hasClass","manifest","Bundle","Record","pEntity","pMeadowFilterExpression","initializeCache","cache","tmpCountOptions","urlPrefix","restClient","pBody","tmpRecordCount","Count","tmpDownloadURIFragments","tmpDownloadBatchSize","downloadBatchSize","tmpEntitySet","pURIFragment","fDownloadCallback","pDownloadError","pDownloadResponse","pDownloadBody","pFullDownloadError","PictDefaultURLPrefix","PictDefaultDownloadBatchSize","getEntity","pIDRecord","tmpPossibleRecord","templateSources","defaultTemplates","loadTemplateFunction","pTemplate","pTemplateSource","pPrefix","pPostfix","pSource","postfix","checkDefaultTemplateHash","getTemplate","loadTemplate","libFable","isBrowser","loadManifestSet","_DefaultPictTemplatesInitialized","initializePictTemplateEngine","pManifestSet","addView","pViewHash","pViewPrototype","tmpViewHash","default_configuration","addApplication","pApplicationHash","pApplicationPrototype","tmpApplicationHash","fEntityRender","tmpEntity","tmpEntityID","tmpEntityTemplate","tmpHashEntitySeparator","tmpHashTemplateSeparator","EntityProvider","MetaTemplate","fNotEmptyRender","tmpHashParts","fTemplateRender","tmpTemplateHash","tmpAddressOfData","fTemplateSetRender","parseTemplateSetByHash","fDataRender","tmpColumnData","fRandomNumberString","DataGeneration","fRandomNumber","tmpMinimumNumber","fPascalCaseIdentifier","fLogValue","tmpValueType","fLogStatement","fBreakpoint","tmpError","stack","parseTemplate","pTemplateString","tmpTemplateString","parseTemplateSet","pDataSet","fRecordTemplateCallback","pTemplateResult","PictApplicationClass","PictViewClass","EnvironmentLog","pPict","pContentMap","contentMap","truncateContentLength","storeEventLog","eventLog","GetElement","Read","Prepend","Append","Assign","createEventLogEntry","TimeStamp"],"mappings":"AAAA,aAAa,SAASA,iBAAiBC,EAAIC,EAAIC,GAAkK,OAA3JD,EAAIE,gBAAgBF,MAAeD,EAAKI,OAAOC,eAAeL,EAAIC,EAAI,CAACC,MAAMA,EAAMI,YAAW,EAAKC,cAAa,EAAKC,UAAS,IAAaR,EAAIC,GAAKC,EAAcF,CAAI,CAAC,SAASG,gBAAgBM,GAAK,IAAIR,EAAIS,cAAcD,EAAI,UAAU,MAAoB,iBAANR,EAAeA,EAAIU,OAAOV,EAAK,CAAC,SAASS,cAAcE,EAAMC,GAAM,GAAkB,iBAARD,GAA0B,OAARA,EAAa,OAAOA,EAAM,IAAIE,EAAKF,EAAMG,OAAOC,aAAa,QAAUC,IAAPH,EAAiB,CAAC,IAAII,EAAIJ,EAAKK,KAAKP,EAAMC,GAAM,WAAW,GAAgB,iBAANK,EAAe,OAAOA,EAAI,MAAM,IAAIE,UAAU,+CAAgD,CAAC,OAAc,WAAPP,EAAgBF,OAAOU,QAAQT,EAAO,ECA7pB,SAAAU,GAAA,GAAA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,SAAA,GAAA,mBAAAG,QAAAA,OAAAC,IAAAD,OAAA,GAAAH,OAAA,EAAA,oBAAAK,OAAAA,OAAA,oBAAAC,OAAAA,OAAA,oBAAAC,KAAAA,KAAAC,MAAAC,KAAAT,GAAA,CAAA,CAAA,EAAA,WAAA,OAAA,SAAAU,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAf,GAAA,IAAAY,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAC,EAAA,mBAAAC,SAAAA,QAAA,IAAAjB,GAAAgB,EAAA,OAAAA,EAAAD,GAAA,GAAA,GAAAG,EAAA,OAAAA,EAAAH,GAAA,GAAA,IAAAI,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAAA,MAAAI,EAAAE,KAAA,mBAAAF,CAAA,CAAA,IAAAG,EAAAV,EAAAG,GAAA,CAAAd,QAAA,CAAA,GAAAU,EAAAI,GAAA,GAAAlB,KAAAyB,EAAArB,SAAA,SAAAS,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,EAAA,GAAAY,EAAAA,EAAArB,QAAAS,EAAAC,EAAAC,EAAAC,EAAA,CAAA,OAAAD,EAAAG,GAAAd,OAAA,CAAA,IAAA,IAAAiB,EAAA,mBAAAD,SAAAA,QAAAF,EAAA,EAAAA,EAAAF,EAAAU,OAAAR,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,SAAAG,EAAAf,EAAAD,GCEA,IAAAuB,EAAAP,EAAA,0BACAQ,EAAAR,EAAA,2BAEAf,EAAAD,QAAA,SAAAyB,EAAAC,EAAAC,EAAAC,GACA,OAAAL,EAAAG,EAAAH,CAAAE,EAAAD,EAAAG,GAAAC,EACA,CFGA,EAAE,CAAC,yBAAyB,EAAE,0BAA0B,KAAK,EAAE,CAAC,SAASZ,EAAQf,EAAOD,GGRxFC,EAAAD,QAAA,SAAA6B,GAaA,OAZA,SAAAC,EAAAC,GACA,SAAAC,IAIA,OAHAH,EAAAP,QACAO,EAAAE,GAAAE,MAAA,KAAAC,WAEAF,EAAAG,MACA,CAIA,OAHAH,EAAAG,KAAA,WACA,OAAAJ,EAAAF,EAAAP,OAAA,EAAAQ,EAAAC,EAAA,GAAA,IACA,EACAC,CACA,CACAF,CAAA,EACA,CHaA,EAAE,CAAC,GAAG,EAAE,CAAC,SAASd,EAAQf,EAAOD,GI7BjC,IAAAoC,EAAApB,EAAA,mBACAqB,EAAArB,EAAA,mBACAsB,EAAAtB,EAAA,uBACAuB,EAAAvB,EAAA,0BAEAf,EAAAD,QAAA,SAAA0B,GACA,OAAA,SAAAjD,EAAAkD,EAAAC,GACAA,EAAAQ,EAAAR,GAAAS,GAEA,IAAAG,EAAAD,EADA9D,EAAAA,GAAA,IAEA,GAAAiD,GAAA,EACA,OAAAE,EAAA,MAEA,IAAAa,GAAA,EACAC,EAAA,EACAC,GAAA,GAEA,SAAAC,IACA,GAAAH,GAAAC,GAAA,EACA,OAAAd,EAAA,MAGA,KAAAc,EAAAhB,IAAAiB,GAAA,CACA,IAAAjE,EAAA8D,IACA,GAAA,OAAA9D,EAKA,OAJA+D,GAAA,OACAC,GAAA,GACAd,EAAA,OAIAc,GAAA,EACAf,EAAAlD,EAAAC,GAAAA,EAAA4D,GAAA,SAAAO,GACAH,GAAA,EACAG,GACAjB,EAAAiB,GACAF,GAAA,GAEAC,GAEA,IACA,CACA,CAzBA,EA0BA,CACA,CJgCA,EAAE,CAAC,yBAAyB,EAAE,kBAAkB,EAAE,kBAAkB,GAAG,sBAAsB,KAAK,EAAE,CAAC,SAAS5B,EAAQf,EAAOD,GK3E7H,IAAA8C,EAAA9B,EAAA,2BACA+B,EAAA/B,EAAA,wBAEAf,EAAAD,QAAA,SAAAgC,GACA,OAAAe,GAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAE,MACAF,EAAAG,MAAA,WACA,IAAAC,EAAAlB,UACAmB,EACAP,GAAA,WACAG,EAAAhB,MAAA,KAAAmB,EACA,IAEAH,EAAAhB,MAAA,KAAAmB,EAEA,IACA,IAAAC,GAAA,EACArB,EAAAC,MAAA1B,KAAAyC,GACAK,GAAA,CACA,GACA,CL+EA,EAAE,CAAC,uBAAuB,GAAG,0BAA0B,KAAK,EAAE,CAAC,SAASrC,EAAQf,EAAOD,GMlGvFC,EAAAD,QAAAsD,MAAAC,SAAA,SAAA9E,GACA,MAAA,mBAAAI,OAAA2E,UAAAC,SAAA7D,KAAAnB,EACA,CNuGA,EAAE,CAAC,GAAG,EAAE,CAAC,SAASuC,EAAQf,EAAOD,GOzGjC,IAAAuD,EAAAvC,EAAA,sBAEAf,EAAAD,QAAA,SAAAyB,GACA,OAAA8B,EAAA9B,IAEA,iBAAAA,EAAAH,QACAG,EAAAH,QAAA,GACAG,EAAAH,OAAA,GAAA,CAEA,CP8GA,EAAE,CAAC,qBAAqB,IAAI,EAAE,CAAC,SAASN,EAAQf,EAAOD,GQvHvD,IAAA0D,EAAA1C,EAAA,mBACA2C,EAAA3C,EAAA,0BAEAf,EAAAD,QAAA,SAAA4D,GACA,IACAC,EACAC,EAFAhD,GAAA,EAGA,OAAA6C,EAAAC,IACAC,EAAAD,EAAAtC,OACA,WAEA,QADAR,EACA+C,EAAA/C,EAAA,IACA,IAEAgD,EAAAJ,EAAAE,GACAC,EAAAC,EAAAxC,OACA,WAEA,QADAR,EACA+C,EAAAC,EAAAhD,GAAA,IACA,EAEA,CR4HA,EAAE,CAAC,yBAAyB,EAAE,kBAAkB,IAAI,EAAE,CAAC,SAASE,EAAQf,EAAOD,GSjJ/EC,EAAAD,QAAAnB,OAAAiF,MAAA,SAAArF,GACA,IAAAiF,EAAA,GACA,IAAA,IAAAK,KAAAtF,EACAA,EAAAuF,eAAAD,IACAL,EAAAP,KAAAY,GAGA,OAAAL,CACA,CTsJA,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS1C,EAAQf,EAAOD,GU9JjCC,EAAAD,QAAA,WAAA,CVmKA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASgB,EAAQf,EAAOD,GWnKlCC,EAAAD,QAAA,SAAAgC,GACA,OAAA,WACA,OAAAA,IACAA,EAAAC,MAAA1B,KAAA2B,WACAF,EAAA,KACA,CACA,CXwKA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAShB,EAAQf,EAAOD,GY9KlCC,EAAAD,QAAA,SAAAgC,GACA,OAAA,WACA,GAAA,OAAAA,EAAA,MAAA,IAAAb,MAAA,gCACAa,EAAAC,MAAA1B,KAAA2B,WACAF,EAAA,IACA,CACA,CZmLA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAShB,EAAQf,EAAOD,Ga1LlCC,EAAAD,QAAA,SAAAiE,EAAAC,GAEA,OADAA,EAAA,MAAAA,EAAAD,EAAA3C,OAAA,GAAA4C,EACA,WAGA,IAFA,IAAA5C,EAAA6C,KAAAC,IAAAlC,UAAAZ,OAAA4C,EAAA,GACAG,EAAA,IAAAf,MAAAhC,GACAS,EAAA,EAAAA,EAAAT,EAAAS,IACAsC,EAAAtC,GAAAG,UAAAH,EAAAmC,GAEA,OAAAA,GACA,KAAA,EACA,OAAAD,EAAArE,KAAAW,KAAA8D,GACA,KAAA,EACA,OAAAJ,EAAArE,KAAAW,KAAA2B,UAAA,GAAAmC,GAEA,CACA,Cb8LA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASrD,EAAQf,EAAOD,IAClC,SAAW8C,IAAc,Wc7MzB,IAAAwB,EAAA,mBAAAxB,GAAAA,EACAyB,EAAA,SAAAvC,GACAwC,WAAAxC,EAAA,EACA,EAEA/B,EAAAD,QAAA,SAAAgC,GAEA,OAAAsC,GAAAC,GAAAvC,EACA,CdkNC,GAAEpC,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,UAAU8B,aAE5C,EAAE,CAAC2B,OAAS,MAAM,GAAG,CAAC,SAASzD,EAAQf,EAAOD,Ge5N9CC,EAAAD,QAAA,SAAA2B,GACA,OAAA,SAAAhD,EAAAoD,EAAAkB,GACA,OAAAtB,EAAAhD,EAAAsE,EACA,CACA,CfiOA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASjC,EAAQf,EAAOD,GgBrOlC,IAAAoC,EAAApB,EAAA,mBACAqB,EAAArB,EAAA,mBACAuC,EAAAvC,EAAA,sBACA+B,EAAA/B,EAAA,wBACA0D,EAAA1D,EAAA,0BACAW,EAAAX,EAAA,kBAEAf,EAAAD,QAAA,SAAA6B,EAAAD,GAEA,GADAA,EAAAQ,EAAAR,GAAAS,IACAkB,EAAA1B,GAAA,OAAAD,EAAA,IAAAT,MAAA,8DACA,IAAAU,EAAAP,OAAA,OAAAM,KAEA,SAAA+C,EAAAhD,GACA,OAAAoB,GAAA,SAAAF,EAAAG,GACA,GAAAH,EACAjB,EAAAK,MAAA,KAAA,CAAAY,GAAA+B,OAAA5B,QACA,CACA,IAAAb,EAAAR,EAAAQ,OACAA,EACAa,EAAAG,KAAAwB,EAAAxC,IAEAa,EAAAG,KAAAvB,GAEA8C,EAAA/C,GAAAM,MAAA,KAAAe,EACA,CACA,GACA,CACA2B,CAAAhD,EAAAE,GAAA8C,EACA,ChB0OA,EAAE,CAAC,iBAAiB,EAAE,yBAAyB,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,kBAAkB,GAAG,uBAAuB,KAAK,GAAG,CAAC,SAAS3D,EAAQf,EAAOD,GiBtQzKA,EAAA6E,WAuCA,SAAAC,GACA,IAAAC,EAAAC,EAAAF,GACAG,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACA,OAAA,GAAAE,EAAAC,GAAA,EAAAA,CACA,EA3CAlF,EAAAmF,YAiDA,SAAAL,GACA,IAAAM,EAcAtE,EAbAiE,EAAAC,EAAAF,GACAG,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAEAtD,EAAA,IAAA4D,EAVA,SAAAP,EAAAG,EAAAC,GACA,OAAA,GAAAD,EAAAC,GAAA,EAAAA,CACA,CAQAI,CAAAR,EAAAG,EAAAC,IAEAK,EAAA,EAGA1B,EAAAqB,EAAA,EACAD,EAAA,EACAA,EAGA,IAAAnE,EAAA,EAAAA,EAAA+C,EAAA/C,GAAA,EACAsE,EACAI,EAAAV,EAAAW,WAAA3E,KAAA,GACA0E,EAAAV,EAAAW,WAAA3E,EAAA,KAAA,GACA0E,EAAAV,EAAAW,WAAA3E,EAAA,KAAA,EACA0E,EAAAV,EAAAW,WAAA3E,EAAA,IACAW,EAAA8D,KAAAH,GAAA,GAAA,IACA3D,EAAA8D,KAAAH,GAAA,EAAA,IACA3D,EAAA8D,KAAA,IAAAH,EAGA,IAAAF,IACAE,EACAI,EAAAV,EAAAW,WAAA3E,KAAA,EACA0E,EAAAV,EAAAW,WAAA3E,EAAA,KAAA,EACAW,EAAA8D,KAAA,IAAAH,GAGA,IAAAF,IACAE,EACAI,EAAAV,EAAAW,WAAA3E,KAAA,GACA0E,EAAAV,EAAAW,WAAA3E,EAAA,KAAA,EACA0E,EAAAV,EAAAW,WAAA3E,EAAA,KAAA,EACAW,EAAA8D,KAAAH,GAAA,EAAA,IACA3D,EAAA8D,KAAA,IAAAH,GAGA,OAAA3D,CACA,EA5FAzB,EAAA0F,cAkHA,SAAAC,GAQA,IAPA,IAAAP,EACAvB,EAAA8B,EAAArE,OACAsE,EAAA/B,EAAA,EACAgC,EAAA,GACAC,EAAA,MAGAhF,EAAA,EAAAiF,EAAAlC,EAAA+B,EAAA9E,EAAAiF,EAAAjF,GAAAgF,EACAD,EAAA1C,KAAA6C,EAAAL,EAAA7E,EAAAA,EAAAgF,EAAAC,EAAAA,EAAAjF,EAAAgF,IAIA,IAAAF,GACAR,EAAAO,EAAA9B,EAAA,GACAgC,EAAA1C,KACA8C,EAAAb,GAAA,GACAa,EAAAb,GAAA,EAAA,IACA,OAEA,IAAAQ,IACAR,GAAAO,EAAA9B,EAAA,IAAA,GAAA8B,EAAA9B,EAAA,GACAgC,EAAA1C,KACA8C,EAAAb,GAAA,IACAa,EAAAb,GAAA,EAAA,IACAa,EAAAb,GAAA,EAAA,IACA,MAIA,OAAAS,EAAAK,KAAA,GACA,EA1IA,IALA,IAAAD,EAAA,GACAT,EAAA,GACAH,EAAA,oBAAAc,WAAAA,WAAA7C,MAEAlC,EAAA,mEACAN,EAAA,EAAAA,EAAAM,KAAAN,EACAmF,EAAAnF,GAAAM,EAAAN,GACA0E,EAAApE,EAAAqE,WAAA3E,IAAAA,EAQA,SAAAkE,EAAAF,GACA,IAAAjB,EAAAiB,EAAAxD,OAEA,GAAAuC,EAAA,EAAA,EACA,MAAA,IAAA1C,MAAA,kDAKA,IAAA8D,EAAAH,EAAAsB,QAAA,KAOA,OANA,IAAAnB,IAAAA,EAAApB,GAMA,CAAAoB,EAJAA,IAAApB,EACA,EACA,EAAAoB,EAAA,EAGA,CAmEA,SAAAe,EAAAL,EAAAU,EAAAC,GAGA,IAFA,IAAAlB,EARAmB,EASAC,EAAA,GACA1F,EAAAuF,EAAAvF,EAAAwF,EAAAxF,GAAA,EACAsE,GACAO,EAAA7E,IAAA,GAAA,WACA6E,EAAA7E,EAAA,IAAA,EAAA,QACA,IAAA6E,EAAA7E,EAAA,IACA0F,EAAArD,KAdA8C,GADAM,EAeAnB,IAdA,GAAA,IACAa,EAAAM,GAAA,GAAA,IACAN,EAAAM,GAAA,EAAA,IACAN,EAAA,GAAAM,IAaA,OAAAC,EAAAN,KAAA,GACA,CAlGAV,EAAA,IAAAC,WAAA,IAAA,GACAD,EAAA,IAAAC,WAAA,IAAA,EjB6YA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASzE,EAAQf,EAAOD,GAElC,EAAE,CAAC,GAAG,GAAG,CAAC,SAASgB,EAAQf,EAAOD,GAClCkC,UAAU,GAAG,IAAI,GAAGD,MAAMjC,EAAQkC,UAClC,EAAE,CAACuE,IAAM,KAAK,GAAG,CAAC,SAASzF,EAAQf,EAAOD,IAC1C,SAAW0G,IAAQ,WkB3ZnB,IAAAC,EAAA3F,EAAA,aACA4F,EAAA5F,EAAA,WAEAhB,EAAA0G,OAAAA,EACA1G,EAAA6G,WAqTA,SAAAvF,IACAA,GAAAA,IACAA,EAAA,GAEA,OAAAoF,EAAAI,OAAAxF,EACA,EAzTAtB,EAAA+G,kBAAA,GAEA,IAAAC,EAAA,WAsDA,SAAAC,EAAA3F,GACA,GAAAA,EAAA0F,EACA,MAAA,IAAAE,WAAA,cAAA5F,EAAA,kCAGA,IAAA6F,EAAA,IAAAhB,WAAA7E,GAEA,OADA6F,EAAAC,UAAAV,EAAAlD,UACA2D,CACA,CAYA,SAAAT,EAAAxH,EAAAmI,EAAA/F,GAEA,GAAA,iBAAApC,EAAA,CACA,GAAA,iBAAAmI,EACA,MAAA,IAAAxH,UACA,sEAGA,OAAAyH,EAAApI,EACA,CACA,OAAAqI,EAAArI,EAAAmI,EAAA/F,EACA,CAeA,SAAAiG,EAAA5I,EAAA0I,EAAA/F,GACA,GAAA,iBAAA3C,EACA,OAiHA,SAAA6I,EAAAC,GACA,iBAAAA,GAAA,KAAAA,IACAA,EAAA,QAGA,IAAAf,EAAAgB,WAAAD,GACA,MAAA,IAAA5H,UAAA,qBAAA4H,GAGA,IAAAnG,EAAA,EAAAuD,EAAA2C,EAAAC,GACAN,EAAAF,EAAA3F,GAEAqG,EAAAR,EAAAS,MAAAJ,EAAAC,GAEAE,IAAArG,IAIA6F,EAAAA,EAAAU,MAAA,EAAAF,IAGA,OAAAR,CACA,CAvIAW,CAAAnJ,EAAA0I,GAGA,GAAAU,YAAAC,OAAArJ,GACA,OAAAsJ,EAAAtJ,GAGA,GAAA,MAAAA,EACA,MAAAkB,UACA,yHACAlB,GAIA,GAAAuJ,EAAAvJ,EAAAoJ,cACApJ,GAAAuJ,EAAAvJ,EAAAwJ,OAAAJ,aACA,OAkIA,SAAAK,EAAAC,EAAA/G,GACA,GAAA+G,EAAA,GAAAD,EAAAvD,WAAAwD,EACA,MAAA,IAAAnB,WAAA,wCAGA,GAAAkB,EAAAvD,WAAAwD,GAAA/G,GAAA,GACA,MAAA,IAAA4F,WAAA,wCAGA,IAAAC,EAEAA,OADAzH,IAAA2I,QAAA3I,IAAA4B,EACA,IAAA6E,WAAAiC,QACA1I,IAAA4B,EACA,IAAA6E,WAAAiC,EAAAC,GAEA,IAAAlC,WAAAiC,EAAAC,EAAA/G,GAKA,OADA6F,EAAAC,UAAAV,EAAAlD,UACA2D,CACA,CAvJAmB,CAAA3J,EAAA0I,EAAA/F,GAGA,GAAA,iBAAA3C,EACA,MAAA,IAAAkB,UACA,yEAIA,IAAA0I,EAAA5J,EAAA4J,SAAA5J,EAAA4J,UACA,GAAA,MAAAA,GAAAA,IAAA5J,EACA,OAAA+H,EAAAa,KAAAgB,EAAAlB,EAAA/F,GAGA,IAAAkH,EA2IA,SAAA/J,GACA,GAAAiI,EAAA+B,SAAAhK,GAAA,CACA,IAAAoF,EAAA,EAAA6E,EAAAjK,EAAA6C,QACA6F,EAAAF,EAAApD,GAEA,OAAA,IAAAsD,EAAA7F,QAIA7C,EAAAkK,KAAAxB,EAAA,EAAA,EAAAtD,GAHAsD,CAKA,CAEA,QAAAzH,IAAAjB,EAAA6C,OACA,MAAA,iBAAA7C,EAAA6C,QAAAsH,EAAAnK,EAAA6C,QACA2F,EAAA,GAEAgB,EAAAxJ,GAGA,GAAA,WAAAA,EAAAoK,MAAAvF,MAAAC,QAAA9E,EAAAqK,MACA,OAAAb,EAAAxJ,EAAAqK,KAEA,CAlKAC,CAAApK,GACA,GAAA6J,EAAA,OAAAA,EAEA,GAAA,oBAAAhJ,QAAA,MAAAA,OAAAC,aACA,mBAAAd,EAAAa,OAAAC,aACA,OAAAiH,EAAAa,KACA5I,EAAAa,OAAAC,aAAA,UAAA4H,EAAA/F,GAIA,MAAA,IAAAzB,UACA,yHACAlB,EAEA,CAmBA,SAAAqK,EAAAC,GACA,GAAA,iBAAAA,EACA,MAAA,IAAApJ,UAAA,0CACA,GAAAoJ,EAAA,EACA,MAAA,IAAA/B,WAAA,cAAA+B,EAAA,iCAEA,CA0BA,SAAA3B,EAAA2B,GAEA,OADAD,EAAAC,GACAhC,EAAAgC,EAAA,EAAA,EAAA,EAAAP,EAAAO,GACA,CAuCA,SAAAhB,EAAAG,GAGA,IAFA,IAAA9G,EAAA8G,EAAA9G,OAAA,EAAA,EAAA,EAAAoH,EAAAN,EAAA9G,QACA6F,EAAAF,EAAA3F,GACAR,EAAA,EAAAA,EAAAQ,EAAAR,GAAA,EACAqG,EAAArG,GAAA,IAAAsH,EAAAtH,GAEA,OAAAqG,CACA,CAkDA,SAAAuB,EAAApH,GAGA,GAAAA,GAAA0F,EACA,MAAA,IAAAE,WAAA,0DACAF,EAAAvD,SAAA,IAAA,UAEA,OAAA,EAAAnC,CACA,CA6FA,SAAAuD,EAAA2C,EAAAC,GACA,GAAAf,EAAA+B,SAAAjB,GACA,OAAAA,EAAAlG,OAEA,GAAAyG,YAAAC,OAAAR,IAAAU,EAAAV,EAAAO,aACA,OAAAP,EAAA3C,WAEA,GAAA,iBAAA2C,EACA,MAAA,IAAA3H,UACA,kGACA2H,GAIA,IAAA3D,EAAA2D,EAAAlG,OACA4H,EAAAhH,UAAAZ,OAAA,IAAA,IAAAY,UAAA,GACA,IAAAgH,GAAA,IAAArF,EAAA,OAAA,EAIA,IADA,IAAAsF,GAAA,IAEA,OAAA1B,GACA,IAAA,QACA,IAAA,SACA,IAAA,SACA,OAAA5D,EACA,IAAA,OACA,IAAA,QACA,OAAAuF,EAAA5B,GAAAlG,OACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EAAAuC,EACA,IAAA,MACA,OAAAA,IAAA,EACA,IAAA,SACA,OAAAwF,EAAA7B,GAAAlG,OACA,QACA,GAAA6H,EACA,OAAAD,GAAA,EAAAE,EAAA5B,GAAAlG,OAEAmG,GAAA,GAAAA,GAAA6B,cACAH,GAAA,EAGA,CAGA,SAAAI,EAAA9B,EAAApB,EAAAC,GACA,IAAA6C,GAAA,EAcA,SALAzJ,IAAA2G,GAAAA,EAAA,KACAA,EAAA,GAIAA,EAAA9F,KAAAe,OACA,MAAA,GAOA,SAJA5B,IAAA4G,GAAAA,EAAA/F,KAAAe,UACAgF,EAAA/F,KAAAe,QAGAgF,GAAA,EACA,MAAA,GAOA,IAHAA,KAAA,KACAD,KAAA,GAGA,MAAA,GAKA,IAFAoB,IAAAA,EAAA,UAGA,OAAAA,GACA,IAAA,MACA,OAAA+B,EAAAjJ,KAAA8F,EAAAC,GAEA,IAAA,OACA,IAAA,QACA,OAAAmD,EAAAlJ,KAAA8F,EAAAC,GAEA,IAAA,QACA,OAAAoD,EAAAnJ,KAAA8F,EAAAC,GAEA,IAAA,SACA,IAAA,SACA,OAAAqD,EAAApJ,KAAA8F,EAAAC,GAEA,IAAA,SACA,OAAAsD,EAAArJ,KAAA8F,EAAAC,GAEA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAAuD,EAAAtJ,KAAA8F,EAAAC,GAEA,QACA,GAAA6C,EAAA,MAAA,IAAAtJ,UAAA,qBAAA4H,GACAA,GAAAA,EAAA,IAAA6B,cACAH,GAAA,EAGA,CAUA,SAAAW,EAAAtB,EAAA7H,EAAAoJ,GACA,IAAAjJ,EAAA0H,EAAA7H,GACA6H,EAAA7H,GAAA6H,EAAAuB,GACAvB,EAAAuB,GAAAjJ,CACA,CAwIA,SAAAkJ,EAAA7B,EAAA8B,EAAA5B,EAAAZ,EAAAyC,GAEA,GAAA,IAAA/B,EAAA7G,OAAA,OAAA,EAmBA,GAhBA,iBAAA+G,GACAZ,EAAAY,EACAA,EAAA,GACAA,EAAA,WACAA,EAAA,WACAA,GAAA,aACAA,GAAA,YAGAO,EADAP,GAAAA,KAGAA,EAAA6B,EAAA,EAAA/B,EAAA7G,OAAA,GAIA+G,EAAA,IAAAA,EAAAF,EAAA7G,OAAA+G,GACAA,GAAAF,EAAA7G,OAAA,CACA,GAAA4I,EAAA,OAAA,EACA7B,EAAAF,EAAA7G,OAAA,CACA,MAAA,GAAA+G,EAAA,EAAA,CACA,IAAA6B,EACA,OAAA,EADA7B,EAAA,CAEA,CAQA,GALA,iBAAA4B,IACAA,EAAAvD,EAAAa,KAAA0C,EAAAxC,IAIAf,EAAA+B,SAAAwB,GAEA,OAAA,IAAAA,EAAA3I,QACA,EAEA6I,EAAAhC,EAAA8B,EAAA5B,EAAAZ,EAAAyC,GACA,GAAA,iBAAAD,EAEA,OADAA,GAAA,IACA,mBAAA9D,WAAA3C,UAAA4C,QACA8D,EACA/D,WAAA3C,UAAA4C,QAAAxG,KAAAuI,EAAA8B,EAAA5B,GAEAlC,WAAA3C,UAAA4G,YAAAxK,KAAAuI,EAAA8B,EAAA5B,GAGA8B,EAAAhC,EAAA,CAAA8B,GAAA5B,EAAAZ,EAAAyC,GAGA,MAAA,IAAArK,UAAA,uCACA,CAEA,SAAAsK,EAAA1I,EAAAwI,EAAA5B,EAAAZ,EAAAyC,GACA,IA0BApJ,EA1BAuJ,EAAA,EACAC,EAAA7I,EAAAH,OACAiJ,EAAAN,EAAA3I,OAEA,QAAA5B,IAAA+H,IAEA,UADAA,EAAArI,OAAAqI,GAAA6B,gBACA,UAAA7B,GACA,YAAAA,GAAA,aAAAA,GAAA,CACA,GAAAhG,EAAAH,OAAA,GAAA2I,EAAA3I,OAAA,EACA,OAAA,EAEA+I,EAAA,EACAC,GAAA,EACAC,GAAA,EACAlC,GAAA,CACA,CAGA,SAAAmC,EAAArD,EAAArG,GACA,OAAA,IAAAuJ,EACAlD,EAAArG,GAEAqG,EAAAsD,aAAA3J,EAAAuJ,EAEA,CAGA,GAAAH,EAAA,CACA,IAAAQ,GAAA,EACA,IAAA5J,EAAAuH,EAAAvH,EAAAwJ,EAAAxJ,IACA,GAAA0J,EAAA/I,EAAAX,KAAA0J,EAAAP,GAAA,IAAAS,EAAA,EAAA5J,EAAA4J,IAEA,IADA,IAAAA,IAAAA,EAAA5J,GACAA,EAAA4J,EAAA,IAAAH,EAAA,OAAAG,EAAAL,OAEA,IAAAK,IAAA5J,GAAAA,EAAA4J,GACAA,GAAA,CAGA,MAEA,IADArC,EAAAkC,EAAAD,IAAAjC,EAAAiC,EAAAC,GACAzJ,EAAAuH,EAAAvH,GAAA,EAAAA,IAAA,CAEA,IADA,IAAA6J,GAAA,EACAC,EAAA,EAAAA,EAAAL,EAAAK,IACA,GAAAJ,EAAA/I,EAAAX,EAAA8J,KAAAJ,EAAAP,EAAAW,GAAA,CACAD,GAAA,EACA,KACA,CAEA,GAAAA,EAAA,OAAA7J,CACA,CAGA,OAAA,CACA,CAcA,SAAA+J,EAAA1D,EAAAK,EAAAsD,EAAAxJ,GACAwJ,EAAAhL,OAAAgL,IAAA,EACA,IAAAC,EAAA5D,EAAA7F,OAAAwJ,EACAxJ,GAGAA,EAAAxB,OAAAwB,IACAyJ,IACAzJ,EAAAyJ,GAJAzJ,EAAAyJ,EAQA,IAAAC,EAAAxD,EAAAlG,OAEAA,EAAA0J,EAAA,IACA1J,EAAA0J,EAAA,GAEA,IAAA,IAAAlK,EAAA,EAAAA,EAAAQ,IAAAR,EAAA,CACA,IAAAmK,EAAAC,SAAA1D,EAAA2D,OAAA,EAAArK,EAAA,GAAA,IACA,GAAA8H,EAAAqC,GAAA,OAAAnK,EACAqG,EAAA2D,EAAAhK,GAAAmK,CACA,CACA,OAAAnK,CACA,CAEA,SAAAsK,EAAAjE,EAAAK,EAAAsD,EAAAxJ,GACA,OAAA+J,EAAAjC,EAAA5B,EAAAL,EAAA7F,OAAAwJ,GAAA3D,EAAA2D,EAAAxJ,EACA,CAEA,SAAAgK,EAAAnE,EAAAK,EAAAsD,EAAAxJ,GACA,OAAA+J,EA63BA,SAAAE,GAEA,IADA,IAAAC,EAAA,GACA1K,EAAA,EAAAA,EAAAyK,EAAAjK,SAAAR,EAEA0K,EAAArI,KAAA,IAAAoI,EAAA9F,WAAA3E,IAEA,OAAA0K,CACA,CAp4BAC,CAAAjE,GAAAL,EAAA2D,EAAAxJ,EACA,CAEA,SAAAoK,EAAAvE,EAAAK,EAAAsD,EAAAxJ,GACA,OAAAgK,EAAAnE,EAAAK,EAAAsD,EAAAxJ,EACA,CAEA,SAAAqK,EAAAxE,EAAAK,EAAAsD,EAAAxJ,GACA,OAAA+J,EAAAhC,EAAA7B,GAAAL,EAAA2D,EAAAxJ,EACA,CAEA,SAAAsK,EAAAzE,EAAAK,EAAAsD,EAAAxJ,GACA,OAAA+J,EA03BA,SAAAE,EAAAM,GAGA,IAFA,IAAA9K,EAAA+K,EAAAC,EACAP,EAAA,GACA1K,EAAA,EAAAA,EAAAyK,EAAAjK,WACAuK,GAAA,GAAA,KADA/K,EAIAgL,GADA/K,EAAAwK,EAAA9F,WAAA3E,KACA,EACAiL,EAAAhL,EAAA,IACAyK,EAAArI,KAAA4I,GACAP,EAAArI,KAAA2I,GAGA,OAAAN,CACA,CAx4BAQ,CAAAxE,EAAAL,EAAA7F,OAAAwJ,GAAA3D,EAAA2D,EAAAxJ,EACA,CAgFA,SAAAsI,EAAAzC,EAAAd,EAAAC,GACA,OAAA,IAAAD,GAAAC,IAAAa,EAAA7F,OACAqF,EAAAjB,cAAAyB,GAEAR,EAAAjB,cAAAyB,EAAAU,MAAAxB,EAAAC,GAEA,CAEA,SAAAmD,EAAAtC,EAAAd,EAAAC,GACAA,EAAAnC,KAAA8H,IAAA9E,EAAA7F,OAAAgF,GAIA,IAHA,IAAA3G,EAAA,GAEAmB,EAAAuF,EACAvF,EAAAwF,GAAA,CACA,IAQA4F,EAAAC,EAAAC,EAAAC,EARAC,EAAAnF,EAAArG,GACAyL,EAAA,KACAC,EAAAF,EAAA,IAAA,EACAA,EAAA,IAAA,EACAA,EAAA,IAAA,EACA,EAEA,GAAAxL,EAAA0L,GAAAlG,EAGA,OAAAkG,GACA,KAAA,EACAF,EAAA,MACAC,EAAAD,GAEA,MACA,KAAA,EAEA,MAAA,KADAJ,EAAA/E,EAAArG,EAAA,OAEAuL,GAAA,GAAAC,IAAA,EAAA,GAAAJ,GACA,MACAK,EAAAF,GAGA,MACA,KAAA,EACAH,EAAA/E,EAAArG,EAAA,GACAqL,EAAAhF,EAAArG,EAAA,GACA,MAAA,IAAAoL,IAAA,MAAA,IAAAC,KACAE,GAAA,GAAAC,IAAA,IAAA,GAAAJ,IAAA,EAAA,GAAAC,GACA,OAAAE,EAAA,OAAAA,EAAA,SACAE,EAAAF,GAGA,MACA,KAAA,EACAH,EAAA/E,EAAArG,EAAA,GACAqL,EAAAhF,EAAArG,EAAA,GACAsL,EAAAjF,EAAArG,EAAA,GACA,MAAA,IAAAoL,IAAA,MAAA,IAAAC,IAAA,MAAA,IAAAC,KACAC,GAAA,GAAAC,IAAA,IAAA,GAAAJ,IAAA,IAAA,GAAAC,IAAA,EAAA,GAAAC,GACA,OAAAC,EAAA,UACAE,EAAAF,GAMA,OAAAE,GAGAA,EAAA,MACAC,EAAA,GACAD,EAAA,QAEAA,GAAA,MACA5M,EAAAwD,KAAAoJ,IAAA,GAAA,KAAA,OACAA,EAAA,MAAA,KAAAA,GAGA5M,EAAAwD,KAAAoJ,GACAzL,GAAA0L,CACA,CAEA,OAQA,SAAAC,GACA,IAAA5I,EAAA4I,EAAAnL,OACA,GAAAuC,GAAA6I,EACA,OAAAtN,OAAAuN,aAAA1K,MAAA7C,OAAAqN,GAIA,IAAA9M,EAAA,GACAmB,EAAA,EACA,KAAAA,EAAA+C,GACAlE,GAAAP,OAAAuN,aAAA1K,MACA7C,OACAqN,EAAA5E,MAAA/G,EAAAA,GAAA4L,IAGA,OAAA/M,CACA,CAxBAiN,CAAAjN,EACA,CA79BAK,EAAA6M,WAAA7F,EAgBAN,EAAAoG,oBAUA,WAEA,IACA,IAAArL,EAAA,IAAA0E,WAAA,GAEA,OADA1E,EAAA2F,UAAA,CAAAA,UAAAjB,WAAA3C,UAAAuJ,IAAA,WAAA,OAAA,EAAA,GACA,KAAAtL,EAAAsL,KACA,CAAA,MAAArM,GACA,OAAA,CACA,CACA,CAnBAsM,GAEAtG,EAAAoG,qBAAA,oBAAAG,SACA,mBAAAA,QAAAC,OACAD,QAAAC,MACA,iJAgBArO,OAAAC,eAAA4H,EAAAlD,UAAA,SAAA,CACAzE,YAAA,EACAoO,IAAA,WACA,GAAAzG,EAAA+B,SAAAlI,MACA,OAAAA,KAAA4H,MACA,IAGAtJ,OAAAC,eAAA4H,EAAAlD,UAAA,SAAA,CACAzE,YAAA,EACAoO,IAAA,WACA,GAAAzG,EAAA+B,SAAAlI,MACA,OAAAA,KAAA8H,UACA,IAqCA,oBAAA7I,QAAA,MAAAA,OAAA4N,SACA1G,EAAAlH,OAAA4N,WAAA1G,GACA7H,OAAAC,eAAA4H,EAAAlH,OAAA4N,QAAA,CACAzO,MAAA,KACAK,cAAA,EACAD,YAAA,EACAE,UAAA,IAIAyH,EAAA2G,SAAA,KA0DA3G,EAAAa,KAAA,SAAA5I,EAAA0I,EAAA/F,GACA,OAAAiG,EAAA5I,EAAA0I,EAAA/F,EACA,EAIAoF,EAAAlD,UAAA4D,UAAAjB,WAAA3C,UACAkD,EAAAU,UAAAjB,WA8BAO,EAAAI,MAAA,SAAAmC,EAAAqE,EAAA7F,GACA,OArBA,SAAAwB,EAAAqE,EAAA7F,GAEA,OADAuB,EAAAC,GACAA,GAAA,EACAhC,EAAAgC,QAEAvJ,IAAA4N,EAIA,iBAAA7F,EACAR,EAAAgC,GAAAqE,KAAAA,EAAA7F,GACAR,EAAAgC,GAAAqE,KAAAA,GAEArG,EAAAgC,EACA,CAOAnC,CAAAmC,EAAAqE,EAAA7F,EACA,EAUAf,EAAAY,YAAA,SAAA2B,GACA,OAAA3B,EAAA2B,EACA,EAIAvC,EAAA6G,gBAAA,SAAAtE,GACA,OAAA3B,EAAA2B,EACA,EAoGAvC,EAAA+B,SAAA,SAAAD,GACA,OAAA,MAAAA,IAAA,IAAAA,EAAAgF,WACAhF,IAAA9B,EAAAlD,SACA,EAEAkD,EAAA+G,QAAA,SAAAvM,EAAAsH,GAGA,GAFAN,EAAAhH,EAAAiF,cAAAjF,EAAAwF,EAAAa,KAAArG,EAAAA,EAAA4J,OAAA5J,EAAA2D,aACAqD,EAAAM,EAAArC,cAAAqC,EAAA9B,EAAAa,KAAAiB,EAAAA,EAAAsC,OAAAtC,EAAA3D,cACA6B,EAAA+B,SAAAvH,KAAAwF,EAAA+B,SAAAD,GACA,MAAA,IAAA3I,UACA,yEAIA,GAAAqB,IAAAsH,EAAA,OAAA,EAKA,IAHA,IAAAkF,EAAAxM,EAAAI,OACAqM,EAAAnF,EAAAlH,OAEAR,EAAA,EAAA+C,EAAAM,KAAA8H,IAAAyB,EAAAC,GAAA7M,EAAA+C,IAAA/C,EACA,GAAAI,EAAAJ,KAAA0H,EAAA1H,GAAA,CACA4M,EAAAxM,EAAAJ,GACA6M,EAAAnF,EAAA1H,GACA,KACA,CAGA,OAAA4M,EAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,CACA,EAEAhH,EAAAgB,WAAA,SAAAD,GACA,OAAArI,OAAAqI,GAAA6B,eACA,IAAA,MACA,IAAA,OACA,IAAA,QACA,IAAA,QACA,IAAA,SACA,IAAA,SACA,IAAA,SACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EACA,QACA,OAAA,EAEA,EAEA5C,EAAA9B,OAAA,SAAAgJ,EAAAtM,GACA,IAAAgC,MAAAC,QAAAqK,GACA,MAAA,IAAA/N,UAAA,+CAGA,GAAA,IAAA+N,EAAAtM,OACA,OAAAoF,EAAAI,MAAA,GAGA,IAAAhG,EACA,QAAApB,IAAA4B,EAEA,IADAA,EAAA,EACAR,EAAA,EAAAA,EAAA8M,EAAAtM,SAAAR,EACAQ,GAAAsM,EAAA9M,GAAAQ,OAIA,IAAA6G,EAAAzB,EAAAY,YAAAhG,GACAuM,EAAA,EACA,IAAA/M,EAAA,EAAAA,EAAA8M,EAAAtM,SAAAR,EAAA,CACA,IAAAqG,EAAAyG,EAAA9M,GAIA,GAHAoH,EAAAf,EAAAhB,cACAgB,EAAAT,EAAAa,KAAAJ,KAEAT,EAAA+B,SAAAtB,GACA,MAAA,IAAAtH,UAAA,+CAEAsH,EAAAwB,KAAAR,EAAA0F,GACAA,GAAA1G,EAAA7F,MACA,CACA,OAAA6G,CACA,EAiDAzB,EAAA7B,WAAAA,EA8EA6B,EAAAlD,UAAAgK,WAAA,EAQA9G,EAAAlD,UAAAsK,OAAA,WACA,IAAAjK,EAAAtD,KAAAe,OACA,GAAAuC,EAAA,GAAA,EACA,MAAA,IAAAqD,WAAA,6CAEA,IAAA,IAAApG,EAAA,EAAAA,EAAA+C,EAAA/C,GAAA,EACAgJ,EAAAvJ,KAAAO,EAAAA,EAAA,GAEA,OAAAP,IACA,EAEAmG,EAAAlD,UAAAuK,OAAA,WACA,IAAAlK,EAAAtD,KAAAe,OACA,GAAAuC,EAAA,GAAA,EACA,MAAA,IAAAqD,WAAA,6CAEA,IAAA,IAAApG,EAAA,EAAAA,EAAA+C,EAAA/C,GAAA,EACAgJ,EAAAvJ,KAAAO,EAAAA,EAAA,GACAgJ,EAAAvJ,KAAAO,EAAA,EAAAA,EAAA,GAEA,OAAAP,IACA,EAEAmG,EAAAlD,UAAAwK,OAAA,WACA,IAAAnK,EAAAtD,KAAAe,OACA,GAAAuC,EAAA,GAAA,EACA,MAAA,IAAAqD,WAAA,6CAEA,IAAA,IAAApG,EAAA,EAAAA,EAAA+C,EAAA/C,GAAA,EACAgJ,EAAAvJ,KAAAO,EAAAA,EAAA,GACAgJ,EAAAvJ,KAAAO,EAAA,EAAAA,EAAA,GACAgJ,EAAAvJ,KAAAO,EAAA,EAAAA,EAAA,GACAgJ,EAAAvJ,KAAAO,EAAA,EAAAA,EAAA,GAEA,OAAAP,IACA,EAEAmG,EAAAlD,UAAAC,SAAA,WACA,IAAAnC,EAAAf,KAAAe,OACA,OAAA,IAAAA,EAAA,GACA,IAAAY,UAAAZ,OAAAmI,EAAAlJ,KAAA,EAAAe,GACAiI,EAAAtH,MAAA1B,KAAA2B,UACA,EAEAwE,EAAAlD,UAAAyK,eAAAvH,EAAAlD,UAAAC,SAEAiD,EAAAlD,UAAA0K,OAAA,SAAA1F,GACA,IAAA9B,EAAA+B,SAAAD,GAAA,MAAA,IAAA3I,UAAA,6BACA,OAAAU,OAAAiI,GACA,IAAA9B,EAAA+G,QAAAlN,KAAAiI,EACA,EAEA9B,EAAAlD,UAAA2K,QAAA,WACA,IAAA5C,EAAA,GACAnH,EAAApE,EAAA+G,kBAGA,OAFAwE,EAAAhL,KAAAkD,SAAA,MAAA,EAAAW,GAAAgK,QAAA,UAAA,OAAAC,OACA9N,KAAAe,OAAA8C,IAAAmH,GAAA,SACA,WAAAA,EAAA,GACA,EAEA7E,EAAAlD,UAAAiK,QAAA,SAAAa,EAAAjI,EAAAC,EAAAiI,EAAAC,GAIA,GAHAtG,EAAAoG,EAAAnI,cACAmI,EAAA5H,EAAAa,KAAA+G,EAAAA,EAAAxD,OAAAwD,EAAAzJ,cAEA6B,EAAA+B,SAAA6F,GACA,MAAA,IAAAzO,UACA,wFACAyO,GAiBA,QAbA5O,IAAA2G,IACAA,EAAA,QAEA3G,IAAA4G,IACAA,EAAAgI,EAAAA,EAAAhN,OAAA,QAEA5B,IAAA6O,IACAA,EAAA,QAEA7O,IAAA8O,IACAA,EAAAjO,KAAAe,QAGA+E,EAAA,GAAAC,EAAAgI,EAAAhN,QAAAiN,EAAA,GAAAC,EAAAjO,KAAAe,OACA,MAAA,IAAA4F,WAAA,sBAGA,GAAAqH,GAAAC,GAAAnI,GAAAC,EACA,OAAA,EAEA,GAAAiI,GAAAC,EACA,OAAA,EAEA,GAAAnI,GAAAC,EACA,OAAA,EAQA,GAAA/F,OAAA+N,EAAA,OAAA,EASA,IAPA,IAAAZ,GAJAc,KAAA,IADAD,KAAA,GAMAZ,GAPArH,KAAA,IADAD,KAAA,GASAxC,EAAAM,KAAA8H,IAAAyB,EAAAC,GAEAc,EAAAlO,KAAAsH,MAAA0G,EAAAC,GACAE,EAAAJ,EAAAzG,MAAAxB,EAAAC,GAEAxF,EAAA,EAAAA,EAAA+C,IAAA/C,EACA,GAAA2N,EAAA3N,KAAA4N,EAAA5N,GAAA,CACA4M,EAAAe,EAAA3N,GACA6M,EAAAe,EAAA5N,GACA,KACA,CAGA,OAAA4M,EAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,CACA,EA2HAhH,EAAAlD,UAAAmL,SAAA,SAAA1E,EAAA5B,EAAAZ,GACA,OAAA,IAAAlH,KAAA6F,QAAA6D,EAAA5B,EAAAZ,EACA,EAEAf,EAAAlD,UAAA4C,QAAA,SAAA6D,EAAA5B,EAAAZ,GACA,OAAAuC,EAAAzJ,KAAA0J,EAAA5B,EAAAZ,GAAA,EACA,EAEAf,EAAAlD,UAAA4G,YAAA,SAAAH,EAAA5B,EAAAZ,GACA,OAAAuC,EAAAzJ,KAAA0J,EAAA5B,EAAAZ,GAAA,EACA,EA+CAf,EAAAlD,UAAAoE,MAAA,SAAAJ,EAAAsD,EAAAxJ,EAAAmG,GAEA,QAAA/H,IAAAoL,EACArD,EAAA,OACAnG,EAAAf,KAAAe,OACAwJ,EAAA,OAEA,QAAApL,IAAA4B,GAAA,iBAAAwJ,EACArD,EAAAqD,EACAxJ,EAAAf,KAAAe,OACAwJ,EAAA,MAEA,KAAA8D,SAAA9D,GAUA,MAAA,IAAA3J,MACA,2EAVA2J,KAAA,EACA8D,SAAAtN,IACAA,KAAA,OACA5B,IAAA+H,IAAAA,EAAA,UAEAA,EAAAnG,EACAA,OAAA5B,EAMA,CAEA,IAAAqL,EAAAxK,KAAAe,OAAAwJ,EAGA,SAFApL,IAAA4B,GAAAA,EAAAyJ,KAAAzJ,EAAAyJ,GAEAvD,EAAAlG,OAAA,IAAAA,EAAA,GAAAwJ,EAAA,IAAAA,EAAAvK,KAAAe,OACA,MAAA,IAAA4F,WAAA,0CAGAO,IAAAA,EAAA,QAGA,IADA,IAAA0B,GAAA,IAEA,OAAA1B,GACA,IAAA,MACA,OAAAoD,EAAAtK,KAAAiH,EAAAsD,EAAAxJ,GAEA,IAAA,OACA,IAAA,QACA,OAAA8J,EAAA7K,KAAAiH,EAAAsD,EAAAxJ,GAEA,IAAA,QACA,OAAAgK,EAAA/K,KAAAiH,EAAAsD,EAAAxJ,GAEA,IAAA,SACA,IAAA,SACA,OAAAoK,EAAAnL,KAAAiH,EAAAsD,EAAAxJ,GAEA,IAAA,SAEA,OAAAqK,EAAApL,KAAAiH,EAAAsD,EAAAxJ,GAEA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAAsK,EAAArL,KAAAiH,EAAAsD,EAAAxJ,GAEA,QACA,GAAA6H,EAAA,MAAA,IAAAtJ,UAAA,qBAAA4H,GACAA,GAAA,GAAAA,GAAA6B,cACAH,GAAA,EAGA,EAEAzC,EAAAlD,UAAAqL,OAAA,WACA,MAAA,CACAhG,KAAA,SACAC,KAAAxF,MAAAE,UAAAqE,MAAAjI,KAAAW,KAAAuO,MAAAvO,KAAA,GAEA,EAsFA,IAAAmM,EAAA,KAoBA,SAAAhD,EAAAvC,EAAAd,EAAAC,GACA,IAAAyI,EAAA,GACAzI,EAAAnC,KAAA8H,IAAA9E,EAAA7F,OAAAgF,GAEA,IAAA,IAAAxF,EAAAuF,EAAAvF,EAAAwF,IAAAxF,EACAiO,GAAA3P,OAAAuN,aAAA,IAAAxF,EAAArG,IAEA,OAAAiO,CACA,CAEA,SAAApF,EAAAxC,EAAAd,EAAAC,GACA,IAAAyI,EAAA,GACAzI,EAAAnC,KAAA8H,IAAA9E,EAAA7F,OAAAgF,GAEA,IAAA,IAAAxF,EAAAuF,EAAAvF,EAAAwF,IAAAxF,EACAiO,GAAA3P,OAAAuN,aAAAxF,EAAArG,IAEA,OAAAiO,CACA,CAEA,SAAAvF,EAAArC,EAAAd,EAAAC,GACA,IAAAzC,EAAAsD,EAAA7F,SAEA+E,GAAAA,EAAA,KAAAA,EAAA,KACAC,GAAAA,EAAA,GAAAA,EAAAzC,KAAAyC,EAAAzC,GAGA,IADA,IAAAmL,EAAA,GACAlO,EAAAuF,EAAAvF,EAAAwF,IAAAxF,EACAkO,GAAAC,EAAA9H,EAAArG,IAEA,OAAAkO,CACA,CAEA,SAAAnF,EAAA1C,EAAAd,EAAAC,GAGA,IAFA,IAAA4I,EAAA/H,EAAAU,MAAAxB,EAAAC,GACA3G,EAAA,GACAmB,EAAA,EAAAA,EAAAoO,EAAA5N,OAAAR,GAAA,EACAnB,GAAAP,OAAAuN,aAAAuC,EAAApO,GAAA,IAAAoO,EAAApO,EAAA,IAEA,OAAAnB,CACA,CAgCA,SAAAwP,EAAArE,EAAAsE,EAAA9N,GACA,GAAAwJ,EAAA,GAAA,GAAAA,EAAA,EAAA,MAAA,IAAA5D,WAAA,sBACA,GAAA4D,EAAAsE,EAAA9N,EAAA,MAAA,IAAA4F,WAAA,wCACA,CA4KA,SAAAmI,EAAAlI,EAAAxI,EAAAmM,EAAAsE,EAAAhL,EAAA6H,GACA,IAAAvF,EAAA+B,SAAAtB,GAAA,MAAA,IAAAtH,UAAA,+CACA,GAAAlB,EAAAyF,GAAAzF,EAAAsN,EAAA,MAAA,IAAA/E,WAAA,qCACA,GAAA4D,EAAAsE,EAAAjI,EAAA7F,OAAA,MAAA,IAAA4F,WAAA,qBACA,CAwLA,SAAAoI,EAAAnI,EAAAxI,EAAAmM,EAAAsE,EAAAhL,EAAA6H,GACA,GAAAnB,EAAAsE,EAAAjI,EAAA7F,OAAA,MAAA,IAAA4F,WAAA,sBACA,GAAA4D,EAAA,EAAA,MAAA,IAAA5D,WAAA,qBACA,CAEA,SAAAqI,EAAApI,EAAAxI,EAAAmM,EAAA0E,EAAAC,GAOA,OANA9Q,GAAAA,EACAmM,KAAA,EACA2E,GACAH,EAAAnI,EAAAxI,EAAAmM,EAAA,GAEAlE,EAAAgB,MAAAT,EAAAxI,EAAAmM,EAAA0E,EAAA,GAAA,GACA1E,EAAA,CACA,CAUA,SAAA4E,EAAAvI,EAAAxI,EAAAmM,EAAA0E,EAAAC,GAOA,OANA9Q,GAAAA,EACAmM,KAAA,EACA2E,GACAH,EAAAnI,EAAAxI,EAAAmM,EAAA,GAEAlE,EAAAgB,MAAAT,EAAAxI,EAAAmM,EAAA0E,EAAA,GAAA,GACA1E,EAAA,CACA,CAxaApE,EAAAlD,UAAAqE,MAAA,SAAAxB,EAAAC,GACA,IAAAzC,EAAAtD,KAAAe,QACA+E,IAAAA,GAGA,GACAA,GAAAxC,GACA,IAAAwC,EAAA,GACAA,EAAAxC,IACAwC,EAAAxC,IANAyC,OAAA5G,IAAA4G,EAAAzC,IAAAyC,GASA,GACAA,GAAAzC,GACA,IAAAyC,EAAA,GACAA,EAAAzC,IACAyC,EAAAzC,GAGAyC,EAAAD,IAAAC,EAAAD,GAEA,IAAAsJ,EAAApP,KAAAqP,SAAAvJ,EAAAC,GAGA,OADAqJ,EAAAvI,UAAAV,EAAAlD,UACAmM,CACA,EAUAjJ,EAAAlD,UAAAqM,WAAA,SAAA/E,EAAAjG,EAAA4K,GACA3E,KAAA,EACAjG,KAAA,EACA4K,GAAAN,EAAArE,EAAAjG,EAAAtE,KAAAe,QAKA,IAHA,IAAA2I,EAAA1J,KAAAuK,GACAgF,EAAA,EACAhP,EAAA,IACAA,EAAA+D,IAAAiL,GAAA,MACA7F,GAAA1J,KAAAuK,EAAAhK,GAAAgP,EAGA,OAAA7F,CACA,EAEAvD,EAAAlD,UAAAuM,WAAA,SAAAjF,EAAAjG,EAAA4K,GACA3E,KAAA,EACAjG,KAAA,EACA4K,GACAN,EAAArE,EAAAjG,EAAAtE,KAAAe,QAKA,IAFA,IAAA2I,EAAA1J,KAAAuK,IAAAjG,GACAiL,EAAA,EACAjL,EAAA,IAAAiL,GAAA,MACA7F,GAAA1J,KAAAuK,IAAAjG,GAAAiL,EAGA,OAAA7F,CACA,EAEAvD,EAAAlD,UAAAwM,UAAA,SAAAlF,EAAA2E,GAGA,OAFA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACAf,KAAAuK,EACA,EAEApE,EAAAlD,UAAAyM,aAAA,SAAAnF,EAAA2E,GAGA,OAFA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACAf,KAAAuK,GAAAvK,KAAAuK,EAAA,IAAA,CACA,EAEApE,EAAAlD,UAAAiH,aAAA,SAAAK,EAAA2E,GAGA,OAFA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACAf,KAAAuK,IAAA,EAAAvK,KAAAuK,EAAA,EACA,EAEApE,EAAAlD,UAAA0M,aAAA,SAAApF,EAAA2E,GAIA,OAHA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,SAEAf,KAAAuK,GACAvK,KAAAuK,EAAA,IAAA,EACAvK,KAAAuK,EAAA,IAAA,IACA,SAAAvK,KAAAuK,EAAA,EACA,EAEApE,EAAAlD,UAAA2M,aAAA,SAAArF,EAAA2E,GAIA,OAHA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QAEA,SAAAf,KAAAuK,IACAvK,KAAAuK,EAAA,IAAA,GACAvK,KAAAuK,EAAA,IAAA,EACAvK,KAAAuK,EAAA,GACA,EAEApE,EAAAlD,UAAA4M,UAAA,SAAAtF,EAAAjG,EAAA4K,GACA3E,KAAA,EACAjG,KAAA,EACA4K,GAAAN,EAAArE,EAAAjG,EAAAtE,KAAAe,QAKA,IAHA,IAAA2I,EAAA1J,KAAAuK,GACAgF,EAAA,EACAhP,EAAA,IACAA,EAAA+D,IAAAiL,GAAA,MACA7F,GAAA1J,KAAAuK,EAAAhK,GAAAgP,EAMA,OAFA7F,IAFA6F,GAAA,OAEA7F,GAAA9F,KAAAkM,IAAA,EAAA,EAAAxL,IAEAoF,CACA,EAEAvD,EAAAlD,UAAA8M,UAAA,SAAAxF,EAAAjG,EAAA4K,GACA3E,KAAA,EACAjG,KAAA,EACA4K,GAAAN,EAAArE,EAAAjG,EAAAtE,KAAAe,QAKA,IAHA,IAAAR,EAAA+D,EACAiL,EAAA,EACA7F,EAAA1J,KAAAuK,IAAAhK,GACAA,EAAA,IAAAgP,GAAA,MACA7F,GAAA1J,KAAAuK,IAAAhK,GAAAgP,EAMA,OAFA7F,IAFA6F,GAAA,OAEA7F,GAAA9F,KAAAkM,IAAA,EAAA,EAAAxL,IAEAoF,CACA,EAEAvD,EAAAlD,UAAA+M,SAAA,SAAAzF,EAAA2E,GAGA,OAFA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACA,IAAAf,KAAAuK,IACA,GAAA,IAAAvK,KAAAuK,GAAA,GADAvK,KAAAuK,EAEA,EAEApE,EAAAlD,UAAAgN,YAAA,SAAA1F,EAAA2E,GACA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACA,IAAA2I,EAAA1J,KAAAuK,GAAAvK,KAAAuK,EAAA,IAAA,EACA,OAAA,MAAAb,EAAA,WAAAA,EAAAA,CACA,EAEAvD,EAAAlD,UAAAiN,YAAA,SAAA3F,EAAA2E,GACA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACA,IAAA2I,EAAA1J,KAAAuK,EAAA,GAAAvK,KAAAuK,IAAA,EACA,OAAA,MAAAb,EAAA,WAAAA,EAAAA,CACA,EAEAvD,EAAAlD,UAAAkN,YAAA,SAAA5F,EAAA2E,GAIA,OAHA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QAEAf,KAAAuK,GACAvK,KAAAuK,EAAA,IAAA,EACAvK,KAAAuK,EAAA,IAAA,GACAvK,KAAAuK,EAAA,IAAA,EACA,EAEApE,EAAAlD,UAAAmN,YAAA,SAAA7F,EAAA2E,GAIA,OAHA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QAEAf,KAAAuK,IAAA,GACAvK,KAAAuK,EAAA,IAAA,GACAvK,KAAAuK,EAAA,IAAA,EACAvK,KAAAuK,EAAA,EACA,EAEApE,EAAAlD,UAAAoN,YAAA,SAAA9F,EAAA2E,GAGA,OAFA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACAsF,EAAA4D,KAAAjK,KAAAuK,GAAA,EAAA,GAAA,EACA,EAEApE,EAAAlD,UAAAqN,YAAA,SAAA/F,EAAA2E,GAGA,OAFA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACAsF,EAAA4D,KAAAjK,KAAAuK,GAAA,EAAA,GAAA,EACA,EAEApE,EAAAlD,UAAAsN,aAAA,SAAAhG,EAAA2E,GAGA,OAFA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACAsF,EAAA4D,KAAAjK,KAAAuK,GAAA,EAAA,GAAA,EACA,EAEApE,EAAAlD,UAAAuN,aAAA,SAAAjG,EAAA2E,GAGA,OAFA3E,KAAA,EACA2E,GAAAN,EAAArE,EAAA,EAAAvK,KAAAe,QACAsF,EAAA4D,KAAAjK,KAAAuK,GAAA,EAAA,GAAA,EACA,EAQApE,EAAAlD,UAAAwN,YAAA,SAAArS,EAAAmM,EAAAjG,EAAA4K,IACA9Q,GAAAA,EACAmM,KAAA,EACAjG,KAAA,EACA4K,IAEAJ,EAAA9O,KAAA5B,EAAAmM,EAAAjG,EADAV,KAAAkM,IAAA,EAAA,EAAAxL,GAAA,EACA,GAGA,IAAAiL,EAAA,EACAhP,EAAA,EAEA,IADAP,KAAAuK,GAAA,IAAAnM,IACAmC,EAAA+D,IAAAiL,GAAA,MACAvP,KAAAuK,EAAAhK,GAAAnC,EAAAmR,EAAA,IAGA,OAAAhF,EAAAjG,CACA,EAEA6B,EAAAlD,UAAAyN,YAAA,SAAAtS,EAAAmM,EAAAjG,EAAA4K,IACA9Q,GAAAA,EACAmM,KAAA,EACAjG,KAAA,EACA4K,IAEAJ,EAAA9O,KAAA5B,EAAAmM,EAAAjG,EADAV,KAAAkM,IAAA,EAAA,EAAAxL,GAAA,EACA,GAGA,IAAA/D,EAAA+D,EAAA,EACAiL,EAAA,EAEA,IADAvP,KAAAuK,EAAAhK,GAAA,IAAAnC,IACAmC,GAAA,IAAAgP,GAAA,MACAvP,KAAAuK,EAAAhK,GAAAnC,EAAAmR,EAAA,IAGA,OAAAhF,EAAAjG,CACA,EAEA6B,EAAAlD,UAAA0N,WAAA,SAAAvS,EAAAmM,EAAA2E,GAKA,OAJA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,IAAA,GACAvK,KAAAuK,GAAA,IAAAnM,EACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAA2N,cAAA,SAAAxS,EAAAmM,EAAA2E,GAMA,OALA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,MAAA,GACAvK,KAAAuK,GAAA,IAAAnM,EACA4B,KAAAuK,EAAA,GAAAnM,IAAA,EACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAA4N,cAAA,SAAAzS,EAAAmM,EAAA2E,GAMA,OALA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,MAAA,GACAvK,KAAAuK,GAAAnM,IAAA,EACA4B,KAAAuK,EAAA,GAAA,IAAAnM,EACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAA6N,cAAA,SAAA1S,EAAAmM,EAAA2E,GAQA,OAPA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,WAAA,GACAvK,KAAAuK,EAAA,GAAAnM,IAAA,GACA4B,KAAAuK,EAAA,GAAAnM,IAAA,GACA4B,KAAAuK,EAAA,GAAAnM,IAAA,EACA4B,KAAAuK,GAAA,IAAAnM,EACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAA8N,cAAA,SAAA3S,EAAAmM,EAAA2E,GAQA,OAPA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,WAAA,GACAvK,KAAAuK,GAAAnM,IAAA,GACA4B,KAAAuK,EAAA,GAAAnM,IAAA,GACA4B,KAAAuK,EAAA,GAAAnM,IAAA,EACA4B,KAAAuK,EAAA,GAAA,IAAAnM,EACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAA+N,WAAA,SAAA5S,EAAAmM,EAAAjG,EAAA4K,GAGA,GAFA9Q,GAAAA,EACAmM,KAAA,GACA2E,EAAA,CACA,IAAA/N,EAAAyC,KAAAkM,IAAA,EAAA,EAAAxL,EAAA,GAEAwK,EAAA9O,KAAA5B,EAAAmM,EAAAjG,EAAAnD,EAAA,GAAAA,EACA,CAEA,IAAAZ,EAAA,EACAgP,EAAA,EACA0B,EAAA,EAEA,IADAjR,KAAAuK,GAAA,IAAAnM,IACAmC,EAAA+D,IAAAiL,GAAA,MACAnR,EAAA,GAAA,IAAA6S,GAAA,IAAAjR,KAAAuK,EAAAhK,EAAA,KACA0Q,EAAA,GAEAjR,KAAAuK,EAAAhK,IAAAnC,EAAAmR,GAAA,GAAA0B,EAAA,IAGA,OAAA1G,EAAAjG,CACA,EAEA6B,EAAAlD,UAAAiO,WAAA,SAAA9S,EAAAmM,EAAAjG,EAAA4K,GAGA,GAFA9Q,GAAAA,EACAmM,KAAA,GACA2E,EAAA,CACA,IAAA/N,EAAAyC,KAAAkM,IAAA,EAAA,EAAAxL,EAAA,GAEAwK,EAAA9O,KAAA5B,EAAAmM,EAAAjG,EAAAnD,EAAA,GAAAA,EACA,CAEA,IAAAZ,EAAA+D,EAAA,EACAiL,EAAA,EACA0B,EAAA,EAEA,IADAjR,KAAAuK,EAAAhK,GAAA,IAAAnC,IACAmC,GAAA,IAAAgP,GAAA,MACAnR,EAAA,GAAA,IAAA6S,GAAA,IAAAjR,KAAAuK,EAAAhK,EAAA,KACA0Q,EAAA,GAEAjR,KAAAuK,EAAAhK,IAAAnC,EAAAmR,GAAA,GAAA0B,EAAA,IAGA,OAAA1G,EAAAjG,CACA,EAEA6B,EAAAlD,UAAAkO,UAAA,SAAA/S,EAAAmM,EAAA2E,GAMA,OALA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,KAAA,KACAnM,EAAA,IAAAA,EAAA,IAAAA,EAAA,GACA4B,KAAAuK,GAAA,IAAAnM,EACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAAmO,aAAA,SAAAhT,EAAAmM,EAAA2E,GAMA,OALA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,OAAA,OACAvK,KAAAuK,GAAA,IAAAnM,EACA4B,KAAAuK,EAAA,GAAAnM,IAAA,EACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAAoO,aAAA,SAAAjT,EAAAmM,EAAA2E,GAMA,OALA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,OAAA,OACAvK,KAAAuK,GAAAnM,IAAA,EACA4B,KAAAuK,EAAA,GAAA,IAAAnM,EACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAAqO,aAAA,SAAAlT,EAAAmM,EAAA2E,GAQA,OAPA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,YAAA,YACAvK,KAAAuK,GAAA,IAAAnM,EACA4B,KAAAuK,EAAA,GAAAnM,IAAA,EACA4B,KAAAuK,EAAA,GAAAnM,IAAA,GACA4B,KAAAuK,EAAA,GAAAnM,IAAA,GACAmM,EAAA,CACA,EAEApE,EAAAlD,UAAAsO,aAAA,SAAAnT,EAAAmM,EAAA2E,GASA,OARA9Q,GAAAA,EACAmM,KAAA,EACA2E,GAAAJ,EAAA9O,KAAA5B,EAAAmM,EAAA,EAAA,YAAA,YACAnM,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACA4B,KAAAuK,GAAAnM,IAAA,GACA4B,KAAAuK,EAAA,GAAAnM,IAAA,GACA4B,KAAAuK,EAAA,GAAAnM,IAAA,EACA4B,KAAAuK,EAAA,GAAA,IAAAnM,EACAmM,EAAA,CACA,EAiBApE,EAAAlD,UAAAuO,aAAA,SAAApT,EAAAmM,EAAA2E,GACA,OAAAF,EAAAhP,KAAA5B,EAAAmM,GAAA,EAAA2E,EACA,EAEA/I,EAAAlD,UAAAwO,aAAA,SAAArT,EAAAmM,EAAA2E,GACA,OAAAF,EAAAhP,KAAA5B,EAAAmM,GAAA,EAAA2E,EACA,EAYA/I,EAAAlD,UAAAyO,cAAA,SAAAtT,EAAAmM,EAAA2E,GACA,OAAAC,EAAAnP,KAAA5B,EAAAmM,GAAA,EAAA2E,EACA,EAEA/I,EAAAlD,UAAA0O,cAAA,SAAAvT,EAAAmM,EAAA2E,GACA,OAAAC,EAAAnP,KAAA5B,EAAAmM,GAAA,EAAA2E,EACA,EAGA/I,EAAAlD,UAAAmF,KAAA,SAAA2F,EAAA6D,EAAA9L,EAAAC,GACA,IAAAI,EAAA+B,SAAA6F,GAAA,MAAA,IAAAzO,UAAA,+BAQA,GAPAwG,IAAAA,EAAA,GACAC,GAAA,IAAAA,IAAAA,EAAA/F,KAAAe,QACA6Q,GAAA7D,EAAAhN,SAAA6Q,EAAA7D,EAAAhN,QACA6Q,IAAAA,EAAA,GACA7L,EAAA,GAAAA,EAAAD,IAAAC,EAAAD,GAGAC,IAAAD,EAAA,OAAA,EACA,GAAA,IAAAiI,EAAAhN,QAAA,IAAAf,KAAAe,OAAA,OAAA,EAGA,GAAA6Q,EAAA,EACA,MAAA,IAAAjL,WAAA,6BAEA,GAAAb,EAAA,GAAAA,GAAA9F,KAAAe,OAAA,MAAA,IAAA4F,WAAA,sBACA,GAAAZ,EAAA,EAAA,MAAA,IAAAY,WAAA,2BAGAZ,EAAA/F,KAAAe,SAAAgF,EAAA/F,KAAAe,QACAgN,EAAAhN,OAAA6Q,EAAA7L,EAAAD,IACAC,EAAAgI,EAAAhN,OAAA6Q,EAAA9L,GAGA,IAAAxC,EAAAyC,EAAAD,EAEA,GAAA9F,OAAA+N,GAAA,mBAAAnI,WAAA3C,UAAA4O,WAEA7R,KAAA6R,WAAAD,EAAA9L,EAAAC,QACA,GAAA/F,OAAA+N,GAAAjI,EAAA8L,GAAAA,EAAA7L,EAEA,IAAA,IAAAxF,EAAA+C,EAAA,EAAA/C,GAAA,IAAAA,EACAwN,EAAAxN,EAAAqR,GAAA5R,KAAAO,EAAAuF,QAGAF,WAAA3C,UAAA6O,IAAAzS,KACA0O,EACA/N,KAAAqP,SAAAvJ,EAAAC,GACA6L,GAIA,OAAAtO,CACA,EAMA6C,EAAAlD,UAAA8J,KAAA,SAAArD,EAAA5D,EAAAC,EAAAmB,GAEA,GAAA,iBAAAwC,EAAA,CASA,GARA,iBAAA5D,GACAoB,EAAApB,EACAA,EAAA,EACAC,EAAA/F,KAAAe,QACA,iBAAAgF,IACAmB,EAAAnB,EACAA,EAAA/F,KAAAe,aAEA5B,IAAA+H,GAAA,iBAAAA,EACA,MAAA,IAAA5H,UAAA,6BAEA,GAAA,iBAAA4H,IAAAf,EAAAgB,WAAAD,GACA,MAAA,IAAA5H,UAAA,qBAAA4H,GAEA,GAAA,IAAAwC,EAAA3I,OAAA,CACA,IAAAF,EAAA6I,EAAAxE,WAAA,IACA,SAAAgC,GAAArG,EAAA,KACA,WAAAqG,KAEAwC,EAAA7I,EAEA,CACA,KAAA,iBAAA6I,IACAA,GAAA,KAIA,GAAA5D,EAAA,GAAA9F,KAAAe,OAAA+E,GAAA9F,KAAAe,OAAAgF,EACA,MAAA,IAAAY,WAAA,sBAGA,GAAAZ,GAAAD,EACA,OAAA9F,KAQA,IAAAO,EACA,GANAuF,KAAA,EACAC,OAAA5G,IAAA4G,EAAA/F,KAAAe,OAAAgF,IAAA,EAEA2D,IAAAA,EAAA,GAGA,iBAAAA,EACA,IAAAnJ,EAAAuF,EAAAvF,EAAAwF,IAAAxF,EACAP,KAAAO,GAAAmJ,MAEA,CACA,IAAAiF,EAAAxI,EAAA+B,SAAAwB,GACAA,EACAvD,EAAAa,KAAA0C,EAAAxC,GACA5D,EAAAqL,EAAA5N,OACA,GAAA,IAAAuC,EACA,MAAA,IAAAhE,UAAA,cAAAoK,EACA,qCAEA,IAAAnJ,EAAA,EAAAA,EAAAwF,EAAAD,IAAAvF,EACAP,KAAAO,EAAAuF,GAAA6I,EAAApO,EAAA+C,EAEA,CAEA,OAAAtD,IACA,EAKA,IAAA+R,EAAA,oBAgBA,SAAArD,EAAAtO,GACA,OAAAA,EAAA,GAAA,IAAAA,EAAA8C,SAAA,IACA9C,EAAA8C,SAAA,GACA,CAEA,SAAA2F,EAAA5B,EAAAqE,GAEA,IAAAU,EADAV,EAAAA,GAAA0G,IAMA,IAJA,IAAAjR,EAAAkG,EAAAlG,OACAkR,EAAA,KACAtD,EAAA,GAEApO,EAAA,EAAAA,EAAAQ,IAAAR,EAAA,CAIA,IAHAyL,EAAA/E,EAAA/B,WAAA3E,IAGA,OAAAyL,EAAA,MAAA,CAEA,IAAAiG,EAAA,CAEA,GAAAjG,EAAA,MAAA,EAEAV,GAAA,IAAA,GAAAqD,EAAA/L,KAAA,IAAA,IAAA,KACA,QACA,CAAA,GAAArC,EAAA,IAAAQ,EAAA,EAEAuK,GAAA,IAAA,GAAAqD,EAAA/L,KAAA,IAAA,IAAA,KACA,QACA,CAGAqP,EAAAjG,EAEA,QACA,CAGA,GAAAA,EAAA,MAAA,EACAV,GAAA,IAAA,GAAAqD,EAAA/L,KAAA,IAAA,IAAA,KACAqP,EAAAjG,EACA,QACA,CAGAA,EAAA,OAAAiG,EAAA,OAAA,GAAAjG,EAAA,MACA,MAAAiG,IAEA3G,GAAA,IAAA,GAAAqD,EAAA/L,KAAA,IAAA,IAAA,KAMA,GAHAqP,EAAA,KAGAjG,EAAA,IAAA,CACA,IAAAV,GAAA,GAAA,EAAA,MACAqD,EAAA/L,KAAAoJ,EACA,MAAA,GAAAA,EAAA,KAAA,CACA,IAAAV,GAAA,GAAA,EAAA,MACAqD,EAAA/L,KACAoJ,GAAA,EAAA,IACA,GAAAA,EAAA,IAEA,MAAA,GAAAA,EAAA,MAAA,CACA,IAAAV,GAAA,GAAA,EAAA,MACAqD,EAAA/L,KACAoJ,GAAA,GAAA,IACAA,GAAA,EAAA,GAAA,IACA,GAAAA,EAAA,IAEA,KAAA,MAAAA,EAAA,SASA,MAAA,IAAApL,MAAA,sBARA,IAAA0K,GAAA,GAAA,EAAA,MACAqD,EAAA/L,KACAoJ,GAAA,GAAA,IACAA,GAAA,GAAA,GAAA,IACAA,GAAA,EAAA,GAAA,IACA,GAAAA,EAAA,IAIA,CACA,CAEA,OAAA2C,CACA,CA2BA,SAAA7F,EAAAkC,GACA,OAAA5E,EAAAxB,YA7HA,SAAAoG,GAMA,IAFAA,GAFAA,EAAAA,EAAAkH,MAAA,KAAA,IAEApE,OAAAD,QAAAkE,EAAA,KAEAhR,OAAA,EAAA,MAAA,GAEA,KAAAiK,EAAAjK,OAAA,GAAA,GACAiK,GAAA,IAEA,OAAAA,CACA,CAiHAmH,CAAAnH,GACA,CAEA,SAAAF,EAAAsH,EAAAC,EAAA9H,EAAAxJ,GACA,IAAA,IAAAR,EAAA,EAAAA,EAAAQ,KACAR,EAAAgK,GAAA8H,EAAAtR,QAAAR,GAAA6R,EAAArR,UADAR,EAEA8R,EAAA9R,EAAAgK,GAAA6H,EAAA7R,GAEA,OAAAA,CACA,CAKA,SAAAoH,EAAAzJ,EAAAoK,GACA,OAAApK,aAAAoK,GACA,MAAApK,GAAA,MAAAA,EAAAoU,aAAA,MAAApU,EAAAoU,YAAAC,MACArU,EAAAoU,YAAAC,OAAAjK,EAAAiK,IACA,CACA,SAAAlK,EAAAnK,GAEA,OAAAA,GAAAA,CACA,ClBwaC,GAAEmB,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,UAAU0F,OAE5C,EAAE,CAAC,YAAY,GAAGyB,OAAS,GAAGvB,QAAU,KAAK,GAAG,CAAC,SAAS5F,EAAQf,EAAOD,GmB1pEzEC,EAAAD,QAAA,CACA,IAAA,WACA,IAAA,sBACA,IAAA,aACA,IAAA,KACA,IAAA,UACA,IAAA,WACA,IAAA,gCACA,IAAA,aACA,IAAA,gBACA,IAAA,kBACA,IAAA,eACA,IAAA,mBACA,IAAA,UACA,IAAA,mBACA,IAAA,oBACA,IAAA,QACA,IAAA,YACA,IAAA,eACA,IAAA,YACA,IAAA,qBACA,IAAA,qBACA,IAAA,cACA,IAAA,eACA,IAAA,mBACA,IAAA,YACA,IAAA,YACA,IAAA,qBACA,IAAA,iBACA,IAAA,gCACA,IAAA,kBACA,IAAA,WACA,IAAA,OACA,IAAA,kBACA,IAAA,sBACA,IAAA,oBACA,IAAA,eACA,IAAA,yBACA,IAAA,wBACA,IAAA,qBACA,IAAA,eACA,IAAA,sBACA,IAAA,uBACA,IAAA,SACA,IAAA,oBACA,IAAA,uBACA,IAAA,mBACA,IAAA,wBACA,IAAA,oBACA,IAAA,kCACA,IAAA,gCACA,IAAA,wBACA,IAAA,kBACA,IAAA,cACA,IAAA,sBACA,IAAA,kBACA,IAAA,6BACA,IAAA,0BACA,IAAA,uBACA,IAAA,gBACA,IAAA,2BACA,IAAA,eACA,IAAA,kCnB8pEA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASgB,EAAQf,EAAOD,GoB5sElC,MAAA+S,EAAA/R,EAAA,6BAEAgS,EAAAhS,EAAA,mBA8MAf,EAAAD,QA5MA,cAAA+S,EAEAF,YAAAI,EAAAC,EAAAC,QAEAzT,IAAAuT,EAEAG,MAAA,CAAA,GAIAA,MAAAH,EAAAC,EAAAC,GAGA5S,KAAA8S,YAAA,cAGA9S,KAAA+S,SAAA,CAAA,EAEA/S,KAAAgT,WAAA,CAAA,EAEAhT,KAAAiT,MAAA,IAAAR,EAGAzS,KAAAkT,UAAA,EAGAlT,KAAAmT,OAAA,CACA,CAEAC,gBAEA,OAAApT,KAAAgT,UACA,CAGAK,IAAAC,EAAAC,GAGA,GAAAvT,KAAA+S,SAAAtP,eAAA8P,GAKA,OAFAvT,KAAA+S,SAAAQ,GAAAC,MAAAF,EACAtT,KAAAgT,WAAAO,GAAAD,EACAtT,KAAA+S,SAAAQ,GAAAC,MAGA,IAAAC,EAAAzT,KAAAiT,MAAArQ,KAAA0Q,EAAAC,GAiBA,OAhBAvT,KAAA+S,SAAAU,EAAAC,MAAAD,EACAzT,KAAAgT,WAAAO,GAAAD,EAGAtT,KAAAkT,UAAA,GAAAlT,KAAAiT,MAAAlS,OAAAf,KAAAkT,YAGAO,EAAAzT,KAAAiT,MAAAtQ,aAEA3C,KAAAgT,WAAAS,EAAAC,aACA1T,KAAA+S,SAAAU,EAAAC,OAIAD,EAAAE,SAAAC,SAAA,IAAAC,KAEAJ,EAAAD,KACA,CAGAvJ,KAAAsJ,GAEA,QAAAvT,KAAA+S,SAAAtP,eAAA8P,IAKAvT,KAAA+S,SAAAQ,GAAAC,KACA,CAGAM,MAAAP,GAEA,IAAAvT,KAAA+S,SAAAtP,eAAA8P,GAEA,OAAA,EAIA,IAAAE,EAAAzT,KAAAiT,MAAAc,OAAA/T,KAAA+S,SAAAQ,IAMA,cAJAvT,KAAAgT,WAAAO,UACAvT,KAAA+S,SAAAQ,GAGAvT,KAAAqT,IAAAI,EAAAD,MAAAC,EAAAC,KACA,CAGAM,OAAAT,GAEA,IAAAvT,KAAA+S,SAAAtP,eAAA8P,GAEA,OAAA,EAGA,IAAAE,EAAAzT,KAAA+S,SAAAQ,GASA,OANAE,EAAAzT,KAAAiT,MAAAc,OAAAN,UAEAzT,KAAAgT,WAAAS,EAAAC,aACA1T,KAAA+S,SAAAU,EAAAC,MAGAD,CACA,CAGAQ,uBAAAC,EAAAC,GAEA,IAAAC,OAAA,IAAAD,EAAA,GAAAA,EAEA,GAAAnU,KAAAmT,OAAA,EAEA,OAAAe,EAAAE,GAIA,IAAAC,GAAA,IAAAR,KACAS,EAAAhW,OAAAiF,KAAAvD,KAAA+S,UAEA,IAAA,IAAAxS,EAAA,EAAAA,EAAA+T,EAAAvT,OAAAR,IAGA8T,EAAArU,KAAA+S,SAAAuB,EAAA/T,IAAAoT,SAAAC,SAAA5T,KAAAmT,QAEAiB,EAAAxR,KAAA5C,KAAAgU,OAAAM,EAAA/T,KAGA2T,EAAAE,EACA,CAGAG,mBAAAL,EAAAC,GAEA,IAAAC,OAAA,IAAAD,EAAA,GAAAA,EAGA,GAAAnU,KAAAkT,UAAA,EAEA,KAAAlT,KAAAiT,MAAAlS,OAAAf,KAAAkT,WAEAkB,EAAAxR,KAAA5C,KAAAiT,MAAAtQ,OAIA,OAAAuR,EAAAE,EACA,CAGAI,YAAAN,EAAAO,EAAAN,GAEA,IAAAC,OAAA,IAAAD,EAAA,GAAAA,EAEAG,EAAAhW,OAAAiF,KAAAvD,KAAA+S,UACA,IAAA,IAAAxS,EAAA,EAAAA,EAAA+T,EAAAvT,OAAAR,IACA,CACA,IAAAkT,EAAAzT,KAAA+S,SAAAuB,EAAA/T,IAEAkU,EAAAhB,EAAAD,MAAAC,EAAAC,KAAAD,IAEAW,EAAAxR,KAAA5C,KAAAgU,OAAAM,EAAA/T,IAEA,CACA2T,EAAAE,EACA,CAGAM,MAAAR,GAEA,IAAAE,EAAA,GAGA,GAAApU,KAAAiT,MAAAlS,OAAA,EAEA,OAAAmT,EAAAE,GAIApU,KAAAiU,wBAAAU,IAGA3U,KAAAuU,mBAAAL,EAAAE,EAAA,GACAA,EACA,CAGAQ,QAAArB,GAEA,QAAAvT,KAAA+S,SAAAtP,eAAA8P,IAGAvT,KAAA+S,SAAAQ,EACA,EpBiuEA,EAAE,CAAC,kBAAkB,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAAS9S,EAAQf,EAAOD,GqB95ErFC,EAAAD,QAlBA,MAEA6S,cAEAtS,KAAA0T,MAAA,EACA1T,KAAAwT,OAAA,EAGAxT,KAAA2T,SAAA,CAAA,EAEA3T,KAAA6U,UAAA,EACA7U,KAAA8U,WAAA,EAGA9U,KAAA+U,UAAA,CACA,ErBm8EA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAStU,EAAQf,EAAOD,GsBx9ElC,MAAAuV,EAAAvU,EAAA,wBA6MAf,EAAAD,QApMA,MAEA6S,cAGAtS,KAAAiV,WAAA,EAGAjV,KAAAe,OAAA,EAEAf,KAAAkV,MAAA,EACAlV,KAAAmV,MAAA,CACA,CAGAC,eAAAC,EAAA9B,GAGA,QAAA,IAAA8B,EACA,OAAA,EAEArV,KAAAiV,aAGA,IAAAK,OAAA,IAAA/B,EAAAA,EAAA,QAAAlP,OAAArE,KAAAiV,WAAA,KAEAxB,EAAA,IAAAuB,EAKA,OAHAvB,EAAAC,KAAA4B,EACA7B,EAAAD,MAAA6B,EAEA5B,CACA,CAGA8B,OAAAF,EAAA9B,GAGA,IAAAE,EAAAzT,KAAAoV,eAAAC,EAAA9B,GACA,QAAAE,IAIAzT,KAAAe,SAGA,GAAAf,KAAAe,QAEAf,KAAAkV,KAAAzB,EACAzT,KAAAmV,KAAA1B,EACAA,IAGAzT,KAAAmV,KAAAL,UAAArB,EACAA,EAAAoB,SAAA7U,KAAAmV,KACAnV,KAAAmV,KAAA1B,EAEAA,GACA,CAGA7Q,KAAAyS,EAAA9B,GAEA,OAAAvT,KAAAuV,OAAAF,EAAA9B,EACA,CAGAiC,QAAAH,EAAA9B,GAGA,IAAAE,EAAAzT,KAAAoV,eAAAC,EAAA9B,GACA,QAAAE,IAIAzT,KAAAe,SAGA,GAAAf,KAAAe,QAEAf,KAAAkV,KAAAzB,EACAzT,KAAAmV,KAAA1B,EACAA,IAGAzT,KAAAkV,KAAAL,SAAApB,EACAA,EAAAqB,UAAA9U,KAAAkV,KACAlV,KAAAkV,KAAAzB,EACAA,GACA,CAGAM,OAAA0B,GAEA,YAAA,IAAAA,MAGAA,EAAAV,WAGA/U,KAAAe,SAGAf,KAAAe,OAAA,GAEAf,KAAAkV,MAAA,EACAlV,KAAAmV,MAAA,EACAM,GAIAA,EAAAZ,UAAAY,EAAAX,WAEAW,EAAAZ,SAAAC,UAAAW,EAAAX,UACAW,EAAAX,UAAAD,SAAAY,EAAAZ,SAEAY,EAAAX,WAAA,EACAW,EAAAZ,UAAA,EACAY,GAIAA,EAAAZ,UAEAY,EAAAZ,SAAAC,WAAA,EACA9U,KAAAmV,KAAAM,EAAAZ,SACAY,EAAAZ,UAAA,EACAY,IAIAA,EAAAX,UAAAD,UAAA,EACA7U,KAAAkV,KAAAO,EAAAX,UACAW,EAAAX,WAAA,EACAW,IACA,CAGA9S,MAEA,OAAA3C,KAAA+T,OAAA/T,KAAAkV,KACA,CAGAQ,KAAAC,EAAAzB,GAEA,GAAAlU,KAAAe,OAAA,EACA,OAAAmT,IAEA,IAAAT,GAAA,EAEAmC,EAAAC,IAGA,GAAAA,EACA,OAAA3B,EAAA2B,GAGA,GAAApC,EAGA,KAAAA,EAAAqB,UACA,OAAAZ,IAGAT,EAAAA,EAAAqB,SAAA,MANArB,EAAAzT,KAAAkV,KAUAS,EAAAlC,EAAAD,MAAAC,EAAAC,KAAAkC,EAAA,EAIA,OAAAA,GACA,CAGAE,KAAAC,GAEA,IAAAA,EACA,OAAA,EACA,GAAA/V,KAAAe,OAAA,EACA,OAAA,EACA,GAAAgV,GAAA/V,KAAAe,OACA,OAAA,EAEA,IAAA0S,EAAAzT,KAAAkV,KACA,IAAA,IAAA3U,EAAA,EAAAA,EAAAwV,EAAAxV,IAEAkT,EAAAA,EAAAqB,UAGA,OAAArB,CACA,EtBq+EA,EAAE,CAAC,uBAAuB,KAAK,GAAG,CAAC,SAAShT,EAAQf,EAAOD,GuBzqF3DA,EAAAuW,MAgCA,SAAAhL,EAAAiL,GACA,GAAA,iBAAAjL,EACA,MAAA,IAAA1L,UAAA,iCAGA,IAAApB,EAAA,CAAA,EAEAgY,GADAD,GAAA,CAAA,GACAE,QAAAA,EAEA3U,EAAA,EACA,KAAAA,EAAAwJ,EAAAjK,QAAA,CACA,IAAAqV,EAAApL,EAAAnF,QAAA,IAAArE,GAGA,IAAA,IAAA4U,EACA,MAGA,IAAAC,EAAArL,EAAAnF,QAAA,IAAArE,GAEA,IAAA,IAAA6U,EACAA,EAAArL,EAAAjK,YACA,GAAAsV,EAAAD,EAAA,CAEA5U,EAAAwJ,EAAAnB,YAAA,IAAAuM,EAAA,GAAA,EACA,QACA,CAEA,IAAAjY,EAAA6M,EAAA1D,MAAA9F,EAAA4U,GAAAtI,OAGA,QAAA3O,IAAAjB,EAAAC,GAAA,CACA,IAAAuL,EAAAsB,EAAA1D,MAAA8O,EAAA,EAAAC,GAAAvI,OAGA,KAAApE,EAAAxE,WAAA,KACAwE,EAAAA,EAAApC,MAAA,GAAA,IAGApJ,EAAAC,GAAAmY,EAAA5M,EAAAwM,EACA,CAEA1U,EAAA6U,EAAA,CACA,CAEA,OAAAnY,CACA,EA7EAuB,EAAA8W,UA+FA,SAAAhE,EAAA7I,EAAAuM,GACA,IAAAO,EAAAP,GAAA,CAAA,EACAQ,EAAAD,EAAAE,QAAAA,EAEA,GAAA,mBAAAD,EACA,MAAA,IAAAnX,UAAA,4BAGA,IAAAqX,EAAAC,KAAArE,GACA,MAAA,IAAAjT,UAAA,4BAGA,IAAAlB,EAAAqY,EAAA/M,GAEA,GAAAtL,IAAAuY,EAAAC,KAAAxY,GACA,MAAA,IAAAkB,UAAA,2BAGA,IAAA0L,EAAAuH,EAAA,IAAAnU,EAEA,GAAA,MAAAoY,EAAArD,OAAA,CACA,IAAAA,EAAAqD,EAAArD,OAAA,EAEA,GAAA0D,MAAA1D,KAAA9E,SAAA8E,GACA,MAAA,IAAA7T,UAAA,4BAGA0L,GAAA,aAAApH,KAAAkT,MAAA3D,EACA,CAEA,GAAAqD,EAAAO,OAAA,CACA,IAAAJ,EAAAC,KAAAJ,EAAAO,QACA,MAAA,IAAAzX,UAAA,4BAGA0L,GAAA,YAAAwL,EAAAO,MACA,CAEA,GAAAP,EAAAQ,KAAA,CACA,IAAAL,EAAAC,KAAAJ,EAAAQ,MACA,MAAA,IAAA1X,UAAA,0BAGA0L,GAAA,UAAAwL,EAAAQ,IACA,CAEA,GAAAR,EAAAS,QAAA,CACA,IAAAA,EAAAT,EAAAS,QAEA,IA2FA,SAAAvN,GACA,MAAA,kBAAAwN,EAAA7X,KAAAqK,IACAA,aAAAmK,IACA,CA9FAsD,CAAAF,IAAAJ,MAAAI,EAAAjP,WACA,MAAA,IAAA1I,UAAA,6BAGA0L,GAAA,aAAAiM,EAAAG,aACA,CAEAZ,EAAAa,WACArM,GAAA,cAGAwL,EAAAc,SACAtM,GAAA,YAGA,GAAAwL,EAAAe,SAAA,CAKA,OAJA,iBAAAf,EAAAe,SACAf,EAAAe,SAAAxO,cACAyN,EAAAe,UAGA,IAAA,MACAvM,GAAA,iBACA,MACA,IAAA,SACAA,GAAA,oBACA,MACA,IAAA,OACAA,GAAA,kBACA,MACA,QACA,MAAA,IAAA1L,UAAA,8BAEA,CAEA,GAAAkX,EAAAgB,SAAA,CAIA,OAHA,iBAAAhB,EAAAgB,SACAhB,EAAAgB,SAAAzO,cAAAyN,EAAAgB,UAGA,KAAA,EACAxM,GAAA,oBACA,MACA,IAAA,MACAA,GAAA,iBACA,MACA,IAAA,SACAA,GAAA,oBACA,MACA,IAAA,OACAA,GAAA,kBACA,MACA,QACA,MAAA,IAAA1L,UAAA,8BAEA,CAEA,OAAA0L,CACA,EAnMA,IAAAkM,EAAA5Y,OAAA2E,UAAAC,SAUAyT,EAAA,wCAkMA,SAAAR,EAAAnL,GACA,OAAA,IAAAA,EAAAnF,QAAA,KACA4R,mBAAAzM,GACAA,CACA,CASA,SAAA0L,EAAAhN,GACA,OAAAgO,mBAAAhO,EACA,CAsBA,SAAA4M,EAAAtL,EAAAmL,GACA,IACA,OAAAA,EAAAnL,EACA,CAAA,MAAA7K,GACA,OAAA6K,CACA,CACA,CvB0rFA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASvK,EAAQf,EAAOD,GwBh7FlC,IAOAkY,EAPAC,EAAA,iBAAAC,QAAAA,QAAA,KACAC,EAAAF,GAAA,mBAAAA,EAAAlW,MACAkW,EAAAlW,MACA,SAAAqM,EAAAgK,EAAAtV,GACA,OAAAuV,SAAA/U,UAAAvB,MAAArC,KAAA0O,EAAAgK,EAAAtV,EACA,EAIAkV,EADAC,GAAA,mBAAAA,EAAAK,QACAL,EAAAK,QACA3Z,OAAA4Z,sBACA,SAAAnK,GACA,OAAAzP,OAAA6Z,oBAAApK,GACA1J,OAAA/F,OAAA4Z,sBAAAnK,GACA,EAEA,SAAAA,GACA,OAAAzP,OAAA6Z,oBAAApK,EACA,EAOA,IAAAqK,EAAA7Y,OAAAsX,OAAA,SAAAzY,GACA,OAAAA,GAAAA,CACA,EAEA,SAAAia,IACAA,EAAAC,KAAAjZ,KAAAW,KACA,CACAN,EAAAD,QAAA4Y,EACA3Y,EAAAD,QAAAoC,KAwYA,SAAA0W,EAAAhG,GACA,OAAA,IAAAiG,SAAA,SAAAC,EAAAC,GACA,SAAAC,EAAArW,GACAiW,EAAAK,eAAArG,EAAAsG,GACAH,EAAApW,EACA,CAEA,SAAAuW,IACA,mBAAAN,EAAAK,gBACAL,EAAAK,eAAA,QAAAD,GAEAF,EAAA,GAAAnR,MAAAjI,KAAAsC,WACA,CAEAmX,EAAAP,EAAAhG,EAAAsG,EAAA,CAAAhX,MAAA,IACA,UAAA0Q,GAMA,SAAAgG,EAAAQ,EAAAC,GACA,mBAAAT,EAAAU,IACAH,EAAAP,EAAA,QAAAQ,EAAAC,EAEA,CATAE,CAAAX,EAAAI,EAAA,CAAA9W,MAAA,GAEA,GACA,EAxZAwW,EAAAA,aAAAA,EAEAA,EAAApV,UAAAkW,aAAAha,EACAkZ,EAAApV,UAAAmW,aAAA,EACAf,EAAApV,UAAAoW,mBAAAla,EAIA,IAAAma,EAAA,GAEA,SAAAC,EAAAC,GACA,GAAA,mBAAAA,EACA,MAAA,IAAAla,UAAA,0EAAAka,EAEA,CAoCA,SAAAC,EAAAC,GACA,YAAAva,IAAAua,EAAAL,cACAhB,EAAAiB,oBACAI,EAAAL,aACA,CAkDA,SAAAM,EAAA5L,EAAAzF,EAAAkR,EAAAhE,GACA,IAAAhM,EACAoQ,EACAC,EA1HAC,EAgJA,GApBAP,EAAAC,QAGAra,KADAya,EAAA7L,EAAAoL,UAEAS,EAAA7L,EAAAoL,QAAA7a,OAAAyb,OAAA,MACAhM,EAAAqL,aAAA,SAIAja,IAAAya,EAAAI,cACAjM,EAAAkM,KAAA,cAAA3R,EACAkR,EAAAA,SAAAA,EAAAA,SAAAA,GAIAI,EAAA7L,EAAAoL,SAEAU,EAAAD,EAAAtR,SAGAnJ,IAAA0a,EAEAA,EAAAD,EAAAtR,GAAAkR,IACAzL,EAAAqL,kBAeA,GAbA,mBAAAS,EAEAA,EAAAD,EAAAtR,GACAkN,EAAA,CAAAgE,EAAAK,GAAA,CAAAA,EAAAL,GAEAhE,EACAqE,EAAAK,QAAAV,GAEAK,EAAAjX,KAAA4W,IAIAhQ,EAAAiQ,EAAA1L,IACA,GAAA8L,EAAA9Y,OAAAyI,IAAAqQ,EAAAM,OAAA,CACAN,EAAAM,QAAA,EAGA,IAAAC,EAAA,IAAAxZ,MAAA,+CACAiZ,EAAA9Y,OAAA,IAAAlC,OAAAyJ,GADA,qEAIA8R,EAAA7H,KAAA,8BACA6H,EAAA7B,QAAAxK,EACAqM,EAAA9R,KAAAA,EACA8R,EAAAC,MAAAR,EAAA9Y,OA7KA+Y,EA8KAM,EA7KA1N,SAAAA,QAAA4N,MAAA5N,QAAA4N,KAAAR,EA8KA,CAGA,OAAA/L,CACA,CAaA,SAAAwM,IACA,IAAAva,KAAAwa,MAGA,OAFAxa,KAAA+N,OAAA6K,eAAA5Y,KAAAsI,KAAAtI,KAAAya,QACAza,KAAAwa,OAAA,EACA,IAAA7Y,UAAAZ,OACAf,KAAAwZ,SAAAna,KAAAW,KAAA+N,QACA/N,KAAAwZ,SAAA9X,MAAA1B,KAAA+N,OAAApM,UAEA,CAEA,SAAA+Y,EAAA3M,EAAAzF,EAAAkR,GACA,IAAAmB,EAAA,CAAAH,OAAA,EAAAC,YAAAtb,EAAA4O,OAAAA,EAAAzF,KAAAA,EAAAkR,SAAAA,GACAoB,EAAAL,EAAAM,KAAAF,GAGA,OAFAC,EAAApB,SAAAA,EACAmB,EAAAF,OAAAG,EACAA,CACA,CAyHA,SAAAE,EAAA/M,EAAAzF,EAAAyS,GACA,IAAAnB,EAAA7L,EAAAoL,QAEA,QAAAha,IAAAya,EACA,MAAA,GAEA,IAAAoB,EAAApB,EAAAtR,GACA,YAAAnJ,IAAA6b,EACA,GAEA,mBAAAA,EACAD,EAAA,CAAAC,EAAAxB,UAAAwB,GAAA,CAAAA,GAEAD,EAsDA,SAAA7Z,GAEA,IADA,IAAAsN,EAAA,IAAAzL,MAAA7B,EAAAH,QACAR,EAAA,EAAAA,EAAAiO,EAAAzN,SAAAR,EACAiO,EAAAjO,GAAAW,EAAAX,GAAAiZ,UAAAtY,EAAAX,GAEA,OAAAiO,CACA,CA3DAyM,CAAAD,GAAAE,EAAAF,EAAAA,EAAAja,OACA,CAmBA,SAAAoa,EAAA7S,GACA,IAAAsR,EAAA5Z,KAAAmZ,QAEA,QAAAha,IAAAya,EAAA,CACA,IAAAoB,EAAApB,EAAAtR,GAEA,GAAA,mBAAA0S,EACA,OAAA,EACA,QAAA7b,IAAA6b,EACA,OAAAA,EAAAja,MAEA,CAEA,OAAA,CACA,CAMA,SAAAma,EAAAha,EAAAd,GAEA,IADA,IAAAgI,EAAA,IAAArF,MAAA3C,GACAG,EAAA,EAAAA,EAAAH,IAAAG,EACA6H,EAAA7H,GAAAW,EAAAX,GACA,OAAA6H,CACA,CA2CA,SAAA0Q,EAAAP,EAAAhG,EAAAiH,EAAAR,GACA,GAAA,mBAAAT,EAAAU,GACAD,EAAAnX,KACA0W,EAAA1W,KAAA0Q,EAAAiH,GAEAjB,EAAAU,GAAA1G,EAAAiH,OAEA,IAAA,mBAAAjB,EAAA6C,iBAYA,MAAA,IAAA9b,UAAA,6EAAAiZ,GATAA,EAAA6C,iBAAA7I,GAAA,SAAA8I,EAAA1c,GAGAqa,EAAAnX,MACA0W,EAAA+C,oBAAA/I,EAAA8I,GAEA7B,EAAA7a,EACA,GAGA,CACA,CAraAL,OAAAC,eAAA8Z,EAAA,sBAAA,CACA7Z,YAAA,EACAoO,IAAA,WACA,OAAA0M,CACA,EACAxH,IAAA,SAAAnT,GACA,GAAA,iBAAAA,GAAAA,EAAA,GAAAyZ,EAAAzZ,GACA,MAAA,IAAAgI,WAAA,kGAAAhI,EAAA,KAEA2a,EAAA3a,CACA,IAGA0Z,EAAAC,KAAA,gBAEAnZ,IAAAa,KAAAmZ,SACAnZ,KAAAmZ,UAAA7a,OAAAid,eAAAvb,MAAAmZ,UACAnZ,KAAAmZ,QAAA7a,OAAAyb,OAAA,MACA/Z,KAAAoZ,aAAA,GAGApZ,KAAAqZ,cAAArZ,KAAAqZ,oBAAAla,CACA,EAIAkZ,EAAApV,UAAAuY,gBAAA,SAAApb,GACA,GAAA,iBAAAA,GAAAA,EAAA,GAAAgY,EAAAhY,GACA,MAAA,IAAAuG,WAAA,gFAAAvG,EAAA,KAGA,OADAJ,KAAAqZ,cAAAjZ,EACAJ,IACA,EAQAqY,EAAApV,UAAAwY,gBAAA,WACA,OAAAhC,EAAAzZ,KACA,EAEAqY,EAAApV,UAAAgX,KAAA,SAAA3R,GAEA,IADA,IAAA7F,EAAA,GACAlC,EAAA,EAAAA,EAAAoB,UAAAZ,OAAAR,IAAAkC,EAAAG,KAAAjB,UAAApB,IACA,IAAAmb,EAAA,UAAApT,EAEAsR,EAAA5Z,KAAAmZ,QACA,QAAAha,IAAAya,EACA8B,EAAAA,QAAAvc,IAAAya,EAAAjN,WACA,IAAA+O,EACA,OAAA,EAGA,GAAAA,EAAA,CACA,IAAAC,EAGA,GAFAlZ,EAAA1B,OAAA,IACA4a,EAAAlZ,EAAA,IACAkZ,aAAA/a,MAGA,MAAA+a,EAGA,IAAArZ,EAAA,IAAA1B,MAAA,oBAAA+a,EAAA,KAAAA,EAAAC,QAAA,IAAA,KAEA,MADAtZ,EAAAuZ,QAAAF,EACArZ,CACA,CAEA,IAAAyW,EAAAa,EAAAtR,GAEA,QAAAnJ,IAAA4Z,EACA,OAAA,EAEA,GAAA,mBAAAA,EACAjB,EAAAiB,EAAA/Y,KAAAyC,OAEA,KAAAa,EAAAyV,EAAAhY,OACA+a,EAAAZ,EAAAnC,EAAAzV,GACA,IAAA/C,EAAA,EAAAA,EAAA+C,IAAA/C,EACAuX,EAAAgE,EAAAvb,GAAAP,KAAAyC,EAHA,CAMA,OAAA,CACA,EAgEA4V,EAAApV,UAAA8Y,YAAA,SAAAzT,EAAAkR,GACA,OAAAG,EAAA3Z,KAAAsI,EAAAkR,GAAA,EACA,EAEAnB,EAAApV,UAAAgW,GAAAZ,EAAApV,UAAA8Y,YAEA1D,EAAApV,UAAA+Y,gBACA,SAAA1T,EAAAkR,GACA,OAAAG,EAAA3Z,KAAAsI,EAAAkR,GAAA,EACA,EAoBAnB,EAAApV,UAAApB,KAAA,SAAAyG,EAAAkR,GAGA,OAFAD,EAAAC,GACAxZ,KAAAiZ,GAAA3Q,EAAAoS,EAAA1a,KAAAsI,EAAAkR,IACAxZ,IACA,EAEAqY,EAAApV,UAAAgZ,oBACA,SAAA3T,EAAAkR,GAGA,OAFAD,EAAAC,GACAxZ,KAAAgc,gBAAA1T,EAAAoS,EAAA1a,KAAAsI,EAAAkR,IACAxZ,IACA,EAGAqY,EAAApV,UAAA2V,eACA,SAAAtQ,EAAAkR,GACA,IAAAnM,EAAAuM,EAAAsC,EAAA3b,EAAA4b,EAKA,GAHA5C,EAAAC,QAGAra,KADAya,EAAA5Z,KAAAmZ,SAEA,OAAAnZ,KAGA,QAAAb,KADAkO,EAAAuM,EAAAtR,IAEA,OAAAtI,KAEA,GAAAqN,IAAAmM,GAAAnM,EAAAmM,WAAAA,EACA,KAAAxZ,KAAAoZ,aACApZ,KAAAmZ,QAAA7a,OAAAyb,OAAA,cAEAH,EAAAtR,GACAsR,EAAAhB,gBACA5Y,KAAAia,KAAA,iBAAA3R,EAAA+E,EAAAmM,UAAAA,SAEA,GAAA,mBAAAnM,EAAA,CAGA,IAFA6O,GAAA,EAEA3b,EAAA8M,EAAAtM,OAAA,EAAAR,GAAA,EAAAA,IACA,GAAA8M,EAAA9M,KAAAiZ,GAAAnM,EAAA9M,GAAAiZ,WAAAA,EAAA,CACA2C,EAAA9O,EAAA9M,GAAAiZ,SACA0C,EAAA3b,EACA,KACA,CAGA,GAAA2b,EAAA,EACA,OAAAlc,KAEA,IAAAkc,EACA7O,EAAA+O,QAiIA,SAAA/O,EAAA7L,GACA,KAAAA,EAAA,EAAA6L,EAAAtM,OAAAS,IACA6L,EAAA7L,GAAA6L,EAAA7L,EAAA,GACA6L,EAAA1K,KACA,CAnIA0Z,CAAAhP,EAAA6O,GAGA,IAAA7O,EAAAtM,SACA6Y,EAAAtR,GAAA+E,EAAA,SAEAlO,IAAAya,EAAAhB,gBACA5Y,KAAAia,KAAA,iBAAA3R,EAAA6T,GAAA3C,EACA,CAEA,OAAAxZ,IACA,EAEAqY,EAAApV,UAAAqZ,IAAAjE,EAAApV,UAAA2V,eAEAP,EAAApV,UAAAsZ,mBACA,SAAAjU,GACA,IAAAwT,EAAAlC,EAAArZ,EAGA,QAAApB,KADAya,EAAA5Z,KAAAmZ,SAEA,OAAAnZ,KAGA,QAAAb,IAAAya,EAAAhB,eAUA,OATA,IAAAjX,UAAAZ,QACAf,KAAAmZ,QAAA7a,OAAAyb,OAAA,MACA/Z,KAAAoZ,aAAA,QACAja,IAAAya,EAAAtR,KACA,KAAAtI,KAAAoZ,aACApZ,KAAAmZ,QAAA7a,OAAAyb,OAAA,aAEAH,EAAAtR,IAEAtI,KAIA,GAAA,IAAA2B,UAAAZ,OAAA,CACA,IACA5C,EADAoF,EAAAjF,OAAAiF,KAAAqW,GAEA,IAAArZ,EAAA,EAAAA,EAAAgD,EAAAxC,SAAAR,EAEA,oBADApC,EAAAoF,EAAAhD,KAEAP,KAAAuc,mBAAApe,GAKA,OAHA6B,KAAAuc,mBAAA,kBACAvc,KAAAmZ,QAAA7a,OAAAyb,OAAA,MACA/Z,KAAAoZ,aAAA,EACApZ,IACA,CAIA,GAAA,mBAFA8b,EAAAlC,EAAAtR,IAGAtI,KAAA4Y,eAAAtQ,EAAAwT,QACA,QAAA3c,IAAA2c,EAEA,IAAAvb,EAAAub,EAAA/a,OAAA,EAAAR,GAAA,EAAAA,IACAP,KAAA4Y,eAAAtQ,EAAAwT,EAAAvb,IAIA,OAAAP,IACA,EAmBAqY,EAAApV,UAAA6Y,UAAA,SAAAxT,GACA,OAAAwS,EAAA9a,KAAAsI,GAAA,EACA,EAEA+P,EAAApV,UAAAuZ,aAAA,SAAAlU,GACA,OAAAwS,EAAA9a,KAAAsI,GAAA,EACA,EAEA+P,EAAA8C,cAAA,SAAA5C,EAAAjQ,GACA,MAAA,mBAAAiQ,EAAA4C,cACA5C,EAAA4C,cAAA7S,GAEA6S,EAAA9b,KAAAkZ,EAAAjQ,EAEA,EAEA+P,EAAApV,UAAAkY,cAAAA,EAiBA9C,EAAApV,UAAAwZ,WAAA,WACA,OAAAzc,KAAAoZ,aAAA,EAAAzB,EAAA3X,KAAAmZ,SAAA,EACA,CxBihGA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS1Y,EAAQf,EAAOD,GyB/1GlCC,EAAAD,QApFA,MAEA6S,YAAAoK,EAAAC,GAGA3c,KAAA4c,UAAA,iBAAAF,EAAAA,EAAA,CAAA,EAKA1c,KAAA6c,WAAA7c,KAAA8c,uBAIA9c,KAAA+c,OACA,CACA,QACA,QACA,OACA,OACA,QACA,QAEA,CAGAD,uBAEA,IAAAE,GAAA,IAAAnJ,MAAAoJ,UAWA,MAVA,0BAAApP,QAAA,SACAqP,IAIA,IAAAC,GAAAH,EAAA,GAAApZ,KAAAwZ,UAAA,GAAA,EAGA,OAFAJ,EAAApZ,KAAAkT,MAAAkG,EAAA,KAEA,KAAAE,EAAAC,EAAA,EAAAA,EAAA,GAAAja,SAAA,GAAA,GAGA,CAEAma,aAEA,CAGAC,MAAAC,EAAAC,GAEAxd,KAAAqH,MAAA,QAAAkW,EAAAC,EACA,CAEAC,MAAAF,EAAAC,GAEAxd,KAAAqH,MAAA,QAAAkW,EAAAC,EACA,CAEAE,KAAAH,EAAAC,GAEAxd,KAAAqH,MAAA,OAAAkW,EAAAC,EACA,CAEAlD,KAAAiD,EAAAC,GAEAxd,KAAAqH,MAAA,OAAAkW,EAAAC,EACA,CAEA7Q,MAAA4Q,EAAAC,GAEAxd,KAAAqH,MAAA,QAAAkW,EAAAC,EACA,CAEAG,MAAAJ,EAAAC,GAEAxd,KAAAqH,MAAA,QAAAkW,EAAAC,EACA,CAEAnW,MAAAuW,EAAAL,EAAAC,GAGA,OAAA,CACA,EzBg8GA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS/c,EAAQf,EAAOD,G0BrgHlCC,EAAAD,QAXAoe,MAEA,IAAAC,EAAA,CAAA,EAMA,OAJAA,EAAApR,QAAAjM,EAAA,iCAEAqd,EAAAC,QAAAD,EAAApR,QAEAoR,CAAA,EAGAD,E1B0hHA,EAAE,CAAC,gCAAgC,KAAK,GAAG,CAAC,SAASpd,EAAQf,EAAOD,G2B7iHpEC,EAAAD,QAAA,CACA,CACAue,WAAA,UACAC,WAAA,UACAC,MAAA,S3BijHA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASzd,EAAQf,EAAOD,G4BrjHlC,IAAA0e,EAAA1d,EAAA,6BA+DAf,EAAAD,QA7DA,cAAA0e,EAEA7L,YAAAoK,EAAAC,GAEA9J,MAAA6J,GAEA1c,KAAAoe,iBAAApe,KAAA4c,UAAAnZ,eAAA,mBAAA,GAAAzD,KAAA4c,UAAAyB,eACAre,KAAAse,sBAAAte,KAAA4c,UAAAnZ,eAAA,wBAAA,GAAAzD,KAAA4c,UAAA2B,oBAEAve,KAAAwe,gBAAAxe,KAAA4c,UAAAnZ,eAAA,WAAA,IAAAY,OAAArE,KAAA4c,UAAA6B,QAAA,KACA9B,EAAAC,UAAAnZ,eAAA,WAAA,IAAAY,OAAAsY,EAAAC,UAAA8B,QAAA,KACA,sBAGA1e,KAAA2e,0BAAA3e,KAAA4c,UAAAnZ,eAAA,4BAAAzD,KAAA4c,UAAAgC,wBACA5e,KAAA6e,yBAAA7e,KAAA4c,UAAAnZ,eAAA,2BAAAzD,KAAA4c,UAAAkC,uBAGA9e,KAAA+e,YAAA,CAAA,EACA,IAAA,IAAAxe,EAAA,EAAAA,GAAAP,KAAA+c,OAAAhc,OAAAR,IAEAP,KAAA+e,YAAA/e,KAAA+c,OAAAxc,IAAA,IAAA8D,OAAArE,KAAA+c,OAAAxc,GAAA,MAAA8D,OAAArE,KAAAwe,gBAAA,MAEAxe,KAAAoe,kBAGApe,KAAA+e,YAAA/e,KAAA+c,OAAAxc,IAAA,IAAAP,KAAA+e,YAAA/e,KAAA+c,OAAAxc,IAGA,CAEA8G,MAAA2X,EAAAzB,EAAA0B,GAEA,IAAAC,EAAA,GACAlf,KAAAoe,iBAAApe,KAAAse,qBAEAY,GAAA,IAAArL,MAAAsL,cAEAnf,KAAAoe,kBAEAc,GAAA,IAAArL,MAGA,IAAAuL,EAAA,GAAA/a,OAAA6a,GAAA7a,OAAArE,KAAA+e,YAAAC,IAAA3a,OAAAkZ,GAcA,OAZAvd,KAAA2e,0BAEAjS,QAAA2S,IAAAD,GAIApf,KAAA6e,8BAAA,IAAAI,GAEAvS,QAAA2S,IAAAC,KAAAC,UAAAN,EAAA,KAAA,IAIAG,CACA,E5B0jHA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAAS3e,EAAQf,EAAOD,G6BtnHhE,MAAA+f,EAAA/e,EAAA,iCACAgf,EAAAhf,EAAA,MACAif,EAAAjf,EAAA,QAqHAf,EAAAD,QAnHA,cAAA+f,EAEAlN,YAAAoK,EAAAC,GAEA9J,MAAA6J,EAAAC,GAGA3c,KAAA2f,eAAA3f,KAAA4c,UAAAnZ,eAAA,QAAAzD,KAAA4c,UAAA5F,KAAA,KAAA3S,OAAArE,KAAAwe,gBAAA,QACAxe,KAAA4f,YAAAF,EAAAG,UAAA7f,KAAA2f,gBAEA3f,KAAA8f,qBAAA9f,KAAA4c,UAAAnZ,eAAA,qBAAAzD,KAAA4c,UAAAmD,kBACA,CACA/G,MAAA,IACA9R,SAAA,QAGAlH,KAAAggB,WAAAP,EAAAQ,kBAAAjgB,KAAA4f,YAAA5f,KAAA8f,sBAEA9f,KAAAkgB,iBAAA,EAEAlgB,KAAAmgB,eAAA,GACAngB,KAAAogB,iBAAA,GAEApgB,KAAAqgB,6BAAA,OACArgB,KAAAsgB,2BAAA,MACA,CAEAC,YAAAC,GAEA,IAAAC,EAAA,mBAAAD,EAAAA,EAAA,OACA,GAAAxgB,KAAAggB,WAGA,OADAhgB,KAAAggB,WAAAja,IAAA,MACA/F,KAAAggB,WAAAne,KAAA,SAAA4e,EAAA5F,KAAA7a,MAEA,CAEA0gB,6BAAAC,GAEA3gB,KAAAkgB,iBAAA,EACA,IAAAU,EAAA,mBAAAD,EAAAA,EAAA3gB,KAAAsgB,2BAEA,KAAAtgB,KAAAmgB,eAAApf,OAAA,GAMA,OAAA6f,IAJA5gB,KAAA6gB,qBAAAD,EAMA,CAEAC,qBAAAF,GAEA,IAAA3gB,KAAAkgB,gBACA,CAEAlgB,KAAAkgB,iBAAA,EAEA,IAAAU,EAAA,mBAAAD,EAAAA,EAAA3gB,KAAAsgB,2BAGAQ,EAAA9gB,KAAAmgB,eACAY,EAAA/gB,KAAAogB,iBAGApgB,KAAAmgB,eAAA,GACAngB,KAAAogB,iBAAA,GAGA,IAAAY,EAAA,GAEA,IAAA,IAAAzgB,EAAA,EAAAA,EAAAugB,EAAA/f,OAAAR,IAGAygB,GAAA,GAAA3c,OAAAyc,EAAAvgB,GAAA,OACA,IAAAwgB,EAAAxgB,KAEAygB,GAAA,GAAA3c,OAAA0c,EAAAxgB,GAAA,OAIA,GAAAP,KAAAggB,WAAA3Y,MAAA2Z,EAAA,QAOA,OAAAhhB,KAAA0gB,6BAAAE,GAJA5gB,KAAAggB,WAAAne,KAAA,QAAA7B,KAAA0gB,6BAAA7F,KAAA7a,KAAA4gB,GAMA,CACA,CAEAvZ,MAAA2X,EAAAzB,EAAA0B,GAEA,IAAAG,EAAAvM,MAAAxL,MAAA2X,EAAAzB,EAAA0B,GAGAjf,KAAAmgB,eAAAvd,KAAAwc,QAGA,IAAAH,EAEAjf,KAAAogB,iBAAAxd,KAAA0c,KAAAC,UAAAN,EAAA,KAAA,IAIAjf,KAAAogB,iBAAAxd,MAAA,GAGA5C,KAAA6gB,sBACA,E7B2nHA,EAAE,CAAC,gCAAgC,GAAGI,GAAK,GAAGjK,KAAO,KAAK,GAAG,CAAC,SAASvW,EAAQf,EAAOD,G8B3uHtF,MAAA+S,EAAA/R,EAAA,6BAAAygB,wBAEA,MAAAC,UAAA3O,EAEAF,YAAA8O,EAAAxO,GAEAC,MAAAuO,EAAAxO,GAEA5S,KAAA8S,YAAA,UAEA,IAAAuO,EAAA,iBAAAD,EAAAA,EAAA,CAAA,EACAphB,KAAA4c,UAAAyE,EAEArhB,KAAAshB,WAAA7gB,EAAA,wCAEAT,KAAAuhB,mBAAAF,EAAA5d,eAAA,cAAA4d,EAAAG,WAAA/gB,EAAA,mCAEAT,KAAAyhB,WAAA,GAIAzhB,KAAA0hB,aAAA,CAAA,EAGA1hB,KAAA2hB,iBAAA,CAAA,EAEA3hB,KAAA4hB,gBAAA,GACA5hB,KAAA6hB,gBAAA,GACA7hB,KAAA8hB,eAAA,GACA9hB,KAAA+hB,eAAA,GACA/hB,KAAAgiB,gBAAA,GACAhiB,KAAAiiB,gBAAA,GAEAjiB,KAAAkiB,eAAA7M,GAAAA,EAEArV,KAAAmiB,KAAA,iBAAAd,EAAA3C,QAAA2C,EAAA3C,QAAA,SACA,CAEA0D,UAAAC,EAAArD,GAGA,GAAAhf,KAAA2hB,iBAAAle,eAAA4e,EAAAxF,YAEA,OAAA,EAQA,OAJA7c,KAAAyhB,WAAA7e,KAAAyf,GACAriB,KAAA2hB,iBAAAU,EAAAxF,aAAA,EAGAmC,GAEA,IAAA,QACAhf,KAAA4hB,gBAAAhf,KAAAyf,GACA,IAAA,QACAriB,KAAA6hB,gBAAAjf,KAAAyf,GACA,IAAA,OACAriB,KAAA8hB,eAAAlf,KAAAyf,GACA,IAAA,OACAriB,KAAA+hB,eAAAnf,KAAAyf,GACA,IAAA,QACAriB,KAAAgiB,gBAAApf,KAAAyf,GACA,IAAA,QACAriB,KAAAiiB,gBAAArf,KAAAyf,GAIA,OAAA,CACA,CAEAC,kBAAAC,GAIAviB,KAAAkiB,eAFA,mBAAAK,EAEAA,EAIAlN,GAAAA,CAEA,CAEAiI,MAAAkF,EAAAnN,GAEA,MAAAoN,EAAAziB,KAAAkiB,eAAA7M,GACA,IAAA,IAAA9U,EAAA,EAAAA,EAAAP,KAAA4hB,gBAAA7gB,OAAAR,IAEAP,KAAA4hB,gBAAArhB,GAAA+c,MAAAkF,EAAAC,EAEA,CAEAhF,MAAA+E,EAAAnN,GAEA,MAAAoN,EAAAziB,KAAAkiB,eAAA7M,GACA,IAAA,IAAA9U,EAAA,EAAAA,EAAAP,KAAA6hB,gBAAA9gB,OAAAR,IAEAP,KAAA6hB,gBAAAthB,GAAAkd,MAAA+E,EAAAC,EAEA,CAEA/E,KAAA8E,EAAAnN,GAEA,MAAAoN,EAAAziB,KAAAkiB,eAAA7M,GACA,IAAA,IAAA9U,EAAA,EAAAA,EAAAP,KAAA8hB,eAAA/gB,OAAAR,IAEAP,KAAA8hB,eAAAvhB,GAAAmd,KAAA8E,EAAAC,EAEA,CAEAnI,KAAAkI,EAAAnN,GAEA,MAAAoN,EAAAziB,KAAAkiB,eAAA7M,GACA,IAAA,IAAA9U,EAAA,EAAAA,EAAAP,KAAA+hB,eAAAhhB,OAAAR,IAEAP,KAAA+hB,eAAAxhB,GAAA+Z,KAAAkI,EAAAC,EAEA,CAEA9V,MAAA6V,EAAAnN,GAEA,MAAAoN,EAAAziB,KAAAkiB,eAAA7M,GACA,IAAA,IAAA9U,EAAA,EAAAA,EAAAP,KAAAgiB,gBAAAjhB,OAAAR,IAEAP,KAAAgiB,gBAAAzhB,GAAAoM,MAAA6V,EAAAC,EAEA,CAEA9E,MAAA6E,EAAAnN,GAEA,MAAAoN,EAAAziB,KAAAkiB,eAAA7M,GACA,IAAA,IAAA9U,EAAA,EAAAA,EAAAP,KAAAiiB,gBAAAlhB,OAAAR,IAEAP,KAAAiiB,gBAAA1hB,GAAAod,MAAA6E,EAAAC,EAEA,CAEApF,aAGA,IAAA,IAAA9c,EAAA,EAAAA,EAAAP,KAAAuhB,mBAAAxgB,OAAAR,IACA,CACA,IAAAmiB,EAAApkB,OAAAqkB,OAAA,CAAA3E,WAAA,UAAAC,WAAA,UAAAC,MAAA,QAAAle,KAAAuhB,mBAAAhhB,IAEAP,KAAAshB,WAAA7d,eAAAif,EAAA1E,YAMAhe,KAAAoiB,UAAA,IAAApiB,KAAAshB,WAAAoB,EAAA1E,YAAA0E,EAAA1iB,MAAA0iB,EAAAxE,OAJAxR,QAAA2S,IAAA,sEAAAhb,OAAAib,KAAAC,UAAAmD,IAMA,CAGA,IAAA,IAAAniB,EAAA,EAAAA,EAAAP,KAAAyhB,WAAA1gB,OAAAR,IAEAP,KAAAyhB,WAAAlhB,GAAA8c,YAEA,CAEAuF,QAAAJ,EAAAnN,GAEA,IAAAwN,OAAA,IAAAL,EAAAA,EAAA,OACAM,EAAA,IAAAjP,KACA7T,KAAA0d,KAAA,GAAArZ,OAAAwe,EAAA,KAAAxe,OAAAye,EAAA,YAAAze,QAAAye,EAAA,KAAAzN,EACA,CAGA0N,eAEA,OAAA,IAAAlP,IACA,CAEAmP,aAAAC,GAGA,OADA,IAAApP,KACAoP,CACA,CAGAC,aAAAC,EAAAX,EAAAnN,GAEA,IAAAwN,OAAA,IAAAL,EAAAA,EAAA,mBAGAY,GAAA,IAAAvP,KAEA7T,KAAA0d,KAAA,GAAArZ,OAAAwe,EAAA,sBAAAxe,QAAA+e,EAAA,YAAA/e,OAAA8e,EAAA,OAAA9N,EACA,CAEAgO,kBAAAF,EAAAX,EAAAnN,GAEA,IAAAwN,OAAA,IAAAL,EAAAA,EAAA,mBAEAY,GAAA,IAAAvP,KAEAyP,EAAA3Y,SAAAwY,EAAA,KACAI,EAAA5Y,SAAAwY,EAAA,IAAA,IACAK,EAAA7Y,SAAAwY,EAAA,IAAA,IACAM,EAAA9Y,SAAAwY,EAAA,MAEAG,EAAAA,EAAA,GAAA,KAAAA,EAAAA,EAAA,IAAA,IAAAA,EAAAA,EACAC,EAAAA,EAAA,GAAA,IAAAA,EAAAA,EACAC,EAAAA,EAAA,GAAA,IAAAA,EAAAA,EACAC,EAAAA,EAAA,GAAA,IAAAA,EAAAA,EAEAzjB,KAAA0d,KAAA,GAAArZ,OAAAwe,EAAA,sBAAAxe,QAAA+e,EAAA,YAAA/e,OAAA8e,EAAA,YAAA9e,OAAAof,EAAA,KAAApf,OAAAmf,EAAA,KAAAnf,OAAAkf,EAAA,KAAAlf,OAAAif,EAAA,KAAAjO,EACA,CAEAqO,qBAAAC,EAAAnB,EAAAnN,GAEArV,KAAAkjB,aAAAljB,KAAAgjB,aAAAW,GAAAnB,EAAAnN,EACA,CAEAuO,0BAAAD,EAAAnB,EAAAnN,GAEArV,KAAAqjB,kBAAArjB,KAAAgjB,aAAAW,GAAAnB,EAAAnN,EACA,EAUA3V,EAAAD,QAAA0hB,EACAzhB,EAAAD,QAAAokB,IAPA,SAAAzC,GAEA,OAAA,IAAAD,EAAAC,EACA,EAKA1hB,EAAAD,QAAAqkB,gBAAArjB,EAAA,6BACAf,EAAAD,QAAAskB,mBAAAtjB,EAAA,iCACAf,EAAAD,QAAAskB,mBAAAtjB,EAAA,uC9BkvHA,EAAE,CAAC,4BAA4B,GAAG,uCAAuC,GAAG,kCAAkC,GAAG,gCAAgC,GAAG,uCAAuC,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAASA,EAAQf,EAAOD,G+Br9H3P,MAAAukB,EAEA1R,YAAA2R,EAAArR,GAEA5S,KAAAkkB,OAAA,EAEAlkB,KAAAiW,QAAA,iBAAAgO,EAAAA,EAAA,CAAA,EAEAjkB,KAAA8S,YAAA,UAGA9S,KAAAmkB,KAAA,WAAA9f,OAAAT,KAAAkT,MAAA,MAAAlT,KAAAwZ,SAAA,MAEApd,KAAA0T,KAAA,iBAAAd,EAAAA,EAAA,GAAAvO,OAAArE,KAAAmkB,KACA,CAMAC,aAAA1R,GAIA,OAFA1S,KAAAkkB,MAAAxR,GAEA,CACA,EACAzU,iBA1BA+lB,EAAA,kBAiBA,GAWAtkB,EAAAD,QAAAukB,C/Bi+HA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASvjB,EAAQf,EAAOD,GgCjgIlC,MAAA4kB,EAEA/R,YAAAI,EAAAuR,EAAArR,GAEA5S,KAAAkkB,MAAAxR,EAEA1S,KAAAiW,QAAA,iBAAAgO,EAAAA,EACA,iBAAAvR,GAAAA,EAAA4R,QACA,CAAA,EADA5R,EAGA1S,KAAA8S,YAAA,UAEA,mBAAAJ,EAAA6R,QAEAvkB,KAAAmkB,KAAAzR,EAAA6R,UAIAvkB,KAAAmkB,KAAA,cAAA9f,OAAAT,KAAAkT,MAAA,MAAAlT,KAAAwZ,SAAA,MAGApd,KAAA0T,KAAA,iBAAAd,EAAAA,EAAA,GAAAvO,OAAArE,KAAAmkB,MAGAnkB,KAAAqf,IAAArf,KAAAkkB,MAAA7E,IACArf,KAAAwkB,YAAAxkB,KAAAkkB,MAAAM,YACAxkB,KAAAykB,SAAAzkB,KAAAkkB,MAAAO,QACA,EAGAxmB,iBA9BAomB,EAAA,kBA6BA,GAGA3kB,EAAAD,QAAA4kB,EAEA3kB,EAAAD,QAAAyhB,wBAAAzgB,EAAA,yChCwgIA,EAAE,CAAC,yCAAyC,KAAK,GAAG,CAAC,SAASA,EAAQf,EAAOD,GiC/iI7EC,EAAAD,QAAA,CACAif,QAAA,sBACAgG,eAAA,QAEAC,YAAA,EAEAnD,WACA,CACA,CACAtD,MAAA,UjCqjIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASzd,EAAQf,EAAOD,IAClC,SAAWmlB,IAAS,WkCtjIpB,MAAAC,EAAApkB,EAAA,aAsCAf,EAAAD,QApCA,MAEA6S,YAAAwS,GAGA9kB,KAAA+kB,kBAAA,IAAAF,EAGA7kB,KAAA+kB,kBAAAC,WAAA,KAAA,KACAC,IAEA,IAAAC,EAAAD,EAAAnX,OAEAqX,EAAAD,EAAArf,QAAA,KAEA,MAAAuf,EAAAD,GAAA,EAAAD,EAAAG,UAAAF,EAAA,GAAA,GAEA,IAAAG,EAAAH,GAAA,EAAAD,EAAAG,UAAA,EAAAF,GAAAD,EAEA,OAAAN,EAAAW,IAAA9hB,eAAA6hB,GAEAV,EAAAW,IAAAD,GAIAF,CACA,GAEA,CAEAI,aAAAC,GAEA,OAAAzlB,KAAA+kB,kBAAAW,YAAAD,EACA,ElCqkIC,GAAEpmB,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAElC,EAAE,CAACklB,SAAW,GAAGC,UAAY,KAAK,GAAG,CAAC,SAASnlB,EAAQf,EAAOD,GmC3mI9D,MAAA+S,EAAA/R,EAAA,6BAAAygB,wBAEA2E,EAAAplB,EAAA,yCAEA,MAAAqlB,UAAAtT,EAEAF,YAAA8O,EAAAxO,GAEAC,MAAAuO,EAAAxO,GAEA5S,KAAA8S,YAAA,kBAGA9S,KAAA+lB,0BAAA,IAAAF,EAGA7lB,KAAAgmB,wBAAA5E,GAEAphB,KAAA+d,QAAA/d,KAAAimB,uBAGA,IAAA5E,EAAArhB,KAAAkmB,MAAA9E,EAAAphB,KAAAimB,wBAKA,GAFAjmB,KAAAmmB,KAAA7G,KAAAtJ,MAAAsJ,KAAAC,UAAA8B,IAEAA,EAAA+E,kBAEA,IAGA/E,EAAArhB,KAAAkmB,MAAAzlB,EAAA4gB,EAAA+E,mBAAA/E,EACA,CACA,MAAAgF,GAIA3Z,QAAA2S,IAAA,2HACA3S,QAAA2S,IAAA,2BAAAgH,EACA,CAGA,GAAAhF,EAAAsD,WAEA,IAGAtD,EAAArhB,KAAAkmB,MAAAzlB,EAAA4gB,EAAAsD,YAAAtD,EACA,CACA,MAAAgF,GAIA3Z,QAAA2S,IAAA,mHACA3S,QAAA2S,IAAA,2BAAAgH,EACA,CAGArmB,KAAAsmB,SAAAjF,CACA,CAGA4E,uBAEA,OAAA3G,KAAAtJ,MAAAsJ,KAAAC,UAAA9e,EAAA,6BACA,CAGAulB,wBAAA5E,GAGAphB,KAAAumB,uBAAAnF,IAAA,IAAAA,EAAAoF,gBACA,CAGAC,YAAArF,GAEA,IAAA,MAAAsF,KAAAtF,EAEA,iBAAAA,EAAAsF,GAEA1mB,KAAAymB,YAAArF,EAAAsF,IAEA,iBAAAtF,EAAAsF,KAEAtF,EAAAsF,GAAA1mB,KAAA+lB,0BAAAP,aAAApE,EAAAsF,IAGA,CAKAC,UAAAvoB,GAEA,MAAA,iBAAAA,IAAA2E,MAAAC,QAAA5E,EACA,CAKAwoB,kBAAAC,EAAAre,GAEA,GAAAA,GAAAxI,KAAA2mB,UAAAne,GAmBA,OAfAlK,OAAAiF,KAAAiF,GAAAse,SAAA3oB,IAEA,MAAA4oB,EAAAve,EAAArK,GACA,GAAA6B,KAAA2mB,UAAAI,GACA,CACA,MAAAC,EAAAH,EAAA1oB,GACA,GAAA6oB,GAAAhnB,KAAA2mB,UAAAK,GAIA,YADAhnB,KAAA4mB,kBAAAI,EAAAD,EAGA,CACAF,EAAA1oB,GAAA4oB,CAAA,IAEAF,CACA,CAGAX,MAAAe,EAAAC,GAGA,IAAAC,EAAA,iBAAAF,EAAAA,EAAA,CAAA,EAEAG,EAAA,iBAAAF,EAAAA,EAAAlnB,KAAAsmB,SAGAe,EAAA/H,KAAAtJ,MAAAsJ,KAAAC,UAAA4H,IAUA,OATAC,EAAApnB,KAAA4mB,kBAAAQ,EAAAC,GAEArnB,KAAAumB,uBAEAvmB,KAAAymB,YAAAW,GAGApnB,KAAAgmB,wBAAAoB,GAEAA,CACA,CAGAra,KAAAka,GAGA,IAAAE,EAAA,iBAAAF,EAAAA,EAAA,CAAA,EAGAI,EAAA/H,KAAAtJ,MAAAsJ,KAAAC,UAAA4H,IAIA,OAFAnnB,KAAAsmB,SAAAtmB,KAAA4mB,kBAAAS,EAAArnB,KAAAsmB,UAEAtmB,KAAAsmB,QACA,EASA5mB,EAAAD,QAAAqmB,EACApmB,EAAAD,QAAAokB,IANA,SAAAzC,GAEA,OAAA,IAAA0E,EAAA1E,EACA,CnCwnIA,EAAE,CAAC,2BAA2B,GAAG,wCAAwC,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAAS3gB,EAAQf,EAAOD,GoCruIzIC,EAAAD,QArDA,MAEA6S,cAKAtS,KAAAsnB,gBAAA,oBAAAC,QAAAA,OAAAD,iBAAAC,OAAAD,gBAAAzM,KAAA0M,SACA,oBAAAC,UAAA,mBAAA3nB,OAAA2nB,SAAAF,iBAAAE,SAAAF,gBAAAzM,KAAA2M,SACA,CAGAC,sBAEA,IAAAC,EAAA,IAAA9hB,WAAA,IAGA,OADA5F,KAAAsnB,gBAAAI,GACAA,CACA,CAGAC,sBAIA,IAAAD,EAAA,IAAA9hB,WAAA,IAEA,IAAA,IAAAgiB,EAAArnB,EAAA,EAAAA,EAAA,GAAAA,IAEA,IAAA,EAAAA,KAEAqnB,EAAA,WAAAhkB,KAAAwZ,UAGAsK,EAAAnnB,GAAAqnB,MAAA,EAAArnB,IAAA,GAAA,IAGA,OAAAmnB,CACA,CAEAG,WAEA,OAAA7nB,KAAAsnB,gBAEAtnB,KAAAynB,sBAIAznB,KAAA2nB,qBAEA,EpC4yIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASlnB,EAAQf,EAAOD,GqCt2IlC,MAAA+S,EAAA/R,EAAA,6BAAAygB,wBAEA4G,EAAArnB,EAAA,0BAEA,MAAAsnB,UAAAvV,EAEAF,YAAA8O,EAAAxO,GAEAC,MAAAuO,EAAAxO,GAEA5S,KAAA8S,YAAA,OAIA9S,KAAAgoB,kBAAA,iBAAA5G,IAAAA,EAAA3d,eAAA,oBAAA,GAAA2d,EAAA6G,eAGAjoB,KAAAkoB,YAAA,iBAAA9G,GAAAA,EAAA3d,eAAA,cAAA2d,EAAA+G,WAAA,EAAA,EAEAnoB,KAAAooB,sBAAA,iBAAAhH,GAAAA,EAAA3d,eAAA,kBAAA2d,EAAAiH,eAAA,EAAA,iEAEAroB,KAAAsoB,oBAAA,IAAAR,EAGA9nB,KAAAuoB,WAAA,GACA,IAAA,IAAAhoB,EAAA,EAAAA,EAAA,MAAAA,EAEAP,KAAAuoB,WAAAhoB,IAAAA,EAAA,KAAA2C,SAAA,IAAA0H,OAAA,EAEA,CAGA4d,YAAAC,GAEA,IAAAloB,EAAA,EAEA,MAAA,CACAP,KAAAuoB,WAAAE,EAAAloB,MAAAP,KAAAuoB,WAAAE,EAAAloB,MACAP,KAAAuoB,WAAAE,EAAAloB,MAAAP,KAAAuoB,WAAAE,EAAAloB,MAAA,IACAP,KAAAuoB,WAAAE,EAAAloB,MAAAP,KAAAuoB,WAAAE,EAAAloB,MAAA,IACAP,KAAAuoB,WAAAE,EAAAloB,MAAAP,KAAAuoB,WAAAE,EAAAloB,MAAA,IACAP,KAAAuoB,WAAAE,EAAAloB,MAAAP,KAAAuoB,WAAAE,EAAAloB,MAAA,IACAP,KAAAuoB,WAAAE,EAAAloB,MAAAP,KAAAuoB,WAAAE,EAAAloB,MAAAP,KAAAuoB,WAAAE,EAAAloB,MAAAP,KAAAuoB,WAAAE,EAAAloB,MAAAP,KAAAuoB,WAAAE,EAAAloB,MAAAP,KAAAuoB,WAAAE,EAAAloB,OACAoF,KAAA,GACA,CAGA+iB,iBAEA,IAAA3lB,MAAA,IACA,IAAA4lB,EAAA3oB,KAAAsoB,oBAAAT,WAMA,OAHAc,EAAA,GAAA,GAAAA,EAAA,GAAA,GACAA,EAAA,GAAA,GAAAA,EAAA,GAAA,IAEA3oB,KAAAwoB,YAAAG,EACA,CAGAC,iBAEA,IAAAC,EAAA,GAEA,IAAA,IAAAtoB,EAAA,EAAAA,EAAAP,KAAAkoB,YAAA3nB,IAEAsoB,GAAA7oB,KAAAooB,sBAAAU,OAAAllB,KAAAkT,MAAAlT,KAAAwZ,UAAApd,KAAAooB,sBAAArnB,OAAA,KAGA,OAAA8nB,CACA,CAGAtE,UAEA,OAAAvkB,KAAAgoB,gBAEAhoB,KAAA4oB,iBAIA5oB,KAAA0oB,gBAEA,EAUAhpB,EAAAD,QAAAsoB,EACAroB,EAAAD,QAAAokB,IAPA,SAAAzC,GAEA,OAAA,IAAA2G,EAAA3G,EACA,CrCi3IA,EAAE,CAAC,yBAAyB,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAAS3gB,EAAQf,EAAOD,GsC18I5F,MAAAspB,EAAAtoB,EAAA,6BAEA,MAAAuoB,UAAAD,EAAA7H,wBAEA5O,YAAA8O,EAAAxO,GAEAC,MAAAuO,EAAAxO,GAEA5S,KAAA8S,YAAA,iBAEA9S,KAAAipB,aAAA,GAGAjpB,KAAAwkB,YAAA,CAAA,EAGAxkB,KAAAykB,SAAA,CAAA,EAGAzkB,KAAAkpB,eAAA,CAAA,EAGAlpB,KAAAmpB,4BAAA,CACA,CAEAC,eAAAC,EAAAC,GAEAtpB,KAAAwkB,YAAA/gB,eAAA4lB,GAGArpB,KAAAkkB,MAAA7E,IAAA/E,KAAA,0BAAAjW,OAAAglB,EAAA,4BAKArpB,KAAAwkB,YAAA6E,GAAA,CAAA,EAGArpB,KAAAipB,aAAArmB,KAAAymB,IAIA,mBAAAC,GAAAA,EAAAC,eAGAvpB,KAAAkpB,eAAAG,GAAAC,GAKAtpB,KAAAkkB,MAAA7E,IAAA1S,MAAA,kCAAAtI,OAAAglB,EAAA,oHACArpB,KAAAkpB,eAAAG,GAAAN,EAEA,CAGAS,6BAAAH,EAAAC,GAGA,OADAtpB,KAAAopB,eAAAC,EAAAC,GACAtpB,KAAAypB,2BAAAJ,EAAA,CAAA,EAAA,GAAAhlB,OAAAglB,EAAA,YACA,CAGAK,wCAAAL,EAAApF,EAAA0F,EAAAC,GAGA,IAAAC,EAAA,IAAAD,EAAA5pB,KAAAkkB,MAAAD,EAAA0F,GAgBA,OAdA3pB,KAAAmpB,6BAEAU,EAAA7pB,KAAAmpB,2BAAAU,IAIA7pB,KAAAwkB,YAAA6E,GAAAQ,EAAAnW,MAAAmW,EAGA7pB,KAAAykB,SAAAhhB,eAAA4lB,IAEArpB,KAAA8pB,+BAAAT,EAAAQ,EAAAnW,MAGAmW,CACA,CAGAJ,2BAAAJ,EAAApF,EAAA0F,GAGA,IAAAE,EAAA7pB,KAAA+pB,8CAAAV,EAAApF,EAAA0F,GAWA,OARA3pB,KAAAwkB,YAAA6E,GAAAQ,EAAAnW,MAAAmW,EAGA7pB,KAAAykB,SAAAhhB,eAAA4lB,IAEArpB,KAAA8pB,+BAAAT,EAAAQ,EAAAnW,MAGAmW,CACA,CAGAE,8CAAAV,EAAApF,EAAA0F,GAGA,IAAAE,EAAA,IAAA7pB,KAAAkpB,eAAAG,GAAArpB,KAAAkkB,MAAAD,EAAA0F,GAKA,OAJA3pB,KAAAmpB,6BAEAU,EAAA7pB,KAAAmpB,2BAAAU,IAEAA,CACA,CAGAG,sCAAAC,GAEA,IAAAC,EAAAD,EAAAnX,YACAqX,EAAAF,EAAAvW,KAoBA,OAjBAuW,EAAA7F,aAAApkB,KAAAkkB,OAEAlkB,KAAAwkB,YAAA/gB,eAAAymB,KAIAlqB,KAAAwkB,YAAA0F,GAAA,CAAA,GAGAlqB,KAAAwkB,YAAA0F,GAAAC,GAAAF,EAGAjqB,KAAAykB,SAAAhhB,eAAAymB,IAEAlqB,KAAA8pB,+BAAAI,EAAAC,GAGAF,CACA,CAEAH,+BAAAT,EAAAzW,GAEA,QAAA5S,KAAAwkB,YAAA6E,GAAA5lB,eAAAmP,KAEA5S,KAAAkkB,MAAAmF,GAAArpB,KAAAwkB,YAAA6E,GAAAzW,GACA5S,KAAAykB,SAAA4E,GAAArpB,KAAAwkB,YAAA6E,GAAAzW,IACA,EAIA,EAGAlT,EAAAD,QAAAupB,EAEAtpB,EAAAD,QAAA2qB,oBAAArB,EACArpB,EAAAD,QAAAyhB,wBAAA6H,EAAA7H,uBtCi9IA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAASzgB,EAAQf,EAAOD,GuC/mJhE,MAAA4qB,EAAA5pB,EAAA,kBACA6pB,EAAA7pB,EAAA,cACA8pB,EAAA9pB,EAAA,aAEA+pB,EAAA/pB,EAAA,6BAEA,MAAAgqB,EAEAnY,YAAA8O,GAMAphB,KAAA0qB,cAAA,CAAA,EAGA1qB,KAAA0qB,cAAAC,gBAAA,IAAAN,EAAAjJ,GAEAphB,KAAA0qB,cAAAvG,KAAA,IAAAmG,EAAAtqB,KAAA0qB,cAAAC,gBAAArE,UAEAtmB,KAAA0qB,cAAAE,QAAA,IAAAL,EAAAvqB,KAAA0qB,cAAAC,gBAAArE,UACAtmB,KAAA0qB,cAAAE,QAAAvN,aAIArd,KAAA0qB,cAAAG,eAAA,IAAAL,EAAAxqB,MACAA,KAAA8qB,eAAA9qB,KAAA0qB,cAAAG,eACA7qB,KAAA8qB,eAAA1G,aAAApkB,MAKAA,KAAA8qB,eAAAd,sCAAAhqB,KAAA0qB,cAAAG,gBACA7qB,KAAA8qB,eAAAd,sCAAAhqB,KAAA0qB,cAAAvG,MACAnkB,KAAA8qB,eAAAd,sCAAAhqB,KAAA0qB,cAAAE,SACA5qB,KAAA8qB,eAAAd,sCAAAhqB,KAAA0qB,cAAAC,iBAGA3qB,KAAA8qB,eAAAtB,6BAAA,kBAAA/oB,EAAA,gDACAT,KAAA8qB,eAAA1B,eAAA,WAAA3oB,EAAA,yCACAT,KAAA8qB,eAAA1B,eAAA,eAAA3oB,EAAA,6CACAT,KAAA8qB,eAAA1B,eAAA,aAAA3oB,EAAA,2CACAT,KAAA8qB,eAAAtB,6BAAA,aAAA/oB,EAAA,2CACAT,KAAA8qB,eAAAtB,6BAAA,iBAAA/oB,EAAA,+CACAT,KAAA8qB,eAAAtB,6BAAA,UAAA/oB,EAAA,wCACAT,KAAA8qB,eAAA1B,eAAA,YAAA3oB,EAAA,0CACAT,KAAA8qB,eAAA1B,eAAA,aAAA3oB,EAAA,2CACAT,KAAA8qB,eAAA1B,eAAA,YAAA3oB,EAAA,0CACAT,KAAA8qB,eAAA1B,eAAA,WAAA3oB,EAAA,aACAT,KAAA8qB,eAAA1B,eAAA,cAAA3oB,EAAA,cACAT,KAAA8qB,eAAA1B,eAAA,kBAAA3oB,EAAA,+CACA,CAEA6jB,cAEA,OAAA,CACA,CAEAgC,eAEA,OAAAtmB,KAAA0qB,cAAAC,gBAAArE,QACA,CAEAyE,sBAEA,OAAA/qB,KAAA0qB,cAAAC,eACA,CAEAtL,UAEA,OAAArf,KAAA0qB,cAAAE,OACA,CAEAnG,eAEA,OAAAzkB,KAAA0qB,cAAAG,eAAApG,QACA,CAEAD,kBAEA,OAAAxkB,KAAA0qB,cAAAG,eAAArG,WACA,CAEAD,UAEA,OAAAvkB,KAAA0qB,cAAAvG,KAAAI,SACA,CAEAL,YAEA,OAAAlkB,IACA,EASAN,EAAAD,QAAAgrB,EACA/qB,EAAAD,QAAAokB,IANA,SAAAzC,GAEA,OAAA,IAAAqJ,EAAArJ,EACA,EAKA1hB,EAAAD,QAAAqkB,gBAAAyG,EAAAzG,gBACApkB,EAAAD,QAAA2qB,oBAAAI,EAAAJ,oBACA1qB,EAAAD,QAAAyhB,wBAAAsJ,EAAAtJ,wBAEAxhB,EAAAD,QAAAmmB,UAAAyE,EAAAzE,SvCsnJA,EAAE,CAAC,4BAA4B,GAAG,yCAAyC,GAAG,wCAAwC,GAAG,yCAAyC,GAAG,6CAA6C,GAAG,8CAA8C,GAAG,8CAA8C,GAAG,2CAA2C,GAAG,wCAAwC,GAAG,yCAAyC,GAAG,uCAAuC,GAAG,sCAAsC,GAAGoF,UAAY,GAAG,YAAY,GAAG,iBAAiB,GAAG,aAAa,GAAGC,SAAW,KAAK,GAAG,CAAC,SAASxqB,EAAQf,EAAOD,GwCvuJ7nB,MAAAspB,EAAAtoB,EAAA,8BAAA2pB,oBAsFA1qB,EAAAD,QApFA,cAAAspB,EAEAzW,YAAAI,EAAAuR,EAAArR,GAEAC,MAAAH,EAAAuR,EAAArR,GAEA5S,KAAA8S,YAAA,kBAGA9S,KAAAkrB,eAAA,GACAlrB,KAAAmrB,kBAAA,GAEAnrB,KAAAorB,wBAAA,EACAprB,KAAAqrB,wBAAA,EAEArrB,KAAAsrB,cAAA,EAEAtrB,KAAAurB,eAAApsB,EACAa,KAAAwrB,iBAAA,EACA,CAEAC,aAGA,GAAAzrB,KAAAkrB,eAAAnqB,OAAA,GAAAf,KAAAorB,wBAAAprB,KAAAsrB,cACA,CACA,IAAAI,EAAA1rB,KAAAkrB,eAAA9O,QACApc,KAAAorB,yBAAA,EACAM,EAAA1rB,KAAA2rB,2BACA,MACA,GAAA3rB,KAAAwrB,iBAAAzqB,OAAA,GAAAf,KAAAorB,wBAAA,EACA,CAEA,IAAA,IAAA7qB,EAAA,EAAAA,EAAAP,KAAAwrB,iBAAAzqB,OAAAR,IAEAP,KAAAwrB,iBAAAjrB,GAAAP,KAAAurB,WAGAvrB,KAAAurB,eAAApsB,EACAa,KAAAwrB,iBAAA,EACA,CACA,CAGAI,WAAAC,GAEA7rB,KAAAkrB,eAAAtoB,KAAAipB,GACA7rB,KAAAyrB,YACA,CAEAE,2BAGA,IAAAG,EACA,CACAC,QAAA,EACAnrB,WAAAzB,EACA6sB,aAAAhsB,MAEA,OACA,SAAA6V,GAEA,GAAAiW,EAAAC,OAGA,MAAA,IAAAnrB,MAAA,+CAEAkrB,EAAAC,QAAA,EACAD,EAAAnf,MAAAkJ,EAEAiW,EAAAE,aAAAZ,yBAAA,EACAU,EAAAE,aAAAX,yBAAA,EAEAS,EAAAE,aAAAP,YACA,CACA,CAEAQ,KAAAC,GAEAlsB,KAAAwrB,iBAAA5oB,KAAAspB,GACAlsB,KAAAyrB,YACA,ExC4uJA,EAAE,CAAC,6BAA6B,KAAK,GAAG,CAAC,SAAShrB,EAAQf,EAAOD,GyC/zJjE,MAAA+S,EAAA/R,EAAA,6BAsMAf,EAAAD,QAxLA,cAAA+S,EAEAF,YAAAI,EAAAuR,EAAArR,GAEAC,MAAAH,EAAAuR,EAAArR,GAEA5S,KAAA8S,YAAA,YAEA9S,KAAAmsB,OAAA,GACAnsB,KAAAosB,iBAAA,GAEApsB,KAAAqsB,UAAA,IACArsB,KAAAssB,eAAA,IAEAtsB,KAAAusB,gBAAA,CAAA,MAEAvsB,KAAAwsB,gBAAA,EACAxsB,KAAAysB,WAAA,EACAzsB,KAAA0sB,cAAA,EACA1sB,KAAA2sB,YAAA,EAEA3sB,KAAA4sB,UAAA,EAEA5sB,KAAA6sB,mBAAA,SAGA7sB,KAAA8sB,YAAA,GACA9sB,KAAA+sB,cAAA,GAEA/sB,KAAAgtB,SAAA,EACAhtB,KAAAitB,gBAAA,EAEAjtB,KAAAktB,YAAA,EACAltB,KAAAmtB,YAAA,CACA,CAEAC,iBAAAC,GAEA,IAAAtqB,MAAAC,QAAAqqB,GAEA,OAAA,EAGA,IAAA,IAAA9sB,EAAAP,KAAAosB,iBAAArrB,OAAAR,EAAA8sB,EAAAtsB,OAAAR,IAEAP,KAAAosB,iBAAA7rB,GAAA,GAAA8D,OAAA9D,GAGA,IAAA+sB,EAAA,CAAA,EAEA,IAAA,IAAA/sB,EAAA,EAAAA,EAAA8sB,EAAAtsB,OAAAR,IAEA+sB,EAAAttB,KAAAosB,iBAAA7rB,IAAA8sB,EAAA9sB,GAGA,OAAA+sB,CACA,CAGAC,UAAAC,GAEAxtB,KAAAmsB,OAAAqB,EAEA,IAAA,IAAAjtB,EAAA,EAAAA,EAAAP,KAAAmsB,OAAAprB,OAAAR,SAEA,IAAAP,KAAAmsB,OAAA5rB,GAEAP,KAAAosB,iBAAA7rB,GAAA,GAAA8D,OAAA9D,GAIAP,KAAAosB,iBAAA7rB,GAAAP,KAAAmsB,OAAA5rB,GAAA2C,UAGA,CAEAuqB,gBAEAztB,KAAA+sB,cAAA,EACA,CAEAW,WAEA,IAAA,IAAAntB,EAAA,EAAAA,EAAAP,KAAAusB,gBAAAxrB,OAAAR,IAEAP,KAAA8sB,YAAA9sB,KAAA8sB,YAAAjf,QAAA7N,KAAAusB,gBAAAhsB,GAAA,IAEAP,KAAA+sB,cAAAnqB,KAAA5C,KAAA8sB,aACA9sB,KAAA8sB,YAAA,EACA,CAEAa,QAAAC,GAEA,IAAAC,OAAA,IAAAD,EAAA5tB,KAAA4sB,SAAAgB,EAEA5tB,KAAAmtB,cACA,IAAAW,EAAA9tB,KAAA+sB,cAGA,OAFA/sB,KAAA+sB,cAAA,GAEAc,EAEA7tB,KAAAotB,iBAAAU,GAIAA,CAEA,CAEAC,aAAAC,GAEAhuB,KAAAktB,cAEA,IAAA,IAAA3sB,EAAA,EAAAA,EAAAytB,EAAAjtB,OAAAR,IAEAP,KAAAgtB,SAAAgB,EAAAztB,IAAAP,KAAAqsB,UAIA2B,EAAAztB,IAAAP,KAAAssB,eAGAtsB,KAAAitB,eAEAjtB,KAAAitB,gBAAA,EAGAjtB,KAAAgtB,QAKAzsB,EAAAytB,EAAAjtB,QAAAitB,EAAAztB,EAAA,IAAAP,KAAAssB,gBAEAtsB,KAAA8sB,aAAA9sB,KAAA6sB,mBACA7sB,KAAAitB,gBAAA,GAKAjtB,KAAAgtB,SAAA,EAXAhtB,KAAAgtB,SAAA,EAgBAhtB,KAAA8sB,aAAAkB,EAAAztB,GA5BAP,KAAA0tB,WAiCA,OAAA1tB,KAAAgtB,UAGAhtB,KAAA0tB,WAGA1tB,KAAAysB,YAAAzsB,KAAA0sB,cAAA1sB,KAAAmtB,aAAAntB,KAAAwsB,iBAEAxsB,KAAA0sB,cAAA,EAEA1sB,KAAAutB,UAAAvtB,KAAA2tB,SAAA,MAGA3tB,KAAA2sB,YAEA3sB,KAAAmsB,QASAnsB,KAAA2tB,UAOA,EzCo0JA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAASltB,EAAQf,EAAOD,G0CvgKhE,MAAA+S,EAAA/R,EAAA,6BAipBAf,EAAAD,QA3oBA,cAAA+S,EAEAF,YAAAI,EAAAuR,EAAArR,GAEAC,MAAAH,EAAAuR,EAAArR,GA4UA3U,iBAAA+B,KAAA,kBAOA,SAAAylB,EAAAwI,EAAAC,GAEA,IAAAC,EAAA1I,EAAAviB,WACA,OAAAlD,KAAAouB,4BAAAD,EAAAF,EAAAC,GAAAC,CACA,IAEAlwB,iBAAA+B,KAAA,gBAOA,SAAAylB,EAAAwI,EAAAC,GAEA,IAAAC,EAAA1I,EAAAviB,WACA,OAAAirB,EAAAnuB,KAAAouB,4BAAAD,EAAAF,EAAAC,EACA,IAlWAluB,KAAA8S,YAAA,iBAIA9S,KAAAquB,6BAAA,UAIAruB,KAAAsuB,kCAAA,+BACAtuB,KAAAuuB,oCAAA,MACAvuB,KAAAwuB,kCAAA,cACAxuB,KAAAyuB,mCAAA,eAIAzuB,KAAA0uB,0BAAA,IACA1uB,KAAA2uB,oBAAA,KACA3uB,KAAA4uB,6BAAA,IAEA5uB,KAAA6uB,yBAAA,MACA7uB,KAAA8uB,oCAAA,GAEA9uB,KAAA+uB,2BAAA,mBAAAlwB,OAAAoE,UAAA+rB,WACAhvB,KAAAivB,yBAAA,mBAAApwB,OAAAoE,UAAAisB,QACA,CAaAC,cAAA1J,GAIA,OAAAA,EAAAvT,MAAA,IAAAkd,UAAAzpB,KAAA,GACA,CAUA0pB,iBAAA5J,EAAA6J,EAAAC,GAEA,OAAAvvB,KAAA+uB,2BAEAtJ,EAAAuJ,WAAAM,EAAAC,GAIAvvB,KAAAwvB,0BAAAnwB,KAAAomB,EAAA6J,EAAAC,EAEA,CASAC,0BAAAF,EAAAC,GAEA,OAAAvvB,KAAAsH,MAAAioB,GAAA,EAAAD,EAAAvuB,UAAAuuB,CACA,CAUAG,eAAAhK,EAAA6J,EAAAI,GAEA,OAAA1vB,KAAAivB,yBAEAxJ,EAAAyJ,SAAAI,EAAAI,GAIA1vB,KAAA2vB,wBAAAtwB,KAAAomB,EAAA6J,EAAAI,EAEA,CASAC,wBAAAL,EAAAI,GAYA,OARAA,EAAA1vB,KAAAe,OAMA2uB,GAAA,EAJAA,EAAA1vB,KAAAe,OAMAf,KAAA4K,OAAA8kB,EAAAJ,EAAAvuB,OAAAuuB,EAAAvuB,UAAAuuB,CACA,CAQAM,mBAAAnK,GAEA,IAAAnQ,EAAA,EACAua,EAAApK,EAAA1kB,OACA+uB,EAAA,EAEA,KAAAA,EAAAD,GAEAva,GAAAA,GAAA,GAAAA,EAAAmQ,EAAAvgB,WAAA4qB,KAAA,EAGA,MAAA,GAAAzrB,OAAArE,KAAA6uB,0BAAAxqB,OAAAiR,EACA,CAEAya,mBAAAtK,GAEA,OAAAA,EAAA5X,QAAA7N,KAAAyuB,oCACAuB,GAEAA,EAAAlH,OAAA,GAAAmH,cAAAD,EAAAplB,OAAA,IAEA,CASAslB,6BAAAC,EAAA1K,GAcA,OAAAA,EAAAuJ,WAAAmB,IAAA1K,EAAAyJ,SAAAiB,GAEA1K,EAAAJ,UAAA,EAAAI,EAAA1kB,OAAA,GAIA0kB,CAEA,CAQA2K,wBAAA3K,GAEA,MAAA,iBAAAA,GAAA,IAAAA,EAEAA,EAAA5X,QAAA7N,KAAAwuB,kCAAAxuB,KAAA8uB,qCAGA,EACA,CAaAuB,sBAAA5K,GAGA,IAEA6K,EAFAtwB,KAAAmvB,cAAA1J,GAEA8K,MAAAvwB,KAAAquB,8BAAA1oB,KAAA,KAEA,OAAA3F,KAAAmvB,cAAAmB,EACA,CAEAE,8BAAAR,EAAAS,EAAAC,EAAAC,EAAAC,EAAAC,GAIA,OAAAJ,GAAAG,EAAA5wB,KAAAqwB,sBAAAM,GAAAC,EAAAC,EAAA7wB,KAAAqwB,sBAAAM,EAAAE,GACA,CAQAC,2BAAAC,GAGA,OAAAA,EAAA7tB,WAAA2K,QAEA7N,KAAAsuB,kCACAtuB,KAAAwwB,8BAAA3V,KAAA7a,MAEA,CAQAgxB,iBAAAC,GAEA,GAAApa,MAAAoa,GAEA,OAAAjxB,KAAA2uB,oBAGA,IAAAuC,EAAAlxB,KAAAkkB,MAAAiN,QAAAC,WAAAC,MAAAJ,EAAA,GAEA,OAAApa,MAAAqa,KAGA,iBAAAD,IAGAC,EAAAI,WAAAL,EAAApjB,QAAA7N,KAAA0uB,0BAAA,IAAA7gB,QAAA7N,KAAAuuB,oCAAA,KAAAgD,QAAA,IAGA1a,MAAAqa,IAEAlxB,KAAA2uB,oBAKA,IAAAtqB,OAAArE,KAAA8wB,2BAAAI,GACA,CASAM,qBAAAP,EAAAQ,GAEA,IAAAC,OAAA,IAAAD,EAAA,EAAAA,EAEA,GAAA5a,MAAAoa,GACA,CAEA,OADA,GACAM,QAAAG,EACA,CAEA,IAAA9J,EAAA5nB,KAAAkkB,MAAAiN,QAAAC,WAAAC,MAAAJ,EAAAS,GACA,GAAA7a,MAAA+Q,GACA,CAEA,OADA,GACA2J,QAAAG,EACA,CAGA,OAAA9J,CAEA,CAWAwG,4BAAA3I,EAAAwI,EAAAC,GAEA,IAAAyD,EAAA1D,GAAA,EACApvB,YAAA,IAAAqvB,EAAAA,EAAA,KACA,GAAAzI,EAAA1kB,OAAAktB,EAGA,MAAA,GAGA,CACA,IAAA2D,EAAA3D,EAAAxI,EAAA1kB,OAKA,OAJA6wB,EAAA1D,EAAAntB,SAEAmtB,GAAAA,EAAA2D,OAAAF,EAAAzD,EAAAntB,SAEAmtB,EAAA5mB,MAAA,EAAAsqB,EACA,CACA,CAqCAE,eAAAC,GAEA,GAAA,iBAAAA,EAEA,MAAA,GAGA,IAAAzO,EAAA3Y,SAAAonB,EAAA,KACAxO,EAAA5Y,SAAAonB,EAAA,IAAA,IACAvO,EAAA7Y,SAAAonB,EAAA,IAAA,IACAtO,EAAA9Y,SAAAonB,EAAA,MAEA,MAAA,GAAA1tB,OAAArE,KAAAgyB,eAAAvO,EAAA,EAAA,KAAA,KAAApf,OAAArE,KAAAgyB,eAAAxO,EAAA,EAAA,KAAA,KAAAnf,OAAArE,KAAAgyB,eAAAzO,EAAA,EAAA,KAAA,KAAAlf,OAAArE,KAAAgyB,eAAA1O,EAAA,EAAA,KACA,CASA2O,gBAAAC,EAAAC,GAEA,MAAA,iBAAAD,GAAA,iBAAAC,EAEA,GAGAnyB,KAAA8xB,eAAAK,EAAAD,EACA,CAGAE,iBAAAC,GAGA,MADA,CAAA,UAAA,WAAA,QAAA,QAAA,MAAA,OAAA,OAAA,SAAA,YAAA,UAAA,WAAA,YACAA,EAAAC,WACA,CAEAC,4BAAAF,GAGA,MADA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAA,EAAAC,WACA,CAEAE,6BAAAC,GAEA,OAAAA,EAAAC,cAAA1yB,KAAAgyB,eAAAS,EAAAH,WAAA,EAAA,KAAAtyB,KAAAgyB,eAAAS,EAAAE,UAAA,EAAA,IACA,CAeAC,kBAAAnN,EAAAuK,GAEA,OAAAvK,EAAAvT,MAAA8d,GAAA,EACA,CAWA6C,iBAAApN,EAAAuK,GAEA,IAAA8C,EAAArN,EAAA5f,QAAAmqB,GAEA,OAAA8C,EAAA,GAAAA,EAAA9C,EAAAjvB,QAAA0kB,EAAA1kB,OAEA,GAGA0kB,EAAAJ,UAAAyN,EAAA9C,EAAAjvB,OACA,CAYAgyB,sBAAAtN,EAAAuN,EAAAC,GAEA,IAAA9E,EAAA,iBAAA1I,EAAAA,EAAA,GACAyN,EAAA,iBAAAF,EAAAA,EAAA,IACAG,EAAA,iBAAAF,EAAAA,EAAA,IAEAG,EAAA,EACAC,EAAA,EACA,IAAA,IAAA9yB,EAAA,EAAAA,EAAA4tB,EAAAptB,OAAAR,IAGA4tB,EAAA5tB,IAAA2yB,GAEA,GAAAG,GAEAD,IAEAC,KAEAlF,EAAA5tB,IAAA4yB,GAEAE,IAIA,OAAAD,CACA,CAcAE,+BAAA7N,EAAA8N,EAAAP,EAAAC,GAEA,IAAA9E,EAAA,iBAAA1I,EAAAA,EAAA,GACA+N,EAAA,iBAAAD,EAAAA,EAAA,EACAL,EAAA,iBAAAF,EAAAA,EAAA,IACAG,EAAA,iBAAAF,EAAAA,EAAA,IAEAG,EAAA,EACAC,EAAA,EAEAI,GAAA,EACAC,EAAA,EACAC,EAAA,EAEA,IAAA,IAAApzB,EAAA,EAAAA,EAAA4tB,EAAAptB,OAAAR,IAGA4tB,EAAA5tB,IAAA2yB,GAEAG,IAGA,GAAAA,IAEAD,IACAI,GAAAJ,EAAA,IAGAK,GAAA,EACAC,EAAAnzB,KAKA4tB,EAAA5tB,IAAA4yB,IAEAE,IAGA,GAAAA,GACAI,GACAE,GAAAD,IAEAC,EAAApzB,EACAkzB,GAAA,IAKA,OAAAL,GAAAI,EAGA,GAGAG,EAAA,GAAAA,EAAAD,EAEAvF,EAAA9I,UAAAqO,EAAA,EAAAC,GAIAxF,EAAA9I,UAAAqO,EAAA,EAEA,CAYAE,6BAAAnO,EAAAoO,EAAAb,EAAAC,GAEA,IAAA9E,EAAA,iBAAA1I,EAAAA,EAAA,GACAqO,EAAA,iBAAAD,EAAAA,EAAA,EACAX,EAAA,iBAAAF,EAAAA,EAAA,IACAG,EAAA,iBAAAF,EAAAA,EAAA,IAEAG,EAAA,EACAC,EAAA,EAEAI,GAAA,EACAM,EAAA,EACAC,EAAA,EAEA,IAAA,IAAAzzB,EAAA,EAAAA,EAAA4tB,EAAAptB,OAAAR,IAGA4tB,EAAA5tB,IAAA2yB,GAEAG,IAEA,GAAAA,IAEAD,IACAU,GAAAV,EAAA,IAEAK,GAAA,EACAM,EAAAxzB,KAIA4tB,EAAA5tB,IAAA4yB,IAEAE,IAEA,GAAAA,GACAI,GACAO,GAAAD,IAEAC,EAAAzzB,EACAkzB,GAAA,IAKA,GAAAL,GAAAU,EAEA,OAAA3F,EAGA,IAAA8F,EAAA,GAYA,OAVAF,EAAA,IAEAE,EAAA9F,EAAA9I,UAAA,EAAA0O,IAGA5F,EAAAptB,OAAAizB,EAAA,GAAAA,EAAAD,IAEAE,GAAA9F,EAAA9I,UAAA2O,EAAA,IAGAC,CACA,E1C4gKA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAASxzB,EAAQf,EAAOD,G2C1pLhEC,EAAAD,QAAA,CACAy0B,sBAAA,EACAC,sBAAA,QAEAC,2BAAA,GAEAC,SAAA,CAAA,UAAA,WAAA,QAAA,QAAA,MAAA,OAAA,OAAA,SAAA,YAAA,UAAA,WAAA,YAEAC,WAAA,CAAA,SAAA,SAAA,UAAA,YAAA,WAAA,SAAA,YAEAC,SACA,CACA,MAAA,SAAA,SAAA,QAAA,OAAA,SAAA,SAAA,OAAA,SAAA,YAAA,OACA,OAAA,SAAA,OAAA,QAAA,OAAA,QAAA,QAAA,QAAA,MAAA,QACA,OAAA,QAAA,SAAA,YAGAC,WACA,CACA,QAAA,UAAA,WAAA,QAAA,QAAA,SAAA,QAAA,SAAA,YAAA,SACA,WAAA,WAAA,SAAA,SAAA,YAAA,QAAA,SAAA,UAAA,WAAA,QACA,QAAA,MAAA,WAAA,SAAA,QAAA,QAAA,WAAA,SAAA,QAAA,OACA,QAAA,QAAA,UAAA,SAAA,OAAA,QAAA,QAAA,QAAA,QAAA,SACA,OAAA,UAAA,WAAA,WAAA,UAAA,SAAA,WAAA,QAAA,SAAA,SACA,SAAA,UAAA,UAAA,UAAA,SAAA,SAAA,SAAA,SAAA,SAAA,OACA,SAAA,SAAA,WAAA,SAAA,OAAA,SAAA,OAAA,QAAA,QAAA,SACA,OAAA,MAAA,OAAA,aAAA,OAAA,SAAA,SAAA,UAAA,OAAA,QACA,QAAA,OAAA,SAAA,QAAA,QAAA,OAAA,SAAA,UAAA,OAAA,UACA,SAAA,WAAA,UAAA,QAAA,UAAA,YAAA,QAAA,SAAA,SAAA,UAGAC,QACA,CACA,OAAA,WAAA,WAAA,QAAA,YAAA,UAAA,QAAA,UAAA,QAAA,QACA,OAAA,QAAA,QAAA,SAAA,WAAA,SAAA,WAAA,QAAA,QAAA,WACA,QAAA,SAAA,UAAA,UAAA,YAAA,UAAA,UAAA,SAAA,QAAA,UACA,MAAA,WAAA,SAAA,UAAA,SAAA,OAAA,OAAA,SAAA,SAAA,WACA,YAAA,YAAA,QAAA,QAAA,SAAA,UAAA,QAAA,QAAA,YAAA,UACA,QAAA,SAAA,QAAA,QAAA,WAAA,OAAA,WAAA,SAAA,QAAA,YACA,OAAA,SAAA,SAAA,SAAA,SAAA,QAAA,SAAA,aAAA,SAAA,UACA,SAAA,SAAA,OAAA,SAAA,MAAA,UAAA,UAAA,SAAA,UAAA,OACA,QAAA,OAAA,WAAA,QAAA,QAAA,QAAA,SAAA,WAAA,UAAA,UACA,YAAA,UAAA,UAAA,QAAA,WAAA,QAAA,QAAA,SAAA,OAAA,QACA,QAAA,SAAA,OAAA,UAAA,QAAA,UAAA,UAAA,SAAA,SAAA,cACA,UAAA,SAAA,UAAA,UAAA,OAAA,SAAA,SAAA,SAAA,OAAA,SACA,UAAA,QAAA,QAAA,SAAA,UAAA,SAAA,QAAA,SAAA,UAAA,OACA,QAAA,OAAA,WAAA,OAAA,WAAA,UAAA,QAAA,SAAA,QAAA,UACA,WAAA,SAAA,UAAA,YAAA,UAAA,QAAA,UAAA,OAAA,SAAA,QACA,QAAA,QAAA,OAAA,OAAA,SAAA,QAAA,UAAA,UAAA,QAAA,OACA,OAAA,QAAA,SAAA,SAAA,YAAA,QAAA,QAAA,QAAA,SAAA,OACA,SAAA,OAAA,SAAA,QAAA,SAAA,WAAA,SAAA,QAAA,QAAA,QACA,QAAA,UAAA,MAAA,QAAA,OAAA,OAAA,SAAA,SAAA,SAAA,QACA,QAAA,UAAA,QAAA,MAAA,QAAA,QAAA,UAAA,UAAA,SAAA,U3C8pLA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASh0B,EAAQf,EAAOD,G4CltLlC,MAAAspB,EAAAtoB,EAAA,8BAAA2pB,oBAiEA1qB,EAAAD,QA/DA,cAAAspB,EAEAzW,YAAAI,EAAAuR,EAAArR,GAEAC,MAAAH,EAAAuR,EAAArR,GAEA5S,KAAA8S,YAAA,iBAEA9S,KAAA00B,YAAAj0B,EAAA,oDACA,CAGAk0B,qBAAAC,EAAAC,GAEA,OAAAjxB,KAAAkT,MAAAlT,KAAAwZ,UAAAyX,EAAAD,IAAAA,CACA,CAEAE,kBAAAD,GAEA,OAAA70B,KAAA20B,qBAAA,EAAAE,EACA,CAEAE,gBAEA,OAAAnxB,KAAAkT,MAAAlT,KAAAwZ,SAAApd,KAAA00B,YAAAP,sBACA,CAGAa,oBAAAC,EAAAC,GAEA,IACAC,OAAA,IAAAD,EAAA,UADA,IAAAD,EAAA,GAAAA,GACA,EAAAC,EAEA,OAAAl1B,KAAAykB,SAAA2Q,WAAApD,eAAAhyB,KAAA80B,kBAAAK,GAAAF,EAAA,IACA,CAGAI,cAEA,OAAAr1B,KAAA00B,YAAAL,SAAAr0B,KAAA80B,kBAAA90B,KAAA00B,YAAAL,SAAAtzB,OAAA,GACA,CACAu0B,kBAEA,OAAAt1B,KAAA00B,YAAAJ,WAAAt0B,KAAA80B,kBAAA90B,KAAA00B,YAAAJ,WAAAvzB,OAAA,GACA,CAGAw0B,cAEA,OAAAv1B,KAAA00B,YAAAH,SAAAv0B,KAAA80B,kBAAA90B,KAAA00B,YAAAH,SAAAxzB,OAAA,GACA,CAGAy0B,aAEA,OAAAx1B,KAAA00B,YAAAD,QAAAz0B,KAAA80B,kBAAA90B,KAAA00B,YAAAD,QAAA1zB,OAAA,GACA,CACA00B,gBAEA,OAAAz1B,KAAA00B,YAAAF,WAAAx0B,KAAA80B,kBAAA90B,KAAA00B,YAAAF,WAAAzzB,OAAA,GACA,E5CutLA,EAAE,CAAC,6BAA6B,GAAG,oDAAoD,KAAK,GAAG,CAAC,SAASN,EAAQf,EAAOD,G6CrxLxH,MAAAspB,EAAAtoB,EAAA,8BAAA2pB,oBAcA1qB,EAAAD,QAZA,cAAAspB,EAEAzW,YAAAI,EAAAuR,EAAArR,GAEAC,MAAAH,EAAAuR,EAAArR,GAEA5S,KAAA8S,YAAA,kBAEA9S,KAAA01B,YAAA,SACA,E7C0xLA,EAAE,CAAC,6BAA6B,KAAK,GAAG,CAAC,SAASj1B,EAAQf,EAAOD,IACjE,SAAWmlB,IAAS,W8CtyLpB,MAAAmE,EAAAtoB,EAAA,8BAAA2pB,oBAEA3K,EAAAhf,EAAA,MACAif,EAAAjf,EAAA,QAwMAf,EAAAD,QArMA,cAAAspB,EAEAzW,YAAAI,EAAAuR,EAAArR,GAEAC,MAAAH,EAAAuR,EAAArR,GAEA5S,KAAA8S,YAAA,kBAEA9S,KAAAiW,QAAAxS,eAAA,UAEAzD,KAAAiW,QAAA0f,KAAAhrB,SAAA,OAAA,IAAAia,EAAAgR,SAGA51B,KAAA61B,mBAAA,OACA71B,KAAA81B,oBAAA,MACA,CAEAC,WAEA,OAAArW,EAAAjH,WAAA9W,UACA,CAEAq0B,WAAAC,GAEA,OAAAxW,EAAAuW,WAAAC,EACA,CAEAC,OAAAD,EAAA/J,GAIA,OAAAA,EAAA,KAFAlsB,KAAAg2B,WAAAC,GAGA,CAEAE,cAAAC,EAAAC,EAAApS,GAEA,IAAAqS,OAAA,IAAArS,EAAA,OAAAA,EACA,OAAAxE,EAAA0W,cAAAC,EAAAC,EAAAC,EACA,CAEAC,eAAAH,EAAAI,EAAAvS,GAEA,IAAAqS,OAAA,IAAArS,EAAA,OAAAA,EACA,OAAAxE,EAAA8W,eAAAH,EAAAI,EAAAF,EACA,CAEAG,eAAAL,GAEA,OAAA3W,EAAAiX,WAAAN,EACA,CAEAO,iBAAAP,GAEA,OAAA3W,EAAAmX,UAAAR,EACA,CAEAS,wBAAAT,EAAAnX,GAEA,OAAAjf,KAAAm2B,cAAAC,EAAA9W,KAAAC,UAAAN,EAAA,KAAA,GACA,CAEA6X,uBAAAV,EAAAW,GAEA,IAAAh0B,MAAAC,QAAA+zB,GAGA,OADA/2B,KAAAqf,IAAA1S,MAAA,+CAAAtI,OAAA+xB,EAAA,kEAAA/xB,cAAA0yB,EAAA,OACAn2B,MAAA,wHAIA,IAAA,IAAAL,EAAA,EAAAA,EAAAw2B,EAAAh2B,OAAAR,IAEA,OAAAP,KAAAu2B,eAAAH,EAAA,GAAA/xB,OAAA0yB,EAAAx2B,GAAA,MAGA,CAIAy2B,qBAAAZ,GAEA,OAAA1W,EAAA/Z,KAAA3F,KAAA81B,oBAAAM,EACA,CAEAa,oBAAAb,EAAAC,GAEA,OAAAr2B,KAAAm2B,cAAAn2B,KAAAg3B,qBAAAZ,GAAAC,EACA,CAEAa,8BAAAd,EAAAnX,GAEA,OAAAjf,KAAA62B,wBAAA72B,KAAAg3B,qBAAAZ,GAAAnX,EACA,CAEAkY,6BAAAf,EAAAW,GAEA,OAAA/2B,KAAA82B,uBAAA92B,KAAAg3B,qBAAAZ,GAAAW,EACA,CAGAK,oBAAAC,EAAAnL,GAEA,IAAAoL,EAAAD,EAEA,GAAA,iBAAAA,EAEAC,EAAA,CAAAC,KAAAF,QAEA,GAAA,iBAAAA,EAGA,OADAnL,EAAA,IAAAtrB,MAAA,iFACA,EAGA,MAAA,iBAAA02B,EAAAC,MAEArL,EAAA,IAAAtrB,MAAA,wEACA,IAGA02B,EAAA7zB,eAAA,UAEA6zB,EAAA3B,KAAA31B,KAAAiW,QAAA0f,WAIA,IAAA2B,EAAAE,kBAGAF,EAAAG,WAAA/X,EAAAG,UAAAyX,EAAAC,MACAD,EAAAI,gBAAAJ,EAAAG,WAAAvlB,MAAAwN,EAAAiY,KACAL,EAAAE,iBAAA,EACAF,EAAAM,YAAA,KAMAN,EAAAM,aAAAlY,EAAAiY,IAEAL,EAAAM,YAAAN,EAAAM,YAAAN,EAAAI,gBAAAJ,EAAAE,kBAIAF,EAAAM,YAAAN,EAAAM,YAAAlY,EAAAiY,IAAAL,EAAAI,gBAAAJ,EAAAE,kBAIAF,EAAAE,oBAIAF,EAAAE,kBAAAF,EAAAI,gBAAA32B,OAEAmrB,EAAA,WAIAzM,EAAAoY,KAAAP,EAAAM,YAAAlY,EAAAiY,IAAAL,EAAAI,gBAAAJ,EAAAE,kBAAA,KACA,CAAA3hB,EAAAiiB,KAOA,GALAA,GAEArY,EAAAsY,UAAAD,IAGAjiB,GAAA,UAAAA,EAAAhV,KAyBA,OAAAb,KAAAo3B,oBAAAE,EAAApL,GAtBAzM,EAAAuY,MAAAV,EAAAM,YAAAlY,EAAAiY,IAAAL,EAAAI,gBAAAJ,EAAAE,kBAAAF,EAAA3B,MACAsC,GAEAA,EAKA,UAAAA,EAAAp3B,KAGAb,KAAAo3B,oBAAAE,EAAApL,IAIAxf,QAAA2S,IAAA4Y,EAAAp3B,MACAqrB,EAAA+L,IAVAj4B,KAAAo3B,oBAAAE,EAAApL,IAiBA,IAEA,E9C2yLC,GAAE7sB,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAElC,EAAE,CAAC,6BAA6B,GAAGklB,SAAW,GAAG1E,GAAK,GAAGjK,KAAO,KAAK,GAAG,CAAC,SAASvW,EAAQf,EAAOD,G+Cr/LjG,MAAAspB,EAAAtoB,EAAA,8BAAA2pB,oBAOA8N,EAAAz3B,EAAA,yDACA03B,EAAA13B,EAAA,6DAmDAf,EAAAD,QAhDA,cAAAspB,EAEAzW,YAAAI,EAAAuR,EAAArR,GAEAC,MAAAH,EAAAuR,EAAArR,GAEA5S,KAAA8S,YAAA,eAEA9S,KAAAo4B,SAAA,IAAAF,EAGAl4B,KAAAq4B,aAAA,IAAAF,EAAAn4B,KAAAkkB,MAAAO,SAAA0M,QAAAmH,WAEAt4B,KAAAu4B,UAAAv4B,KAAAo4B,SAAAG,SACA,CAWAvT,WAAAwT,EAAAC,EAAAC,GAEA,OAAA14B,KAAAo4B,SAAApT,WAAAwT,EAAAC,EAAAC,EACA,CAEAC,gBAAAH,EAAAC,EAAAG,GAEA,OAAA54B,KAAAo4B,SAAAO,gBAAAH,EAAAC,EAAAG,EACA,CASAlT,YAAAD,EAAAnS,EAAA4Y,GAEA,OAAAlsB,KAAAq4B,aAAA3S,YAAAD,EAAAzlB,KAAAu4B,UAAAjlB,EAAA4Y,EACA,E/C0/LA,EAAE,CAAC,6BAA6B,GAAG,4DAA4D,GAAG,wDAAwD,KAAK,GAAG,CAAC,SAASzrB,EAAQf,EAAOD,GgD5rL3LC,EAAAD,QAhXA,MAKA6S,YAAAumB,GAEA74B,KAAAs4B,UAAAO,CACA,CASAC,eAAAC,GAEA,MACA,CACAR,UAAAQ,EAEAC,cAAA,EAEAC,OAAA,GACAC,aAAA,GAEAC,QAAA,CAAA,EAEAC,cAAA,EACAC,iBAAA,EAEA,CAUAC,mBAAApc,EAAAqc,GAEAA,EAAAL,cAAAhc,CACA,CAQAsc,kBAAAD,GAEAA,EAAAN,QAAAM,EAAAL,aACAK,EAAAL,aAAA,EACA,CAEAO,kBAAAF,GAWA,OARAv5B,KAAAw5B,kBAAAD,GAEAA,EAAAJ,SAAA,EACAI,EAAAG,kBAAA,EACAH,EAAAI,2BAAA,EACAJ,EAAAK,sBAAA,EACAL,EAAAH,cAAA,GAEA,CACA,CASAS,eAAA3c,EAAAqc,EAAAjmB,GAGA,GAAAimB,EAAAH,aAGA,IAAAG,EAAAI,2BAAAJ,EAAAJ,QAAA11B,eAAAyZ,GAEAqc,EAAAJ,QAAAI,EAAAJ,QAAAjc,GACAld,KAAAs5B,mBAAApc,EAAAqc,QAEA,GAAAA,EAAAK,qBAEA,GAAAL,EAAAJ,QAAAW,WAAAr2B,eAAAyZ,IAOA,GAJAqc,EAAAJ,QAAAI,EAAAJ,QAAAW,WAAA5c,GAEAld,KAAAs5B,mBAAApc,EAAAqc,GAEAA,EAAAJ,QAAA11B,eAAA,SAIA,OADA81B,EAAAL,aAAAK,EAAAJ,QAAAY,MAAAR,EAAAL,aAAAtuB,OAAA2uB,EAAAJ,QAAAa,mBAAAj5B,OAAAw4B,EAAAL,aAAAn4B,QAAAw4B,EAAAJ,QAAAa,mBAAAj5B,OAAAw4B,EAAAJ,QAAAc,iBAAAl5B,SAAAuS,GACAtT,KAAAy5B,kBAAAF,QAGAA,EAAAG,iBAAAI,WAAAr2B,eAAAyZ,IAGAqc,EAAAJ,QAAAI,EAAAG,iBAAAI,WAAA5c,GACAld,KAAAs5B,mBAAApc,EAAAqc,KAIAA,EAAAK,sBAAA,EACA55B,KAAAs5B,mBAAApc,EAAAqc,SAGA,GAAAA,EAAAJ,QAAA11B,eAAA,eAUA,GARA81B,EAAAI,4BAEAJ,EAAAI,2BAAA,EACAJ,EAAAG,iBAAAH,EAAAJ,SAGAn5B,KAAAs5B,mBAAApc,EAAAqc,GAEAA,EAAAJ,QAAAW,WAAAr2B,eAAAyZ,KAGAqc,EAAAK,sBAAA,EAEAL,EAAAJ,QAAAI,EAAAJ,QAAAW,WAAA5c,GAEAqc,EAAAJ,QAAA11B,eAAA,UACA,CACA,IAAA81B,EAAAJ,QAAAe,QASA,OADAX,EAAAL,aAAAK,EAAAJ,QAAAY,MAAAR,EAAAL,aAAAtuB,OAAA2uB,EAAAJ,QAAAa,mBAAAj5B,OAAAw4B,EAAAL,aAAAn4B,QAAAw4B,EAAAJ,QAAAa,mBAAAj5B,OAAAw4B,EAAAJ,QAAAc,iBAAAl5B,SAAAuS,GACAtT,KAAAy5B,kBAAAF,GAPAv5B,KAAAqf,IAAA1S,MAAA,6BAAAtI,OAAAk1B,EAAAJ,QAAAa,mBAAA,iEACAh6B,KAAAy5B,kBAAAF,EAQA,OAMAv5B,KAAAy5B,kBAAAF,GAIA,IAAAA,EAAAH,aACA,CAEA,GAAAG,EAAAhB,UAAA90B,eAAAyZ,GAOA,OAJAld,KAAAy5B,kBAAAF,GACAv5B,KAAAs5B,mBAAApc,EAAAqc,GACAA,EAAAJ,QAAAI,EAAAhB,UAAArb,GACAqc,EAAAH,cAAA,GACA,EAIAp5B,KAAAs5B,mBAAApc,EAAAqc,EAEA,CACA,OAAA,CACA,CASAY,oBAAAjd,EAAAqc,EAAAjmB,EAAA4Y,GAGA,GAAAqN,EAAAH,aAGA,IAAAG,EAAAI,2BAAAJ,EAAAJ,QAAA11B,eAAAyZ,GAEAqc,EAAAJ,QAAAI,EAAAJ,QAAAjc,GACAld,KAAAs5B,mBAAApc,EAAAqc,QAEA,GAAAA,EAAAK,qBAEA,GAAAL,EAAAJ,QAAAW,WAAAr2B,eAAAyZ,IAOA,GAJAqc,EAAAJ,QAAAI,EAAAJ,QAAAW,WAAA5c,GAEAld,KAAAs5B,mBAAApc,EAAAqc,GAEAA,EAAAJ,QAAA11B,eAAA,SAIA,OAAA81B,EAAAJ,QAAAe,QAGAX,EAAAJ,QAAAY,MAAAR,EAAAL,aAAAtuB,OAAA2uB,EAAAJ,QAAAa,mBAAAj5B,OAAAw4B,EAAAL,aAAAn4B,QAAAw4B,EAAAJ,QAAAa,mBAAAj5B,OAAAw4B,EAAAJ,QAAAc,iBAAAl5B,SAAAuS,GACA,CAAAuC,EAAAukB,KAEAvkB,GAEAnJ,QAAA2S,IAAA,0DAAAhb,OAAAk1B,EAAAJ,QAAAkB,aAAA,SAAAh2B,OAAAk1B,EAAAJ,QAAAW,WAAA,MAAAz1B,OAAAwR,IAGA0jB,EAAAL,aAAAkB,EACAp6B,KAAAy5B,kBAAAF,GACArN,QAMAqN,EAAAL,aAAAK,EAAAJ,QAAAY,MAAAR,EAAAL,aAAAtuB,OAAA2uB,EAAAJ,QAAAa,mBAAAj5B,OAAAw4B,EAAAL,aAAAn4B,QAAAw4B,EAAAJ,QAAAa,mBAAAj5B,OAAAw4B,EAAAJ,QAAAc,iBAAAl5B,SAAAuS,GACAtT,KAAAy5B,kBAAAF,GACArN,UAIAqN,EAAAG,iBAAAI,WAAAr2B,eAAAyZ,IAGAqc,EAAAJ,QAAAI,EAAAG,iBAAAI,WAAA5c,GACAld,KAAAs5B,mBAAApc,EAAAqc,KAIAA,EAAAK,sBAAA,EACA55B,KAAAs5B,mBAAApc,EAAAqc,QAGA,KAAAA,EAAAJ,QAAA11B,eAAA,cAmDA,OADAzD,KAAAy5B,kBAAAF,GACArN,IAzCA,GARAqN,EAAAI,4BAEAJ,EAAAI,2BAAA,EACAJ,EAAAG,iBAAAH,EAAAJ,SAGAn5B,KAAAs5B,mBAAApc,EAAAqc,GAEAA,EAAAJ,QAAAW,WAAAr2B,eAAAyZ,KAGAqc,EAAAK,sBAAA,EAEAL,EAAAJ,QAAAI,EAAAJ,QAAAW,WAAA5c,GAEAqc,EAAAJ,QAAA11B,eAAA,UAIA,OAAA81B,EAAAJ,QAAAe,QAGAX,EAAAJ,QAAAY,MAAAR,EAAAL,aAAAtuB,OAAA2uB,EAAAJ,QAAAa,mBAAAj5B,OAAAw4B,EAAAL,aAAAn4B,QAAAw4B,EAAAJ,QAAAa,mBAAAj5B,OAAAw4B,EAAAJ,QAAAc,iBAAAl5B,SAAAuS,GACA,CAAAuC,EAAAukB,KAEAvkB,GAEAnJ,QAAA2S,IAAA,0DAAAhb,OAAAk1B,EAAAJ,QAAAkB,aAAA,SAAAh2B,OAAAk1B,EAAAJ,QAAAW,WAAA,MAAAz1B,OAAAwR,IAGA0jB,EAAAL,aAAAkB,EACAp6B,KAAAy5B,kBAAAF,GACArN,QAMAqN,EAAAL,aAAAK,EAAAJ,QAAAY,MAAAR,EAAAL,aAAAtuB,OAAA2uB,EAAAJ,QAAAa,mBAAAj5B,OAAAw4B,EAAAL,aAAAn4B,QAAAw4B,EAAAJ,QAAAa,mBAAAj5B,OAAAw4B,EAAAJ,QAAAc,iBAAAl5B,SAAAuS,GACAtT,KAAAy5B,kBAAAF,GACArN,IAUA,CAmBA,OAhBAqN,EAAAH,eAGAG,EAAAhB,UAAA90B,eAAAyZ,IAGAld,KAAAy5B,kBAAAF,GACAv5B,KAAAs5B,mBAAApc,EAAAqc,GACAA,EAAAJ,QAAAI,EAAAhB,UAAArb,GACAqc,EAAAH,cAAA,GAIAp5B,KAAAs5B,mBAAApc,EAAAqc,IAGArN,GACA,CAUAxG,YAAAD,EAAAsT,EAAAzlB,EAAA4Y,GAEA,GAAA,mBAAAA,EACA,CACA,IAAAoO,EAAAt6B,KAAA84B,eAAAC,GAEA,IAAA,IAAAx4B,EAAA,EAAAA,EAAAklB,EAAA1kB,OAAAR,IAGAP,KAAA65B,eAAApU,EAAAllB,GAAA+5B,EAAAhnB,EAAA4Y,GAKA,OAFAlsB,KAAAw5B,kBAAAc,GAEAA,EAAArB,MACA,CAEA,CAEA,IAAAqB,EAAAt6B,KAAA84B,eAAAC,GACAuB,EAAAtB,cAAA,EAEAh5B,KAAAs4B,UAAA7S,EAAA,GACA,CAAAvI,EAAAqd,KAEAv6B,KAAAm6B,oBAAAjd,EAAAod,EAAAhnB,EAAAinB,EAAA,IAEA1kB,IAGA7V,KAAAw5B,kBAAAc,GACApO,EAAArW,EAAAykB,EAAArB,OAAA,GAGA,CACA,EhDwjMA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASx4B,EAAQf,EAAOD,GiDpzMlCC,EAAAD,QAjHA,MAKA6S,cAEAtS,KAAAu4B,UAAA,CAAA,CACA,CAUAiC,SAAAC,EAAAC,GAOA,OALAD,EAAAh3B,eAAAi3B,KAEAD,EAAAC,GAAA,CAAA,GAGAD,EAAAC,EACA,CAUAC,YAAAF,EAAAC,GASA,OAPAD,EAAAh3B,eAAA,gBAEAg3B,EAAAX,WAAA,CAAA,GAGAW,EAAAX,WAAAY,GAAA,CAAA,EAEAD,EAAAX,WAAAY,EACA,CASA1V,WAAAwT,EAAAC,EAAAmC,GAEA,GAAApC,EAAAz3B,OAAA,EAEA,OAAA,EAGA,GAAA,iBAAA03B,GAAAA,EAAA13B,OAAA,EAEA,OAAA,EAGA,IAAA85B,EAAA76B,KAAAu4B,UAGA,IAAA,IAAAh4B,EAAA,EAAAA,EAAAi4B,EAAAz3B,OAAAR,IAEAs6B,EAAA76B,KAAAw6B,SAAAK,EAAArC,EAAAj4B,GAAAA,GAGAs6B,EAAAp3B,eAAA,gBAEAo3B,EAAAf,WAAA,CAAA,GAGA,IAAAgB,EAAA,iBAAArC,EAAAA,EAAAD,EACA,IAAA,IAAAj4B,EAAA,EAAAA,EAAAu6B,EAAA/5B,OAAAR,IAEAs6B,EAAA76B,KAAA26B,YAAAE,EAAAC,EAAAv6B,GAAAA,GASA,OANAs6B,EAAAb,mBAAAxB,EACAqC,EAAAZ,iBAAAa,EACAD,EAAAd,MAAA,mBAAAa,EAAAA,EACA,iBAAAA,EAAA,IAAAA,EACAtnB,GAAAA,EAEAunB,CACA,CAUAlC,gBAAAH,EAAAC,EAAAmC,GAEA,IAAAC,EAAA76B,KAAAglB,WAAAwT,EAAAC,EAAAmC,GACAC,IAEAA,EAAAX,SAAA,EAEA,EjDi7MA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASz5B,EAAQf,EAAOD,GkDriNlCC,EAAAD,QACA,CACAkU,SAAA,CACAwQ,MAAA,EACAzQ,MAAA,EAEAqnB,MAAA,GACAC,QAAA,GAEAC,QAAA,GAEAC,OAAA,CACAC,WAAA,EAEAC,mBAAA,EACAC,sBAAA,EAEAC,MAAA,EACAC,eAAA,EAEAC,UAAA,EACAC,QAAA,GAEAC,OAAA,GACAC,IAAA,GlDyiNA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASl7B,EAAQf,EAAOD,GmDjkNlC,MAAAspB,EAAAtoB,EAAA,8BAAA2pB,oBAEAwR,EAAAtc,KAAAC,UAAA9e,EAAA,iDAiFAf,EAAAD,QA/EA,cAAAspB,EAGAzW,YAAAI,EAAAuR,EAAArR,GAEAC,MAAAH,EAAAuR,EAAArR,GAEA5S,KAAA8S,YAAA,kBAEA9S,KAAA2a,MAAA2E,KAAAtJ,MAAA4lB,GAGA57B,KAAA2a,MAAAhH,SAAAD,KAAA1T,KAAA0T,KACA1T,KAAA2a,MAAAhH,SAAAwQ,KAAAnkB,KAAAmkB,KAEAnkB,KAAAuS,KAAA,iBAAAvS,KAAAiW,QAAA4lB,KAAA77B,KAAAiW,QAAA4lB,KAAA,qBAAAx3B,OAAArE,KAAA2a,MAAAhH,SAAAwQ,MAEAnkB,KAAAqf,IAAArf,IACA,CAEA87B,kBAAAle,EAAAL,EAAAC,GAEAxd,KAAA2a,MAAAghB,IAAA/4B,KAAA,GAAAyB,QAAA,IAAAwP,MAAAuD,cAAA,MAAA/S,OAAAuZ,EAAA,OAAAvZ,OAAAkZ,IAEA,iBAAAC,GAEAxd,KAAA2a,MAAAghB,IAAA/4B,KAAA0c,KAAAC,UAAA/B,GAEA,CAEAue,qBAAAxe,EAAAC,GAEAxd,KAAA2a,MAAA+gB,OAAA94B,KAAA,GAAAyB,OAAAkZ,IAEA,iBAAAC,GAEAxd,KAAA2a,MAAA+gB,OAAA94B,KAAA0c,KAAAC,UAAA/B,GAEA,CAEAF,MAAAC,EAAAC,GAEAxd,KAAA87B,kBAAA,QAAAve,EAAAC,GACAxd,KAAAkkB,MAAA7E,IAAA/B,MAAAC,EAAAC,EACA,CAEAC,MAAAF,EAAAC,GAEAxd,KAAA87B,kBAAA,QAAAve,EAAAC,GACAxd,KAAAkkB,MAAA7E,IAAA5B,MAAAF,EAAAC,EACA,CAEAE,KAAAH,EAAAC,GAEAxd,KAAA87B,kBAAA,OAAAve,EAAAC,GACAxd,KAAAkkB,MAAA7E,IAAA3B,KAAAH,EAAAC,EACA,CAEAlD,KAAAiD,EAAAC,GAEAxd,KAAA87B,kBAAA,OAAAve,EAAAC,GACAxd,KAAAkkB,MAAA7E,IAAA/E,KAAAiD,EAAAC,EACA,CAEA7Q,MAAA4Q,EAAAC,GAEAxd,KAAA87B,kBAAA,QAAAve,EAAAC,GACAxd,KAAA+7B,qBAAAxe,EAAAC,GACAxd,KAAAkkB,MAAA7E,IAAA1S,MAAA4Q,EAAAC,EACA,CAEAG,MAAAJ,EAAAC,GAEAxd,KAAA87B,kBAAA,QAAAve,EAAAC,GACAxd,KAAA+7B,qBAAAxe,EAAAC,GACAxd,KAAAkkB,MAAA7E,IAAA1B,MAAAJ,EAAAC,EACA,EnDskNA,EAAE,CAAC,6BAA6B,GAAG,+CAA+C,KAAK,GAAG,CAAC,SAAS/c,EAAQf,EAAOD,IACnH,SAAW0G,IAAQ,WoDvpNnB,MAAA4iB,EAAAtoB,EAAA,8BAAA2pB,oBAEA4R,EAAAv7B,EAAA,cACAw7B,EAAAx7B,EAAA,UAuTAf,EAAAD,QArTA,cAAAspB,EAEAzW,YAAAI,EAAAuR,EAAArR,GAEAC,MAAAH,EAAAuR,EAAArR,GAEA5S,KAAAk8B,UAAA,GACAl8B,KAAAiW,QAAAimB,UAAAl8B,KAAAkkB,MAAAgY,YAEAl8B,KAAAk8B,UAAA,GAGAl8B,KAAAm8B,WAAAn8B,KAAAkkB,MAAAO,SAAA2Q,WAEAp1B,KAAA8S,YAAA,aAEA9S,KAAAo8B,QAAA,EAIAp8B,KAAAq8B,sBAAApY,GAAAA,CACA,CAEAqY,gBAEA,OAAAN,CACA,CAEAO,eAAAC,GAEA,GAAAx8B,KAAAo8B,OACA,CACA,IAAAK,EAAAz8B,KAAAo8B,OACAI,EAAA/4B,eAAA,aAEA+4B,EAAAE,QAAA,CAAA,GAEA,IAAAC,EAAAr+B,OAAAiF,KAAAk5B,GACAE,EAAA57B,OAAA,IAGAy7B,EAAAE,QAAAN,OAAAH,EAAA1lB,UAAAomB,EAAA,GAAAF,EAAAE,EAAA,KAEA,CACA,OAAAH,CACA,CAEAI,WAAA3Y,GAGA,IAAAqS,EAAAt2B,KAAAu8B,eAAAtY,GACA,OAAAjkB,KAAAq8B,sBAAA/F,EACA,CAEAuG,sBAAA5Y,EAAAiI,GAEA,IAAAoK,EAAAt2B,KAAA48B,WAAA3Y,GASA,OAPAqS,EAAAwG,iBAAA98B,KAAAkkB,MAAA7E,IAAA0D,eAEA/iB,KAAAk8B,UAEAl8B,KAAAkkB,MAAA7E,IAAA5B,MAAA,aAAApZ,OAAAiyB,EAAAyG,OAAA,gBAAA14B,OAAAiyB,EAAA0G,IAAA,QAAA34B,OAAAiyB,EAAAwG,mBAGAd,EAAA1F,GACA,CAAAzgB,EAAAonB,KAEA,GAAApnB,EAEA,OAAAqW,EAAArW,EAAAonB,GAGA,GAAAj9B,KAAAk8B,SACA,CACA,IAAAgB,EAAAl9B,KAAAkkB,MAAA7E,IAAA0D,eACA/iB,KAAAkkB,MAAA7E,IAAA5B,MAAA,UAAApZ,OAAAiyB,EAAAyG,OAAA,kBAAA14B,OAAArE,KAAAm8B,WAAAlK,gBAAAqE,EAAAwG,iBAAAI,GAAA,YAAA74B,OAAA44B,EAAAE,YACA,CAEA,IAAAC,EAAA,GAEAH,EAAAhkB,GAAA,QAAAokB,IAGA,GAAAr9B,KAAAk8B,SACA,CACA,IAAAoB,EAAAt9B,KAAAkkB,MAAA7E,IAAA0D,eACA/iB,KAAAkkB,MAAA7E,IAAA5B,MAAA,UAAApZ,OAAAiyB,EAAAyG,OAAA,qBAAA14B,OAAAg5B,EAAAt8B,OAAA,kBAAAsD,OAAArE,KAAAm8B,WAAAlK,gBAAAqE,EAAAwG,iBAAAQ,GAAA,MACA,CACAF,GAAAC,CAAA,IAGAJ,EAAAhkB,GAAA,OAAA,KAEA,GAAAjZ,KAAAk8B,SACA,CACA,IAAAqB,EAAAv9B,KAAAkkB,MAAA7E,IAAA0D,eACA/iB,KAAAkkB,MAAA7E,IAAA5B,MAAA,OAAApZ,OAAAiyB,EAAAyG,OAAA,yBAAA14B,OAAA+4B,EAAAr8B,OAAA,kBAAAsD,OAAArE,KAAAm8B,WAAAlK,gBAAAqE,EAAAwG,iBAAAS,GAAA,MACA,CACA,OAAArR,EAAArW,EAAAonB,EAAAG,EAAA,GACA,GAEA,CAEAI,4BAAAvZ,EAAAiI,GAEA,IAAAoK,EAAAt2B,KAAA48B,WAAA3Y,GAYA,OAVAqS,EAAAwG,iBAAA98B,KAAAkkB,MAAA7E,IAAA0D,eAEA/iB,KAAAk8B,UAEAl8B,KAAAkkB,MAAA7E,IAAA5B,MAAA,aAAApZ,OAAAiyB,EAAAyG,OAAA,gBAAA14B,OAAAiyB,EAAA0G,IAAA,QAAA34B,OAAAiyB,EAAAwG,mBAGAxG,EAAAmH,MAAA,EACAnH,EAAApvB,SAAA,KAEA80B,EAAA1F,GACA,CAAAzgB,EAAAonB,KAEA,GAAApnB,EAEA,OAAAqW,EAAArW,EAAAonB,GAGA,GAAAj9B,KAAAk8B,SACA,CACA,IAAAgB,EAAAl9B,KAAAkkB,MAAA7E,IAAA0D,eACA/iB,KAAAkkB,MAAA7E,IAAA5B,MAAA,UAAApZ,OAAAiyB,EAAAyG,OAAA,kBAAA14B,OAAArE,KAAAm8B,WAAAlK,gBAAAqE,EAAAwG,iBAAAI,GAAA,YAAA74B,OAAA44B,EAAAE,YACA,CAEA,IAAAO,GAAA,EAEAT,EAAAhkB,GAAA,QAAAokB,IAGA,GAAAr9B,KAAAk8B,SACA,CACA,IAAAoB,EAAAt9B,KAAAkkB,MAAA7E,IAAA0D,eACA/iB,KAAAkkB,MAAA7E,IAAA5B,MAAA,UAAApZ,OAAAiyB,EAAAyG,OAAA,qBAAA14B,OAAAg5B,EAAAt8B,OAAA,kBAAAsD,OAAArE,KAAAm8B,WAAAlK,gBAAAqE,EAAAwG,iBAAAQ,GAAA,MACA,CAQAI,EANAA,EAMAv3B,EAAA9B,OAAA,CAAAq5B,EAAAL,IAJAl3B,EAAAa,KAAAq2B,EAKA,IAGAJ,EAAAhkB,GAAA,OAAA,KAEA,GAAAjZ,KAAAk8B,SACA,CACA,IAAAqB,EAAAv9B,KAAAkkB,MAAA7E,IAAA0D,eACA/iB,KAAAkkB,MAAA7E,IAAA5B,MAAA,OAAApZ,OAAAiyB,EAAAyG,OAAA,yBAAA14B,OAAAq5B,EAAA38B,OAAA,kBAAAsD,OAAArE,KAAAm8B,WAAAlK,gBAAAqE,EAAAwG,iBAAAS,GAAA,MACA,CACA,OAAArR,EAAArW,EAAAonB,EAAAS,EAAA,GACA,GAEA,CAEAC,mBAAA1Z,EAAAiI,GAEAjI,EAAAwZ,MAAA,EAEA,IAAAnH,EAAAt2B,KAAA48B,WAAA3Y,GAoBA,OAlBAqS,EAAA7yB,eAAA,aAEA6yB,EAAAoG,QAAA,CAAA,GASApG,EAAAwG,iBAAA98B,KAAAkkB,MAAA7E,IAAA0D,eAEA/iB,KAAAk8B,UAEAl8B,KAAAkkB,MAAA7E,IAAA5B,MAAA,aAAApZ,OAAAiyB,EAAAyG,OAAA,qBAAA14B,OAAAiyB,EAAA0G,IAAA,QAAA34B,OAAAiyB,EAAAwG,mBAGAd,EAAA1F,GACA,CAAAzgB,EAAAonB,KAEA,GAAApnB,EAEA,OAAAqW,EAAArW,EAAAonB,GAGA,GAAAj9B,KAAAk8B,SACA,CACA,IAAAgB,EAAAl9B,KAAAkkB,MAAA7E,IAAA0D,eACA/iB,KAAAkkB,MAAA7E,IAAA5B,MAAA,eAAApZ,OAAAiyB,EAAAyG,OAAA,kBAAA14B,OAAArE,KAAAm8B,WAAAlK,gBAAAqE,EAAAwG,iBAAAI,GAAA,YAAA74B,OAAA44B,EAAAE,YACA,CAEA,IAAAS,EAAA,GAEAX,EAAAhkB,GAAA,QAAAokB,IAEA,GAAAr9B,KAAAk8B,SACA,CACA,IAAAoB,EAAAt9B,KAAAkkB,MAAA7E,IAAA0D,eACA/iB,KAAAkkB,MAAA7E,IAAA5B,MAAA,eAAApZ,OAAAiyB,EAAAyG,OAAA,qBAAA14B,OAAAg5B,EAAAt8B,OAAA,kBAAAsD,OAAArE,KAAAm8B,WAAAlK,gBAAAqE,EAAAwG,iBAAAQ,GAAA,MACA,CACAM,GAAAP,CAAA,IAGAJ,EAAAhkB,GAAA,OAAA,KAEA,GAAAjZ,KAAAk8B,SACA,CACA,IAAAqB,EAAAv9B,KAAAkkB,MAAA7E,IAAA0D,eACA/iB,KAAAkkB,MAAA7E,IAAA5B,MAAA,YAAApZ,OAAAiyB,EAAAyG,OAAA,6BAAA14B,OAAArE,KAAAm8B,WAAAlK,gBAAAqE,EAAAwG,iBAAAS,GAAA,MACA,CACA,OAAArR,EAAArW,EAAAonB,EAAA3d,KAAAtJ,MAAA4nB,GAAA,GACA,GAEA,CAEAC,QAAAC,EAAA5R,GAEA,IAAA6R,EAAA,iBAAAD,EAAAA,EAAA,CAAA,EAQA,MAPA,iBAAAA,IAEAC,EAAAf,IAAAc,GAGAC,EAAAhB,OAAA,MAEA/8B,KAAA29B,mBAAAI,EAAA7R,EACA,CAEA8R,QAAA/Z,EAAAiI,GAEA,MAAA,iBAAAjI,EAAAga,KAEA/R,EAAA,IAAAtrB,MAAA,2CAGAqjB,EAAA8Y,OAAA,MAEA/8B,KAAA29B,mBAAA1Z,EAAAiI,GACA,CAEAgS,SAAAja,EAAAiI,GAEA,MAAA,iBAAAjI,EAAAga,KAEA/R,EAAA,IAAAtrB,MAAA,4CAGAqjB,EAAA8Y,OAAA,OAEA/8B,KAAA29B,mBAAA1Z,EAAAiI,GACA,CAEAiS,UAAAla,EAAAiI,GAEA,MAAA,iBAAAjI,EAAAga,KAEA/R,EAAA,IAAAtrB,MAAA,6CAGAqjB,EAAA8Y,OAAA,QAEA/8B,KAAA29B,mBAAA1Z,EAAAiI,GACA,CAEAkS,SAAAna,EAAAiI,GAEA,MAAA,iBAAAjI,EAAAga,KAEA/R,EAAA,IAAAtrB,MAAA,4CAGAqjB,EAAA8Y,OAAA,OAEA/8B,KAAA29B,mBAAA1Z,EAAAiI,GACA,CAEAmS,QAAApa,EAAAiI,GAIA,OAFAjI,EAAA8Y,OAAA,SAEA/8B,KAAA29B,mBAAA1Z,EAAAiI,EACA,CAEAoS,WAAAR,EAAA5R,GAEA,IAAA6R,EAAA,iBAAAD,EAAAA,EAAA,CAAA,EAQA,MAPA,iBAAAA,IAEAC,EAAAf,IAAAc,GAGAC,EAAAhB,OAAA,MAEA/8B,KAAA68B,sBAAAkB,EAAA7R,EACA,EpD4pNC,GAAE7sB,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,UAAU0F,OAE5C,EAAE,CAAC,6BAA6B,GAAGyB,OAAS,GAAGw0B,OAAS,GAAG,aAAa,KAAK,GAAG,CAAC,SAAS37B,EAAQf,EAAOD,GqDr9NzG,MAAAspB,EAAAtoB,EAAA,8BAAA2pB,oBAyGA1qB,EAAAD,QAvGA,cAAAspB,EAWAzW,YAAAI,EAAAuR,EAAArR,GAEAC,MAAAH,EAAAuR,EAAArR,GAEA5S,KAAA8S,YAAA,WAIA9S,KAAAu+B,SACA,CACAC,SAAA,kBACAC,YAAA,mBACAC,QAAA,+BACAC,UAAA,8BAEAC,mBAAA,MAKA5+B,KAAA6+B,gBAAA,CACA,KAAA,KACA,IAAA,IACA3+B,EAAA,KACA,KAAA,IACAE,EAAA,KACA,KAAA,IACAC,EAAA,KACA,KAAA,IACAy+B,MAAA,SACA,SAAA,QACAC,MAAA,SACA,SAAA,SAKA/+B,KAAAg/B,gBAAA,EACAh/B,KAAAi/B,gBAAA,CACA,CAEAC,eAAA5rB,GAEA,OAAAtT,KAAAg/B,eAAA1rB,EACA,CAEA6rB,iBAAA7rB,GAGA,OADAtT,KAAAk/B,eAAArkB,KAAA7a,KAEA,CAEAo/B,sBAAAC,EAAA/rB,GA2BA,OAvBAtT,KAAAs/B,eAAA,SAAAD,EACAxxB,QAAA7N,KAAAu+B,SAAAG,SACA1O,GAEA,KAAA3rB,OAAArE,KAAA6+B,gBAAA7O,MAEAniB,QAAA7N,KAAAu+B,SAAAE,aAAAz+B,KAAAu+B,SAAAK,oBACA,CAAA5O,EAAAuP,IAEA,QAAAl7B,OAAAoT,mBAAA8nB,GAAA,WAEA1xB,QAAA7N,KAAAu+B,SAAAC,UAAAx+B,KAAAu+B,SAAAK,oBACA,CAAA5O,EAAAuP,IAEA,OAAAl7B,OAAAoT,mBAAA8nB,GAAA,eACA,OAGAv/B,KAAAs/B,eAAA,mCAAAj7B,OAAArE,KAAAs/B,eAAA,OACAt/B,KAAAs/B,eAAA,oFAAAj7B,OAAArE,KAAAs/B,eAAA,iBAEAt/B,KAAAg/B,eAAA,IAAAhnB,SAAA,sBAAAhY,KAAAs/B,qBAEA,IAAAhsB,EAEAtT,KAAAg/B,eAAA1rB,IAKAtT,KAAAw/B,uBAAA,mBAAAx/B,KAAAs/B,eAAA,IAEAt/B,KAAAm/B,mBACA,ErD09NA,EAAE,CAAC,6BAA6B,KAAK,GAAG,CAAC,SAAS1+B,EAAQf,EAAOD,GsDhkOjE,MAAAspB,EAAAtoB,EAAA,8BAAA2pB,oBAGAqV,EAAAh/B,EAAA,mBACAi/B,EAAAj/B,EAAA,mBAEAk/B,EAAAl/B,EAAA,kBAkKAf,EAAAD,QAhKA,cAAAspB,EAWAzW,YAAAI,EAAAuR,EAAArR,GAEAC,MAAAH,EAAAuR,EAAArR,GAEA5S,KAAA4/B,UAAA,CAAA,EAGA5/B,KAAA6/B,UAAAJ,EACAz/B,KAAAs4B,UAAAoH,EAEA1/B,KAAAoxB,WAAAuO,CACA,CAMAG,OAAAC,GAEA,IAAA,IAAAx/B,EAAA,EAAAA,GAAAoB,UAAAZ,QAAA,EAAA,EAAAY,UAAAZ,OAAA,GAAAR,IACA,CACA,IAAAy/B,EAAAz/B,EAAA,EAAA,GAAAoB,UAAAZ,QAAAR,EAAA,OAAApB,EAAAwC,UAAApB,EAAA,GACA,GAAA,iBAAAy/B,EACA,CACA,IAAAC,EAAA3hC,OAAAiF,KAAAy8B,GACA,IAAA,IAAAx8B,EAAA,EAAAA,EAAAy8B,EAAAl/B,OAAAyC,IAEAu8B,EAAAE,EAAAz8B,IAAAw8B,EAAAC,EAAAz8B,GAEA,CACA,CACA,OAAAu8B,CACA,CAKAG,SAAAb,EAAA/rB,GAIA,OAFAtT,KAAAkkB,MAAA4G,eAAAf,8CAAA,YAEAqV,sBAAAC,EAAA/rB,EACA,CAGA6sB,oBAAAC,EAAAf,EAAA/rB,GAEA,IAAA+sB,EAAArgC,KAAAkkB,MAAA4G,eAAArB,2BAAA,WAAA,CAAA,EAAA2W,GAIA,OAFApgC,KAAA4/B,UAAAQ,GAAAC,EAAAjB,sBAAAC,EAAA/rB,GAEAtT,KAAA4/B,UAAAQ,EACA,CAOAE,MAAAC,EAAAC,EAAAC,GAEA,IAAAC,EAAA,IAAAH,GAEAI,EAAA,iBAAAH,EAAAA,EAAA,EACAI,OAAA,IAAAH,EAAAA,EAAA,GAEA,GAAAE,GAAA,EAEA,OAAAC,EAGA,KAAAF,EAAA3/B,QAEA6/B,EAAAh+B,KAAA89B,EAAAG,OAAA,EAAAF,IAGA,OAAAC,CACA,CAYAE,gBAAAC,GAIA,IAAAC,EAAAD,EAAA7uB,MAAA,OAGA+uB,EAAA,IAAAptB,KAGAqtB,EAAA,EAEAC,EAAA,EA4CA,OAtCAF,EAAAG,eAAAz2B,SAAAq2B,EAAA,KAIAC,EAAAI,YAAA12B,SAAAq2B,EAAA,GAAA,IACAC,EAAAK,WAAA32B,SAAAq2B,EAAA,KAGAC,EAAAM,YAAA52B,SAAAq2B,EAAA,KACAC,EAAAO,cAAA72B,SAAAq2B,EAAA,KACAC,EAAAQ,cAAA92B,SAAAq2B,EAAA,KACAC,EAAAS,mBAAA/2B,SAAAq2B,EAAA,MAGAA,EAAA,IAAAA,EAAA,MAGAA,EAAA,KAGAG,EAAAx2B,SAAAq2B,EAAA,IAAA,IAIAE,EAAAv2B,SAAAq2B,EAAA,IAAAG,EAGA,KAAAJ,EAAAn2B,QAAA,EAAA,KAGAs2B,IAAA,IAKAD,EAAAU,SAAAV,EAAAW,WAAAV,GAGAD,CACA,EtDqkOA,EAAE,CAAC,6BAA6B,GAAG,kBAAkB,EAAE,kBAAkB,GAAG,iBAAiB,KAAK,GAAG,CAAC,SAASxgC,EAAQf,EAAOD,GuD1uO9H,IAAAoiC,EAAAphC,EAAA,QACAu8B,EAAAv8B,EAAA,OAEAqhC,EAAApiC,EAAAD,QAEA,IAAA,IAAAtB,KAAA0jC,EACAA,EAAAp+B,eAAAtF,KAAA2jC,EAAA3jC,GAAA0jC,EAAA1jC,IAaA,SAAA4jC,EAAAC,GAOA,GANA,iBAAAA,IACAA,EAAAhF,EAAAhnB,MAAAgsB,IAEAA,EAAAC,WACAD,EAAAC,SAAA,UAEA,WAAAD,EAAAC,SACA,MAAA,IAAArhC,MAAA,aAAAohC,EAAAC,SAAA,sCAEA,OAAAD,CACA,CArBAF,EAAAI,QAAA,SAAAF,EAAA3gC,GAEA,OADA2gC,EAAAD,EAAAC,GACAH,EAAAK,QAAA7iC,KAAAW,KAAAgiC,EAAA3gC,EACA,EAEAygC,EAAAl1B,IAAA,SAAAo1B,EAAA3gC,GAEA,OADA2gC,EAAAD,EAAAC,GACAH,EAAAj1B,IAAAvN,KAAAW,KAAAgiC,EAAA3gC,EACA,CvD0vOA,EAAE,CAACwgC,KAAO,GAAG7E,IAAM,MAAM,GAAG,CAAC,SAASv8B,EAAQf,EAAOD,4FwD1wOrDA,EAAAwK,KAAA,SAAArC,EAAA2C,EAAA43B,EAAAC,EAAAC,GACA,IAAAliC,EAAAqJ,EACA84B,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAE,GAAA,EACAliC,EAAA4hC,EAAAE,EAAA,EAAA,EACAK,EAAAP,GAAA,EAAA,EACAQ,EAAA/6B,EAAA2C,EAAAhK,GAOA,IALAA,GAAAmiC,EAEAviC,EAAAwiC,GAAA,IAAAF,GAAA,EACAE,KAAAF,EACAA,GAAAH,EACAG,EAAA,EAAAtiC,EAAA,IAAAA,EAAAyH,EAAA2C,EAAAhK,GAAAA,GAAAmiC,EAAAD,GAAA,GAKA,IAHAj5B,EAAArJ,GAAA,IAAAsiC,GAAA,EACAtiC,KAAAsiC,EACAA,GAAAL,EACAK,EAAA,EAAAj5B,EAAA,IAAAA,EAAA5B,EAAA2C,EAAAhK,GAAAA,GAAAmiC,EAAAD,GAAA,GAEA,GAAA,IAAAtiC,EACAA,EAAA,EAAAqiC,MACA,IAAAriC,IAAAoiC,EACA,OAAA/4B,EAAAo5B,IAAA5wB,KAAA2wB,GAAA,EAAA,GAEAn5B,GAAA5F,KAAAkM,IAAA,EAAAsyB,GACAjiC,GAAAqiC,CACA,CACA,OAAAG,GAAA,EAAA,GAAAn5B,EAAA5F,KAAAkM,IAAA,EAAA3P,EAAAiiC,EACA,EAEA3iC,EAAA4H,MAAA,SAAAO,EAAAxJ,EAAAmM,EAAA43B,EAAAC,EAAAC,GACA,IAAAliC,EAAAqJ,EAAAhJ,EACA8hC,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAM,EAAA,KAAAT,EAAAx+B,KAAAkM,IAAA,GAAA,IAAAlM,KAAAkM,IAAA,GAAA,IAAA,EACAvP,EAAA4hC,EAAA,EAAAE,EAAA,EACAK,EAAAP,EAAA,GAAA,EACAQ,EAAAvkC,EAAA,GAAA,IAAAA,GAAA,EAAAA,EAAA,EAAA,EAAA,EAmCA,IAjCAA,EAAAwF,KAAAk/B,IAAA1kC,GAEAyY,MAAAzY,IAAAA,IAAA4T,KACAxI,EAAAqN,MAAAzY,GAAA,EAAA,EACA+B,EAAAoiC,IAEApiC,EAAAyD,KAAAkT,MAAAlT,KAAAyb,IAAAjhB,GAAAwF,KAAAm/B,KACA3kC,GAAAoC,EAAAoD,KAAAkM,IAAA,GAAA3P,IAAA,IACAA,IACAK,GAAA,IAGApC,GADA+B,EAAAqiC,GAAA,EACAK,EAAAriC,EAEAqiC,EAAAj/B,KAAAkM,IAAA,EAAA,EAAA0yB,IAEAhiC,GAAA,IACAL,IACAK,GAAA,GAGAL,EAAAqiC,GAAAD,GACA/4B,EAAA,EACArJ,EAAAoiC,GACApiC,EAAAqiC,GAAA,GACAh5B,GAAApL,EAAAoC,EAAA,GAAAoD,KAAAkM,IAAA,EAAAsyB,GACAjiC,GAAAqiC,IAEAh5B,EAAApL,EAAAwF,KAAAkM,IAAA,EAAA0yB,EAAA,GAAA5+B,KAAAkM,IAAA,EAAAsyB,GACAjiC,EAAA,IAIAiiC,GAAA,EAAAx6B,EAAA2C,EAAAhK,GAAA,IAAAiJ,EAAAjJ,GAAAmiC,EAAAl5B,GAAA,IAAA44B,GAAA,GAIA,IAFAjiC,EAAAA,GAAAiiC,EAAA54B,EACA84B,GAAAF,EACAE,EAAA,EAAA16B,EAAA2C,EAAAhK,GAAA,IAAAJ,EAAAI,GAAAmiC,EAAAviC,GAAA,IAAAmiC,GAAA,GAEA16B,EAAA2C,EAAAhK,EAAAmiC,IAAA,IAAAC,CACA,CxD8wOA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASliC,EAAQf,EAAOD,GyDl2OlC,mBAAAnB,OAAAyb,OAEAra,EAAAD,QAAA,SAAAujC,EAAAC,GACAA,IACAD,EAAAE,OAAAD,EACAD,EAAA//B,UAAA3E,OAAAyb,OAAAkpB,EAAAhgC,UAAA,CACAqP,YAAA,CACAlU,MAAA4kC,EACAxkC,YAAA,EACAE,UAAA,EACAD,cAAA,KAIA,EAGAiB,EAAAD,QAAA,SAAAujC,EAAAC,GACA,GAAAA,EAAA,CACAD,EAAAE,OAAAD,EACA,IAAAE,EAAA,WAAA,EACAA,EAAAlgC,UAAAggC,EAAAhgC,UACA+/B,EAAA//B,UAAA,IAAAkgC,EACAH,EAAA//B,UAAAqP,YAAA0wB,CACA,CACA,CzDs2OA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASviC,EAAQf,EAAOD,IAClC,SAAWK,IAAQ,W0Dh4OnB,IAAAsjC,EAAAC,EAAAD,EASAtjC,EATAujC,EASA,WACA,OAEAC,EAAA,CAEA,IACA,SAAAC,EAAA9jC,GAGAnB,OAAAC,eAAAkB,EAAA,aAAA,CAAArB,OAAA,IACAqB,EAAAqjC,SAAA,EAQArjC,EAAAqjC,IAPA,SAAA1iC,GAGA,MAFA,iBAAAA,GAAA,iBAAAA,IACAA,EAAAA,EAAA8C,YACA,KAAA9C,EAAA,GACAA,EAAAilB,UAAA,GACAjlB,CACA,CAIA,EAEA,IACA,SAAAmjC,EAAA9jC,GAiDA,SAAA+jC,EAAAC,GACA,GAAAC,EAAAD,GACA,OAAAA,EAGA,IADA,IAAAd,EAAA,GAAAgB,EAAAF,EAAA1iC,OAAAmV,EAAAutB,EAAAvxB,MAAA,KAAA,GAAA0xB,EAAA1tB,EAAAA,EAAAnV,OAAA,EACAR,EAAA,EAAAA,EAAAojC,EAAApjC,IACAkjC,EAAAljC,IAAA,KAAAkjC,EAAAljC,IAAA,IACAoiC,GAAA,EAAAh4B,SAAA84B,EAAAljC,IAEAoiC,GAAAc,EAAAljC,GAGA,OAAAsjC,EAAAlB,EADAiB,EAAA,EAAA,KAAA,IAAA7gC,MAAA6gC,GAAAj+B,KAAA,KAAA,IAAA,IAEA,CACA,SAAAmI,EAAA21B,GACA,IAAAn+B,EAAAm+B,EAAAvxB,MAAA,KAGA,IAFA5M,EAAA,KACAA,EAAA,GAAA,KACA,KAAAA,EAAA,GAAA,IAAAA,EAAA,GAAAvE,OAAA,GACAuE,EAAA,GAAAA,EAAA,GAAA+f,UAAA,GACA,OAAA/f,EAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,GAAA,GACA,CAEA,SAAAw+B,EAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAA7xB,MAAA,KAAAgyB,EAAAF,EAAA9xB,MAAA,KAEAiyB,EAAAF,EAAA,GAAAljC,OAAAqjC,EAAAF,EAAA,GAAAnjC,OAoBA,OAnBAojC,EAAAC,EACAF,EAAA,GAAA,IAAAnhC,MAAAa,KAAAk/B,IAAAqB,EAAAC,GAAA,GAAAz+B,KAAA,MAAAu+B,EAAA,GAAAA,EAAA,GAAA,IAGAD,EAAA,GAAA,IAAAlhC,MAAAa,KAAAk/B,IAAAqB,EAAAC,GAAA,GAAAz+B,KAAA,MAAAs+B,EAAA,GAAAA,EAAA,GAAA,IAGAE,EAAAF,EAAA,GAAAA,EAAA,GAAAljC,OAAA,EACAqjC,EAAAF,EAAA,GAAAA,EAAA,GAAAnjC,OAAA,GACAojC,GAAAC,KACAD,EAAAC,EACAF,EAAA,IAAAA,EAAA,GAAAA,EAAA,GAAA,IAAA,IAAAnhC,MAAAa,KAAAk/B,IAAAqB,EAAAC,GAAA,GAAAz+B,KAAA,KAGAs+B,EAAA,IAAAA,EAAA,GAAAA,EAAA,GAAA,IAAA,IAAAlhC,MAAAa,KAAAk/B,IAAAqB,EAAAC,GAAA,GAAAz+B,KAAA,MAKA,CAFAo+B,EAAAE,EAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,GAAA,IACAD,EAAAE,EAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,GAAA,IAEA,CAEA,SAAAL,EAAAE,EAAAC,GACA,IAAAK,EACAN,GAAAM,EAAAP,EAAAC,EAAAC,IAAA,GAAAA,EAAAK,EAAA,GAEA,IADA,IAAAC,EAAA,GAAAC,EAAA,EACAhkC,EAAAwjC,EAAAhjC,OAAA,EAAAR,GAAA,EAAAA,IACA,GAAA,MAAAwjC,EAAAxjC,GAAA,CAIA,IAAAikC,EAAA75B,SAAAo5B,EAAAxjC,IAAAoK,SAAAq5B,EAAAzjC,IAAAgkC,EACAD,EAAAE,EAAA,GAAAF,EACAC,EAAA3gC,KAAAkT,MAAA0tB,EAAA,GAHA,MAFAF,EAAA,IAAAA,EAOA,OAAAC,EAAAA,EAAArhC,WAAAohC,EAAAA,CACA,CACA,SAAAZ,EAAAD,GACA,MAAA,sBAAA7sB,KAAA6sB,EACA,CAhHAnlC,OAAAC,eAAAkB,EAAA,aAAA,CAAArB,OAAA,IACAqB,EAAAqkC,IAAArkC,EAAAqO,KAAArO,EAAAglC,SAAA,EA4CAhlC,EAAAglC,IA1CA,SAAAV,EAAAC,GACA,IAAAK,OACA,IAAAL,IAAAA,EAAA,KACA,IAAAU,EAAA,EAAAC,GAAA,EAEA,KAAAZ,EAAA,KAEAL,EADAK,EAAAA,EAAA1e,UAAA,MAEAqf,IACAC,EAAA,EACAZ,EAAAhjC,SAGA,KAAAijC,EAAA,KAEAN,EADAM,EAAAA,EAAA3e,UAAA,MAEAqf,IACAC,EAAA,EACAX,EAAAjjC,SAGAgjC,EAAAj2B,EAAAi2B,GACAC,EAAAl2B,EAAAk2B,GACAD,GAAAM,EAAAP,EAAAh2B,EAAAi2B,GAAAj2B,EAAAk2B,KAAA,GAAAA,EAAAK,EAAA,GACA,GAAAK,IACA,IAAAC,EACAZ,EAAAP,EAAAO,GACA,IAAAY,IACAX,EAAAR,EAAAQ,KAEA,IAAA5kC,EAAAykC,EAAAE,EAAAC,GACA,OAAAU,EAEA,GAAAA,EACA,IAAA52B,EAAA1O,GAEA2kC,EAAAhjC,OAAA3B,EAAA2B,OACA+M,EAAA1O,EAAAimB,UAAA,IAEA,IAAAvX,EAAA01B,EAAApkC,IAPA0O,EAAA1O,EASA,EAwBAK,EAAAqO,KAAAA,EA0BArO,EAAAqkC,IAAAA,CAqBA,EAEA,IACA,SAAApkC,EAAAklC,EAAAC,GAGA,IAAAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAG,EAAAH,EAAA,KACAI,EAAAJ,EAAA,KACAK,EAAAL,EAAA,KACAM,EAAAN,EAAA,KACAO,EAAAP,EAAA,KACAQ,EAAAR,EAAA,IACAS,EAAAT,EAAA,KACAzT,EAAA,WACA,SAAAA,EAAAqS,QACA,IAAAA,IAAAA,EAAA,KACAzjC,KAAA5B,MAAAgzB,EAAAmU,SAAA9B,EACA,CAqLA,OApLArS,EAAAmU,SAAA,SAAA9B,GACA,GAAAA,EAAA,CAEA,GADAA,EAAAA,EAAAvgC,WACA2T,MAAA4sB,GACA,MAAA7iC,MAAA,8BAAA6iC,GACA,KAAAA,EAAA,KACAA,EAAAA,EAAApe,UAAA,GACA,MAEAoe,EAAA,IAOA,GALAA,EAAAzU,WAAA,KACAyU,EAAA,IAAAA,EACAA,EAAAzU,WAAA,QACAyU,EAAA,KAAAA,EAAA74B,OAAA,IAEA,KAAAgM,KAAA6sB,GAAA,CACA,IAAAY,EAAAZ,EAAAvxB,MAAA,QAAAszB,EAAAnB,EAAA,GAAAoB,EAAApB,EAAA,GAEAqB,EAAA,GACA,MAFAF,GAAA,EAAAV,EAAAh3B,MAAA03B,IAEA,KACAE,EAAA,IACAF,EAAAA,EAAAngB,UAAA,IAEAmgB,EAAA3/B,QAAA,MAAA,GACA4/B,EAAA96B,SAAA86B,GAAAD,EAAA3/B,QAAA,KACA2/B,EAAAA,EAAA33B,QAAA,IAAA,KAGA43B,EAAA96B,SAAA86B,GAAAD,EAAAzkC,OAGA0iC,EADA+B,EAAAzkC,OAAA0kC,EACAC,EAAAF,EAAA,IAAAziC,MAAA0iC,EAAAD,EAAAzkC,OAAA,GAAA4E,KAAA,KAEA6/B,EAAAzkC,QAAA0kC,GAAAA,EAAA,EACAC,GAAA,EAAAZ,EAAAh3B,MAAA03B,EAAAngB,UAAA,EAAAogB,KACAD,EAAAzkC,OAAA0kC,EAAA,IAAAD,EAAAngB,UAAAogB,GAAA,IAGAC,EAAA,KAAA,IAAA3iC,MAAA,EAAA0iC,GAAA9/B,KAAA,KAAA6/B,CAEA,CACA,OAAA/B,CACA,EACArS,EAAAnuB,UAAA0iC,SAAA,WACA,OAAA3lC,KAAA5B,KACA,EACAgzB,EAAAnuB,UAAA2iC,SAAA,SAAA5/B,GACAhG,KAAA5B,MAAAgzB,EAAAmU,SAAAv/B,EACA,EACAorB,EAAAyU,eAAA,SAAApC,EAAAqC,EAAAC,GACA,GAAAD,GAAAC,GAIA,IAAAD,IAAAC,EACA,MAAAnlC,MAAA,8EAJAklC,EAAA,EACAC,EAAA,IAMA,IAAArB,EAAA,MADAjB,EAAArS,EAAAmU,SAAA9B,IACA3a,OAAA,GACA4b,IACAjB,EAAAA,EAAApe,UAAA,IAIA,IAHA,IAAA/hB,EAAAmgC,EAAA59B,QAAA,KAEA2+B,EAAA,GACAjkC,EAFA+C,EAAAA,EAAA,EAAAA,EAAAmgC,EAAA1iC,OAEAR,EAAA,GACAA,EAAAulC,GACAA,EAAAvlC,EACAA,EAAA,GAGAA,GAAAulC,EACAtB,EAAAf,EAAApe,UAAA9kB,EAAAA,EAAAulC,IAAAvlC,EAAA+C,EAAAwiC,GAAAvlC,GAAA,EAAAwlC,EAAA,IAAAvB,EAEA,OAAAE,EAAA,IAAA,IAAAF,EAAAf,EAAApe,UAAA/hB,EACA,EACA8tB,EAAAnuB,UAAA4iC,eAAA,SAAAC,EAAAC,GACA,OAAA3U,EAAAyU,eAAA7lC,KAAA5B,MAAA0nC,EAAAC,EACA,EACA3U,EAAAC,MAAA,SAAAoS,EAAAuC,EAAAC,GAKA,QAJA,IAAAD,IAAAA,EAAA,QACA,IAAAC,IAAAA,EAAAX,EAAAY,cAAAC,WACA1C,EAAArS,EAAAmU,SAAA9B,GAEA5sB,MAAAmvB,GACA,MAAAplC,MAAA,8BAAAolC,GACA,OAAA,EAAAhB,EAAAoB,UAAA3C,EAAAuC,EAAAC,EACA,EACA7U,EAAAnuB,UAAAouB,MAAA,SAAA2U,EAAAC,GAGA,QAFA,IAAAD,IAAAA,EAAA,QACA,IAAAC,IAAAA,EAAAX,EAAAY,cAAAC,WACAtvB,MAAAmvB,GACA,MAAAplC,MAAA,8BAAAolC,GACA,OAAA,IAAA5U,GAAA,EAAA4T,EAAAoB,UAAApmC,KAAA5B,MAAA4nC,EAAAC,GACA,EACA7U,EAAA0R,IAAA,SAAAW,GAEA,OADAA,EAAArS,EAAAmU,SAAA9B,IACA,EAAAsB,EAAAjC,KAAAW,EACA,EACArS,EAAAnuB,UAAA6/B,IAAA,WACA,OAAA,IAAA1R,GAAA,EAAA2T,EAAAjC,KAAA9iC,KAAA5B,OACA,EACAgzB,EAAAta,MAAA,SAAA2sB,GAEA,OAAA,KADAA,EAAArS,EAAAmU,SAAA9B,IACA59B,QAAA,KACA49B,EACArS,EAAAC,MAAAoS,EAAA,EAAA6B,EAAAY,cAAAG,MACA,EACAjV,EAAAnuB,UAAA6T,MAAA,WACA,OAAA,IAAA9W,KAAA5B,MAAAyH,QAAA,KACA,IAAAurB,EAAApxB,KAAA5B,OACA,IAAAgzB,EAAApxB,KAAA5B,OAAAizB,MAAA,EAAAiU,EAAAY,cAAAG,MACA,EACAjV,EAAAkV,KAAA,SAAA7C,GAEA,OAAA,KADAA,EAAArS,EAAAmU,SAAA9B,IACA59B,QAAA,KACA49B,EACArS,EAAAC,MAAAoS,EAAA,EAAA6B,EAAAY,cAAAK,QACA,EACAnV,EAAAnuB,UAAAqjC,KAAA,WACA,OAAA,IAAAtmC,KAAA5B,MAAAyH,QAAA,KACA,IAAAurB,EAAApxB,KAAA5B,OACA,IAAAgzB,EAAApxB,KAAA5B,OAAAizB,MAAA,EAAAiU,EAAAY,cAAAK,QACA,EACAnV,EAAAqT,IAAA,SAAAV,EAAAC,GAGA,OAFAD,EAAA3S,EAAAmU,SAAAxB,GACAC,EAAA5S,EAAAmU,SAAAvB,IACA,EAAAc,EAAAL,KAAAV,EAAAC,EACA,EACA5S,EAAAnuB,UAAAwhC,IAAA,SAAAhB,GACA,OAAA,IAAArS,GAAA,EAAA0T,EAAAL,KAAAzkC,KAAA5B,MAAAqlC,EAAAkC,YACA,EACAvU,EAAAoV,SAAA,SAAAzC,EAAAC,GAGA,OAFAD,EAAA3S,EAAAmU,SAAAxB,GACAC,EAAA5S,EAAAmU,SAAAvB,IACA,EAAAqB,EAAAmB,UAAAzC,EAAAC,EACA,EACA5S,EAAAnuB,UAAAujC,SAAA,SAAA/C,GACA,OAAA,IAAArS,GAAA,EAAAiU,EAAAmB,UAAAxmC,KAAA5B,MAAAqlC,EAAAkC,YACA,EACAvU,EAAAqV,SAAA,SAAA1C,EAAAC,GAGA,OAFAD,EAAA3S,EAAAmU,SAAAxB,GACAC,EAAA5S,EAAAmU,SAAAvB,IACA,EAAAiB,EAAAwB,UAAA1C,EAAAC,EACA,EACA5S,EAAAnuB,UAAAwjC,SAAA,SAAAhD,GACA,OAAA,IAAArS,GAAA,EAAA6T,EAAAwB,UAAAzmC,KAAA5B,MAAAqlC,EAAAkC,YACA,EACAvU,EAAAsV,OAAA,SAAA3C,EAAAC,EAAAgC,GAGA,OAFAjC,EAAA3S,EAAAmU,SAAAxB,GACAC,EAAA5S,EAAAmU,SAAAvB,IACA,EAAAkB,EAAAwB,QAAA3C,EAAAC,EAAAgC,EACA,EACA5U,EAAAnuB,UAAAyjC,OAAA,SAAAjD,EAAAuC,GACA,OAAA,IAAA5U,GAAA,EAAA8T,EAAAwB,QAAA1mC,KAAA5B,MAAAqlC,EAAAkC,WAAAK,GACA,EACA5U,EAAAuV,QAAA,SAAA5C,EAAAC,GAGA,OAFAD,EAAA3S,EAAAmU,SAAAxB,GACAC,EAAA5S,EAAAmU,SAAAvB,IACA,EAAAmB,EAAAwB,SAAA5C,EAAAC,EACA,EACA5S,EAAAnuB,UAAA0jC,QAAA,SAAAlD,GACA,OAAA,IAAArS,GAAA,EAAA+T,EAAAwB,SAAA3mC,KAAA5B,MAAAqlC,EAAAkC,YACA,EACAvU,EAAAwV,UAAA,SAAA7C,EAAAC,GAGA,OAFAD,EAAA3S,EAAAmU,SAAAxB,GACAC,EAAA5S,EAAAmU,SAAAvB,IACA,EAAAoB,EAAAwB,WAAA7C,EAAAC,EACA,EACA5S,EAAAnuB,UAAA2jC,UAAA,SAAAnD,GACA,OAAA,EAAA2B,EAAAwB,WAAA5mC,KAAA5B,MAAAqlC,EAAAkC,WACA,EACAvU,EAAAyV,OAAA,SAAApD,GAEA,OADAA,EAAArS,EAAAmU,SAAA9B,IACA,EAAA4B,EAAAwB,QAAApD,EACA,EACArS,EAAAnuB,UAAA4jC,OAAA,WACA,OAAA,IAAAzV,GAAA,EAAAiU,EAAAwB,QAAA7mC,KAAA5B,OACA,EACAgzB,EAAA8U,cAAAZ,EAAAY,cACA9U,CACA,CA1LA,GA2LA1xB,EAAAD,QAAA2xB,CAGA,EAEA,IACA,SAAAmS,EAAA9jC,EAAAolC,GAGAvmC,OAAAC,eAAAkB,EAAA,aAAA,CAAArB,OAAA,IACAqB,EAAAmnC,eAAA,EACA,IAAA9B,EAAAD,EAAA,KA0CAplC,EAAAmnC,UAzCA,SAAA7C,EAAAC,GACA,IAAAK,EACAyC,GAAA,EACA,GAAA,KAAA/C,EAAA,IAAA,KAAAC,EAAA,GACA,OAAA,EAEA,GAAA,KAAAD,EAAA,IAAA,KAAAC,EAAA,GACA,OAAA,EAQA,GANA,KAAAD,EAAA,IAAA,KAAAC,EAAA,KACAD,EAAAA,EAAAn5B,OAAA,GACAo5B,EAAAA,EAAAp5B,OAAA,GACAk8B,GAAA,GAEA/C,GAAAM,GAAA,EAAAS,EAAAhB,KAAAC,EAAAC,IAAA,GAAAA,EAAAK,EAAA,GACA,GAAAN,EAAAgD,cAAA/C,GACA,OAAA,EAEA,IAAA,IAAAzjC,EAAA,EAAAA,EAAAwjC,EAAAhjC,OAAAR,IACA,GAAAwjC,EAAAxjC,IAAAyjC,EAAAzjC,GAGA,OAAAwjC,EAAAxjC,GAAAyjC,EAAAzjC,GACAumC,GACA,EAGA,EAIAA,EACA,GAGA,EAIA,OAAA,CACA,CAIA,EAEA,IACA,SAAAvD,EAAA9jC,EAAAolC,GAGAvmC,OAAAC,eAAAkB,EAAA,aAAA,CAAArB,OAAA,IACAqB,EAAAinC,YAAA,EACA,IAAA5B,EAAAD,EAAA,KACAG,EAAAH,EAAA,KAmFAplC,EAAAinC,OAlFA,SAAAM,EAAAC,EAAAC,GAEA,QADA,IAAAA,IAAAA,EAAA,GACA,GAAAD,EACA,MAAA,IAAArmC,MAAA,sBAOA,GALAomC,EAAAA,EAAA9jC,WACA+jC,EAAAA,EAAA/jC,WAEA8jC,EAAAA,EAAAn5B,QAAA,oBAAA,MAAAA,QAAA,QAAA,IACAo5B,EAAAA,EAAAp5B,QAAA,oBAAA,MAAAA,QAAA,QAAA,IACA,GAAAm5B,EACA,MAAA,IACA,IAAAtC,EAAA,EACA,KAAAuC,EAAA,KACAA,EAAAA,EAAA5hB,UAAA,GACAqf,KAEA,KAAAsC,EAAA,KACAA,EAAAA,EAAA3hB,UAAA,GACAqf,KAEA,IAAAyC,EAAAF,EAAAphC,QAAA,KAAA,EAAAohC,EAAAlmC,OAAAkmC,EAAAphC,QAAA,KAAA,GAAA,EAEA,GADAohC,GAAA,EAAAnC,EAAAh3B,MAAAm5B,EAAAp5B,QAAA,IAAA,KACAs5B,GAAA,EAAA,CACA,IAAAC,EAAAJ,EAAAnhC,QAAA,KAAA,EAAAmhC,EAAAjmC,OAAAimC,EAAAnhC,QAAA,KAAA,GAAA,EACA,IAAA,GAAAuhC,EACAJ,GAAA,EAAAlC,EAAAh3B,MAAAk5B,EAAA,IAAAjkC,MAAAokC,EAAA,GAAAxhC,KAAA,WAGA,GAAAwhC,EAAAC,EACAJ,EAAAA,EAAAn5B,QAAA,IAAA,IACAm5B,GAAA,EAAAlC,EAAAh3B,MAAAk5B,EAAA,IAAAjkC,MAAAokC,EAAAC,EAAA,GAAAzhC,KAAA,WAEA,GAAAwhC,EAAAC,EAAA,CAEA,IAAAC,GADAL,EAAAA,EAAAn5B,QAAA,IAAA,KACA9M,OAAAqmC,EAAAD,EACAH,GAAA,EAAAlC,EAAAh3B,MAAAk5B,EAAA3hB,UAAA,EAAAgiB,GAAA,IAAAL,EAAA3hB,UAAAgiB,GACA,MACAF,GAAAC,IACAJ,GAAA,EAAAlC,EAAAh3B,MAAAk5B,EAAAn5B,QAAA,IAAA,KAGA,CACA,IAAAy5B,EAAA,EAAAC,EAAAN,EAAAlmC,OAAAymC,EAAA,GACAC,EAAAT,EAAAnhC,QAAA,MAAA,GAAAmhC,EAAAnhC,QAAA,KAAA0hC,EAAAP,EAAA3hB,UAAA,EAAAkiB,EAAA,GAAAP,EAAA3hB,UAAA,EAAAkiB,GAEA,GADAP,EAAAA,EAAAnhC,QAAA,MAAA,GAAAmhC,EAAAnhC,QAAA,KAAA0hC,EAAAP,EAAA3hB,UAAAkiB,EAAA,GAAAP,EAAA3hB,UAAAkiB,GACAE,EAAA5hC,QAAA,MAAA,EAAA,CACA,IAAAuW,EAAAqrB,EAAA1mC,OAAA0mC,EAAA5hC,QAAA,KAAA,EAEA0hC,GADAE,EAAAA,EAAA55B,QAAA,IAAA,KACA9M,SACAqb,GAAAmrB,EAAAE,EAAA1mC,OACA0mC,GAAA,IAAA1kC,MAAAwkC,EAAAE,EAAA1mC,OAAA,GAAA4E,KAAA,MAEA2hC,EAAAlrB,EACAorB,EAAA,KAAA,IAAAzkC,MAAAqZ,GAAAzW,KAAA,IACA,CAEA,IADAuhC,GAAA,EACAI,GAAAJ,GAAA,CAEA,IADA,IAAAQ,EAAA,EACA/8B,SAAA88B,IAAA98B,SAAAs8B,IACAQ,GAAA,EAAA3C,EAAAL,KAAAgD,EAAA,IAAAR,GACAS,IAEAF,GAAAE,EACAV,GAOA,KAAAA,EAAA,KACAQ,GAAA,IACAF,IACAN,EAAAA,EAAA3hB,UAAA,IAEAoiB,GAAAT,EAAA3hB,UAAA,EAAA,GACA2hB,EAAAA,EAAA3hB,UAAA,KAZAiiB,IACAE,GAAA,KACAF,IACAG,GAAA,IAWA,CACA,OAAA,GAAA/C,EAAA,IAAA,KAAA,EAAAI,EAAAh3B,OAAA,EAAAk3B,EAAAoB,UAAAoB,EAAAN,EAAA,GACA,CAIA,EAEA,IACA,SAAA3D,EAAA9jC,EAAAolC,GAGAvmC,OAAAC,eAAAkB,EAAA,aAAA,CAAArB,OAAA,IACAqB,EAAAknC,aAAA,EACA,IAAAzB,EAAAL,EAAA,KACAG,EAAAH,EAAA,KACAI,EAAAJ,EAAA,KACAQ,EAAAR,EAAA,IACAS,EAAAT,EAAA,KAqBA,SAAAU,EAAAoC,GACA,IAAA,GAAAA,EAAA9hC,QAAA,KACA,MAAA,IAAAjF,MAAA,wCAEA,CALAnB,EAAAknC,QAnBA,SAAAK,EAAAC,GACA,GAAA,GAAAA,EACA,MAAA,IAAArmC,MAAA,sBAEAomC,EAAAA,EAAA9jC,WACA+jC,EAAAA,EAAA/jC,WACAqiC,EAAAyB,GACAzB,EAAA0B,GACA,IAAAvB,EAAA,GASA,MARA,KAAAsB,EAAA,KACAtB,EAAA,IACAsB,EAAAA,EAAAp8B,OAAA,IAEA,KAAAq8B,EAAA,KACAA,EAAAA,EAAAr8B,OAAA,IAGA86B,GADA,EAAAL,EAAAmB,UAAAQ,GAAA,EAAA/B,EAAAwB,UAAAQ,GAAA,EAAAjC,EAAAoB,WAAA,EAAAlB,EAAAwB,QAAAM,EAAAC,GAAA,EAAA3B,EAAAY,cAAAG,QAEA,CASA,EAEA,IACA,SAAA9C,EAAA9jC,GAqFA,SAAAmoC,EAAAnE,GACA,KAAA,KAAAA,EAAA,IACAA,EAAAA,EAAA74B,OAAA,GAEA,IAAA,GAAA64B,EAAA59B,QAAA,KACA,KAAA,KAAA49B,EAAAA,EAAA1iC,OAAA,IACA0iC,EAAAA,EAAA74B,OAAA,EAAA64B,EAAA1iC,OAAA,GAYA,MATA,IAAA0iC,GAAA,KAAAA,EACAA,EAAA,IAEA,KAAAA,EAAAA,EAAA1iC,OAAA,KACA0iC,EAAAA,EAAA74B,OAAA,EAAA64B,EAAA1iC,OAAA,IAEA,KAAA0iC,EAAA,KACAA,EAAA,IAAAA,GAEAA,CACA,CArGAnlC,OAAAC,eAAAkB,EAAA,aAAA,CAAArB,OAAA,IACAqB,EAAAgnC,cAAA,EAmEAhnC,EAAAgnC,SAlEA,SAAA1C,EAAAC,GACAD,EAAAA,EAAA7gC,WACA8gC,EAAAA,EAAA9gC,WAEA,IAAA4jC,EAAA,EACA,KAAA/C,EAAA,KACA+C,IACA/C,EAAAA,EAAAn5B,OAAA,IAEA,KAAAo5B,EAAA,KACA8C,IACA9C,EAAAA,EAAAp5B,OAAA,IAEAm5B,EAAA6D,EAAA7D,GACAC,EAAA4D,EAAA5D,GACA,IAAA6D,EAAA,EACAC,EAAA,GACA,GAAA/D,EAAAl+B,QAAA,OACAgiC,EAAA9D,EAAAhjC,OAAAgjC,EAAAl+B,QAAA,KAAA,IAEA,GAAAm+B,EAAAn+B,QAAA,OACAiiC,EAAA9D,EAAAjjC,OAAAijC,EAAAn+B,QAAA,KAAA,GAEA,IAAAkiC,EAAAF,EAAAC,EAGA,GAFA/D,EAAA6D,EAAA7D,EAAAl2B,QAAA,IAAA,KACAm2B,EAAA4D,EAAA5D,EAAAn2B,QAAA,IAAA,KACAk2B,EAAAhjC,OAAAijC,EAAAjjC,OAAA,CACA,IAAAyjC,EAAAT,EACAA,EAAAC,EACAA,EAAAQ,CACA,CACA,GAAA,KAAAR,EACA,MAAA,IAUA,IALA,IAiCAP,EAAAuE,EAjCAjnC,EAAAijC,EAAAjjC,OACAwjC,EAAA,EACA0D,EAAA,GACAC,EAAAnnC,EAAA,EACAonC,EAAA,GACA5nC,EAAA,EAAAA,EAAAQ,EAAAR,IACA0nC,EAAA1nC,GAAAwjC,EAAAhjC,OAAA,EAEA,IAAAR,EAAA,EAAAA,EAAA,EAAAwjC,EAAAhjC,OAAAR,IAAA,CAEA,IADA,IAAA+jC,EAAA,EACAj6B,EAAA25B,EAAAjjC,OAAA,EAAAsJ,GAAA69B,GAAA79B,GAAA,EAAAA,IACA49B,EAAA59B,IAAA,GAAA49B,EAAA59B,GAAA05B,EAAAhjC,SACAujC,GAAA35B,SAAAo5B,EAAAkE,EAAA59B,OAAAM,SAAAq5B,EAAA35B,KAGAi6B,GAAAC,EACAA,EAAA3gC,KAAAkT,MAAAwtB,EAAA,IACA6D,EAAA7D,EAAA,GAAA6D,EACAD,GACA,CAQA,OAJAC,EAAAP,GAUAnE,EAVA0E,EAWA,IADAH,EAVAD,GAYAtE,GAEAA,EAAAuE,GAAAvE,EAAA1iC,OAAA,IAAAgC,MAAAilC,EAAAvE,EAAA1iC,OAAA,GAAA4E,KAAA,KAAA89B,EAAAA,GACA74B,OAAA,EAAA64B,EAAA1iC,OAAAinC,GAAA,IAAAvE,EAAA74B,OAAA64B,EAAA1iC,OAAAinC,EAAAA,KAdA,GAAAlB,IACAqB,EAAA,IAAAA,GAEAA,CACA,CAqCA,EAEA,IACA,SAAA5E,EAAA9jC,EAAAolC,GAGAvmC,OAAAC,eAAAkB,EAAA,aAAA,CAAArB,OAAA,IACAqB,EAAA2mC,cAAA,EACA,IAAAd,EAAAT,EAAA,KA2DA,SAAAuD,EAAAC,EAAAC,EAAA5D,EAAAuB,GACA,IAAAoC,GAAAA,IAAA,IAAAtlC,MAAAslC,EAAAtnC,OAAA,GAAA4E,KAAA,KACA,OAAA,EAEA,GAAAsgC,IAAAX,EAAAY,cAAAqC,OAAA7D,GAAAuB,IAAAX,EAAAY,cAAAG,OACA3B,GAAAuB,IAAAX,EAAAY,cAAAK,QACA,OAAA,EACA,GAAAN,IAAAX,EAAAY,cAAAsC,IAAA9D,GAAAuB,IAAAX,EAAAY,cAAAG,QACA3B,GAAAuB,IAAAX,EAAAY,cAAAK,QACA,OAAA,EAGA,IAAAkC,EAAA,IAAA,IAAA1lC,MAAAslC,EAAAtnC,QAAA4E,KAAA,KACA,GAAA0iC,EAAAI,EACA,OAAA,EACA,GAAAJ,EAAAI,EACA,OAAA,EAEA,OAAAxC,GACA,KAAAX,EAAAY,cAAAwC,UAAA,OAAA,EACA,KAAApD,EAAAY,cAAAyC,QAAA,OAAA,EACA,KAAArD,EAAAY,cAAAC,UACA,QAAA,OAAAx7B,SAAA29B,EAAAA,EAAAvnC,OAAA,IAAA,GAAA,EAEA,CACA,SAAA6nC,EAAAP,EAAA7nC,QACA,IAAAA,IAAAA,EAAA,GACAA,IACAA,EAAA,GACA,iBAAA6nC,GACAA,EAAAnlC,WAEA,IADA,IAAAy/B,EAAA,GACApiC,EADA8nC,EAAAtnC,OAAA,EACAR,GAAA,EAAAA,IAAA,CACA,IAAA4M,EAAAxC,SAAA09B,EAAA9nC,IAAAC,EACA,IAAA2M,GACA3M,EAAA,EACA2M,EAAA,GAGA3M,EAAA,EAEAmiC,GAAAx1B,CACA,CAGA,OAFA3M,IACAmiC,GAAAniC,GACAmiC,EAAAzwB,MAAA,IAAAkd,UAAAzpB,KAAA,GACA,CA/CAlG,EAAA2mC,SAnDA,SAAAA,EAAAtnC,EAAAsB,EAAA6lC,GAGA,QAFA,IAAA7lC,IAAAA,EAAA,QACA,IAAA6lC,IAAAA,EAAAX,EAAAY,cAAAC,WACAF,IAAAX,EAAAY,cAAA2C,YACA,MAAA,IAAAjoC,MAAA,0DAEA,iBAAA9B,GAAA,iBAAAA,IACAA,EAAAA,EAAAoE,YACA,IAAAwhC,GAAA,EACA,MAAA5lC,EAAA,KACA4lC,GAAA,EACA5lC,EAAAA,EAAAumB,UAAA,IAEA,IAAA/f,EAAAxG,EAAAoT,MAAA,KAAA42B,EAAAxjC,EAAA,GAAAyjC,EAAAzjC,EAAA,GAEA,GAAAlF,EAAA,EAAA,CAEA,GADAA,GAAAA,EACA0oC,EAAA/nC,QAAAX,EACA,MAAA,IAEA,IAAA4oC,EAAAF,EAAAl+B,OAAA,EAAAk+B,EAAA/nC,OAAAX,GAGA,OAAAskC,EAAA,IAAA,KADAsE,EAAA5C,EADAtnC,EAAAkqC,EAAA,IAAAF,EAAAl+B,OAAAk+B,EAAA/nC,OAAAX,GAAA2oC,EACA,EAAA9C,IACA,IAAAljC,MAAA3C,EAAA,GAAAuF,KAAA,IAEA,CAEA,GAAA,GAAAvF,EAKA,OAJA0oC,EAAA/nC,OACAqnC,EAAA9iC,EAAA,GAAAwjC,EAAApE,EAAAuB,KACA6C,EAAAF,EAAAE,KAEApE,GAAA/5B,SAAAm+B,GAAA,IAAA,IAAAA,EAGA,IAAAxjC,EAAA,GACA,OAAAo/B,EAAA,IAAA,IAAAoE,EAAA,IAAA,IAAA/lC,MAAA3C,EAAA,GAAAuF,KAAA,KAEA,GAAAL,EAAA,GAAAvE,OAAAX,EACA,OAAAskC,EAAA,IAAA,IAAAoE,EAAA,IAAAxjC,EAAA,GAAA,IAAAvC,MAAA3C,EAAAkF,EAAA,GAAAvE,OAAA,GAAA4E,KAAA,KAEAojC,EAAAzjC,EAAA,GAAA+f,UAAA,EAAAjlB,GACA,IAAA6oC,EAAA3jC,EAAA,GAAA+f,UAAAjlB,GACA,OAAA6oC,GAAAb,EAAAa,EAAAF,EAAArE,EAAAuB,KACA8C,EAAAH,EAAAG,IACAhoC,OAAAX,GACAskC,EAAA,IAAA,IAAAkE,EAAAE,EAAAn+B,SAAAo+B,EAAA,KAAA,IAAAA,EAAA1jB,UAAA,IAGAqf,IAAA/5B,SAAAm+B,IAAAn+B,SAAAo+B,IAAA,IAAA,IAAAD,EAAA,IAAAC,CACA,CAmDA,EAEA,IACA,SAAAxF,EAAA9jC,GAGAnB,OAAAC,eAAAkB,EAAA,aAAA,CAAArB,OAAA,IACAqB,EAAAymC,mBAAA,EAEA,SAAAA,GAIAA,EAAAA,EAAA,QAAA,GAAA,UAIAA,EAAAA,EAAA,KAAA,GAAA,OAIAA,EAAAA,EAAA,MAAA,GAAA,QAKAA,EAAAA,EAAA,UAAA,GAAA,YAKAA,EAAAA,EAAA,UAAA,GAAA,YAKAA,EAAAA,EAAA,QAAA,GAAA,UAKAA,EAAAA,EAAA,YAAA,GAAA,cAIAA,EAAAA,EAAA,GAAA,GAAA,IACA,CArCA,CAqCAzmC,EAAAymC,gBAAAzmC,EAAAymC,cAAA,CAAA,GAGA,EAEA,GACA,SAAA3C,EAAA9jC,EAAAolC,GAGAvmC,OAAAC,eAAAkB,EAAA,aAAA,CAAArB,OAAA,IACAqB,EAAAonC,OAAApnC,EAAA+mC,cAAA,EACA,IAAA1B,EAAAD,EAAA,KAQA,SAAAgC,EAAApD,GAOA,OALAA,EADA,KAAAA,EAAA,GACAA,EAAA74B,OAAA,GAGA,IAAA64B,CAGA,CATAhkC,EAAA+mC,SANA,SAAAzC,EAAAC,GAIA,OAHAD,EAAAA,EAAA7gC,WAEA8gC,EAAA6C,EADA7C,EAAAA,EAAA9gC,aAEA,EAAA4hC,EAAAL,KAAAV,EAAAC,EACA,EAWAvkC,EAAAonC,OAAAA,CAGA,GAKAqC,EAAA,CAAA,EA4BAC,EAzBA,SAAAtE,EAAAuE,GAEA,IAAAC,EAAAH,EAAAE,GACA,QAAAjqC,IAAAkqC,EACA,OAAAA,EAAA5pC,QAGA,IAAAC,EAAAwpC,EAAAE,GAAA,CAGA3pC,QAAA,CAAA,GAOA,OAHA6jC,EAAA8F,GAAA1pC,EAAAA,EAAAD,QAAAolC,GAGAnlC,EAAAD,OACA,CAOAolC,CAAA,KAEAsE,EAx2BA,IAEA7F,EAw0BA4F,EA4BAC,CAKA,EAp3BA,iBAAA1pC,GAAA,iBAAAC,EACAA,EAAAD,QAAA4jC,IAGA,iBAAA5jC,EACAA,EAAA,WAAA4jC,IAEAD,EAAA,WAAAC,G1D+uQC,GAAEhkC,KAAKW,KAAM,GAAEX,KAAKW,KAAuB,oBAAXF,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAElJ,EAAE,CAAC,GAAG,GAAG,CAAC,SAASY,EAAQf,EAAOD,G2D9tQlCC,EAAAD,QAZA6pC,CAAApsB,EAAAuI,IAEAA,EAAAuJ,WAAA9R,IAAAuI,EAAAyJ,SAAAhS,GAEAuI,EAAAJ,UAAA,EAAAI,EAAA1kB,OAAA,GAIA0kB,C3D+vQA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAShlB,EAAQf,EAAOD,G4DnxQlC,IAAA8pC,EAAA9oC,EAAA,8BAiHAf,EAAAD,QAhGA,MAEA6S,YAAAk3B,EAAAC,GAGAzpC,KAAA0pC,QAAA,mBAAAF,EAAAA,EAAAD,EACAvpC,KAAA2pC,SAAA,mBAAAF,EAAAA,EAAAF,EAEAvpC,KAAA4pC,iBAAA,CAAA,CACA,CAEAC,mBAEA,OAAAvrC,OAAAiF,KAAAvD,KAAA4pC,kBAAA7oC,MACA,CAEA+oC,eAAAC,GAIA,GAAA,iBAAAA,EAGA,OADA/pC,KAAA2pC,SAAA,2FAAAtlC,cAAA0lC,KACA,EAGAzrC,OAAAiF,KAAAwmC,GAEAjjB,SACAkjB,IAEA,iBAAAD,EAAAC,GAEAhqC,KAAA2pC,SAAA,gFAAAtlC,OAAA2lC,EAAA,6CAAA3lC,cAAA0lC,EAAAC,KAIAhqC,KAAA4pC,iBAAAI,GAAAD,EAAAC,EACA,GAEA,CAEAC,sBAAAC,GAEAlqC,KAAA4pC,iBAAAnmC,eAAAymC,WAEAlqC,KAAA4pC,iBAAAM,EAEA,CAKAC,kBAAAJ,GAEA,GAAA,iBAAAA,EAGA,OADA/pC,KAAAiqC,sBAAAF,IACA,EAEA,GAAA,iBAAAA,EACA,CAQA,OAPAzrC,OAAAiF,KAAAwmC,GAEAjjB,SACAkjB,IAEAhqC,KAAAmqC,kBAAAH,EAAA,KAEA,CACA,CAIA,OADAhqC,KAAA2pC,SAAA,mHAAAtlC,cAAA0lC,KACA,CAEA,CAEAK,oBAEApqC,KAAA4pC,iBAAA,CAAA,CACA,CAEAS,UAAAN,GAEA,OAAA/pC,KAAA4pC,iBAAAnmC,eAAAsmC,GAEA/pC,KAAA4pC,iBAAAG,GAIAA,CAEA,E5D2xQA,EAAE,CAAC,6BAA6B,KAAK,GAAG,CAAC,SAAStpC,EAAQf,EAAOD,G6D33QjEC,EAAAD,QATA6qC,CAAAC,EAAA/sB,KAEA,IAAA4B,EAAA,iBAAAmrB,EAAAA,EAAA,GAEA79B,QAAA2S,IAAA,cAAAhb,OAAA+a,IAEA5B,GAAA9Q,QAAA2S,IAAAC,KAAAC,UAAA/B,GAAA,C7Di5QA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS/c,EAAQf,EAAOD,G8D55QlC,IAAA8pC,EAAA9oC,EAAA,8BAiNAf,EAAAD,QA7LA,MAEA6S,YAAAk3B,EAAAC,GAGAzpC,KAAA0pC,QAAA,mBAAAF,EAAAA,EAAAD,EACAvpC,KAAA2pC,SAAA,mBAAAF,EAAAA,EAAAF,CACA,CAQAiB,mBAAAvrB,EAAAwrB,GAIA,GAAA,iBAAAxrB,EAAA,OAAA,EAEA,GAAA,iBAAAwrB,EAAA,OAAA,EAGA,IAAAtlB,EAAAslB,EAAA5kC,QAAA,KAGA,IAAA,GAAAsf,EACA,CAEA,IAAAulB,EAAAD,EAAA5kC,QAAA,KACA8kC,EAAAF,EAAA5kC,QAAA,KAUA,GAAA6kC,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CAEA,IAAAE,EAAAH,EAAAplB,UAAA,EAAAqlB,GAAA58B,OAIA,GAAA,iBAAAmR,EAAA2rB,GAEA,OAAA,EAIA,IAAAC,EAAAJ,EAAAplB,UAAAqlB,EAAA,EAAAC,GAAA78B,OAEAg9B,EAAAngC,SAAAkgC,EAAA,IAOA,OAAA9nC,MAAAC,QAAAic,EAAA2rB,KAAA/zB,MAAAi0B,KAOAj0B,MAAAi0B,IAIAD,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GACAA,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GACAA,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GAGA5rB,EAAA2rB,GAAAnnC,eAAAonC,IAKAC,KAAA7rB,EAAA2rB,GAEA,CAIA,OAAA3rB,EAAAxb,eAAAgnC,EAEA,CAEA,CACA,IAAAM,EAAAN,EAAAplB,UAAA,EAAAF,GACA6lB,EAAAP,EAAAplB,UAAAF,EAAA,GAIAulB,EAAAK,EAAAllC,QAAA,KACA8kC,EAAAI,EAAAllC,QAAA,KAUA,GAAA6kC,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CACA,IAAAE,EAAAG,EAAA1lB,UAAA,EAAAqlB,GAAA58B,OAEA+8B,EAAAE,EAAA1lB,UAAAqlB,EAAA,EAAAC,GAAA78B,OAEAg9B,EAAAngC,SAAAkgC,EAAA,IAgBA,OAAA9nC,MAAAC,QAAAic,EAAA2rB,KAAA/zB,MAAAi0B,KAUAj0B,MAAAi0B,IAGAD,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GACAA,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GACAA,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GAGA7qC,KAAAwqC,mBAAAvrB,EAAA2rB,GAAAC,GAAAG,IAKAhrC,KAAAwqC,mBAAAvrB,EAAA2rB,GAAAE,GAAAE,GAEA,CAIA,QAAA/rB,EAAAxb,eAAAsnC,IAAA,iBAAA9rB,EAAA8rB,MAIA9rB,EAAAxb,eAAAsnC,KAQA9rB,EAAA8rB,GAAA,CAAA,GALA/qC,KAAAwqC,mBAAAvrB,EAAA8rB,GAAAC,GAQA,CACA,E9Do6QA,EAAE,CAAC,6BAA6B,KAAK,GAAG,CAAC,SAASvqC,EAAQf,EAAOD,G+DlnRjE,IAAA8pC,EAAA9oC,EAAA,8BACAwqC,EAAAxqC,EAAA,qCACAyqC,EAAAzqC,EAAA,2CA+VAf,EAAAD,QAzUA,MAEA6S,YAAAk3B,EAAAC,GAGAzpC,KAAA0pC,QAAA,mBAAAF,EAAAA,EAAAD,EACAvpC,KAAA2pC,SAAA,mBAAAF,EAAAA,EAAAF,EAEAvpC,KAAAspC,oBAAA2B,CACA,CAGAE,aAAAV,EAAAW,GAEA,OAAAF,EAAAlrC,KAAAyqC,EAAAW,EACA,CAGAC,qBAAApsB,EAAAwrB,EAAAa,GAGA,GAAA,iBAAArsB,EAAA,OAEA,GAAA,iBAAAwrB,EAAA,OAEA,IAAAc,EAAA,GACA,iBAAAD,IAEAC,EAAAD,GAIA,IAAAnmB,EAAAslB,EAAA5kC,QAAA,KAGA,IAAA,GAAAsf,EACA,CAEA,IAAAulB,EAAAD,EAAA5kC,QAAA,KACA8kC,EAAAF,EAAA5kC,QAAA,KAIA2lC,EAAAf,EAAA5kC,QAAA,MAWA,GAAA6kC,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CAEA,IAAAE,EAAAH,EAAAplB,UAAA,EAAAqlB,GAAA58B,OAIA,GAAA,iBAAAmR,EAAA2rB,GAEA,OAAA,EAIA,IAAAC,EAAAJ,EAAAplB,UAAAqlB,EAAA,EAAAC,GAAA78B,OAEAg9B,EAAAngC,SAAAkgC,EAAA,IAOA,OAAA9nC,MAAAC,QAAAic,EAAA2rB,KAAA/zB,MAAAi0B,KAOAj0B,MAAAi0B,IAIAD,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GACAA,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GACAA,EAAA7qC,KAAAspC,oBAAA,IAAAuB,UAGA5rB,EAAA2rB,GAAAC,IACA,WAIA5rB,EAAA2rB,GAAAE,IACA,GAEA,CAGA,GAAAJ,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,GAAA,EACA,CACA,IAAAE,EAAAH,EAAAplB,UAAA,EAAAqlB,GAAA58B,OAEA,IAAA/K,MAAAC,QAAAic,EAAA2rB,IAGA,OAAA,EAGA,IAAAlK,EAAAzhB,EAAA2rB,GAEA,IAAA,IAAArqC,EAAAmgC,EAAA3/B,OAAA,EAAAR,GAAA,EAAAA,IACA,CAEAP,KAAAmrC,aAAAV,EAAA/J,EAAAngC,KAIAmgC,EAAAG,OAAAtgC,EAAA,EAEA,CACA,OAAA,CACA,CAEA,GAAAirC,EAAA,EACA,CACA,IAAAC,EAAAhB,EAAAplB,UAAA,EAAAmmB,GAAA19B,OAEA,MAAA,iBAAAmR,EAAAwsB,YAMAxsB,EAAAwsB,IACA,EACA,CAKA,cADAxsB,EAAAwrB,IACA,CAEA,CAEA,CACA,IAAAM,EAAAN,EAAAplB,UAAA,EAAAF,GACA6lB,EAAAP,EAAAplB,UAAAF,EAAA,GAKAulB,EAAAK,EAAAllC,QAAA,KACA8kC,EAAAI,EAAAllC,QAAA,KAUA,GAAA6kC,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CACA,IAAAE,EAAAG,EAAA1lB,UAAA,EAAAqlB,GAAA58B,OAEA+8B,EAAAE,EAAA1lB,UAAAqlB,EAAA,EAAAC,GAAA78B,OAEAg9B,EAAAngC,SAAAkgC,EAAA,IAgBA,OAAA9nC,MAAAC,QAAAic,EAAA2rB,KAAA/zB,MAAAi0B,KAKA,iBAAA7rB,EAAA2rB,KASA/zB,MAAAi0B,IAGAD,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GACAA,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GACAA,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GAGAU,EAAA,GAAAlnC,OAAAknC,GAAAlnC,OAAAknC,EAAAxqC,OAAA,EAAA,IAAA,IAAAsD,OAAA0mC,GAEA/qC,KAAAqrC,qBAAApsB,EAAA2rB,GAAAC,GAAAG,EAAAO,KAKAA,EAAA,GAAAlnC,OAAAknC,GAAAlnC,OAAAknC,EAAAxqC,OAAA,EAAA,IAAA,IAAAsD,OAAA0mC,GAEA/qC,KAAAqrC,qBAAApsB,EAAA2rB,GAAAE,GAAAE,EAAAO,KAEA,CAGA,GAAAb,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,GAAA,EACA,CACA,IAAAE,EAAAH,EAAAplB,UAAA,EAAAqlB,GAAA58B,OAEA,IAAA/K,MAAAC,QAAAic,EAAA2rB,IAGA,OAAA,EAIA,IAAAc,EAAAzsB,EAAA2rB,GAEAW,EAAA,GAAAlnC,OAAAknC,GAAAlnC,OAAAknC,EAAAxqC,OAAA,EAAA,IAAA,IAAAsD,OAAAumC,GAEA,IAAAe,EAAA,CAAA,EACA,IAAA,IAAAprC,EAAA,EAAAA,EAAAmrC,EAAA3qC,OAAAR,IACA,CACA,IAAAqrC,EAAA,GAAAvnC,OAAAknC,EAAA,KAAAlnC,OAAA9D,EAAA,KACAqnB,EAAA5nB,KAAAqrC,qBAAApsB,EAAA2rB,GAAArqC,GAAAyqC,EAAAY,GAEAD,EAAA,GAAAtnC,OAAAunC,EAAA,KAAAvnC,OAAA2mC,IAAApjB,CACA,CAEA,OAAA+jB,CACA,CAIA,IAAAH,EAAAf,EAAA5kC,QAAA,MACA,GAAA2lC,EAAA,EACA,CACA,IAAAC,EAAAhB,EAAAplB,UAAA,EAAAmmB,GAAA19B,OAEA,GAAA,iBAAAmR,EAAAwsB,GAGA,OAAA,EAIA,IAAAI,EAAA5sB,EAAAwsB,GACAK,EAAAxtC,OAAAiF,KAAAsoC,GAEAN,EAAA,GAAAlnC,OAAAknC,GAAAlnC,OAAAknC,EAAAxqC,OAAA,EAAA,IAAA,IAAAsD,OAAAonC,GAEA,IAAAE,EAAA,CAAA,EACA,IAAA,IAAAprC,EAAA,EAAAA,EAAAurC,EAAA/qC,OAAAR,IACA,CACA,IAAAqrC,EAAA,GAAAvnC,OAAAknC,EAAA,KAAAlnC,OAAAynC,EAAAvrC,IACAqnB,EAAA5nB,KAAAqrC,qBAAApsB,EAAAwsB,GAAAK,EAAAvrC,IAAAyqC,EAAAY,GAGA5rC,KAAAmrC,aAAAV,EAAA7iB,KAGA+jB,EAAA,GAAAtnC,OAAAunC,EAAA,KAAAvnC,OAAA2mC,IAAApjB,EAEA,CAEA,OAAA+jB,CACA,CAIA,OAAA1sB,EAAAxb,eAAAsnC,IAAA,iBAAA9rB,EAAA8rB,QAEA,EAEA9rB,EAAAxb,eAAAsnC,IAIAQ,EAAA,GAAAlnC,OAAAknC,GAAAlnC,OAAAknC,EAAAxqC,OAAA,EAAA,IAAA,IAAAsD,OAAA0mC,GACA/qC,KAAAqrC,qBAAApsB,EAAA8rB,GAAAC,EAAAO,KAMAA,EAAA,GAAAlnC,OAAAknC,GAAAlnC,OAAAknC,EAAAxqC,OAAA,EAAA,IAAA,IAAAsD,OAAA0mC,GACA9rB,EAAA8rB,GAAA,CAAA,EACA/qC,KAAAqrC,qBAAApsB,EAAA8rB,GAAAC,EAAAO,GAEA,CACA,E/D0nRA,EAAE,CAAC,0CAA0C,GAAG,oCAAoC,GAAG,6BAA6B,KAAK,GAAG,CAAC,SAAS9qC,EAAQf,EAAOD,GgEx9RrJ,IAAA8pC,EAAA9oC,EAAA,8BACAwqC,EAAAxqC,EAAA,qCACAyqC,EAAAzqC,EAAA,2CAuYAf,EAAAD,QAjXA,MAEA6S,YAAAk3B,EAAAC,GAGAzpC,KAAA0pC,QAAA,mBAAAF,EAAAA,EAAAD,EACAvpC,KAAA2pC,SAAA,mBAAAF,EAAAA,EAAAF,EAEAvpC,KAAAspC,oBAAA2B,CACA,CAEAE,aAAAV,EAAAW,GAEA,OAAAF,EAAAlrC,KAAAyqC,EAAAW,EACA,CAGAW,kBAAA9sB,EAAAwrB,EAAAa,EAAAU,GAGA,GAAA,iBAAA/sB,EAAA,OAEA,GAAA,iBAAAwrB,EAAA,OAEA,IAAAc,EAAA,GACA,iBAAAD,IAEAC,EAAAD,GAIA,IAAAW,OAAA,IAAAD,EAAA/sB,EAAA+sB,EAGA7mB,EAAAslB,EAAA5kC,QAAA,KAGA,GAAA,GAAAsf,EACA,CAGA,IAAA+mB,EAAAX,EAAAr5B,MAAA,KAEAi6B,EAAA,EAGA,IAAA,IAAA5rC,EAAA,EAAAA,EAAAkqC,EAAA1pC,QAEA,KAAA0pC,EAAA3hB,OAAAvoB,GAFAA,IAMA4rC,IAGA,IAAAC,EAAAF,EAAAnrC,OAAAorC,EAEA,GAAAC,EAAA,EAKA,OAGA,CAGA,IAAAC,EAAA5B,EAAAnjC,MAAA6kC,GAMA,OALAC,EAAA,IAEAC,EAAA,GAAAhoC,OAAA6nC,EAAA5kC,MAAA,EAAA8kC,GAAAzmC,KAAA,KAAA,KAAAtB,OAAAgoC,IAEArsC,KAAA0pC,QAAA,yDAAArlC,OAAAgoC,EAAA,MACArsC,KAAA+rC,kBAAAE,EAAAI,EACA,CACA,CAGA,IAAA,GAAAlnB,EACA,CAEA,IAAAulB,EAAAD,EAAA5kC,QAAA,KACA8kC,EAAAF,EAAA5kC,QAAA,KAIA2lC,EAAAf,EAAA5kC,QAAA,MAWA,GAAA6kC,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CAEA,IAAAE,EAAAH,EAAAplB,UAAA,EAAAqlB,GAAA58B,OAIA,GAAA,iBAAAmR,EAAA2rB,GAEA,OAIA,IAAAC,EAAAJ,EAAAplB,UAAAqlB,EAAA,EAAAC,GAAA78B,OAEAg9B,EAAAngC,SAAAkgC,EAAA,IAOA,GAAA9nC,MAAAC,QAAAic,EAAA2rB,KAAA/zB,MAAAi0B,GAEA,OAKA,OAAAj0B,MAAAi0B,IAIAD,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GACAA,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GACAA,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GAGA5rB,EAAA2rB,GAAAC,IAIA5rB,EAAA2rB,GAAAE,EAEA,CAGA,GAAAJ,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,GAAA,EACA,CACA,IAAAE,EAAAH,EAAAplB,UAAA,EAAAqlB,GAAA58B,OAEA,IAAA/K,MAAAC,QAAAic,EAAA2rB,IAGA,OAAA,EAGA,IAAAlK,EAAAzhB,EAAA2rB,GACA0B,EAAA,GACA,IAAA,IAAA/rC,EAAA,EAAAA,EAAAmgC,EAAA3/B,OAAAR,IACA,CAEAP,KAAAmrC,aAAAV,EAAA/J,EAAAngC,KAGA+rC,EAAA1pC,KAAA89B,EAAAngC,GAEA,CAEA,OAAA+rC,CACA,CAEA,GAAAd,EAAA,EACA,CACA,IAAAC,EAAAhB,EAAAplB,UAAA,EAAAmmB,GAAA19B,OAEA,MAAA,iBAAAmR,EAAAwsB,IAMAxsB,EAAAwsB,EACA,CAIA,OAAAxsB,EAAAwrB,EAEA,CAEA,CACA,IAAAM,EAAAN,EAAAplB,UAAA,EAAAF,GACA6lB,EAAAP,EAAAplB,UAAAF,EAAA,GAKAulB,EAAAK,EAAAllC,QAAA,KACA8kC,EAAAI,EAAAllC,QAAA,KAUA,GAAA6kC,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CACA,IAAAE,EAAAG,EAAA1lB,UAAA,EAAAqlB,GAAA58B,OAEA+8B,EAAAE,EAAA1lB,UAAAqlB,EAAA,EAAAC,GAAA78B,OAEAg9B,EAAAngC,SAAAkgC,EAAA,IAgBA,GAAA9nC,MAAAC,QAAAic,EAAA2rB,KAAA/zB,MAAAi0B,GAEA,OAGA,GAAA,iBAAA7rB,EAAA2rB,GAEA,OAOA,OAAA/zB,MAAAi0B,IAGAD,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GACAA,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GACAA,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GAGAU,EAAA,GAAAlnC,OAAAknC,GAAAlnC,OAAAknC,EAAAxqC,OAAA,EAAA,IAAA,IAAAsD,OAAA0mC,GAEA/qC,KAAA+rC,kBAAA9sB,EAAA2rB,GAAAC,GAAAG,EAAAO,EAAAU,KAKAV,EAAA,GAAAlnC,OAAAknC,GAAAlnC,OAAAknC,EAAAxqC,OAAA,EAAA,IAAA,IAAAsD,OAAA0mC,GAEA/qC,KAAA+rC,kBAAA9sB,EAAA2rB,GAAAE,GAAAE,EAAAO,EAAAU,GAEA,CAGA,GAAAvB,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,GAAA,EACA,CACA,IAAAE,EAAAH,EAAAplB,UAAA,EAAAqlB,GAAA58B,OAEA,IAAA/K,MAAAC,QAAAic,EAAA2rB,IAGA,OAAA,EAIA,IAAAc,EAAAzsB,EAAA2rB,GAEAW,EAAA,GAAAlnC,OAAAknC,GAAAlnC,OAAAknC,EAAAxqC,OAAA,EAAA,IAAA,IAAAsD,OAAAumC,GAEA,IAAAe,EAAA,CAAA,EACA,IAAA,IAAAprC,EAAA,EAAAA,EAAAmrC,EAAA3qC,OAAAR,IACA,CACA,IAAAqrC,EAAA,GAAAvnC,OAAAknC,EAAA,KAAAlnC,OAAA9D,EAAA,KACAqnB,EAAA5nB,KAAA+rC,kBAAA9sB,EAAA2rB,GAAArqC,GAAAyqC,EAAAY,EAAAK,GAEAN,EAAA,GAAAtnC,OAAAunC,EAAA,KAAAvnC,OAAA2mC,IAAApjB,CACA,CAEA,OAAA+jB,CACA,CAIA,IAAAH,EAAAf,EAAA5kC,QAAA,MACA,GAAA2lC,EAAA,EACA,CACA,IAAAC,EAAAhB,EAAAplB,UAAA,EAAAmmB,GAAA19B,OAEA,GAAA,iBAAAmR,EAAAwsB,GAGA,OAAA,EAIA,IAAAI,EAAA5sB,EAAAwsB,GACAK,EAAAxtC,OAAAiF,KAAAsoC,GAEAN,EAAA,GAAAlnC,OAAAknC,GAAAlnC,OAAAknC,EAAAxqC,OAAA,EAAA,IAAA,IAAAsD,OAAAonC,GAEA,IAAAE,EAAA,CAAA,EACA,IAAA,IAAAprC,EAAA,EAAAA,EAAAurC,EAAA/qC,OAAAR,IACA,CACA,IAAAqrC,EAAA,GAAAvnC,OAAAknC,EAAA,KAAAlnC,OAAAynC,EAAAvrC,IACAqnB,EAAA5nB,KAAA+rC,kBAAA9sB,EAAAwsB,GAAAK,EAAAvrC,IAAAyqC,EAAAY,EAAAK,GAGAjsC,KAAAmrC,aAAAV,EAAA7iB,KAGA+jB,EAAA,GAAAtnC,OAAAunC,EAAA,KAAAvnC,OAAA2mC,IAAApjB,EAEA,CAEA,OAAA+jB,CACA,CAIA,OAAA1sB,EAAAxb,eAAAsnC,IAAA,iBAAA9rB,EAAA8rB,QAEA,EAEA9rB,EAAAxb,eAAAsnC,IAIAQ,EAAA,GAAAlnC,OAAAknC,GAAAlnC,OAAAknC,EAAAxqC,OAAA,EAAA,IAAA,IAAAsD,OAAA0mC,GACA/qC,KAAA+rC,kBAAA9sB,EAAA8rB,GAAAC,EAAAO,EAAAU,KAMAV,EAAA,GAAAlnC,OAAAknC,GAAAlnC,OAAAknC,EAAAxqC,OAAA,EAAA,IAAA,IAAAsD,OAAA0mC,GACA9rB,EAAA8rB,GAAA,CAAA,EACA/qC,KAAA+rC,kBAAA9sB,EAAA8rB,GAAAC,EAAAO,EAAAU,GAEA,CACA,EhEg+RA,EAAE,CAAC,0CAA0C,GAAG,oCAAoC,GAAG,6BAA6B,KAAK,GAAG,CAAC,SAASxrC,EAAQf,EAAOD,GiEt2SrJ,IAAA8pC,EAAA9oC,EAAA,8BACAwqC,EAAAxqC,EAAA,qCA+MAf,EAAAD,QA3LA,MAEA6S,YAAAk3B,EAAAC,GAGAzpC,KAAA0pC,QAAA,mBAAAF,EAAAA,EAAAD,EACAvpC,KAAA2pC,SAAA,mBAAAF,EAAAA,EAAAF,EAEAvpC,KAAAspC,oBAAA2B,CACA,CAGAsB,kBAAAttB,EAAAwrB,EAAAxZ,GAGA,GAAA,iBAAAhS,EAAA,OAAA,EAEA,GAAA,iBAAAwrB,EAAA,OAAA,EAEA,IAAAtlB,EAAAslB,EAAA5kC,QAAA,KAEA,IAAA,GAAAsf,EACA,CAEA,IAAAulB,EAAAD,EAAA5kC,QAAA,KACA8kC,EAAAF,EAAA5kC,QAAA,KAUA,GAAA6kC,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CAEA,IAAAE,EAAAH,EAAAplB,UAAA,EAAAqlB,GAAA58B,OAIA,GAAA,iBAAAmR,EAAA2rB,GAEA,OAAA,EAIA,IAAAC,EAAAJ,EAAAplB,UAAAqlB,EAAA,EAAAC,GAAA78B,OAEAg9B,EAAAngC,SAAAkgC,EAAA,IAOA,OAAA9nC,MAAAC,QAAAic,EAAA2rB,KAAA/zB,MAAAi0B,KAOAj0B,MAAAi0B,IAIAD,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GACAA,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GACAA,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GAGA5rB,EAAA2rB,GAAAC,GAAA5Z,GACA,IAIAhS,EAAA2rB,GAAAE,GAAA7Z,GACA,GAEA,CAKA,OADAhS,EAAAwrB,GAAAxZ,GACA,CAEA,CAEA,CACA,IAAA8Z,EAAAN,EAAAplB,UAAA,EAAAF,GACA6lB,EAAAP,EAAAplB,UAAAF,EAAA,GAIAulB,EAAAK,EAAAllC,QAAA,KACA8kC,EAAAI,EAAAllC,QAAA,KAUA,GAAA6kC,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CACA,IAAAE,EAAAG,EAAA1lB,UAAA,EAAAqlB,GAAA58B,OAEA+8B,EAAAE,EAAA1lB,UAAAqlB,EAAA,EAAAC,GAAA78B,OAEAg9B,EAAAngC,SAAAkgC,EAAA,IAgBA,OAAA9nC,MAAAC,QAAAic,EAAA2rB,KAAA/zB,MAAAi0B,KAQAj0B,MAAAi0B,IAGAD,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GACAA,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GACAA,EAAA7qC,KAAAspC,oBAAA,IAAAuB,GAGA7qC,KAAAusC,kBAAAttB,EAAA2rB,GAAAC,GAAAG,EAAA/Z,IAKAjxB,KAAAusC,kBAAAttB,EAAA2rB,GAAAE,GAAAE,EAAA/Z,GAEA,CAIA,OAAAhS,EAAAxb,eAAAsnC,IAAA,iBAAA9rB,EAAA8rB,IAEA9rB,EAAAxb,eAAA,aACAwb,EAAA,QAAA,CAAA,GAEAA,EAAA,QAAAwrB,GAAAxZ,GACA,IAEAhS,EAAAxb,eAAAsnC,KAQA9rB,EAAA8rB,GAAA,CAAA,GALA/qC,KAAAusC,kBAAAttB,EAAA8rB,GAAAC,EAAA/Z,GAQA,CACA,EjE82SA,EAAE,CAAC,oCAAoC,GAAG,6BAA6B,KAAK,GAAG,CAAC,SAASxwB,EAAQf,EAAOD,GkE3jTxG,IAAA8pC,EAAA9oC,EAAA,8BA4HAf,EAAAD,QApGA,MAEA6S,YAAAk3B,EAAAC,GAGAzpC,KAAA0pC,QAAA,mBAAAF,EAAAA,EAAAD,EACAvpC,KAAA2pC,SAAA,mBAAAF,EAAAA,EAAAF,CACA,CAWAiD,mBAAAvtB,EAAAwtB,EAAAC,GAEA,IAAAC,EAAA,iBAAAF,EAAAA,EAAA,GACAG,EAAA,iBAAAF,EAAAA,EAAA,CAAA,EAEAG,SAAA5tB,EAEA6tB,EACA,CACAC,QAAAJ,EACAj5B,KAAAi5B,EACA9Q,KAAA8Q,EAEAK,UAAA,GASA,OALA,UAAAH,GAAA,MAAA5tB,IAEA4tB,EAAA,QAGAA,GAEA,IAAA,SACAC,EAAAG,SAAA,SACAH,EAAAI,QAAAjuB,EACA2tB,EAAAD,GAAAG,EACA,MACA,IAAA,SACA,IAAA,SACAA,EAAAG,SAAA,SACAH,EAAAI,QAAAjuB,EACA2tB,EAAAD,GAAAG,EACA,MACA,IAAA,YACA,IAAA,OACAA,EAAAG,SAAA,MACAH,EAAAI,QAAAjuB,EACA2tB,EAAAD,GAAAG,EACA,MACA,IAAA,SACA,GAAA/pC,MAAAC,QAAAic,GACA,CACA6tB,EAAAG,SAAA,QACA,IAAAN,IAEAC,EAAAD,GAAAG,GAGA,IAAA,IAAAvsC,EAAA,EAAAA,EAAA0e,EAAAle,OAAAR,IAEAP,KAAAwsC,mBAAAvtB,EAAA1e,GAAA,GAAA8D,OAAAsoC,EAAA,KAAAtoC,OAAA9D,EAAA,KAAAqsC,EAEA,KAEA,CACAE,EAAAG,SAAA,SACA,IAAAN,IAEAC,EAAAD,GAAAG,EACAH,GAAA,KAGA,IAAA1M,EAAA3hC,OAAAiF,KAAA0b,GAEA,IAAA,IAAA1e,EAAA,EAAAA,EAAA0/B,EAAAl/B,OAAAR,IAEAP,KAAAwsC,mBAAAvtB,EAAAghB,EAAA1/B,IAAA,GAAA8D,OAAAsoC,GAAAtoC,OAAA47B,EAAA1/B,IAAAqsC,EAEA,EAQA,OAAAA,CACA,ElEmkTA,EAAE,CAAC,6BAA6B,KAAK,GAAG,CAAC,SAASnsC,EAAQf,EAAOD,GmEjrTjE,MAAA0tC,EAAA,OAEAC,EAAA,OAIAC,EAAAA,CAAAC,EAAAlC,EAAAmC,EAAAC,EAAAvc,KAEA,OAAAuc,GAEA,IAAA,KACA,OAAAF,EAAAvB,kBAAAX,EAAAmC,IAAAtc,EAEA,IAAA,IACA,OAAAqc,EAAAvB,kBAAAX,EAAAmC,GAAAtc,EAEA,IAAA,IACA,OAAAqc,EAAAvB,kBAAAX,EAAAmC,GAAAtc,EAEA,IAAA,KACA,OAAAqc,EAAAvB,kBAAAX,EAAAmC,IAAAtc,EAEA,IAAA,KACA,OAAAqc,EAAAvB,kBAAAX,EAAAmC,IAAAtc,EAEA,IAAA,MACA,OAAAqc,EAAAvB,kBAAAX,EAAAmC,KAAAtc,EAGA,QACA,OAAAqc,EAAAvB,kBAAAX,EAAAmC,IAAAtc,EAEA,EA4CAvxB,EAAAD,QAzCAguC,CAAAH,EAAA7C,EAAAW,KAEA,IAAAsC,GAAA,EAWAC,EAAAlD,EAAA5kC,QAAAsnC,GAEA,MAAA,GAAAQ,GACA,CACA,IAAAC,EAAAnD,EAAA5kC,QAAAunC,EAAAO,EAnDAR,GAqDA,IAAA,GAAAS,EACA,CACA,IAAAC,EAAApD,EAAAplB,UAAAsoB,EAvDAR,EAuDAS,GAAA17B,MAAA,KAEA47B,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAGAH,EAAAA,GAAAL,EAAAC,EAAAlC,EAAA0C,EAAAC,EAAAC,GACAL,EAAAlD,EAAA5kC,QAAAsnC,EAAAS,EA7DAR,EA8DA,MAGAO,GAAA,CAGA,CAEA,OAAAD,CAAA,CnEosTA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASjtC,EAAQf,EAAOD,GoExxTlC,IAAA8pC,EAAA9oC,EAAA,8BAqIAf,EAAAD,QA9HA,MAEA6S,YAAAk3B,EAAAC,GAGAzpC,KAAA0pC,QAAA,mBAAAF,EAAAA,EAAAD,EACAvpC,KAAA2pC,SAAA,mBAAAF,EAAAA,EAAAF,CACA,CAoBA0E,uBAAAC,EAAAC,GAEA,GAAA,iBAAAD,EAGA,OADAluC,KAAA2pC,SAAA,+EACA,EAGA,GAAA,iBAAAwE,EAGA,OAAA,EAIA,IAAAC,EAAA9vC,OAAAiF,KAAA2qC,GACAG,EAAA,CAAA,EA6CA,OA5CAD,EAAAtnB,SACA2jB,IAEAyD,EAAAzD,GAAAhnC,eAAA,UAEA4qC,EAAAH,EAAAzD,GAAA/2B,MAAA+2B,EACA,IAGAnsC,OAAAiF,KAAA4qC,GAEArnB,SACAwnB,IAEA,IAAAC,EAAAJ,EAAAG,GACAE,GAAA,EACAC,GAAA,EAGAP,EAAAzqC,eAAA6qC,GAEAE,EAAAF,EAEAD,EAAA5qC,eAAA6qC,KAEAE,EAAAH,EAAAC,IAIAE,GAEAC,EAAAP,EAAAM,UACAN,EAAAM,IAKAC,EAAA,CAAA/6B,KAAA46B,GAIAJ,EAAAK,GAAAE,CAAA,KAGA,CACA,CAEAC,2BAAAR,EAAAC,GAGA,IAAAQ,EAAArvB,KAAAtJ,MAAAsJ,KAAAC,UAAA2uB,IAEA,OADAluC,KAAAiuC,uBAAAU,EAAAR,GACAQ,CACA,CAEAC,qBAAAC,EAAAC,GAEA,GAAA,iBAAAA,GAAA,iBAAAD,EAGA,OADA7uC,KAAA2pC,SAAA,yEACA,EAGA,IAAAoF,EAAAzvB,KAAAtJ,MAAAsJ,KAAAC,UAAAuvB,IACAE,EAAA1vB,KAAAtJ,MAAAsJ,KAAAC,UAAAsvB,IAcA,OAXAvwC,OAAAiF,KAAAwrC,GAEAjoB,SACAmoB,IAEAD,EAAAvrC,eAAAwrC,KAEAD,EAAAC,GAAAF,EAAAE,GACA,IAGAD,CACA,EpEgyTA,EAAE,CAAC,6BAA6B,KAAK,GAAG,CAAC,SAASvuC,EAAQf,EAAOD,GqEl6TjE,MAAA+S,EAAA/R,EAAA,6BAEA,IAAA8oC,EAAA9oC,EAAA,8BAEAyuC,EAAAzuC,EAAA,iCACA0uC,EAAA1uC,EAAA,kDACA2uC,EAAA3uC,EAAA,wCACA4uC,EAAA5uC,EAAA,wCACA6uC,EAAA7uC,EAAA,2CACA8uC,EAAA9uC,EAAA,yCACA+uC,EAAA/uC,EAAA,oCAEA,MAAAgvC,EAAA,CAAAC,MAAA,UAAAC,YAAA,CAAA,GAOA,MAAAC,UAAAp9B,EAEAF,YAAAI,EAAAC,EAAAC,QAEAzT,IAAAuT,EAEAG,MAAA,CAAA,GAIAA,MAAAH,EAAAC,EAAAC,GAGA5S,KAAA8S,YAAA,WAGA9S,KAAA0pC,QAAAH,EACAvpC,KAAA2pC,SAAAJ,EAGAvpC,KAAA6vC,gCAAA,IAAAV,EAAAnvC,KAAA0pC,QAAA1pC,KAAA2pC,UACA3pC,KAAA8vC,sBAAA,IAAAV,EAAApvC,KAAA0pC,QAAA1pC,KAAA2pC,UACA3pC,KAAA+vC,sBAAA,IAAAV,EAAArvC,KAAA0pC,QAAA1pC,KAAA2pC,UACA3pC,KAAAgwC,yBAAA,IAAAV,EAAAtvC,KAAA0pC,QAAA1pC,KAAA2pC,UAEA3pC,KAAAiW,QAAAxS,eAAA,mBAEAzD,KAAAiW,QAAAg6B,cACA,CACApxC,OAAA,GACAU,OAAA,EACA2wC,MAAA,EACAC,QAAA,EACAC,SAAA,EACAC,OAAA,EACAC,SAAA,EACAvtC,MAAA,GACAzE,OAAA,CAAA,EACAiyC,KAAA,OAGAvwC,KAAAiW,QAAAxS,eAAA,YAEAzD,KAAAiW,QAAAu6B,QAAA,GAGAxwC,KAAAywC,WAAAtxC,EACAa,KAAA0wC,sBAAAvxC,EACAa,KAAA2wC,mBAAAxxC,EACAa,KAAA4wC,wBAAAzxC,EAEAa,KAAA6wC,QAEA,iBAAA7wC,KAAAiW,SAEAjW,KAAA8wC,aAAA9wC,KAAAiW,SAGAjW,KAAA+wC,oBAAA,IAAAvB,EAAAxvC,KAAA0pC,QAAA1pC,KAAA2pC,UACA3pC,KAAAgxC,wBAAA,IAAAzB,EAAAvvC,KAAA0pC,QAAA1pC,KAAA2pC,UAEA3pC,KAAAixC,iBAAA,IAAA/B,EAAAlvC,KAAA0pC,QAAA1pC,KAAA2pC,SACA,CAOAkH,QAEA7wC,KAAAywC,MAAA,UACAzwC,KAAA0wC,iBAAA,GACA1wC,KAAA2wC,cAAA,CAAA,EACA3wC,KAAA4wC,mBAAA,CAAA,CACA,CAEAM,QAGA,IAAAC,EAAA7xB,KAAAtJ,MAAAsJ,KAAAC,UAAAvf,KAAAiW,UAEAm7B,EAAA,IAAAxB,EAAA5vC,KAAAqxC,cAAArxC,KAAA0pC,QAAA1pC,KAAA2pC,SAAAwH,GAKA,OAFAC,EAAAH,iBAAAnH,eAAA9pC,KAAAixC,iBAAArH,kBAEAwH,CACA,CAGAE,YAAAC,GAGA,OAAAvxC,KAAA8wC,aAAAxxB,KAAAtJ,MAAAu7B,GACA,CAGAT,aAAAn+B,GAEA,iBAAAA,GAEA3S,KAAA2pC,SAAA,IAAAtlC,OAAArE,KAAAywC,MAAA,yEAAApsC,cAAAsO,EAAA,MAGA,IAAA6+B,EAAA,iBAAA7+B,EAAAA,EAAA,CAAA,EAEA8+B,EAAAnzC,OAAAiF,KAAAksC,GAEA,IAAA,IAAAlvC,EAAA,EAAAA,EAAAkxC,EAAA1wC,OAAAR,IAEAixC,EAAA/tC,eAAAguC,EAAAlxC,MAEAixC,EAAAC,EAAAlxC,IAAA+e,KAAAtJ,MAAAsJ,KAAAC,UAAAkwB,EAAAgC,EAAAlxC,OAoBA,GAhBAixC,EAAA/tC,eAAA,SAEA,iBAAA+tC,EAAA9B,MAEA1vC,KAAAywC,MAAAe,EAAA9B,MAIA1vC,KAAA2pC,SAAA,IAAAtlC,OAAArE,KAAAywC,MAAA,kFAAApsC,cAAAmtC,EAAA9B,MAAA,KAAA8B,GAKAxxC,KAAA2pC,SAAA,IAAAtlC,OAAArE,KAAAywC,MAAA,2GAAAe,GAGAA,EAAA/tC,eAAA,eAEA,GAAA,iBAAA+tC,EAAA7B,YACA,CACA,IAAA+B,EAAApzC,OAAAiF,KAAAiuC,EAAA7B,aACA,IAAA,IAAApvC,EAAA,EAAAA,EAAAmxC,EAAA3wC,OAAAR,IAEAP,KAAA2xC,cAAAD,EAAAnxC,GAAAixC,EAAA7B,YAAA+B,EAAAnxC,IAEA,MAGAP,KAAA2pC,SAAA,IAAAtlC,OAAArE,KAAAywC,MAAA,sIAAApsC,cAAAmtC,EAAA7B,YAAA,KAAA6B,QAKAxxC,KAAA2pC,SAAA,IAAAtlC,OAAArE,KAAAywC,MAAA,uIAAAe,GAGA,GAAAA,EAAA/tC,eAAA,qBAEA,iBAAA+tC,EAAAI,iBAEA,IAAA,IAAArxC,EAAA,EAAAA,EAAAixC,EAAAI,iBAAA7wC,OAAAR,KAMA,CAGAgW,YAEA,OAAA+I,KAAAC,UAAAvf,KAAAqxC,cACA,CAEAA,cAEA,MACA,CACA3B,MAAA1vC,KAAAywC,MACAd,YAAArwB,KAAAtJ,MAAAsJ,KAAAC,UAAAvf,KAAA4wC,qBACAgB,iBAAAtyB,KAAAtJ,MAAAsJ,KAAAC,UAAAvf,KAAAixC,iBAAArH,mBAEA,CAGA+H,cAAAlH,EAAAoH,GAEA,MAAA,iBAAAA,GAGAA,EAAApuC,eAAA,aAEAouC,EAAA9E,QAAAtC,GAGAzqC,KAAA4wC,mBAAAntC,eAAAgnC,IAEAzqC,KAAA0wC,iBAAA9tC,KAAA6nC,GAIAzqC,KAAA4wC,mBAAAnG,GAAAoH,EAGA7xC,KAAA2wC,cAAAlG,GAAAA,EAEAoH,EAAApuC,eAAA,QAIAzD,KAAA2wC,cAAAkB,EAAAn+B,MAAA+2B,EAIAoH,EAAAn+B,KAAA+2B,GAGA,IAIAzqC,KAAA2pC,SAAA,IAAAtlC,OAAArE,KAAAywC,MAAA,mDAAApsC,OAAAomC,EAAA,uEAAApmC,cAAAwtC,EAAA,OACA,EAEA,CAEAC,oBAAAv+B,GAEA,OAAAvT,KAAA+xC,cAAA/xC,KAAAgyC,mBAAAz+B,GACA,CAEAw+B,cAAAtH,GAEA,OAAAzqC,KAAA4wC,mBAAAnG,EACA,CAGAwH,eAAAt8B,GAEA,IAAAu8B,EAAA5zC,OAAAiF,KAAAvD,KAAA4wC,oBACA,IAAA,IAAArwC,EAAA,EAAAA,EAAA2xC,EAAAnxC,OAAAR,IAEAoV,EAAA3V,KAAA4wC,mBAAAsB,EAAA3xC,IAGA,CAMA4xC,yBAAAlzB,EAAA1L,GAEA,OAAAvT,KAAAwqC,mBAAAvrB,EAAAjf,KAAAgyC,mBAAAz+B,GACA,CAGAi3B,mBAAAvrB,EAAAwrB,GAEA,OAAAzqC,KAAA6vC,gCAAArF,mBAAAvrB,EAAAwrB,EACA,CAGAuH,mBAAAz+B,GAEA,IAAA6+B,EAEAC,EAAAryC,KAAA2wC,cAAAltC,eAAA8P,GACA++B,EAAAtyC,KAAAixC,iBAAArH,iBAAAnmC,eAAA8P,GAwBA,OAnBA6+B,EAFAC,IAAAC,EAEAtyC,KAAA2wC,cAAAp9B,GAGA++B,GAAAtyC,KAAA2wC,cAAAltC,eAAAzD,KAAAixC,iBAAA5G,UAAA92B,IAEAvT,KAAA2wC,cAAA3wC,KAAAixC,iBAAA5G,UAAA92B,IAGA++B,EAEAtyC,KAAAixC,iBAAA5G,UAAA92B,GAMAA,EAGA6+B,CACA,CAGAG,eAAAtzB,EAAA1L,GAEA,IAAAqU,EAAA5nB,KAAA+rC,kBAAA9sB,EAAAjf,KAAAgyC,mBAAAz+B,IAQA,YANA,IAAAqU,IAGAA,EAAA5nB,KAAAwyC,gBAAAxyC,KAAA8xC,oBAAAv+B,KAGAqU,CACA,CAGAmkB,kBAAA9sB,EAAAwrB,GAEA,IAAA7iB,EAAA5nB,KAAA8vC,sBAAA/D,kBAAA9sB,EAAAwrB,GAQA,YANA,IAAA7iB,IAGAA,EAAA5nB,KAAAwyC,gBAAAxyC,KAAA+xC,cAAAtH,KAGA7iB,CACA,CAGA6qB,eAAAxzB,EAAA1L,EAAA0d,GAEA,OAAAjxB,KAAAusC,kBAAAttB,EAAAjf,KAAAgyC,mBAAAz+B,GAAA0d,EACA,CAGAsb,kBAAAttB,EAAAwrB,EAAAxZ,GAEA,OAAAjxB,KAAA+vC,sBAAAxD,kBAAAttB,EAAAwrB,EAAAxZ,EACA,CAGAyhB,kBAAAzzB,EAAA1L,EAAA0d,GAEA,OAAAjxB,KAAAqrC,qBAAApsB,EAAAjf,KAAAgyC,mBAAAz+B,GAAA0d,EACA,CAGAoa,qBAAApsB,EAAAwrB,EAAAxZ,GAEA,OAAAjxB,KAAAgwC,yBAAA3E,qBAAApsB,EAAAwrB,EAAAxZ,EACA,CAGAsU,SAAAtmB,GAEA,IAAA0zB,EACA,CACA/xC,MAAA,KACA86B,OAAA,GACAkX,gBAAA,IAGA,iBAAA3zB,IAEA0zB,EAAA/xC,OAAA,EACA+xC,EAAAjX,OAAA94B,KAAA,iEAAAyB,cAAA4a,KAGA,IAAA4zB,EAAAA,CAAApI,EAAAqI,KAEAH,EAAA/xC,OAAA,EACA+xC,EAAAjX,OAAA94B,KAAA,uBAAAyB,OAAAomC,EAAA,MAAApmC,OAAAyuC,EAAA,KAAA,EAIA,IAAA,IAAAvyC,EAAA,EAAAA,EAAAP,KAAA0wC,iBAAA3vC,OAAAR,IACA,CACA,IAAAkuC,EAAAzuC,KAAA+xC,cAAA/xC,KAAA0wC,iBAAAnwC,IACAwyC,EAAA/yC,KAAAwqC,mBAAAvrB,EAAAwvB,EAAA1B,SACAnlB,EAAA5nB,KAAA+rC,kBAAA9sB,EAAAwvB,EAAA1B,SAcA,QAZA,IAAAnlB,GAAAmrB,IAIAJ,EAAAC,gBAAAhwC,KAAA6rC,EAAA1B,UACA0B,EAAAuE,UAAAhzC,KAAAiW,QAAAu6B,SAEAqC,EAAApE,EAAA1B,QAAA,qDAKA0B,EAAAxB,SACA,CACA,IAAAgG,SAAArrB,EACA,OAAA6mB,EAAAxB,SAAA/pC,WAAA4K,OAAA/E,eAEA,IAAA,SACA,UAAAkqC,GAEAJ,EAAApE,EAAA1B,QAAA,kBAAA1oC,OAAAoqC,EAAAxB,SAAA,wBAAA5oC,OAAA4uC,IAEA,MAEA,IAAA,SACA,UAAAA,GAEAJ,EAAApE,EAAA1B,QAAA,kBAAA1oC,OAAAoqC,EAAAxB,SAAA,wBAAA5oC,OAAA4uC,IAEA,MAEA,IAAA,UACA,GAAA,UAAAA,EAEAJ,EAAApE,EAAA1B,QAAA,kBAAA1oC,OAAAoqC,EAAAxB,SAAA,wBAAA5oC,OAAA4uC,QAGA,CACArrB,EAAA1kB,WACA2C,QAAA,MAAA,GAGAgtC,EAAApE,EAAA1B,QAAA,kBAAA1oC,OAAAoqC,EAAAxB,SAAA,2CAEA,CACA,MAEA,IAAA,QACA,UAAAgG,GAEAJ,EAAApE,EAAA1B,QAAA,kBAAA1oC,OAAAoqC,EAAAxB,SAAA,wBAAA5oC,OAAA4uC,IAEA,MAEA,IAAA,WAEA,gBADA,IAAAp/B,KAAA+T,GACA1kB,YAEA2vC,EAAApE,EAAA1B,QAAA,kBAAA1oC,OAAAoqC,EAAAxB,SAAA,iDAGA,QAGA,UAAAgG,GAEAJ,EAAApE,EAAA1B,QAAA,kBAAA1oC,OAAAoqC,EAAAxB,SAAA,qFAAA5oC,OAAA4uC,IAIA,CACA,CAEA,OAAAN,CACA,CAGAH,gBAAAX,GAEA,GAAA,iBAAAA,EAAA,CAKA,GAAAA,EAAApuC,eAAA,WAEA,OAAAouC,EAAA3E,QAGA,CAGA,IAAAgG,EAAArB,EAAApuC,eAAA,YAAAouC,EAAA5E,SAAA,SACA,OAAAjtC,KAAAiW,QAAAg6B,cAAAxsC,eAAAyvC,GAEAlzC,KAAAiW,QAAAg6B,cAAAiD,GAKA,IAEA,CApBA,CAqBA,CAGAC,iBAAAl0B,EAAAm0B,GAEA,OAAApzC,KAAAqzC,eAAAp0B,EAAAm0B,GAEAvB,GAEAA,EAAApuC,eAAA,YAEA,CAIA4vC,eAAAp0B,EAAAm0B,EAAAE,GAGA,IAAAhmB,EAAA,iBAAArO,EAAAA,EAAA,CAAA,EAEAs0B,OAAA,IAAAH,GAAAA,EAGAI,EAAA,mBAAAF,EAAAA,EAAAzB,IAAA,EAiBA,OAfA7xC,KAAA0wC,iBAAA5pB,SACA2jB,IAEA,IAAAgE,EAAAzuC,KAAA+xC,cAAAtH,GAEA+I,EAAA/E,MAGA8E,GAAAvzC,KAAAwqC,mBAAAld,EAAAmd,IAEAzqC,KAAAusC,kBAAAjf,EAAAmd,EAAAzqC,KAAAwyC,gBAAA/D,IAEA,IAGAnhB,CACA,EAGA5tB,EAAAD,QAAAmwC,CrEu6TA,EAAE,CAAC,gCAAgC,GAAG,6BAA6B,GAAG,iDAAiD,GAAG,0CAA0C,GAAG,uCAAuC,GAAG,uCAAuC,GAAG,wCAAwC,GAAG,mCAAmC,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAASnvC,EAAQf,EAAOD,GsEr8UzY,IAAAg0C,EAAAhzC,EAAA,UAoBA,SAAAoB,EAAAJ,GACA,IAAAjC,EAAA,SAAAA,IACA,OAAAA,EAAAk0C,OAAAl0C,EAAApB,OACAoB,EAAAk0C,QAAA,EACAl0C,EAAApB,MAAAqD,EAAAC,MAAA1B,KAAA2B,WACA,EAEA,OADAnC,EAAAk0C,QAAA,EACAl0C,CACA,CAEA,SAAAm0C,EAAAlyC,GACA,IAAAjC,EAAA,SAAAA,IACA,GAAAA,EAAAk0C,OACA,MAAA,IAAA9yC,MAAApB,EAAAo0C,WAEA,OADAp0C,EAAAk0C,QAAA,EACAl0C,EAAApB,MAAAqD,EAAAC,MAAA1B,KAAA2B,UACA,EACA4Q,EAAA9Q,EAAA8Q,MAAA,+BAGA,OAFA/S,EAAAo0C,UAAArhC,EAAA,sCACA/S,EAAAk0C,QAAA,EACAl0C,CACA,CAxCAE,EAAAD,QAAAg0C,EAAA5xC,GACAnC,EAAAD,QAAA+wC,OAAAiD,EAAAE,GAEA9xC,EAAAgyC,MAAAhyC,GAAA,WACAvD,OAAAC,eAAAyZ,SAAA/U,UAAA,OAAA,CACA7E,MAAA,WACA,OAAAyD,EAAA7B,KACA,EACAvB,cAAA,IAGAH,OAAAC,eAAAyZ,SAAA/U,UAAA,aAAA,CACA7E,MAAA,WACA,OAAAu1C,EAAA3zC,KACA,EACAvB,cAAA,GAEA,GtE+9UA,EAAE,CAACg1C,OAAS,MAAM,GAAG,CAAC,SAAShzC,EAAQf,EAAOD,IAC9C,SAAWmlB,IAAS,WuEx9UpB,SAAAkvB,EAAA98B,GACA,GAAA,iBAAAA,EACA,MAAA,IAAA1X,UAAA,mCAAAggB,KAAAC,UAAAvI,GAEA,CAGA,SAAA+8B,EAAA/8B,EAAAg9B,GAMA,IALA,IAIAnzC,EAJAzB,EAAA,GACA60C,EAAA,EACAC,GAAA,EACAC,EAAA,EAEA5zC,EAAA,EAAAA,GAAAyW,EAAAjW,SAAAR,EAAA,CACA,GAAAA,EAAAyW,EAAAjW,OACAF,EAAAmW,EAAA9R,WAAA3E,OACA,IAAA,KAAAM,EACA,MAEAA,EAAA,EAAA,CACA,GAAA,KAAAA,EAAA,CACA,GAAAqzC,IAAA3zC,EAAA,GAAA,IAAA4zC,QAEA,GAAAD,IAAA3zC,EAAA,GAAA,IAAA4zC,EAAA,CACA,GAAA/0C,EAAA2B,OAAA,GAAA,IAAAkzC,GAAA,KAAA70C,EAAA8F,WAAA9F,EAAA2B,OAAA,IAAA,KAAA3B,EAAA8F,WAAA9F,EAAA2B,OAAA,GACA,GAAA3B,EAAA2B,OAAA,EAAA,CACA,IAAAqzC,EAAAh1C,EAAAyK,YAAA,KACA,GAAAuqC,IAAAh1C,EAAA2B,OAAA,EAAA,EACA,IAAAqzC,GACAh1C,EAAA,GACA60C,EAAA,GAGAA,GADA70C,EAAAA,EAAAkI,MAAA,EAAA8sC,IACArzC,OAAA,EAAA3B,EAAAyK,YAAA,KAEAqqC,EAAA3zC,EACA4zC,EAAA,EACA,QACA,CACA,MAAA,GAAA,IAAA/0C,EAAA2B,QAAA,IAAA3B,EAAA2B,OAAA,CACA3B,EAAA,GACA60C,EAAA,EACAC,EAAA3zC,EACA4zC,EAAA,EACA,QACA,CAEAH,IACA50C,EAAA2B,OAAA,EACA3B,GAAA,MAEAA,EAAA,KACA60C,EAAA,EAEA,MACA70C,EAAA2B,OAAA,EACA3B,GAAA,IAAA4X,EAAA1P,MAAA4sC,EAAA,EAAA3zC,GAEAnB,EAAA4X,EAAA1P,MAAA4sC,EAAA,EAAA3zC,GACA0zC,EAAA1zC,EAAA2zC,EAAA,EAEAA,EAAA3zC,EACA4zC,EAAA,CACA,MAAA,KAAAtzC,IAAA,IAAAszC,IACAA,EAEAA,GAAA,CAEA,CACA,OAAA/0C,CACA,CAcA,IAAAi1C,EAAA,CAEA57B,QAAA,WAKA,IAJA,IAEA67B,EAFAC,EAAA,GACAC,GAAA,EAGAj0C,EAAAoB,UAAAZ,OAAA,EAAAR,IAAA,IAAAi0C,EAAAj0C,IAAA,CACA,IAAAyW,EACAzW,GAAA,EACAyW,EAAArV,UAAApB,SAEApB,IAAAm1C,IACAA,EAAA1vB,EAAA0vB,OACAt9B,EAAAs9B,GAGAR,EAAA98B,GAGA,IAAAA,EAAAjW,SAIAwzC,EAAAv9B,EAAA,IAAAu9B,EACAC,EAAA,KAAAx9B,EAAA9R,WAAA,GACA,CAQA,OAFAqvC,EAAAR,EAAAQ,GAAAC,GAEAA,EACAD,EAAAxzC,OAAA,EACA,IAAAwzC,EAEA,IACAA,EAAAxzC,OAAA,EACAwzC,EAEA,GAEA,EAEA10B,UAAA,SAAA7I,GAGA,GAFA88B,EAAA98B,GAEA,IAAAA,EAAAjW,OAAA,MAAA,IAEA,IAAA0zC,EAAA,KAAAz9B,EAAA9R,WAAA,GACAwvC,EAAA,KAAA19B,EAAA9R,WAAA8R,EAAAjW,OAAA,GAQA,OAHA,KAFAiW,EAAA+8B,EAAA/8B,GAAAy9B,IAEA1zC,QAAA0zC,IAAAz9B,EAAA,KACAA,EAAAjW,OAAA,GAAA2zC,IAAA19B,GAAA,KAEAy9B,EAAA,IAAAz9B,EACAA,CACA,EAEAy9B,WAAA,SAAAz9B,GAEA,OADA88B,EAAA98B,GACAA,EAAAjW,OAAA,GAAA,KAAAiW,EAAA9R,WAAA,EACA,EAEAS,KAAA,WACA,GAAA,IAAAhE,UAAAZ,OACA,MAAA,IAEA,IADA,IAAA4zC,EACAp0C,EAAA,EAAAA,EAAAoB,UAAAZ,SAAAR,EAAA,CACA,IAAA5B,EAAAgD,UAAApB,GACAuzC,EAAAn1C,GACAA,EAAAoC,OAAA,SACA5B,IAAAw1C,EACAA,EAAAh2C,EAEAg2C,GAAA,IAAAh2C,EAEA,CACA,YAAAQ,IAAAw1C,EACA,IACAN,EAAAx0B,UAAA80B,EACA,EAEAC,SAAA,SAAA5tC,EAAA6tC,GAIA,GAHAf,EAAA9sC,GACA8sC,EAAAe,GAEA7tC,IAAA6tC,EAAA,MAAA,GAKA,IAHA7tC,EAAAqtC,EAAA57B,QAAAzR,OACA6tC,EAAAR,EAAA57B,QAAAo8B,IAEA,MAAA,GAIA,IADA,IAAAC,EAAA,EACAA,EAAA9tC,EAAAjG,QACA,KAAAiG,EAAA9B,WAAA4vC,KADAA,GASA,IALA,IAAAC,EAAA/tC,EAAAjG,OACAi0C,EAAAD,EAAAD,EAGAG,EAAA,EACAA,EAAAJ,EAAA9zC,QACA,KAAA8zC,EAAA3vC,WAAA+vC,KADAA,GAWA,IAPA,IACAC,EADAL,EAAA9zC,OACAk0C,EAGAl0C,EAAAi0C,EAAAE,EAAAF,EAAAE,EACAC,GAAA,EACA50C,EAAA,EACAA,GAAAQ,IAAAR,EAAA,CACA,GAAAA,IAAAQ,EAAA,CACA,GAAAm0C,EAAAn0C,EAAA,CACA,GAAA,KAAA8zC,EAAA3vC,WAAA+vC,EAAA10C,GAGA,OAAAs0C,EAAAvtC,MAAA2tC,EAAA10C,EAAA,GACA,GAAA,IAAAA,EAGA,OAAAs0C,EAAAvtC,MAAA2tC,EAAA10C,EAEA,MAAAy0C,EAAAj0C,IACA,KAAAiG,EAAA9B,WAAA4vC,EAAAv0C,GAGA40C,EAAA50C,EACA,IAAAA,IAGA40C,EAAA,IAGA,KACA,CACA,IAAAC,EAAApuC,EAAA9B,WAAA4vC,EAAAv0C,GAEA,GAAA60C,IADAP,EAAA3vC,WAAA+vC,EAAA10C,GAEA,MACA,KAAA60C,IACAD,EAAA50C,EACA,CAEA,IAAAkO,EAAA,GAGA,IAAAlO,EAAAu0C,EAAAK,EAAA,EAAA50C,GAAAw0C,IAAAx0C,EACAA,IAAAw0C,GAAA,KAAA/tC,EAAA9B,WAAA3E,KACA,IAAAkO,EAAA1N,OACA0N,GAAA,KAEAA,GAAA,OAMA,OAAAA,EAAA1N,OAAA,EACA0N,EAAAomC,EAAAvtC,MAAA2tC,EAAAE,IAEAF,GAAAE,EACA,KAAAN,EAAA3vC,WAAA+vC,MACAA,EACAJ,EAAAvtC,MAAA2tC,GAEA,EAEAI,UAAA,SAAAr+B,GACA,OAAAA,CACA,EAEAs+B,QAAA,SAAAt+B,GAEA,GADA88B,EAAA98B,GACA,IAAAA,EAAAjW,OAAA,MAAA,IAKA,IAJA,IAAAF,EAAAmW,EAAA9R,WAAA,GACAqwC,EAAA,KAAA10C,EACAkF,GAAA,EACAyvC,GAAA,EACAj1C,EAAAyW,EAAAjW,OAAA,EAAAR,GAAA,IAAAA,EAEA,GAAA,MADAM,EAAAmW,EAAA9R,WAAA3E,KAEA,IAAAi1C,EAAA,CACAzvC,EAAAxF,EACA,KACA,OAGAi1C,GAAA,EAIA,OAAA,IAAAzvC,EAAAwvC,EAAA,IAAA,IACAA,GAAA,IAAAxvC,EAAA,KACAiR,EAAA1P,MAAA,EAAAvB,EACA,EAEA0vC,SAAA,SAAAz+B,EAAAnI,GACA,QAAA1P,IAAA0P,GAAA,iBAAAA,EAAA,MAAA,IAAAvP,UAAA,mCACAw0C,EAAA98B,GAEA,IAGAzW,EAHAuF,EAAA,EACAC,GAAA,EACAyvC,GAAA,EAGA,QAAAr2C,IAAA0P,GAAAA,EAAA9N,OAAA,GAAA8N,EAAA9N,QAAAiW,EAAAjW,OAAA,CACA,GAAA8N,EAAA9N,SAAAiW,EAAAjW,QAAA8N,IAAAmI,EAAA,MAAA,GACA,IAAA0+B,EAAA7mC,EAAA9N,OAAA,EACA40C,GAAA,EACA,IAAAp1C,EAAAyW,EAAAjW,OAAA,EAAAR,GAAA,IAAAA,EAAA,CACA,IAAAM,EAAAmW,EAAA9R,WAAA3E,GACA,GAAA,KAAAM,GAGA,IAAA20C,EAAA,CACA1vC,EAAAvF,EAAA,EACA,KACA,OAEA,IAAAo1C,IAGAH,GAAA,EACAG,EAAAp1C,EAAA,GAEAm1C,GAAA,IAEA70C,IAAAgO,EAAA3J,WAAAwwC,IACA,KAAAA,IAGA3vC,EAAAxF,IAKAm1C,GAAA,EACA3vC,EAAA4vC,GAIA,CAGA,OADA7vC,IAAAC,EAAAA,EAAA4vC,GAAA,IAAA5vC,IAAAA,EAAAiR,EAAAjW,QACAiW,EAAA1P,MAAAxB,EAAAC,EACA,CACA,IAAAxF,EAAAyW,EAAAjW,OAAA,EAAAR,GAAA,IAAAA,EACA,GAAA,KAAAyW,EAAA9R,WAAA3E,IAGA,IAAAi1C,EAAA,CACA1vC,EAAAvF,EAAA,EACA,KACA,OACA,IAAAwF,IAGAyvC,GAAA,EACAzvC,EAAAxF,EAAA,GAIA,OAAA,IAAAwF,EAAA,GACAiR,EAAA1P,MAAAxB,EAAAC,EAEA,EAEA6vC,QAAA,SAAA5+B,GACA88B,EAAA98B,GAQA,IAPA,IAAA6+B,GAAA,EACAC,EAAA,EACA/vC,GAAA,EACAyvC,GAAA,EAGAO,EAAA,EACAx1C,EAAAyW,EAAAjW,OAAA,EAAAR,GAAA,IAAAA,EAAA,CACA,IAAAM,EAAAmW,EAAA9R,WAAA3E,GACA,GAAA,KAAAM,GASA,IAAAkF,IAGAyvC,GAAA,EACAzvC,EAAAxF,EAAA,GAEA,KAAAM,GAEA,IAAAg1C,EACAA,EAAAt1C,EACA,IAAAw1C,IACAA,EAAA,IACA,IAAAF,IAGAE,GAAA,QArBA,IAAAP,EAAA,CACAM,EAAAv1C,EAAA,EACA,KACA,CAoBA,CAEA,OAAA,IAAAs1C,IAAA,IAAA9vC,GAEA,IAAAgwC,GAEA,IAAAA,GAAAF,IAAA9vC,EAAA,GAAA8vC,IAAAC,EAAA,EACA,GAEA9+B,EAAA1P,MAAAuuC,EAAA9vC,EACA,EAEAiwC,OAAA,SAAAC,GACA,GAAA,OAAAA,GAAA,iBAAAA,EACA,MAAA,IAAA32C,UAAA,0EAAA22C,GAEA,OAvVA,SAAAte,EAAAse,GACA,IAAAtsC,EAAAssC,EAAAtsC,KAAAssC,EAAA7S,KACAjd,EAAA8vB,EAAA9vB,OAAA8vB,EAAA1jC,MAAA,KAAA0jC,EAAApnC,KAAA,IACA,OAAAlF,EAGAA,IAAAssC,EAAA7S,KACAz5B,EAAAwc,EAEAxc,EAAAguB,EAAAxR,EALAA,CAMA,CA6UA+vB,CAAA,IAAAD,EACA,EAEAjgC,MAAA,SAAAgB,GACA88B,EAAA98B,GAEA,IAAAxI,EAAA,CAAA40B,KAAA,GAAAz5B,IAAA,GAAAwc,KAAA,GAAAtX,IAAA,GAAA0D,KAAA,IACA,GAAA,IAAAyE,EAAAjW,OAAA,OAAAyN,EACA,IAEA1I,EAFAjF,EAAAmW,EAAA9R,WAAA,GACAuvC,EAAA,KAAA5zC,EAEA4zC,GACAjmC,EAAA40B,KAAA,IACAt9B,EAAA,GAEAA,EAAA,EAaA,IAXA,IAAA+vC,GAAA,EACAC,EAAA,EACA/vC,GAAA,EACAyvC,GAAA,EACAj1C,EAAAyW,EAAAjW,OAAA,EAIAg1C,EAAA,EAGAx1C,GAAAuF,IAAAvF,EAEA,GAAA,MADAM,EAAAmW,EAAA9R,WAAA3E,KAUA,IAAAwF,IAGAyvC,GAAA,EACAzvC,EAAAxF,EAAA,GAEA,KAAAM,GAEA,IAAAg1C,EAAAA,EAAAt1C,EAAA,IAAAw1C,IAAAA,EAAA,IACA,IAAAF,IAGAE,GAAA,QAlBA,IAAAP,EAAA,CACAM,EAAAv1C,EAAA,EACA,KACA,CAwCA,OArBA,IAAAs1C,IAAA,IAAA9vC,GAEA,IAAAgwC,GAEA,IAAAA,GAAAF,IAAA9vC,EAAA,GAAA8vC,IAAAC,EAAA,GACA,IAAA/vC,IACAyI,EAAA2X,KAAA3X,EAAA+D,KAAA,IAAAujC,GAAArB,EAAAz9B,EAAA1P,MAAA,EAAAvB,GAAAiR,EAAA1P,MAAAwuC,EAAA/vC,KAGA,IAAA+vC,GAAArB,GACAjmC,EAAA+D,KAAAyE,EAAA1P,MAAA,EAAAuuC,GACArnC,EAAA2X,KAAAnP,EAAA1P,MAAA,EAAAvB,KAEAyI,EAAA+D,KAAAyE,EAAA1P,MAAAwuC,EAAAD,GACArnC,EAAA2X,KAAAnP,EAAA1P,MAAAwuC,EAAA/vC,IAEAyI,EAAAK,IAAAmI,EAAA1P,MAAAuuC,EAAA9vC,IAGA+vC,EAAA,EAAAtnC,EAAA7E,IAAAqN,EAAA1P,MAAA,EAAAwuC,EAAA,GAAArB,IAAAjmC,EAAA7E,IAAA,KAEA6E,CACA,EAEAmpB,IAAA,IACAwe,UAAA,IACAC,MAAA,KACA/B,MAAA,MAGAA,EAAAA,MAAAA,EAEA30C,EAAAD,QAAA40C,CvEq/UC,GAAEh1C,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAElC,EAAE,CAACklB,SAAW,KAAK,GAAG,CAAC,SAASllB,EAAQf,EAAOD,GwEvgW/C,MAAAspB,EAAAtoB,EAAA,6BAEA41C,EACA,CACAxa,KAAA,yBAGAya,2BAAA,eACAC,4BAAA,EACAC,gCAAA,EACAC,gCAAA,EAGAC,0BAAA,EACAC,2CAAA,EAEAC,UAAA,CAAA,EAEAC,wBAAA,SAkWAn3C,EAAAD,QA/VA,cAAAspB,EAEAzW,YAAAI,EAAAuR,EAAArR,GAGAC,MAAAH,EADApU,OAAAqkB,OAAA,CAAA,EAAArD,KAAAtJ,MAAAsJ,KAAAC,UAAA82B,IAAApyB,GACArR,GACA5S,KAAA8S,YAAA,kBAGA9S,KAAA82C,KAAA92C,KAAAkkB,MAEAlkB,KAAA+2C,QAAA/2C,KAAAkkB,MAAA6yB,QAEA/2C,KAAAg3C,qBAAA,EACAh3C,KAAAi3C,qBAAA,EAGA,IAAAC,EAAA54C,OAAAiF,KAAAvD,KAAAiW,QAAA2gC,WACA,GAAAM,EAAAn2C,OAAA,EAEA,IAAA,IAAAR,EAAA,EAAAA,EAAA22C,EAAAn2C,OAAAR,IACA,CAEA,IAAA42C,EAAAD,EAAA32C,GACAP,KAAAkkB,MAAA4G,eAAArB,2BAAA,WAAAzpB,KAAAiW,QAAA2gC,UAAAO,GAAAA,EACA,CAEA,CAEAC,gBAMA,OAJAp3C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,YAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,qBAEA,CACA,CACAyb,mBAAAprB,GAGA,OADAlsB,KAAAo3C,gBACAlrB,GACA,CAEAqrB,UAMA,OAJAv3C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,YAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,eAEA,CACA,CACA2b,aAAAtrB,GAGA,OADAlsB,KAAAu3C,UACArrB,GACA,CAEAurB,QAEAz3C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,YAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,mCAEA77B,KAAAo3C,gBAEA,IAAAM,EAAAp5C,OAAAiF,KAAAvD,KAAA82C,KAAAa,OACAC,EAAA,GACA,IAAA,IAAAr3C,EAAA,EAAAA,EAAAm3C,EAAA32C,OAAAR,IACA,CACA,IAAAs3C,EAAA73C,KAAA82C,KAAAa,MAAAD,EAAAn3C,IACAs3C,EAAA5hC,QAAA6hC,gBAEAF,EAAAh1C,KAAAi1C,EAEA,CAEAD,EAAAG,MAAA,CAAAp3C,EAAAsH,IAAAtH,EAAAsV,QAAA+hC,sBAAA/vC,EAAAgO,QAAA+hC,wBACA,IAAA,IAAAz3C,EAAA,EAAAA,EAAAq3C,EAAA72C,OAAAR,IAEAq3C,EAAAr3C,GAAAk3C,QAKA,OAHAz3C,KAAAu3C,UACAv3C,KAAAi4C,eACAj4C,KAAAi3C,oBAAAj3C,KAAAkkB,MAAA7E,IAAA0D,gBACA,CACA,CACAm1B,WAAAhsB,GAEA,IAAAisB,EAAAn4C,KAAAkkB,MAAA4G,eAAAf,8CAAA,cAEAouB,EAAAvsB,WAAA5rB,KAAAs3C,mBAAAz8B,KAAA7a,OAEA,IAAA03C,EAAAp5C,OAAAiF,KAAAvD,KAAA82C,KAAAa,OACAC,EAAA,GACA,IAAA,IAAAr3C,EAAA,EAAAA,EAAAm3C,EAAA32C,OAAAR,IACA,CACA,IAAAs3C,EAAA73C,KAAA82C,KAAAa,MAAAD,EAAAn3C,IACAs3C,EAAA5hC,QAAAmiC,kBAEAR,EAAAh1C,KAAAi1C,EAEA,CAEAD,EAAAG,MAAA,CAAAp3C,EAAAsH,IAAAtH,EAAAsV,QAAAoiC,iBAAApwC,EAAAgO,QAAAoiC,mBACA,IAAA,IAAA93C,EAAA,EAAAA,EAAAq3C,EAAA72C,OAAAR,IAEA43C,EAAAvsB,WAAAgsB,EAAAr3C,GAAA23C,WAAAr9B,KAAA+8B,EAAAr3C,KAEA43C,EAAAvsB,WAAA5rB,KAAAw3C,aAAA38B,KAAA7a,OACAm4C,EAAAvsB,WAAA5rB,KAAAs4C,kBAAAz9B,KAAA7a,OAEAm4C,EAAAlsB,MACApW,IAEA7V,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,YAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,4BAEA77B,KAAAi3C,oBAAAj3C,KAAAkkB,MAAA7E,IAAA0D,eACAmJ,EAAArW,KAEA,CAEAoiC,eAMA,OAJAj4C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,YAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,oBAEA,CACA,CACAyc,kBAAApsB,GAGA,OADAlsB,KAAAi4C,eACA/rB,GACA,CAEAqsB,qBAMA,OAJAv4C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,YAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,0BAEA,CACA,CACA2c,wBAAAtsB,GAGA,OADAlsB,KAAAu4C,qBACArsB,GACA,CAEAusB,eAMA,OAJAz4C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,YAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,oBAEA,CACA,CACA6c,kBAAAxsB,GAGA,OADAlsB,KAAAy4C,eACAvsB,GACA,CAEA7O,aAEA,GAAArd,KAAAg3C,oBA+CA,OADAh3C,KAAAqf,IAAA/E,KAAA,YAAAjW,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,4EACA,EA9CA,CACA77B,KAAAu4C,qBACAv4C,KAAAy4C,eAEA,IAAAf,EAAAp5C,OAAAiF,KAAAvD,KAAA82C,KAAAa,OACAgB,EAAA,GACA,IAAA,IAAAp4C,EAAA,EAAAA,EAAAm3C,EAAA32C,OAAAR,IACA,CACA,IAAAs3C,EAAA73C,KAAA82C,KAAAa,MAAAD,EAAAn3C,IACAs3C,EAAA5hC,QAAA6hC,gBAEAa,EAAA/1C,KAAAi1C,EAEA,CAEAc,EAAAZ,MAAA,CAAAp3C,EAAAsH,IAAAtH,EAAAsV,QAAA+hC,sBAAA/vC,EAAAgO,QAAA+hC,wBACA,IAAA,IAAAz3C,EAAA,EAAAA,EAAAo4C,EAAA53C,OAAAR,IAEAo4C,EAAAp4C,GAAA8c,aAuBA,OArBArd,KAAA44C,oBACA54C,KAAAiW,QAAAygC,2BAEA12C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,YAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,0CAGA77B,KAAAy3C,SAGAz3C,KAAAiW,QAAA0gC,4CAEA32C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,YAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,4CAGA77B,KAAA64C,UAEA74C,KAAAg3C,oBAAAh3C,KAAAkkB,MAAA7E,IAAA0D,gBACA,CACA,CAMA,CACA+1B,gBAAAC,GAEA,GAAA/4C,KAAAg3C,oBAkEA,OAFAh3C,KAAAqf,IAAA/E,KAAA,YAAAjW,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,iFAEA3P,YAjEA,CACA,IAAAisB,EAAAn4C,KAAAkkB,MAAA4G,eAAAf,8CAAA,cAEA/pB,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,YAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,iCAGAsc,EAAAvsB,WAAA5rB,KAAAw4C,wBAAA39B,KAAA7a,OACAm4C,EAAAvsB,WAAA5rB,KAAA04C,kBAAA79B,KAAA7a,OAGA,IAAA03C,EAAAp5C,OAAAiF,KAAAvD,KAAA82C,KAAAa,OACAgB,EAAA,GACA,IAAA,IAAAp4C,EAAA,EAAAA,EAAAm3C,EAAA32C,OAAAR,IACA,CACA,IAAAs3C,EAAA73C,KAAA82C,KAAAa,MAAAD,EAAAn3C,IACAs3C,EAAA5hC,QAAA6hC,gBAEAa,EAAA/1C,KAAAi1C,EAEA,CAGAc,EAAAZ,MAAA,CAAAp3C,EAAAsH,IAAAtH,EAAAsV,QAAA+hC,sBAAA/vC,EAAAgO,QAAA+hC,wBACA,IAAA,IAAAz3C,EAAA,EAAAA,EAAAo4C,EAAA53C,OAAAR,IACA,CACA,IAAAs3C,EAAAc,EAAAp4C,GACA43C,EAAAvsB,WAAAisB,EAAAiB,gBAAAj+B,KAAAg9B,GACA,CACAM,EAAAvsB,WAAA5rB,KAAAg5C,uBAAAn+B,KAAA7a,OAEAA,KAAAiW,QAAAygC,2BAEA12C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,YAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,2DAEAsc,EAAAvsB,WAAA5rB,KAAAk4C,WAAAr9B,KAAA7a,QAGAA,KAAAiW,QAAA0gC,4CAEA32C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,YAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,6DAEAsc,EAAAvsB,WAAA5rB,KAAAi5C,wBAAAp+B,KAAA7a,QAGAm4C,EAAAlsB,MACApW,IAEA7V,KAAAg3C,oBAAAh3C,KAAAkkB,MAAA7E,IAAA0D,eACA/iB,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,YAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,8BAEAkd,MAEA,CAOA,CAEAH,oBAMA,OAJA54C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,YAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,yBAEA,CACA,CACAmd,uBAAA9sB,GAGA,OADAlsB,KAAA44C,oBACA1sB,GACA,CAEA2sB,OAAAK,EAAAC,EAAAC,EAAAC,GAEA,IAAAC,OAAA,IAAAJ,EAAAl5C,KAAAiW,QAAAqgC,2BAAA4C,EACAK,OAAA,IAAAJ,EAAAn5C,KAAAiW,QAAAsgC,2BAAA4C,EACAK,OAAA,IAAAJ,EAAAp5C,KAAAiW,QAAAugC,+BAAA4C,EACAK,OAAA,IAAAJ,EAAAr5C,KAAAiW,QAAAwgC,+BAAA4C,EAGAxB,EAAA,iBAAAyB,GAAAt5C,KAAAwkB,YAAAk1B,SAAAJ,GACA,OAAAzB,EAMAA,EAAAgB,OAAAU,EAAAC,EAAAC,IAJAz5C,KAAAqf,IAAA1S,MAAA,YAAAtI,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,gCAAAx3B,OAAAi1C,EAAA,sCACA,EAIA,CACAK,qBAEA,OAAA35C,KAAA64C,OAAA74C,KAAAiW,QAAAqgC,2BAAAt2C,KAAAiW,QAAAsgC,2BAAAv2C,KAAAiW,QAAAugC,+BAAAx2C,KAAAiW,QAAAwgC,+BACA,CAEAmD,YAAAV,EAAAC,EAAAC,EAAAC,EAAAntB,GAEA,IAAAotB,OAAA,IAAAJ,EAAAl5C,KAAAiW,QAAAqgC,2BAAA4C,EACAK,OAAA,IAAAJ,EAAAn5C,KAAAiW,QAAAsgC,2BAAA4C,EACAK,OAAA,IAAAJ,EAAAp5C,KAAAiW,QAAAugC,+BAAA4C,EACAK,OAAA,IAAAJ,EAAAr5C,KAAAiW,QAAAwgC,+BAAA4C,EAEAxB,EAAA,iBAAAyB,GAAAt5C,KAAAwkB,YAAAk1B,SAAAJ,GACA,IAAAzB,EACA,CACA,IAAAgC,EAAA,YAAAx1C,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAA4lB,KAAA,+CAAAx3B,OAAAi1C,EAAA,oCAKA,OAJAt5C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA1S,MAAAktC,GAEA3tB,EAAA,IAAAtrB,MAAAi5C,GACA,CAEA,OAAAhC,EAAA+B,YAAAL,EAAAC,EAAAC,EAAAvtB,EACA,CACA+sB,wBAAA/sB,GAEA,OAAAlsB,KAAA45C,YAAA55C,KAAAiW,QAAAqgC,2BAAAt2C,KAAAiW,QAAAsgC,2BAAAv2C,KAAAiW,QAAAugC,+BAAAx2C,KAAAiW,QAAAwgC,+BAAAvqB,EACA,ExE4gWA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAASzrB,EAAQf,EAAOD,GyE73WhE,MAAAspB,EAAAtoB,EAAA,6BAEAq5C,EACA,CACAC,mBAAA,EACAC,2BAAA,EACAC,8BAAA,EAEAC,gBAAA,EAIApC,gBAAA,EACAE,sBAAA,EAIAmC,YAAA,EACAC,kBAAA,EAEAhC,kBAAA,EACAC,iBAAA,EAEAgC,SAAA,EACAC,KAAA,EACAC,aAAA,EACAC,YAAA,IAEAC,UAAA,GAEAC,iBAAA,GAEAC,YAAA,GAEA/D,UAAA,CAAA,GAmdAl3C,EAAAD,QAhdA,cAAAspB,EAEAzW,YAAAI,EAAAuR,EAAArR,GAIAC,MAAAH,EADApU,OAAAqkB,OAAA,CAAA,EAAArD,KAAAtJ,MAAAsJ,KAAAC,UAAAu6B,IAAA71B,GACArR,GACA5S,KAAAiW,QAAAikC,iBAEAl6C,KAAAiW,QAAAikC,eAAA,cAAA71C,OAAArE,KAAAkkB,MAAAK,YAEAvkB,KAAA8S,YAAA,WAEA9S,KAAA82C,KAAA92C,KAAAkkB,MAEAlkB,KAAA+2C,QAAA/2C,KAAA82C,KAAAC,QAEA/2C,KAAAg3C,qBAAA,EACAh3C,KAAAi3C,qBAAA,EACAj3C,KAAA46C,uBAAA,EAIA,IAAA,IAAAr6C,EAAA,EAAAA,EAAAP,KAAAiW,QAAAwkC,UAAA15C,OAAAR,IACA,CACA,IAAA8/B,EAAArgC,KAAAiW,QAAAwkC,UAAAl6C,GAEA8/B,EAAA58B,eAAA,SAAA48B,EAAA58B,eAAA,aAMA48B,EAAAwa,SAEAxa,EAAAwa,OAAA,aAAAx2C,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,qBAEAl6C,KAAA82C,KAAAgE,iBAAAC,YAAA1a,EAAA3sB,KAAA2sB,EAAA2a,SAAA3a,EAAAwa,SARA76C,KAAAqf,IAAA1S,MAAA,aAAAtI,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,6BAAA71C,OAAA9D,EAAA,0BAAA8/B,EAUA,CAIA,IAAA,IAAA9/B,EAAA,EAAAA,EAAAP,KAAAiW,QAAAykC,iBAAA35C,OAAAR,IACA,CACA,IAAA06C,EAAAj7C,KAAAiW,QAAAykC,iBAAAn6C,GAEA06C,EAAAx3C,eAAA,YAAAw3C,EAAAx3C,eAAA,aAMAw3C,EAAAJ,SAEAI,EAAAJ,OAAA,aAAAx2C,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,qBAEAl6C,KAAA82C,KAAAgE,iBAAAI,mBAAAD,EAAAE,OAAAF,EAAAG,QAAAH,EAAAD,SAAAC,EAAAJ,SARA76C,KAAAqf,IAAA1S,MAAA,aAAAtI,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,qCAAA71C,OAAA9D,EAAA,0BAAA06C,EAUA,CAGA,GAAAj7C,KAAAiW,QAAAqkC,IACA,CACA,IAAAe,EAAAr7C,KAAAiW,QAAAokC,QAAAr6C,KAAAiW,QAAAokC,QAAA,QAAAh2C,OAAArE,KAAAiW,QAAAikC,gBACAoB,EAAAt7C,KAAAiW,QAAAskC,YAAAv6C,KAAAiW,QAAAskC,YAAAc,EACAr7C,KAAA82C,KAAAyE,OAAAC,OAAAH,EAAAr7C,KAAAiW,QAAAqkC,IAAAgB,EAAAt7C,KAAAiW,QAAAukC,YACA,CAOAx6C,KAAAy7C,YAAA,CAAA,EACA,IAAA,IAAAl7C,EAAA,EAAAA,EAAAP,KAAAiW,QAAA0kC,YAAA55C,OAAAR,IACA,CACAP,KAAAiW,QAAA0kC,YAAAp6C,GACAP,KAAA07C,cAAA17C,KAAAiW,QAAA0kC,YAAAp6C,GACA,CACA,CAEAm7C,cAAAvC,EAAA/Y,EAAAub,EAAAC,EAAAC,GAEA,IAAAC,GAAA,EAEA,GAAA,iBAAA3C,EAIA2C,EAAA3C,MAGA,CAEA2C,EACA,CACAC,eAAA5C,EACA6C,aAAA5b,EACA6b,2BAAAN,EACA3B,0BAAA4B,EACAM,aAPA,iBAAAL,EAAAA,EAAA,UASA,CAEA,iBAAAC,EAAAC,gBAAA,iBAAAD,EAAAE,aAEAh8C,KAAAqf,IAAA1S,MAAA,aAAAtI,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,2EAAA4B,IAIA97C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,aAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,wBAAA71C,OAAAy3C,EAAAC,eAAA,0BAAA13C,OAAAy3C,EAAAE,aAAA,MAGAh8C,KAAAy7C,YAAAK,EAAAC,gBAAAD,EAEA,CAEA1E,gBAMA,OAJAp3C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,aAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,qBAEA,CACA,CACA5C,mBAAAprB,GAGA,OADAlsB,KAAAo3C,gBACAlrB,GACA,CAEAqrB,UAMA,OAJAv3C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,aAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,eAEA,CACA,CACA1C,aAAAtrB,GAGA,OADAlsB,KAAAu3C,UACArrB,GACA,CAEAurB,QAUA,OARAz3C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,aAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,mCAEAl6C,KAAAo3C,gBACAp3C,KAAAu3C,UACAv3C,KAAAi4C,eACAj4C,KAAAi3C,oBAAAj3C,KAAA82C,KAAAz3B,IAAA0D,gBACA,CACA,CAEAm1B,WAAAhsB,GAEA,IAAAisB,EAAAn4C,KAAA82C,KAAAhsB,eAAAf,8CAAA,cAEAouB,EAAAvsB,WAAA5rB,KAAAs3C,mBAAAz8B,KAAA7a,OACAm4C,EAAAvsB,WAAA5rB,KAAAw3C,aAAA38B,KAAA7a,OACAm4C,EAAAvsB,WAAA5rB,KAAAs4C,kBAAAz9B,KAAA7a,OAEAm4C,EAAAlsB,MACApW,IAEA7V,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,aAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,4BAEAl6C,KAAAi3C,oBAAAj3C,KAAA82C,KAAAz3B,IAAA0D,eACAmJ,EAAArW,KAEA,CAEAoiC,eAMA,OAJAj4C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,aAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,oBAEA,CACA,CACA5B,kBAAApsB,GAGA,OADAlsB,KAAAi4C,eACA/rB,GACA,CAEAqsB,qBAMA,OAJAv4C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,aAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,0BAEA,CACA,CACA1B,wBAAAtsB,GAGA,OADAlsB,KAAAu4C,qBACArsB,GACA,CAEAusB,eAOA,OAJAz4C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,aAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,oBAEA,CACA,CACAxB,kBAAAxsB,GAGA,OADAlsB,KAAAy4C,eACAvsB,GACA,CAEA7O,aAEA,OAAArd,KAAAg3C,qBAUAh3C,KAAAqf,IAAA/E,KAAA,aAAAjW,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,4EACA,IATAl6C,KAAAu4C,qBACAv4C,KAAAy4C,eACAz4C,KAAA44C,oBACA54C,KAAAg3C,oBAAAh3C,KAAA82C,KAAAz3B,IAAA0D,gBACA,EAOA,CACA+1B,gBAAA5sB,GAEA,GAAAlsB,KAAAg3C,oBA4BA,OAFAh3C,KAAAqf,IAAA/E,KAAA,aAAAjW,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,iFAEAhuB,IA3BA,CACA,IAAAisB,EAAAn4C,KAAA82C,KAAAhsB,eAAAf,8CAAA,cAEA/pB,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA3B,KAAA,aAAArZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,iCAGA/B,EAAAvsB,WAAA5rB,KAAAw4C,wBAAA39B,KAAA7a,OACAm4C,EAAAvsB,WAAA5rB,KAAA04C,kBAAA79B,KAAA7a,OACAm4C,EAAAvsB,WAAA5rB,KAAAg5C,uBAAAn+B,KAAA7a,OAEAm4C,EAAAlsB,MACApW,IAEA7V,KAAAg3C,oBAAAh3C,KAAA82C,KAAAz3B,IAAA0D,eACA/iB,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA3B,KAAA,aAAArZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,8BAEAhuB,MAEA,CAOA,CAEA0sB,oBAMA,OAJA54C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,aAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,yBAEA,CACA,CACAlB,uBAAA9sB,GAGA,OADAlsB,KAAA44C,oBACA1sB,GACA,CAEAiwB,eAAAC,EAAAhD,EAAA9lC,GAOA,OAJAtT,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,aAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,sBAEA,CACA,CACAmC,oBAAAD,EAAAhD,EAAA9lC,EAAA4Y,GAGA,OADAlsB,KAAAm8C,eAAAC,EAAAhD,EAAA9lC,GACA4Y,GACA,CAEA2sB,OAAAuD,EAAAhD,EAAAC,GAEA,IAAAE,EAAA,iBAAA6C,EAAAA,EACA,iBAAAp8C,KAAAiW,QAAA8jC,mBAAA/5C,KAAAiW,QAAA8jC,kBACA,IAAAR,EAGA,OADAv5C,KAAAqf,IAAA1S,MAAA,aAAAtI,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,sBAAA71C,OAAAk1C,EAAA,YAAAl1C,OAAA+3C,EAAA,6CACA,EAGA,IAAAN,EAAA97C,KAAAy7C,YAAAlC,GAEA,IAAAuC,EAGA,OADA97C,KAAAqf,IAAA1S,MAAA,aAAAtI,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,sBAAA71C,OAAAk1C,EAAA,YAAAl1C,OAAA+3C,EAAA,kCACA,EAGA,IAAA5C,EAAA,iBAAAJ,EAAAA,EACA,iBAAA0C,EAAAQ,0BAAAR,EAAAQ,0BACA,iBAAAt8C,KAAAiW,QAAA+jC,2BAAAh6C,KAAAiW,QAAA+jC,0BAEA,IAAAR,EAGA,OADAx5C,KAAAqf,IAAA1S,MAAA,aAAAtI,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,sBAAA71C,OAAAk1C,EAAA,YAAAl1C,OAAA+3C,EAAA,6DACA,EAGA,IAAAG,EAAA,iBAAAlD,EAAAA,EACA,iBAAAyC,EAAA7B,6BAAA6B,EAAA7B,6BACA,iBAAAj6C,KAAAiW,QAAAgkC,8BAAAj6C,KAAAiW,QAAAgkC,6BAEA7c,EAAA,iBAAAmf,EAAAv8C,KAAA82C,KAAA0F,aAAAC,iBAAAF,QAAAp9C,EAGAa,KAAAm8C,eAAAL,EAAAtC,EAAApc,GAGA,IAAAsf,EAAA18C,KAAA82C,KAAA6F,oBAAAb,EAAAE,aAAA5e,GAGA,OAAA0e,EAAAI,cAEA,IAAA,SACAl8C,KAAA82C,KAAA8F,kBAAAC,cAAArD,EAAAkD,GACA,MACA,IAAA,UACA18C,KAAA82C,KAAA8F,kBAAAE,eAAAtD,EAAAkD,GACA,MACA,IAAA,cAEA18C,KAAA82C,KAAA8F,kBAAAG,WAAA,IAAA14C,OAAAk1C,IACAx4C,OAAA,GAEAf,KAAA82C,KAAA8F,kBAAAC,cAAArD,EAAAkD,GAGA,QACA18C,KAAA82C,KAAA8F,kBAAAI,cAAAxD,EAAAkD,GAKA18C,KAAAi9C,cAAAnB,EAAAtC,EAAApc,EAAAsf,GAEA18C,KAAA46C,sBAAA56C,KAAA82C,KAAAz3B,IAAA0D,cACA,CACA62B,YAAAwC,EAAAhD,EAAAC,EAAAntB,GAEA,IAAAqtB,EAAA,iBAAA6C,EAAAA,EACA,iBAAAp8C,KAAAiW,QAAA8jC,mBAAA/5C,KAAAiW,QAAA8jC,kBACA,IAAAR,EAGA,OADAv5C,KAAAqf,IAAA1S,MAAA,aAAAtI,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,qCAAA71C,OAAAk1C,EAAA,YAAAl1C,OAAA+3C,EAAA,0CACAlwB,EAAAtrB,MAAA,aAAAyD,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,qCAAA71C,OAAAk1C,EAAA,YAAAl1C,OAAA+3C,EAAA,2CAGA,IAAAN,EAAA97C,KAAAy7C,YAAAlC,GAEA,IAAAuC,EAGA,OADA97C,KAAAqf,IAAA1S,MAAA,aAAAtI,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,sBAAA71C,OAAAk1C,EAAA,YAAAl1C,OAAA+3C,EAAA,iCACAlwB,EAAAtrB,MAAA,aAAAyD,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,sBAAA71C,OAAAk1C,EAAA,YAAAl1C,OAAA+3C,EAAA,kCAGA,IAAA5C,EAAA,iBAAAJ,EAAAA,EACA,iBAAA0C,EAAAQ,0BAAAR,EAAAQ,0BACA,iBAAAt8C,KAAAiW,QAAA+jC,2BAAAh6C,KAAAiW,QAAA+jC,0BAEA,IAAAR,EAGA,OADAx5C,KAAAqf,IAAA1S,MAAA,aAAAtI,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,sBAAA71C,OAAAk1C,EAAA,YAAAl1C,OAAA+3C,EAAA,4DACAlwB,EAAAtrB,MAAA,oBAAAyD,OAAAk1C,KAGA,IAAAgD,EAAA,iBAAAlD,EAAAA,EACA,iBAAAyC,EAAA7B,6BAAA6B,EAAA7B,6BACA,iBAAAj6C,KAAAiW,QAAAgkC,8BAAAj6C,KAAAiW,QAAAgkC,6BAEA7c,EAAA,iBAAAmf,EAAAv8C,KAAA82C,KAAA0F,aAAAC,iBAAAF,QAAAp9C,EAIAa,KAAAm8C,eAAAL,EAAAtC,EAAApc,GAGAp9B,KAAA82C,KAAA6F,oBAAAb,EAAAE,aAAA5e,GACA,CAAAvnB,EAAAqnC,KAEA,GAAArnC,EAGA,OADA7V,KAAAqf,IAAA1S,MAAA,aAAAtI,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,uCAAA71C,OAAAk1C,EAAA,YAAAl1C,OAAA+3C,EAAA,4CAAAvmC,GACAqW,EAAArW,GAIA,OAAAimC,EAAAI,cAEA,IAAA,SACAl8C,KAAA82C,KAAA8F,kBAAAC,cAAArD,EAAA0D,GACA,MACA,IAAA,UACAl9C,KAAA82C,KAAA8F,kBAAAE,eAAAtD,EAAA0D,GACA,MACA,IAAA,cAEAl9C,KAAA82C,KAAA8F,kBAAAG,WAAA,IAAA14C,OAAAk1C,IACAx4C,OAAA,GAEAf,KAAA82C,KAAA8F,kBAAAC,cAAArD,EAAA0D,GAGA,QACAl9C,KAAA82C,KAAA8F,kBAAAI,cAAAxD,EAAA0D,GASA,OAJAl9C,KAAAi9C,cAAAnB,EAAAtC,EAAApc,EAAA8f,GAEAl9C,KAAA46C,sBAAA56C,KAAA82C,KAAAz3B,IAAA0D,eAEAmJ,EAAA,KAAAgxB,EAAA,GAEA,CAEAD,gBAMA,OAJAj9C,KAAA82C,KAAAO,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,aAAAjZ,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAAArP,OAAArE,KAAAiW,QAAAikC,eAAA,qBAEA,CACA,CACAiD,mBAAAjxB,GAGA,OADAlsB,KAAAi9C,gBACA/wB,GACA,EzEk4WA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAASzrB,EAAQf,EAAOD;;;;;;;;;;A0E32XhE,IAAAy4B,EAAAz3B,EAAA,iBACA03B,EAAA13B,EAAA,qBA0CAf,EAAAD,QAxCA,MAKA6S,cAEAtS,KAAAo4B,SAAA,IAAAF,EAEAl4B,KAAAq4B,aAAA,IAAAF,EAEAn4B,KAAAu4B,UAAAv4B,KAAAo4B,SAAAG,SACA,CAUAvT,WAAAwT,EAAAC,EAAAC,GAEA,OAAA14B,KAAAo4B,SAAApT,WAAAwT,EAAAC,EAAAC,EACA,CASAhT,YAAAD,EAAAnS,GAEA,OAAAtT,KAAAq4B,aAAA3S,YAAAD,EAAAzlB,KAAAu4B,UAAAjlB,EACA,E1E03XA,EAAE,CAAC,oBAAoB,GAAG,gBAAgB,KAAK,GAAG,CAAC,SAAS7S,EAAQf,EAAOD,G2EpuX3EC,EAAAD,QAjMA,MAKA6S,cAEA,CASAwmB,eAAAC,GAEA,MACA,CACAR,UAAAQ,EAEAC,cAAA,EAEAC,OAAA,GACAC,aAAA,GAEAC,QAAA,CAAA,EAEAC,cAAA,EACAC,iBAAA,EAEA,CAUAC,mBAAApc,EAAAqc,GAEAA,EAAAL,cAAAhc,CACA,CAQAsc,kBAAAD,GAEAA,EAAAN,QAAAM,EAAAL,aACAK,EAAAL,aAAA,EACA,CAEAO,kBAAAF,GAWA,OARAv5B,KAAAw5B,kBAAAD,GAEAA,EAAAJ,SAAA,EACAI,EAAAG,kBAAA,EACAH,EAAAI,2BAAA,EACAJ,EAAAK,sBAAA,EACAL,EAAAH,cAAA,GAEA,CACA,CASAS,eAAA3c,EAAAqc,EAAAjmB,GAGA,GAAAimB,EAAAH,aAGA,IAAAG,EAAAI,2BAAAJ,EAAAJ,QAAA11B,eAAAyZ,GAEAqc,EAAAJ,QAAAI,EAAAJ,QAAAjc,GACAld,KAAAs5B,mBAAApc,EAAAqc,QAEA,GAAAA,EAAAK,qBAEA,GAAAL,EAAAJ,QAAAW,WAAAr2B,eAAAyZ,IAOA,GAJAqc,EAAAJ,QAAAI,EAAAJ,QAAAW,WAAA5c,GAEAld,KAAAs5B,mBAAApc,EAAAqc,GAEAA,EAAAJ,QAAA11B,eAAA,SAIA,OADA81B,EAAAL,aAAAK,EAAAJ,QAAAY,MAAAR,EAAAL,aAAAtuB,OAAA2uB,EAAAJ,QAAAa,mBAAAj5B,OAAAw4B,EAAAL,aAAAn4B,QAAAw4B,EAAAJ,QAAAa,mBAAAj5B,OAAAw4B,EAAAJ,QAAAc,iBAAAl5B,SAAAuS,GACAtT,KAAAy5B,kBAAAF,QAGAA,EAAAG,iBAAAI,WAAAr2B,eAAAyZ,IAGAqc,EAAAJ,QAAAI,EAAAG,iBAAAI,WAAA5c,GACAld,KAAAs5B,mBAAApc,EAAAqc,KAIAA,EAAAK,sBAAA,EACA55B,KAAAs5B,mBAAApc,EAAAqc,SAGA,GAAAA,EAAAJ,QAAA11B,eAAA,eAUA,GARA81B,EAAAI,4BAEAJ,EAAAI,2BAAA,EACAJ,EAAAG,iBAAAH,EAAAJ,SAGAn5B,KAAAs5B,mBAAApc,EAAAqc,GAEAA,EAAAJ,QAAAW,WAAAr2B,eAAAyZ,KAGAqc,EAAAK,sBAAA,EAEAL,EAAAJ,QAAAI,EAAAJ,QAAAW,WAAA5c,GAEAqc,EAAAJ,QAAA11B,eAAA,UAIA,OADA81B,EAAAL,aAAAK,EAAAJ,QAAAY,MAAAR,EAAAL,aAAAtuB,OAAA2uB,EAAAJ,QAAAa,mBAAAj5B,OAAAw4B,EAAAL,aAAAn4B,QAAAw4B,EAAAJ,QAAAa,mBAAAj5B,OAAAw4B,EAAAJ,QAAAc,iBAAAl5B,SAAAuS,GACAtT,KAAAy5B,kBAAAF,QAOAv5B,KAAAy5B,kBAAAF,GAIA,IAAAA,EAAAH,aACA,CAEA,GAAAG,EAAAhB,UAAA90B,eAAAyZ,GAOA,OAJAld,KAAAy5B,kBAAAF,GACAv5B,KAAAs5B,mBAAApc,EAAAqc,GACAA,EAAAJ,QAAAI,EAAAhB,UAAArb,GACAqc,EAAAH,cAAA,GACA,EAIAp5B,KAAAs5B,mBAAApc,EAAAqc,EAEA,CACA,OAAA,CACA,CASA7T,YAAAD,EAAAsT,EAAAzlB,GAEA,IAAAgnB,EAAAt6B,KAAA84B,eAAAC,GAEA,IAAA,IAAAx4B,EAAA,EAAAA,EAAAklB,EAAA1kB,OAAAR,IAEAP,KAAA65B,eAAApU,EAAAllB,GAAA+5B,EAAAhnB,GAKA,OAFAtT,KAAAw5B,kBAAAc,GAEAA,EAAArB,MACA,E3Ei7XA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASx4B,EAAQf,EAAOD,G4E/gYlCC,EAAAD,QAhGA,MAKA6S,cAEAtS,KAAAu4B,UAAA,CAAA,CACA,CAUAiC,SAAAC,EAAAC,GAOA,OALAD,EAAAh3B,eAAAi3B,KAEAD,EAAAC,GAAA,CAAA,GAGAD,EAAAC,EACA,CAUAC,YAAAF,EAAAC,GASA,OAPAD,EAAAh3B,eAAA,gBAEAg3B,EAAAX,WAAA,CAAA,GAGAW,EAAAX,WAAAY,GAAA,CAAA,EAEAD,EAAAX,WAAAY,EACA,CASA1V,WAAAwT,EAAAC,EAAAmC,GAEA,GAAApC,EAAAz3B,OAAA,EAEA,OAAA,EAGA,GAAA,iBAAA03B,GAAAA,EAAA13B,OAAA,EAEA,OAAA,EAGA,IAAA85B,EAAA76B,KAAAu4B,UAGA,IAAA,IAAAh4B,EAAA,EAAAA,EAAAi4B,EAAAz3B,OAAAR,IAEAs6B,EAAA76B,KAAAw6B,SAAAK,EAAArC,EAAAj4B,GAAAA,GAGAs6B,EAAAp3B,eAAA,gBAEAo3B,EAAAf,WAAA,CAAA,GAGA,IAAAgB,EAAA,iBAAArC,EAAAA,EAAAD,EACA,IAAA,IAAAj4B,EAAA,EAAAA,EAAAu6B,EAAA/5B,OAAAR,IAEAs6B,EAAA76B,KAAA26B,YAAAE,EAAAC,EAAAv6B,GAAAA,GASA,OANAs6B,EAAAb,mBAAAxB,EACAqC,EAAAZ,iBAAAa,EACAD,EAAAd,MAAA,mBAAAa,EAAAA,EACA,iBAAAA,EAAA,IAAAA,EACAtnB,GAAAA,GAEA,CACA,E5E2nYA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS7S,EAAQf,EAAOD,G6E7tYlC,IAOA29C,EACAC,EARAz4B,EAAAllB,EAAAD,QAAA,CAAA,EAUA,SAAA69C,IACA,MAAA,IAAA18C,MAAA,kCACA,CACA,SAAA28C,IACA,MAAA,IAAA38C,MAAA,oCACA,CAqBA,SAAA48C,EAAAC,GACA,GAAAL,IAAAn5C,WAEA,OAAAA,WAAAw5C,EAAA,GAGA,IAAAL,IAAAE,IAAAF,IAAAn5C,WAEA,OADAm5C,EAAAn5C,WACAA,WAAAw5C,EAAA,GAEA,IAEA,OAAAL,EAAAK,EAAA,EACA,CAAA,MAAAt9C,GACA,IAEA,OAAAi9C,EAAA/9C,KAAA,KAAAo+C,EAAA,EACA,CAAA,MAAAt9C,GAEA,OAAAi9C,EAAA/9C,KAAAW,KAAAy9C,EAAA,EACA,CACA,CAGA,EA5CA,WACA,IAEAL,EADA,mBAAAn5C,WACAA,WAEAq5C,CAEA,CAAA,MAAAn9C,GACAi9C,EAAAE,CACA,CACA,IAEAD,EADA,mBAAAK,aACAA,aAEAH,CAEA,CAAA,MAAAp9C,GACAk9C,EAAAE,CACA,CACA,CAnBA,GAwEA,IAEAI,EAFAC,EAAA,GACAC,GAAA,EAEAC,GAAA,EAEA,SAAAC,IACAF,GAAAF,IAGAE,GAAA,EACAF,EAAA58C,OACA68C,EAAAD,EAAAt5C,OAAAu5C,GAEAE,GAAA,EAEAF,EAAA78C,QACAi9C,IAEA,CAEA,SAAAA,IACA,IAAAH,EAAA,CAGA,IAAAI,EAAAT,EAAAO,GACAF,GAAA,EAGA,IADA,IAAAv6C,EAAAs6C,EAAA78C,OACAuC,GAAA,CAGA,IAFAq6C,EAAAC,EACAA,EAAA,KACAE,EAAAx6C,GACAq6C,GACAA,EAAAG,GAAAI,MAGAJ,GAAA,EACAx6C,EAAAs6C,EAAA78C,MACA,CACA48C,EAAA,KACAE,GAAA,EAnEA,SAAAM,GACA,GAAAd,IAAAK,aAEA,OAAAA,aAAAS,GAGA,IAAAd,IAAAE,IAAAF,IAAAK,aAEA,OADAL,EAAAK,aACAA,aAAAS,GAEA,IAEA,OAAAd,EAAAc,EACA,CAAA,MAAAh+C,GACA,IAEA,OAAAk9C,EAAAh+C,KAAA,KAAA8+C,EACA,CAAA,MAAAh+C,GAGA,OAAAk9C,EAAAh+C,KAAAW,KAAAm+C,EACA,CACA,CAIA,CA0CAC,CAAAH,EAlBA,CAmBA,CAgBA,SAAAI,EAAAZ,EAAA51C,GACA7H,KAAAy9C,IAAAA,EACAz9C,KAAA6H,MAAAA,CACA,CAWA,SAAA/F,IAAA,CA5BA8iB,EAAA05B,SAAA,SAAAb,GACA,IAAAh7C,EAAA,IAAAM,MAAApB,UAAAZ,OAAA,GACA,GAAAY,UAAAZ,OAAA,EACA,IAAA,IAAAR,EAAA,EAAAA,EAAAoB,UAAAZ,OAAAR,IACAkC,EAAAlC,EAAA,GAAAoB,UAAApB,GAGAq9C,EAAAh7C,KAAA,IAAAy7C,EAAAZ,EAAAh7C,IACA,IAAAm7C,EAAA78C,QAAA88C,GACAL,EAAAQ,EAEA,EAOAK,EAAAp7C,UAAAi7C,IAAA,WACAl+C,KAAAy9C,IAAA/7C,MAAA,KAAA1B,KAAA6H,MACA,EACA+c,EAAA25B,MAAA,UACA35B,EAAA45B,SAAA,EACA55B,EAAAW,IAAA,CAAA,EACAX,EAAA65B,KAAA,GACA75B,EAAA85B,QAAA,GACA95B,EAAA+5B,SAAA,CAAA,EAIA/5B,EAAA3L,GAAAnX,EACA8iB,EAAA7I,YAAAja,EACA8iB,EAAA/iB,KAAAC,EACA8iB,EAAAtI,IAAAxa,EACA8iB,EAAAhM,eAAA9W,EACA8iB,EAAArI,mBAAAza,EACA8iB,EAAA3K,KAAAnY,EACA8iB,EAAA5I,gBAAAla,EACA8iB,EAAA3I,oBAAAna,EAEA8iB,EAAA9I,UAAA,SAAAvJ,GAAA,MAAA,EAAA,EAEAqS,EAAAg6B,QAAA,SAAArsC,GACA,MAAA,IAAA3R,MAAA,mCACA,EAEAgkB,EAAA0vB,IAAA,WAAA,MAAA,GAAA,EACA1vB,EAAAi6B,MAAA,SAAAl1C,GACA,MAAA,IAAA/I,MAAA,iCACA,EACAgkB,EAAAgR,MAAA,WAAA,OAAA,CAAA,C7EiuYA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASn1B,EAAQf,EAAOD,IAClC,SAAWK,IAAQ,Y8Ex5YnB,SAAAsjC,GAGA,IAAA0b,EAAA,iBAAAr/C,GAAAA,IACAA,EAAAs/C,UAAAt/C,EACAu/C,EAAA,iBAAAt/C,GAAAA,IACAA,EAAAq/C,UAAAr/C,EACAu/C,EAAA,iBAAAn/C,GAAAA,EAEAm/C,EAAAn/C,SAAAm/C,GACAA,EAAAp/C,SAAAo/C,GACAA,EAAAl/C,OAAAk/C,IAEA7b,EAAA6b,GAQA,IAAAC,EAiCA/gD,EA9BAghD,EAAA,WAGAh5B,EAAA,GACAi5B,EAAA,EACAC,EAAA,GACAC,EAAA,GACAC,EAAA,IACAC,EAAA,GACAC,EAAA,IACAtJ,EAAA,IAGAuJ,EAAA,QACAC,EAAA,eACAC,EAAA,4BAGAC,EAAA,CACAC,SAAA,kDACA,YAAA,iDACA,gBAAA,iBAIAC,EAAA55B,EAAAi5B,EACAtoC,EAAAlT,KAAAkT,MACAkpC,EAAAnhD,OAAAuN,aAaA,SAAAO,EAAArE,GACA,MAAA,IAAA3B,WAAAk5C,EAAAv3C,GACA,CAUA,SAAA23C,EAAAp4C,EAAApG,GAGA,IAFA,IAAAV,EAAA8G,EAAA9G,OACAonC,EAAA,GACApnC,KACAonC,EAAApnC,GAAAU,EAAAoG,EAAA9G,IAEA,OAAAonC,CACA,CAYA,SAAA+X,EAAAj5C,EAAAxF,GACA,IAAA6D,EAAA2B,EAAAiL,MAAA,KACAi2B,EAAA,GAWA,OAVA7iC,EAAAvE,OAAA,IAGAonC,EAAA7iC,EAAA,GAAA,IACA2B,EAAA3B,EAAA,IAMA6iC,EADA8X,GAFAh5C,EAAAA,EAAA4G,QAAA+xC,EAAA,MACA1tC,MAAA,KACAzQ,GAAAkE,KAAA,IAEA,CAeA,SAAAw6C,EAAAl5C,GAMA,IALA,IAGA7I,EACAgiD,EAJAn6C,EAAA,GACAo6C,EAAA,EACAt/C,EAAAkG,EAAAlG,OAGAs/C,EAAAt/C,IACA3C,EAAA6I,EAAA/B,WAAAm7C,OACA,OAAAjiD,GAAA,OAAAiiD,EAAAt/C,EAGA,QAAA,OADAq/C,EAAAn5C,EAAA/B,WAAAm7C,OAEAp6C,EAAArD,OAAA,KAAAxE,IAAA,KAAA,KAAAgiD,GAAA,QAIAn6C,EAAArD,KAAAxE,GACAiiD,KAGAp6C,EAAArD,KAAAxE,GAGA,OAAA6H,CACA,CAUA,SAAAq6C,EAAAz4C,GACA,OAAAo4C,EAAAp4C,GAAA,SAAAzJ,GACA,IAAA6H,EAAA,GAOA,OANA7H,EAAA,QAEA6H,GAAA+5C,GADA5hD,GAAA,SACA,GAAA,KAAA,OACAA,EAAA,MAAA,KAAAA,GAEA6H,GAAA+5C,EAAA5hD,EAEA,IAAAuH,KAAA,GACA,CAmCA,SAAA46C,EAAAC,EAAAC,GAGA,OAAAD,EAAA,GAAA,IAAAA,EAAA,MAAA,GAAAC,IAAA,EACA,CAOA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAr9C,EAAA,EAGA,IAFAm9C,EAAAE,EAAA/pC,EAAA6pC,EAAApB,GAAAoB,GAAA,EACAA,GAAA7pC,EAAA6pC,EAAAC,GACAD,EAAAZ,EAAAV,GAAA,EAAA77C,GAAA2iB,EACAw6B,EAAA7pC,EAAA6pC,EAAAZ,GAEA,OAAAjpC,EAAAtT,GAAAu8C,EAAA,GAAAY,GAAAA,EAAArB,GACA,CASA,SAAAnpC,EAAArX,GAEA,IAEA2P,EAIAqyC,EACAz2C,EACA7I,EACAu/C,EACA3mC,EACA5W,EACAg9C,EACAngD,EAEA2gD,EArEAh1C,EAsDA/F,EAAA,GACAg7C,EAAAniD,EAAAiC,OAEAR,EAAA,EACAH,EAAAq/C,EACAyB,EAAA1B,EAqBA,KALAsB,EAAAhiD,EAAA+K,YAAAssC,IACA,IACA2K,EAAA,GAGAz2C,EAAA,EAAAA,EAAAy2C,IAAAz2C,EAEAvL,EAAAoG,WAAAmF,IAAA,KACAsC,EAAA,aAEA1G,EAAArD,KAAA9D,EAAAoG,WAAAmF,IAMA,IAAA7I,EAAAs/C,EAAA,EAAAA,EAAA,EAAA,EAAAt/C,EAAAy/C,GAAA,CAOA,IAAAF,EAAAxgD,EAAA6Z,EAAA,EAAA5W,EAAA2iB,EAEA3kB,GAAAy/C,GACAt0C,EAAA,mBAGA6zC,GAxGAx0C,EAwGAlN,EAAAoG,WAAA1D,MAvGA,GAAA,GACAwK,EAAA,GAEAA,EAAA,GAAA,GACAA,EAAA,GAEAA,EAAA,GAAA,GACAA,EAAA,GAEAma,IAgGAA,GAAAq6B,EAAA1pC,GAAAqoC,EAAA5+C,GAAA6Z,KACAzN,EAAA,YAGApM,GAAAigD,EAAApmC,IAGAomC,GAFAngD,EAAAmD,GAAA09C,EAAA9B,EAAA57C,GAAA09C,EAAA7B,EAAAA,EAAA77C,EAAA09C,IAbA19C,GAAA2iB,EAoBA/L,EAAAtD,EAAAqoC,GADA6B,EAAA76B,EAAA9lB,KAEAsM,EAAA,YAGAyN,GAAA4mC,EAKAE,EAAAR,EAAAngD,EAAAwgD,EADAtyC,EAAAxI,EAAAlF,OAAA,EACA,GAAAggD,GAIAjqC,EAAAvW,EAAAkO,GAAA0wC,EAAA/+C,GACAuM,EAAA,YAGAvM,GAAA0W,EAAAvW,EAAAkO,GACAlO,GAAAkO,EAGAxI,EAAA46B,OAAAtgC,IAAA,EAAAH,EAEA,CAEA,OAAAkgD,EAAAr6C,EACA,CASA,SAAAyQ,EAAA5X,GACA,IAAAsB,EACAugD,EACAQ,EACAC,EACAF,EACA72C,EACAb,EACA63C,EACA79C,EACAnD,EACAihD,EAGAL,EAEAM,EACAP,EACAQ,EANAv7C,EAAA,GAoBA,IARAg7C,GAHAniD,EAAAqhD,EAAArhD,IAGAiC,OAGAX,EAAAq/C,EACAkB,EAAA,EACAO,EAAA1B,EAGAn1C,EAAA,EAAAA,EAAA42C,IAAA52C,GACAi3C,EAAAxiD,EAAAuL,IACA,KACApE,EAAArD,KAAAo9C,EAAAsB,IAeA,IAXAH,EAAAC,EAAAn7C,EAAAlF,OAMAqgD,GACAn7C,EAAArD,KAAAuzC,GAIAgL,EAAAF,GAAA,CAIA,IAAAz3C,EAAA21C,EAAA90C,EAAA,EAAAA,EAAA42C,IAAA52C,GACAi3C,EAAAxiD,EAAAuL,KACAjK,GAAAkhD,EAAA93C,IACAA,EAAA83C,GAcA,IAPA93C,EAAApJ,EAAA0W,GAAAqoC,EAAAwB,IADAY,EAAAJ,EAAA,KAEAx0C,EAAA,YAGAg0C,IAAAn3C,EAAApJ,GAAAmhD,EACAnhD,EAAAoJ,EAEAa,EAAA,EAAAA,EAAA42C,IAAA52C,EAOA,IANAi3C,EAAAxiD,EAAAuL,IAEAjK,KAAAugD,EAAAxB,GACAxyC,EAAA,YAGA20C,GAAAlhD,EAAA,CAEA,IAAAihD,EAAAV,EAAAn9C,EAAA2iB,IAEAk7B,GADAhhD,EAAAmD,GAAA09C,EAAA9B,EAAA57C,GAAA09C,EAAA7B,EAAAA,EAAA77C,EAAA09C,IADA19C,GAAA2iB,EAKAq7B,EAAAH,EAAAhhD,EACA2gD,EAAA76B,EAAA9lB,EACA4F,EAAArD,KACAo9C,EAAAO,EAAAlgD,EAAAmhD,EAAAR,EAAA,KAEAK,EAAAvqC,EAAA0qC,EAAAR,GAGA/6C,EAAArD,KAAAo9C,EAAAO,EAAAc,EAAA,KACAH,EAAAR,EAAAC,EAAAY,EAAAJ,GAAAC,GACAT,EAAA,IACAQ,CACA,GAGAR,IACAvgD,CAEA,CACA,OAAA6F,EAAAN,KAAA,GACA,CA8EA,GAnCAu5C,EAAA,CAMAR,QAAA,QAQA+C,KAAA,CACAtrC,OAAAgqC,EACAzpC,OAAA4pC,GAEAnqC,OAAAA,EACAO,OAAAA,EACAgrC,QA/BA,SAAA5iD,GACA,OAAAohD,EAAAphD,GAAA,SAAAmI,GACA,OAAA04C,EAAA/oC,KAAA3P,GACA,OAAAyP,EAAAzP,GACAA,CACA,GACA,EA0BA06C,UAnDA,SAAA7iD,GACA,OAAAohD,EAAAphD,GAAA,SAAAmI,GACA,OAAAy4C,EAAA9oC,KAAA3P,GACAkP,EAAAlP,EAAAK,MAAA,GAAAyB,eACA9B,CACA,GACA,GA2DA63C,GAAAE,EACA,GAAAt/C,EAAAD,SAAAq/C,EAEAE,EAAAv/C,QAAAy/C,OAGA,IAAA/gD,KAAA+gD,EACAA,EAAAz7C,eAAAtF,KAAA2gD,EAAA3gD,GAAA+gD,EAAA/gD,SAKAilC,EAAA8b,SAAAA,CAGA,CAnhBA,CAmhBAl/C,K9E45YC,GAAEX,KAAKW,KAAM,GAAEX,KAAKW,KAAuB,oBAAXF,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAElJ,EAAE,CAAC,GAAG,GAAG,CAAC,SAASY,EAAQf,EAAOD,G+Ex5ZlC,SAAAgE,EAAAvF,EAAA0jD,GACA,OAAAtjD,OAAA2E,UAAAQ,eAAApE,KAAAnB,EAAA0jD,EACA,CAEAliD,EAAAD,QAAA,SAAAoiD,EAAAlqB,EAAAmqB,EAAA7rC,GACA0hB,EAAAA,GAAA,IACAmqB,EAAAA,GAAA,IACA,IAAA5jD,EAAA,CAAA,EAEA,GAAA,iBAAA2jD,GAAA,IAAAA,EAAA9gD,OACA,OAAA7C,EAGA,IAAA6jD,EAAA,MACAF,EAAAA,EAAA3vC,MAAAylB,GAEA,IAAAqqB,EAAA,IACA/rC,GAAA,iBAAAA,EAAA+rC,UACAA,EAAA/rC,EAAA+rC,SAGA,IAAA1+C,EAAAu+C,EAAA9gD,OAEAihD,EAAA,GAAA1+C,EAAA0+C,IACA1+C,EAAA0+C,GAGA,IAAA,IAAAzhD,EAAA,EAAAA,EAAA+C,IAAA/C,EAAA,CACA,IAEA0hD,EAAAC,EAAA1+C,EAAA2+C,EAFAh1C,EAAA00C,EAAAthD,GAAAsN,QAAAk0C,EAAA,OACAK,EAAAj1C,EAAAtH,QAAAi8C,GAGAM,GAAA,GACAH,EAAA90C,EAAAvC,OAAA,EAAAw3C,GACAF,EAAA/0C,EAAAvC,OAAAw3C,EAAA,KAEAH,EAAA90C,EACA+0C,EAAA,IAGA1+C,EAAAiU,mBAAAwqC,GACAE,EAAA1qC,mBAAAyqC,GAEAz+C,EAAAvF,EAAAsF,GAEAR,EAAA9E,EAAAsF,IACAtF,EAAAsF,GAAAZ,KAAAu/C,GAEAjkD,EAAAsF,GAAA,CAAAtF,EAAAsF,GAAA2+C,GAJAjkD,EAAAsF,GAAA2+C,CAMA,CAEA,OAAAjkD,CACA,EAEA,IAAA8E,EAAAD,MAAAC,SAAA,SAAAq/C,GACA,MAAA,mBAAA/jD,OAAA2E,UAAAC,SAAA7D,KAAAgjD,EACA,C/Eq7ZA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS5hD,EAAQf,EAAOD,GgFj/ZlC,IAAA6iD,EAAA,SAAAH,GACA,cAAAA,GACA,IAAA,SACA,OAAAA,EAEA,IAAA,UACA,OAAAA,EAAA,OAAA,QAEA,IAAA,SACA,OAAA9zC,SAAA8zC,GAAAA,EAAA,GAEA,QACA,MAAA,GAEA,EAEAziD,EAAAD,QAAA,SAAAvB,EAAAy5B,EAAAmqB,EAAAvvC,GAOA,OANAolB,EAAAA,GAAA,IACAmqB,EAAAA,GAAA,IACA,OAAA5jD,IACAA,OAAAiB,GAGA,iBAAAjB,EACA+hD,EAAAsC,EAAArkD,IAAA,SAAAsF,GACA,IAAAg/C,EAAA9qC,mBAAA4qC,EAAA9+C,IAAAs+C,EACA,OAAA9+C,EAAA9E,EAAAsF,IACAy8C,EAAA/hD,EAAAsF,IAAA,SAAA2+C,GACA,OAAAK,EAAA9qC,mBAAA4qC,EAAAH,GACA,IAAAx8C,KAAAgyB,GAEA6qB,EAAA9qC,mBAAA4qC,EAAApkD,EAAAsF,IAEA,IAAAmC,KAAAgyB,GAIAplB,EACAmF,mBAAA4qC,EAAA/vC,IAAAuvC,EACApqC,mBAAA4qC,EAAApkD,IAFA,EAGA,EAEA,IAAA8E,EAAAD,MAAAC,SAAA,SAAAq/C,GACA,MAAA,mBAAA/jD,OAAA2E,UAAAC,SAAA7D,KAAAgjD,EACA,EAEA,SAAApC,EAAAoC,EAAA7iD,GACA,GAAA6iD,EAAApC,IAAA,OAAAoC,EAAApC,IAAAzgD,GAEA,IADA,IAAAJ,EAAA,GACAmB,EAAA,EAAAA,EAAA8hD,EAAAthD,OAAAR,IACAnB,EAAAwD,KAAApD,EAAA6iD,EAAA9hD,GAAAA,IAEA,OAAAnB,CACA,CAEA,IAAAmjD,EAAAjkD,OAAAiF,MAAA,SAAArF,GACA,IAAAkB,EAAA,GACA,IAAA,IAAAjB,KAAAD,EACAI,OAAA2E,UAAAQ,eAAApE,KAAAnB,EAAAC,IAAAiB,EAAAwD,KAAAzE,GAEA,OAAAiB,CACA,ChF2gaA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASqB,EAAQf,EAAOD,GiF7lalCA,EAAA0W,OAAA1W,EAAAuW,MAAAvV,EAAA,YACAhB,EAAAiX,OAAAjX,EAAA8f,UAAA9e,EAAA,WjFkmaA,EAAE,CAAC,WAAW,GAAG,WAAW,KAAK,GAAG,CAAC,SAASA,EAAQf,EAAOD,uFkFnma7D,IAAAmI,EAAAnH,EAAA,UACA0F,EAAAyB,EAAAzB,OAGA,SAAAs8C,EAAArwC,EAAAC,GACA,IAAA,IAAAlU,KAAAiU,EACAC,EAAAlU,GAAAiU,EAAAjU,EAEA,CASA,SAAAukD,EAAA/jD,EAAAmI,EAAA/F,GACA,OAAAoF,EAAAxH,EAAAmI,EAAA/F,EACA,CAVAoF,EAAAa,MAAAb,EAAAI,OAAAJ,EAAAY,aAAAZ,EAAA6G,gBACAtN,EAAAD,QAAAmI,GAGA66C,EAAA76C,EAAAnI,GACAA,EAAA0G,OAAAu8C,GAOAA,EAAAz/C,UAAA3E,OAAAyb,OAAA5T,EAAAlD,WAGAw/C,EAAAt8C,EAAAu8C,GAEAA,EAAA17C,KAAA,SAAArI,EAAAmI,EAAA/F,GACA,GAAA,iBAAApC,EACA,MAAA,IAAAW,UAAA,iCAEA,OAAA6G,EAAAxH,EAAAmI,EAAA/F,EACA,EAEA2hD,EAAAn8C,MAAA,SAAAmC,EAAAqE,EAAA7F,GACA,GAAA,iBAAAwB,EACA,MAAA,IAAApJ,UAAA,6BAEA,IAAAsH,EAAAT,EAAAuC,GAUA,YATAvJ,IAAA4N,EACA,iBAAA7F,EACAN,EAAAmG,KAAAA,EAAA7F,GAEAN,EAAAmG,KAAAA,GAGAnG,EAAAmG,KAAA,GAEAnG,CACA,EAEA87C,EAAA37C,YAAA,SAAA2B,GACA,GAAA,iBAAAA,EACA,MAAA,IAAApJ,UAAA,6BAEA,OAAA6G,EAAAuC,EACA,EAEAg6C,EAAA11C,gBAAA,SAAAtE,GACA,GAAA,iBAAAA,EACA,MAAA,IAAApJ,UAAA,6BAEA,OAAAsI,EAAAtB,WAAAoC,EACA,ClFwmaA,EAAE,CAACd,OAAS,KAAK,GAAG,CAAC,SAASnH,EAAQf,EAAOD,IAC7C,SAAW0G,IAAQ,iGmFxqanBzG,EAAAD,QAAA,SAAAkjD,EAAAthD,GACA,IAAAuhD,EAAA,GACAD,EAAA1pC,GAAA,QAAA,SAAAqnB,GACAsiB,EAAAhgD,KAAA09B,EACA,IACAqiB,EAAA9gD,KAAA,OAAA,WACAR,GAAAA,EAAA,KAAA8E,EAAA9B,OAAAu+C,IACAvhD,EAAA,IACA,IACAshD,EAAA9gD,KAAA,SAAA,SAAAS,GACAjB,GAAAA,EAAAiB,GACAjB,EAAA,IACA,GACA,CnF4qaC,GAAEhC,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,UAAU0F,OAE5C,EAAE,CAACyB,OAAS,KAAK,GAAG,CAAC,SAASnH,EAAQf,EAAOD,IAC7C,SAAW0G,IAAQ,8FoF5ranBzG,EAAAD,QAAA68B,EAEA,MAAAj4B,EAAA5D,EAAA,iBACAoiD,EAAApiD,EAAA,uBACAohC,EAAAphC,EAAA,QACAqhC,EAAArhC,EAAA,SACAoB,EAAApB,EAAA,QACAqiD,EAAAriD,EAAA,eACAu8B,EAAAv8B,EAAA,OAEAsiD,EAAAziD,GAAA,OAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA0iD,KAEA,SAAA1mB,EAAA2mB,EAAA5hD,GAIA,GAHA4hD,EAAA3kD,OAAAqkB,OAAA,CAAAugC,aAAA,IAAA,iBAAAD,EAAA,CAAAjmB,IAAAimB,GAAAA,GACA5hD,EAAAQ,EAAAR,GAEA4hD,EAAAjmB,IAAA,CACA,MAAAmmB,SAAAA,EAAAC,KAAAA,EAAAnhB,SAAAA,EAAAohB,KAAAA,EAAArsC,KAAAA,GAAAgmB,EAAAhnB,MAAAitC,EAAAjmB,YACAimB,EAAAjmB,IACAmmB,GAAAC,GAAAnhB,GAAAohB,EACA/kD,OAAAqkB,OAAAsgC,EAAA,CAAAE,WAAAC,OAAAnhB,WAAAohB,OAAArsC,SADAisC,EAAAjsC,KAAAA,CAEA,CAEA,MAAA0lB,EAAA,CAAA,kBAAA,iBAIA,IAAAuB,EAHAglB,EAAAvmB,SAAAp+B,OAAAiF,KAAA0/C,EAAAvmB,SAAA5V,SAAAtjB,GAAAk5B,EAAAl5B,EAAAuF,eAAAk6C,EAAAvmB,QAAAl5B,KACAy/C,EAAAvmB,QAAAA,EAGAumB,EAAAhlB,KACAA,EAAAglB,EAAAxlB,OAAAslB,EAAAE,EAAAhlB,MAAA3e,KAAAC,UAAA0jC,EAAAhlB,MAAAglB,EAAAhlB,KACAglB,EAAAK,OACArlB,EAAA,iBAAAglB,EAAAK,KAAAL,EAAAK,KAAAR,EAAAvjC,UAAA0jC,EAAAK,MACAL,EAAAvmB,QAAA,gBAAA,qCAGAuB,IACAglB,EAAAlmB,SAAAkmB,EAAAlmB,OAAA,QACAgmB,EAAA9kB,KAAAglB,EAAAvmB,QAAA,kBAAAv2B,EAAA7B,WAAA25B,IACAglB,EAAAxlB,OAAAwlB,EAAAK,OAAAL,EAAAvmB,QAAA,gBAAA,4BAEAumB,EAAAhlB,YAAAglB,EAAAK,KAEAL,EAAAxlB,OAAAwlB,EAAAvmB,QAAA6mB,OAAA,oBACAN,EAAAlmB,SAAAkmB,EAAAlmB,OAAAkmB,EAAAlmB,OAAA9M,eAEA,MAAAuzB,EAAAP,EAAAE,SAEAM,GADA,WAAAR,EAAAhhB,SAAAH,EAAAD,GACAK,QAAA+gB,GAAA7jD,IACA,IAAA,IAAA6jD,EAAAS,iBAAAtkD,EAAA+9B,YAAA,KAAA/9B,EAAA+9B,WAAA,KAAA/9B,EAAAs9B,QAAAinB,SAAA,CACAV,EAAAjmB,IAAA59B,EAAAs9B,QAAAinB,gBACAV,EAAAvmB,QAAAknB,KACAxkD,EAAAykD,SAEA,MAAAC,EAAA9mB,EAAAhnB,MAAAitC,EAAAjmB,KAAAmmB,SAYA,OAVA,OAAAW,GAAAA,IAAAN,WACAP,EAAAvmB,QAAAN,cACA6mB,EAAAvmB,QAAAqnB,eAGA,SAAAd,EAAAlmB,QAAA,CAAA,IAAA,KAAA3uB,SAAAhP,EAAA+9B,cACA8lB,EAAAlmB,OAAA,aACAkmB,EAAAvmB,QAAA,yBAAAumB,EAAAvmB,QAAA,iBAGA,GAAAumB,EAAAC,eAAA7hD,EAAA,IAAAT,MAAA,uBACA07B,EAAA2mB,EAAA5hD,EACA,CAEA,MAAA2iD,EAAA,mBAAAnB,GAAA,SAAAI,EAAAlmB,OACA17B,EAAA,KAAA2iD,EAAAnB,EAAAzjD,GAAAA,EAAA,IAWA,OATAqkD,EAAAxqC,GAAA,WAAA,KACAwqC,EAAAQ,QACA5iD,EAAA,IAAAT,MAAA,qBAAA,IAEA6iD,EAAAxqC,GAAA,QAAA5X,GAEA0hD,EAAA9kB,GAAAA,EAAAhlB,GAAA,QAAA5X,GAAA2hD,KAAAS,GACAA,EAAA19C,IAAAk4B,GAEAwlB,CACA,CAEAnnB,EAAAj4B,OAAA,CAAA4+C,EAAA5hD,IACAi7B,EAAA2mB,GAAA,CAAA3gD,EAAAlD,KACA,GAAAkD,EAAA,OAAAjB,EAAAiB,GACA+B,EAAAjF,GAAA,CAAAkD,EAAAiG,KACA,GAAAjG,EAAA,OAAAjB,EAAAiB,GACA,GAAA2gD,EAAAxlB,KACA,IACAl1B,EAAA+W,KAAAtJ,MAAAzN,EAAArF,WACA,CAAA,MAAAZ,GACA,OAAAjB,EAAAiB,EAAAlD,EAAAmJ,EACA,CAEAlH,EAAA,KAAAjC,EAAAmJ,EAAA,GACA,IAIA,CAAA,MAAA,OAAA,MAAA,QAAA,OAAA,UAAAue,SAAAiW,IACAT,EAAAS,GAAA,CAAAkmB,EAAA5hD,KACA,iBAAA4hD,IAAAA,EAAA,CAAAjmB,IAAAimB,IACA3mB,EAAAh+B,OAAAqkB,OAAA,CAAAoa,OAAAA,EAAA9M,eAAAgzB,GAAA5hD,GACA,GpFisaC,GAAEhC,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,UAAU0F,OAE5C,EAAE,CAACyB,OAAS,GAAG,sBAAsB,GAAGi6B,KAAO,GAAGC,MAAQ,GAAGjgC,KAAO,GAAGihD,YAAc,GAAG,gBAAgB,GAAG9lB,IAAM,MAAM,GAAG,CAAC,SAASv8B,EAAQf,EAAOD,IACnJ,SAAWK,IAAQ,WqF9yanB,IAAAokD,EAAAzjD,EAAA,iBACA0jD,EAAA1jD,EAAA,kBACAq/B,EAAAr/B,EAAA,SACA2jD,EAAA3jD,EAAA,wBACAu8B,EAAAv8B,EAAA,OAEAohC,EAAApiC,EAEAoiC,EAAAK,QAAA,SAAA+gB,EAAA5hD,GAEA4hD,EADA,iBAAAA,EACAjmB,EAAAhnB,MAAAitC,GAEAnjB,EAAAmjB,GAKA,IAAAoB,GAAA,IAAAvkD,EAAA6jD,SAAA1hB,SAAAqiB,OAAA,aAAA,QAAA,GAEAriB,EAAAghB,EAAAhhB,UAAAoiB,EACAT,EAAAX,EAAAE,UAAAF,EAAAW,KACAR,EAAAH,EAAAG,KACApsC,EAAAisC,EAAAjsC,MAAA,IAGA4sC,IAAA,IAAAA,EAAA/9C,QAAA,OACA+9C,EAAA,IAAAA,EAAA,KAGAX,EAAAjmB,KAAA4mB,EAAA3hB,EAAA,KAAA2hB,EAAA,KAAAR,EAAA,IAAAA,EAAA,IAAApsC,EACAisC,EAAAlmB,QAAAkmB,EAAAlmB,QAAA,OAAA9M,cACAgzB,EAAAvmB,QAAAumB,EAAAvmB,SAAA,CAAA,EAIA,IAAA+mB,EAAA,IAAAS,EAAAjB,GAGA,OAFA5hD,GACAoiD,EAAAxqC,GAAA,WAAA5X,GACAoiD,CACA,EAEA5hB,EAAAj1B,IAAA,SAAAq2C,EAAA5hD,GACA,IAAAoiD,EAAA5hB,EAAAK,QAAA+gB,EAAA5hD,GAEA,OADAoiD,EAAA19C,MACA09C,CACA,EAEA5hB,EAAAqiB,cAAAA,EACAriB,EAAA0iB,gBAAAJ,EAAAI,gBAEA1iB,EAAA2iB,MAAA,WAAA,EACA3iB,EAAA2iB,MAAAC,kBAAA,EAEA5iB,EAAA6iB,YAAA,IAAA7iB,EAAA2iB,MAEA3iB,EAAA8iB,aAAAP,EAEAviB,EAAA+iB,QAAA,CACA,WACA,UACA,OACA,SACA,MACA,OACA,OACA,WACA,QACA,aACA,QACA,OACA,SACA,UACA,QACA,OACA,WACA,YACA,QACA,MACA,SACA,SACA,YACA,QACA,SACA,crFizaC,GAAEvlD,KAAKW,KAAM,GAAEX,KAAKW,KAAuB,oBAAXF,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAElJ,EAAE,CAAC,gBAAgB,GAAG,iBAAiB,GAAG,uBAAuB,GAAGm9B,IAAM,IAAI6nB,MAAQ,MAAM,GAAG,CAAC,SAASpkD,EAAQf,EAAOD,IACxH,SAAWK,IAAQ,WsF93anB,IAAAglD,EACA,SAAAC,IAEA,QAAA5lD,IAAA2lD,EAAA,OAAAA,EAEA,GAAAhlD,EAAAklD,eAAA,CACAF,EAAA,IAAAhlD,EAAAklD,eAIA,IACAF,EAAAjtB,KAAA,MAAA/3B,EAAAmlD,eAAA,IAAA,sBACA,CAAA,MAAA9kD,GACA2kD,EAAA,IACA,CACA,MAEAA,EAAA,KAEA,OAAAA,CACA,CAEA,SAAAI,EAAA58C,GACA,IAAAw8C,EAAAC,IACA,IAAAD,EAAA,OAAA,EACA,IAEA,OADAA,EAAAK,aAAA78C,EACAw8C,EAAAK,eAAA78C,CACA,CAAA,MAAAnI,GAAA,CACA,OAAA,CACA,CAeA,SAAAilD,EAAAhnD,GACA,MAAA,mBAAAA,CACA,CAxDAqB,EAAA4lD,MAAAD,EAAAtlD,EAAAulD,QAAAD,EAAAtlD,EAAAwlD,gBAEA7lD,EAAA8lD,eAAAH,EAAAtlD,EAAA0lD,gBAEA/lD,EAAAgmD,gBAAAL,EAAAtlD,EAAA4lD,iBAuCAjmD,EAAAkmD,YAAAlmD,EAAA4lD,OAAAH,EAAA,eAIAzlD,EAAAmmD,UAAAnmD,EAAA4lD,OAAAH,EAAA,aACAzlD,EAAAomD,uBAAApmD,EAAA4lD,OAAAH,EAAA,2BAIAzlD,EAAAqmD,iBAAArmD,EAAA4lD,SAAAN,KAAAK,EAAAL,IAAAe,kBAMAhB,EAAA,ItF04aC,GAAEzlD,KAAKW,KAAM,GAAEX,KAAKW,KAAuB,oBAAXF,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAElJ,EAAE,CAAC,GAAG,GAAG,CAAC,SAASY,EAAQf,EAAOD,IAClC,SAAWmlB,EAAQ9kB,EAAOqG,IAAQ,WuFv8alC,IAAA4/C,EAAAtlD,EAAA,gBACAulD,EAAAvlD,EAAA,YACA0jD,EAAA1jD,EAAA,cACAkiD,EAAAliD,EAAA,mBAEA8jD,EAAAJ,EAAAI,gBACA0B,EAAA9B,EAAA+B,YAgBA,IAAAhC,EAAAxkD,EAAAD,QAAA,SAAAwjD,GACA,IAYAkD,EAZApmD,EAAAC,KACA2iD,EAAAyD,SAAA/mD,KAAAU,GAEAA,EAAAsmD,MAAApD,EACAljD,EAAAumD,MAAA,GACAvmD,EAAAwmD,SAAA,CAAA,EACAtD,EAAAI,MACAtjD,EAAAwtB,UAAA,gBAAA,SAAApnB,EAAAa,KAAAi8C,EAAAI,MAAAngD,SAAA,WACA5E,OAAAiF,KAAA0/C,EAAAvmB,SAAA5V,SAAA,SAAAvU,GACAxS,EAAAwtB,UAAAhb,EAAA0wC,EAAAvmB,QAAAnqB,GACA,IAGA,IAAAi0C,GAAA,EACA,GAAA,kBAAAvD,EAAAhd,MAAA,mBAAAgd,IAAA8C,EAAAN,gBAEAe,GAAA,EACAL,GAAA,OACA,GAAA,qBAAAlD,EAAAhd,KAGAkgB,GAAA,OACA,GAAA,6BAAAlD,EAAAhd,KAEAkgB,GAAAJ,EAAAD,qBACA,IAAA7C,EAAAhd,MAAA,YAAAgd,EAAAhd,MAAA,gBAAAgd,EAAAhd,KAIA,MAAA,IAAArlC,MAAA,+BAFAulD,GAAA,CAGA,CACApmD,EAAA0mD,MA9CA,SAAAN,EAAAK,GACA,OAAAT,EAAAV,OAAAmB,EACA,QACAT,EAAAF,sBACA,0BACAE,EAAAH,SACA,YACAG,EAAAJ,aAAAQ,EACA,cAEA,MAEA,CAkCAO,CAAAP,EAAAK,GACAzmD,EAAA4mD,YAAA,KACA5mD,EAAA6mD,eAAA,KACA7mD,EAAA8mD,aAAA,KAEA9mD,EAAAkZ,GAAA,UAAA,WACAlZ,EAAA+mD,WACA,GACA,EAEAd,EAAA9B,EAAAvB,EAAAyD,UAEAlC,EAAAjhD,UAAAsqB,UAAA,SAAAhb,EAAAnU,GACA,IACA2oD,EAAAx0C,EAAAxJ,eAIA,IAAAi+C,EAAAnhD,QAAAkhD,KALA/mD,KAQAumD,SAAAQ,GAAA,CACAx0C,KAAAA,EACAnU,MAAAA,GAEA,EAEA8lD,EAAAjhD,UAAAgkD,UAAA,SAAA10C,GACA,IAAA20C,EAAAlnD,KAAAumD,SAAAh0C,EAAAxJ,eACA,OAAAm+C,EACAA,EAAA9oD,MACA,IACA,EAEA8lD,EAAAjhD,UAAAkkD,aAAA,SAAA50C,UACAvS,KACAumD,SAAAh0C,EAAAxJ,cACA,EAEAm7C,EAAAjhD,UAAA6jD,UAAA,WACA,IAAA/mD,EAAAC,KAEA,IAAAD,EAAAqnD,WAAA,CAEA,IAAAnE,EAAAljD,EAAAsmD,MAEA,YAAApD,GAAA,IAAAA,EAAAhF,SACAl+C,EAAAkE,WAAAg/C,EAAAhF,SAGA,IAAAoJ,EAAAtnD,EAAAwmD,SACAtoB,EAAA,KACA,QAAAglB,EAAAlmB,QAAA,SAAAkmB,EAAAlmB,SACAkB,EAAA,IAAAqpB,KAAAvnD,EAAAumD,MAAA,CACAh+C,MAAA++C,EAAA,iBAAA,CAAA,GAAAjpD,OAAA,MAKA,IAAAmpD,EAAA,GAaA,GAZAjpD,OAAAiF,KAAA8jD,GAAAvgC,SAAA,SAAA0gC,GACA,IAAAj1C,EAAA80C,EAAAG,GAAAj1C,KACAnU,EAAAipD,EAAAG,GAAAppD,MACA2E,MAAAC,QAAA5E,GACAA,EAAA0oB,SAAA,SAAAq7B,GACAoF,EAAA3kD,KAAA,CAAA2P,EAAA4vC,GACA,IAEAoF,EAAA3kD,KAAA,CAAA2P,EAAAnU,GAEA,IAEA,UAAA2B,EAAA0mD,MAAA,CACA,IAAAgB,EAAA,KACA,GAAA1B,EAAAN,gBAAA,CACA,IAAAiC,EAAA,IAAAhC,gBACA+B,EAAAC,EAAAD,OACA1nD,EAAA4nD,sBAAAD,EAEA,mBAAAzE,GAAA,IAAAA,EAAA2E,iBACA7nD,EAAA4mD,YAAA7mD,EAAAmE,YAAA,WACAlE,EAAAka,KAAA,kBACAla,EAAA4nD,uBACA5nD,EAAA4nD,sBAAA1D,OACA,GAAAhB,EAAA2E,gBAEA,CAEA9nD,EAAAulD,MAAAtlD,EAAAsmD,MAAArpB,IAAA,CACAD,OAAAh9B,EAAAsmD,MAAAtpB,OACAL,QAAA6qB,EACAtpB,KAAAA,QAAA9+B,EACA8mC,KAAA,OACA4hB,YAAA5E,EAAA6E,gBAAA,UAAA,cACAL,OAAAA,IACAM,MAAA,SAAA5D,GACApkD,EAAAioD,eAAA7D,EACApkD,EAAAkoD,cAAA,GACAloD,EAAAmoD,UACA,IAAA,SAAAC,GACApoD,EAAAkoD,cAAA,GACAloD,EAAAqnD,YACArnD,EAAAka,KAAA,QAAAkuC,EACA,GACA,KAAA,CACA,IAAArD,EAAA/kD,EAAAqoD,KAAA,IAAAtoD,EAAAklD,eACA,IACAF,EAAAjtB,KAAA93B,EAAAsmD,MAAAtpB,OAAAh9B,EAAAsmD,MAAArpB,KAAA,EACA,CAAA,MAAA16B,GAIA,YAHAsiB,EAAA05B,UAAA,WACAv+C,EAAAka,KAAA,QAAA3X,EACA,GAEA,CAGA,iBAAAwiD,IACAA,EAAAK,aAAAplD,EAAA0mD,OAEA,oBAAA3B,IACAA,EAAAgD,kBAAA7E,EAAA6E,iBAEA,SAAA/nD,EAAA0mD,OAAA,qBAAA3B,GACAA,EAAAgB,iBAAA,sCAEA,mBAAA7C,IACA6B,EAAA7G,QAAAgF,EAAA2E,eACA9C,EAAAuD,UAAA,WACAtoD,EAAAka,KAAA,iBACA,GAGAstC,EAAAzgC,SAAA,SAAAogC,GACApC,EAAAwD,iBAAApB,EAAA,GAAAA,EAAA,GACA,IAEAnnD,EAAAwoD,UAAA,KACAzD,EAAA0D,mBAAA,WACA,OAAA1D,EAAA2D,YACA,KAAAxC,EAAAyC,QACA,KAAAzC,EAAA0C,KACA5oD,EAAA6oD,iBAGA,EAGA,4BAAA7oD,EAAA0mD,QACA3B,EAAA+D,WAAA,WACA9oD,EAAA6oD,gBACA,GAGA9D,EAAAgE,QAAA,WACA/oD,EAAAqnD,aAEArnD,EAAAkoD,cAAA,GACAloD,EAAAka,KAAA,QAAA,IAAArZ,MAAA,cACA,EAEA,IACAkkD,EAAAiE,KAAA9qB,EACA,CAAA,MAAA37B,GAIA,YAHAsiB,EAAA05B,UAAA,WACAv+C,EAAAka,KAAA,QAAA3X,EACA,GAEA,CACA,CA7HA,CA8HA,EAgBA4hD,EAAAjhD,UAAA2lD,eAAA,WACA,IAAA7oD,EAAAC,KAEAD,EAAAkoD,cAAA,GAZA,SAAAnD,GACA,IACA,IAAAkE,EAAAlE,EAAAkE,OACA,OAAA,OAAAA,GAAA,IAAAA,CACA,CAAA,MAAA7oD,GACA,OAAA,CACA,CACA,CAOA8oD,CAAAlpD,EAAAqoD,QAAAroD,EAAAqnD,aAGArnD,EAAAwoD,WACAxoD,EAAAmoD,WAEAnoD,EAAAwoD,UAAAK,eAAA7oD,EAAAkoD,aAAAptC,KAAA9a,IACA,EAEAmkD,EAAAjhD,UAAAilD,SAAA,WACA,IAAAnoD,EAAAC,KAEAD,EAAAqnD,aAGArnD,EAAAwoD,UAAA,IAAAhE,EAAAxkD,EAAAqoD,KAAAroD,EAAAioD,eAAAjoD,EAAA0mD,MAAA1mD,EAAAkoD,aAAAptC,KAAA9a,IACAA,EAAAwoD,UAAAtvC,GAAA,SAAA,SAAA3W,GACAvC,EAAAka,KAAA,QAAA3X,EACA,IAEAvC,EAAAka,KAAA,WAAAla,EAAAwoD,WACA,EAEArE,EAAAjhD,UAAAimD,OAAA,SAAA5oB,EAAAp5B,EAAA7F,GACArB,KAEAsmD,MAAA1jD,KAAA09B,GACAj/B,GACA,EAEA6iD,EAAAjhD,UAAAglD,aAAA,SAAA/lD,GACA,IAAAnC,EAAAC,KAEAF,EAAA49C,aAAA39C,EAAA8mD,cACA9mD,EAAA8mD,aAAA,KAEA3kD,GACApC,EAAA49C,aAAA39C,EAAA4mD,aACA5mD,EAAA4mD,YAAA,MACA5mD,EAAA6mD,iBACA7mD,EAAA8mD,aAAA/mD,EAAAmE,YAAA,WACAlE,EAAAka,KAAA,UACA,GAAAla,EAAA6mD,gBAEA,EAEA1C,EAAAjhD,UAAAghD,MAAAC,EAAAjhD,UAAAkmD,QAAA,SAAA7mD,GACA,IAAAvC,EAAAC,KACAD,EAAAqnD,YAAA,EACArnD,EAAAkoD,cAAA,GACAloD,EAAAwoD,YACAxoD,EAAAwoD,UAAAnB,YAAA,GACArnD,EAAAqoD,KACAroD,EAAAqoD,KAAAnE,QACAlkD,EAAA4nD,uBACA5nD,EAAA4nD,sBAAA1D,QAEA3hD,GACAvC,EAAAka,KAAA,QAAA3X,EACA,EAEA4hD,EAAAjhD,UAAA8C,IAAA,SAAAwC,EAAArB,EAAA7F,GAEA,mBAAAkH,IACAlH,EAAAkH,EACAA,OAAApJ,GAGAwjD,EAAAyD,SAAAnjD,UAAA8C,IAAA1G,KANAW,KAMAuI,EAAArB,EAAA7F,EACA,EAEA6iD,EAAAjhD,UAAAgB,WAAA,SAAAg6C,EAAA58C,GACA,IAAAtB,EAAAC,KAEAqB,GACAtB,EAAA8B,KAAA,UAAAR,GAEAtB,EAAA6mD,eAAA3I,EACAl+C,EAAAkoD,cAAA,EACA,EAEA/D,EAAAjhD,UAAAmmD,aAAA,WAAA,EACAlF,EAAAjhD,UAAAomD,WAAA,WAAA,EACAnF,EAAAjhD,UAAAqmD,mBAAA,WAAA,EAGA,IAAAtC,EAAA,CACA,iBACA,kBACA,iCACA,gCACA,aACA,iBACA,SACA,UACA,OACA,MACA,SACA,OACA,aACA,SACA,UACA,KACA,UACA,oBACA,UACA,MvF28aC,GAAE3nD,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAA8B,oBAAXX,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAAEY,EAAQ,UAAU0F,OAE1L,EAAE,CAAC,eAAe,GAAG,aAAa,GAAGwf,SAAW,GAAG/d,OAAS,GAAGo+C,SAAW,GAAG,kBAAkB,MAAM,GAAG,CAAC,SAASvlD,EAAQf,EAAOD,IACjI,SAAWmlB,EAAQ9kB,EAAOqG,IAAQ,WwF5yblC,IAAA4/C,EAAAtlD,EAAA,gBACAulD,EAAAvlD,EAAA,YACAkiD,EAAAliD,EAAA,mBAEAwlD,EAAAxmD,EAAAymD,YAAA,CACAqD,OAAA,EACAC,OAAA,EACAC,iBAAA,EACAf,QAAA,EACAC,KAAA,GAGApE,EAAA9kD,EAAA8kD,gBAAA,SAAAO,EAAAX,EAAAle,EAAAyjB,GACA,IAAA3pD,EAAAC,KAiBA,GAhBA2iD,EAAAgH,SAAAtqD,KAAAU,GAEAA,EAAA0mD,MAAAxgB,EACAlmC,EAAA28B,QAAA,CAAA,EACA38B,EAAA6pD,WAAA,GACA7pD,EAAA8pD,SAAA,CAAA,EACA9pD,EAAA+pD,YAAA,GAGA/pD,EAAAkZ,GAAA,OAAA,WAEA2L,EAAA05B,UAAA,WACAv+C,EAAAka,KAAA,QACA,GACA,IAEA,UAAAgsB,EAAA,CAYA,GAXAlmC,EAAAioD,eAAA7D,EAEApkD,EAAAi9B,IAAAmnB,EAAAnnB,IACAj9B,EAAAo9B,WAAAgnB,EAAA6E,OACAjpD,EAAAgqD,cAAA5F,EAAA6F,WAEA7F,EAAAznB,QAAA5V,SAAA,SAAAogC,EAAA/oD,GACA4B,EAAA28B,QAAAv+B,EAAA4K,eAAAm+C,EACAnnD,EAAA6pD,WAAAhnD,KAAAzE,EAAA+oD,EACA,IAEAnB,EAAAR,eAAA,CACA,IAAA7mD,EAAA,IAAA8mD,eAAA,CACAn+C,MAAA,SAAAi5B,GAEA,OADAopB,GAAA,GACA,IAAAlxC,SAAA,SAAAC,EAAAC,GACA3Y,EAAAqnD,WACA1uC,IACA3Y,EAAA6C,KAAAuD,EAAAa,KAAAs5B,IACA7nB,IAEA1Y,EAAAkqD,aAAAxxC,CAEA,GACA,EACAyxC,MAAA,WACAR,GAAA,GACA3pD,EAAAqnD,YACArnD,EAAA6C,KAAA,KACA,EACAqhD,MAAA,SAAA3hD,GACAonD,GAAA,GACA3pD,EAAAqnD,YACArnD,EAAAka,KAAA,QAAA3X,EACA,IAGA,IAMA,YALA6hD,EAAAlmB,KAAAksB,OAAAzrD,GAAA0rD,OAAA,SAAA9nD,GACAonD,GAAA,GACA3pD,EAAAqnD,YACArnD,EAAAka,KAAA,QAAA3X,EACA,GAEA,CAAA,MAAAnC,GAAA,CACA,CAEA,IAAAkqD,EAAAlG,EAAAlmB,KAAAqsB,YACA,SAAArgD,IACAogD,EAAApgD,OAAA89C,MAAA,SAAA5f,GACApoC,EAAAqnD,aAEAsC,EAAAvhB,EAAAjmC,MACAimC,EAAAjmC,KACAnC,EAAA6C,KAAA,OAGA7C,EAAA6C,KAAAuD,EAAAa,KAAAmhC,EAAA/pC,QACA6L,KACA,IAAAmgD,OAAA,SAAA9nD,GACAonD,GAAA,GACA3pD,EAAAqnD,YACArnD,EAAAka,KAAA,QAAA3X,EACA,GACA,CACA2H,GACA,KAAA,CA2BA,GA1BAlK,EAAAqoD,KAAAtD,EACA/kD,EAAAwqD,KAAA,EAEAxqD,EAAAi9B,IAAA8nB,EAAA0F,YACAzqD,EAAAo9B,WAAA2nB,EAAAkE,OACAjpD,EAAAgqD,cAAAjF,EAAAkF,WACAlF,EAAA2F,wBAAAv4C,MAAA,SACA4U,SAAA,SAAAogC,GACA,IAAAwD,EAAAxD,EAAA32B,MAAA,oBACA,GAAAm6B,EAAA,CACA,IAAAvsD,EAAAusD,EAAA,GAAA3hD,cACA,eAAA5K,QACAgB,IAAAY,EAAA28B,QAAAv+B,KACA4B,EAAA28B,QAAAv+B,GAAA,IAEA4B,EAAA28B,QAAAv+B,GAAAyE,KAAA8nD,EAAA,UACAvrD,IAAAY,EAAA28B,QAAAv+B,GACA4B,EAAA28B,QAAAv+B,IAAA,KAAAusD,EAAA,GAEA3qD,EAAA28B,QAAAv+B,GAAAusD,EAAA,GAEA3qD,EAAA6pD,WAAAhnD,KAAA8nD,EAAA,GAAAA,EAAA,GACA,CACA,IAEA3qD,EAAA4qD,SAAA,kBACA5E,EAAAD,iBAAA,CACA,IAAA8E,EAAA7qD,EAAA6pD,WAAA,aACA,GAAAgB,EAAA,CACA,IAAAC,EAAAD,EAAAr6B,MAAA,2BACAs6B,IACA9qD,EAAA4qD,SAAAE,EAAA,GAAA9hD,cAEA,CACAhJ,EAAA4qD,WACA5qD,EAAA4qD,SAAA,QACA,CACA,CACA,EAEA3E,EAAAzB,EAAA5B,EAAAgH,UAEApF,EAAAthD,UAAA6nD,MAAA,WACA,IAEAryC,EAFAzY,KAEAiqD,aACAxxC,IAHAzY,KAIAiqD,aAAA,KACAxxC,IAEA,EAEA8rC,EAAAthD,UAAA2lD,eAAA,SAAAc,GACA,IAAA3pD,EAAAC,KAEA8kD,EAAA/kD,EAAAqoD,KAEAjE,EAAA,KACA,OAAApkD,EAAA0mD,OACA,IAAA,OAEA,IADAtC,EAAAW,EAAAiG,cACAhqD,OAAAhB,EAAAwqD,KAAA,CACA,IAAAS,EAAA7G,EAAAv5C,OAAA7K,EAAAwqD,MACA,GAAA,mBAAAxqD,EAAA4qD,SAAA,CAEA,IADA,IAAA/iD,EAAAzB,EAAAI,MAAAykD,EAAAjqD,QACAR,EAAA,EAAAA,EAAAyqD,EAAAjqD,OAAAR,IACAqH,EAAArH,GAAA,IAAAyqD,EAAA9lD,WAAA3E,GAEAR,EAAA6C,KAAAgF,EACA,MACA7H,EAAA6C,KAAAooD,EAAAjrD,EAAA4qD,UAEA5qD,EAAAwqD,KAAApG,EAAApjD,MACA,CACA,MACA,IAAA,cACA,GAAA+jD,EAAA2D,aAAAxC,EAAA0C,OAAA7D,EAAAX,SACA,MACAA,EAAAW,EAAAX,SACApkD,EAAA6C,KAAAuD,EAAAa,KAAA,IAAApB,WAAAu+C,KACA,MACA,IAAA,0BAEA,GADAA,EAAAW,EAAAX,SACAW,EAAA2D,aAAAxC,EAAAyC,UAAAvE,EACA,MACApkD,EAAA6C,KAAAuD,EAAAa,KAAA,IAAApB,WAAAu+C,KACA,MACA,IAAA,YAEA,GADAA,EAAAW,EAAAX,SACAW,EAAA2D,aAAAxC,EAAAyC,QACA,MACA,IAAA2B,EAAA,IAAAvqD,EAAAmrD,eACAZ,EAAAxB,WAAA,WACAwB,EAAAliB,OAAA7jC,WAAAvE,EAAAwqD,OACAxqD,EAAA6C,KAAAuD,EAAAa,KAAA,IAAApB,WAAAykD,EAAAliB,OAAA7gC,MAAAvH,EAAAwqD,SACAxqD,EAAAwqD,KAAAF,EAAAliB,OAAA7jC,WAEA,EACA+lD,EAAAa,OAAA,WACAxB,GAAA,GACA3pD,EAAA6C,KAAA,KACA,EAEAynD,EAAAc,kBAAAhH,GAKApkD,EAAAqoD,KAAAK,aAAAxC,EAAA0C,MAAA,cAAA5oD,EAAA0mD,QACAiD,GAAA,GACA3pD,EAAA6C,KAAA,MAEA,CxF+ybC,GAAEvD,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAA8B,oBAAXX,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAAEY,EAAQ,UAAU0F,OAE1L,EAAE,CAAC,eAAe,GAAGwf,SAAW,GAAG/d,OAAS,GAAGo+C,SAAW,GAAG,kBAAkB,MAAM,GAAG,CAAC,SAASvlD,EAAQf,EAAOD,GyF//bjH,IAAA2rD,EAAA,CAAA,EAEA,SAAAC,EAAAxqD,EAAA+a,EAAA0vC,GACAA,IACAA,EAAA1qD,OAWA,IAAA2qD,EAEA,SAAAC,GAnBA,IAAAC,EAAAC,EAsBA,SAAAH,EAAAI,EAAAC,EAAAC,GACA,OAAAL,EAAAnsD,KAAAW,KAdA,SAAA2rD,EAAAC,EAAAC,GACA,MAAA,iBAAAjwC,EACAA,EAEAA,EAAA+vC,EAAAC,EAAAC,EAEA,CAQAC,CAAAH,EAAAC,EAAAC,KAAA7rD,IACA,CAEA,OA1BA0rD,EAoBAF,GApBAC,EAoBAF,GApBAtoD,UAAA3E,OAAAyb,OAAA2xC,EAAAzoD,WAAAwoD,EAAAxoD,UAAAqP,YAAAm5C,EAAAA,EAAA5kD,UAAA6kD,EA0BAH,CACA,CARA,CAQAD,GAEAC,EAAAtoD,UAAAsP,KAAA+4C,EAAA/4C,KACAg5C,EAAAtoD,UAAApC,KAAAA,EACAuqD,EAAAvqD,GAAA0qD,CACA,CAGA,SAAAQ,EAAAC,EAAAC,GACA,GAAAlpD,MAAAC,QAAAgpD,GAAA,CACA,IAAA1oD,EAAA0oD,EAAAjrD,OAKA,OAJAirD,EAAAA,EAAA/L,KAAA,SAAA1/C,GACA,OAAA1B,OAAA0B,EACA,IAEA+C,EAAA,EACA,UAAAe,OAAA4nD,EAAA,KAAA5nD,OAAA2nD,EAAA1kD,MAAA,EAAAhE,EAAA,GAAAqC,KAAA,MAAA,SAAAqmD,EAAA1oD,EAAA,GACA,IAAAA,EACA,UAAAe,OAAA4nD,EAAA,KAAA5nD,OAAA2nD,EAAA,GAAA,QAAA3nD,OAAA2nD,EAAA,IAEA,MAAA3nD,OAAA4nD,EAAA,KAAA5nD,OAAA2nD,EAAA,GAEA,CACA,MAAA,MAAA3nD,OAAA4nD,EAAA,KAAA5nD,OAAAxF,OAAAmtD,GAEA,CA6BAX,EAAA,yBAAA,SAAA94C,EAAAnU,GACA,MAAA,cAAAA,EAAA,4BAAAmU,EAAA,GACA,GAAAjT,WACA+rD,EAAA,wBAAA,SAAA94C,EAAAy5C,EAAA5kD,GAEA,IAAA8kD,EA/BA5H,EAAAh3C,EAwCA6+C,EAEA,GATA,iBAAAH,IAjCA1H,EAiCA,OAAA0H,EAhCAphD,QAAA0C,GAAAA,EAAA,EAAA,GAAAA,EAAAg3C,EAAAvjD,UAAAujD,IAiCA4H,EAAA,cACAF,EAAAA,EAAAn+C,QAAA,QAAA,KAEAq+C,EAAA,UAhCA,SAAAlhD,EAAAs5C,EAAA8H,GAKA,YAJAjtD,IAAAitD,GAAAA,EAAAphD,EAAAjK,UACAqrD,EAAAphD,EAAAjK,QAGAiK,EAAAqa,UAAA+mC,EAAA9H,EAAAvjD,OAAAqrD,KAAA9H,CACA,CA+BAp1B,CAAA3c,EAAA,aAEA45C,EAAA,OAAA9nD,OAAAkO,EAAA,KAAAlO,OAAA6nD,EAAA,KAAA7nD,OAAA0nD,EAAAC,EAAA,aACA,CACA,IAAA1jD,EAhCA,SAAA0C,EAAAs5C,EAAAx+C,GAKA,MAJA,iBAAAA,IACAA,EAAA,KAGAA,EAAAw+C,EAAAvjD,OAAAiK,EAAAjK,UAGA,IAAAiK,EAAAnF,QAAAy+C,EAAAx+C,EAEA,CAsBAsI,CAAAmE,EAAA,KAAA,WAAA,WACA45C,EAAA,QAAA9nD,OAAAkO,EAAA,MAAAlO,OAAAiE,EAAA,KAAAjE,OAAA6nD,EAAA,KAAA7nD,OAAA0nD,EAAAC,EAAA,QACA,CAGA,OADAG,GAAA,mBAAA9nD,cAAA+C,EAEA,GAAA9H,WACA+rD,EAAA,4BAAA,2BACAA,EAAA,8BAAA,SAAA94C,GACA,MAAA,OAAAA,EAAA,4BACA,IACA84C,EAAA,6BAAA,mBACAA,EAAA,wBAAA,SAAA94C,GACA,MAAA,eAAAA,EAAA,+BACA,IACA84C,EAAA,wBAAA,kCACAA,EAAA,yBAAA,6BACAA,EAAA,6BAAA,mBACAA,EAAA,yBAAA,sCAAA/rD,WACA+rD,EAAA,wBAAA,SAAA1sD,GACA,MAAA,qBAAAA,CACA,GAAAW,WACA+rD,EAAA,qCAAA,oCACA3rD,EAAAD,QAAA2rD,MAAAA,CzFsgcA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS3qD,EAAQf,EAAOD,IAClC,SAAWmlB,IAAS,W0FxmcpB,IAAA29B,EAAAjkD,OAAAiF,MAAA,SAAArF,GACA,IAAAqF,EAAA,GACA,IAAA,IAAApF,KAAAD,EAAAqF,EAAAX,KAAAzE,GACA,OAAAoF,CACA,EAGA7D,EAAAD,QAAA4sD,EACA,IAAA1C,EAAAlpD,EAAA,sBACA2lD,EAAA3lD,EAAA,sBACAA,EAAA,WAAAA,CAAA4rD,EAAA1C,GAIA,IADA,IAAApmD,EAAAg/C,EAAA6D,EAAAnjD,WACAk/C,EAAA,EAAAA,EAAA5+C,EAAAxC,OAAAohD,IAAA,CACA,IAAAplB,EAAAx5B,EAAA4+C,GACAkK,EAAAppD,UAAA85B,KAAAsvB,EAAAppD,UAAA85B,GAAAqpB,EAAAnjD,UAAA85B,GACA,CAEA,SAAAsvB,EAAAp2C,GACA,KAAAjW,gBAAAqsD,GAAA,OAAA,IAAAA,EAAAp2C,GACA0zC,EAAAtqD,KAAAW,KAAAiW,GACAmwC,EAAA/mD,KAAAW,KAAAiW,GACAjW,KAAAssD,eAAA,EACAr2C,KACA,IAAAA,EAAAs2C,WAAAvsD,KAAAusD,UAAA,IACA,IAAAt2C,EAAAvX,WAAAsB,KAAAtB,UAAA,IACA,IAAAuX,EAAAq2C,gBACAtsD,KAAAssD,eAAA,EACAtsD,KAAA6B,KAAA,MAAA2qD,IAGA,CA8BA,SAAAA,IAEAxsD,KAAAysD,eAAAC,OAIA9nC,EAAA05B,SAAAqO,EAAA3sD,KACA,CACA,SAAA2sD,EAAA5sD,GACAA,EAAAgG,KACA,CAvCAzH,OAAAC,eAAA8tD,EAAAppD,UAAA,wBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAAysD,eAAAG,aACA,IAEAtuD,OAAAC,eAAA8tD,EAAAppD,UAAA,iBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAAysD,gBAAAzsD,KAAAysD,eAAAI,WACA,IAEAvuD,OAAAC,eAAA8tD,EAAAppD,UAAA,iBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAAysD,eAAA1rD,MACA,IAeAzC,OAAAC,eAAA8tD,EAAAppD,UAAA,YAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,YAAAzN,IAAAa,KAAA8sD,qBAAA3tD,IAAAa,KAAAysD,iBAGAzsD,KAAA8sD,eAAAC,WAAA/sD,KAAAysD,eAAAM,UACA,EACAj7C,IAAA,SAAA1T,QAGAe,IAAAa,KAAA8sD,qBAAA3tD,IAAAa,KAAAysD,iBAMAzsD,KAAA8sD,eAAAC,UAAA3uD,EACA4B,KAAAysD,eAAAM,UAAA3uD,EACA,G1FwocC,GAAEiB,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAElC,EAAE,CAAC,qBAAqB,GAAG,qBAAqB,GAAGklB,SAAW,GAAGqgC,SAAW,KAAK,GAAG,CAAC,SAASvlD,EAAQf,EAAOD,G2F3uc7GC,EAAAD,QAAAutD,EACA,IAAAC,EAAAxsD,EAAA,uBAEA,SAAAusD,EAAA/2C,GACA,KAAAjW,gBAAAgtD,GAAA,OAAA,IAAAA,EAAA/2C,GACAg3C,EAAA5tD,KAAAW,KAAAiW,EACA,CAJAxV,EAAA,WAAAA,CAAAusD,EAAAC,GAKAD,EAAA/pD,UAAAiqD,WAAA,SAAA5sB,EAAAp5B,EAAA7F,GACAA,EAAA,KAAAi/B,EACA,C3FwwcA,EAAE,CAAC,sBAAsB,GAAG0lB,SAAW,KAAK,GAAG,CAAC,SAASvlD,EAAQf,EAAOD,IACxE,SAAWmlB,EAAQ9kB,IAAQ,W4Fnxc3B,IAAAusD,EAHA3sD,EAAAD,QAAAkqD,EAMAA,EAAAwD,cAAAA,EAGA1sD,EAAA,UAAA4X,aAAA,IACA+0C,EAAA,SAAA70C,EAAAjQ,GACA,OAAAiQ,EAAAuD,UAAAxT,GAAAvH,MACA,EAIAssD,EAAA5sD,EAAA,6BAGA0F,EAAA1F,EAAA,UAAA0F,OACAmnD,QAAA,IAAAxtD,EAAAA,EAAA,oBAAAD,OAAAA,OAAA,oBAAAE,KAAAA,KAAA,CAAA,GAAA6F,YAAA,WAAA,EASA,IACA6X,EADA8vC,EAAA9sD,EAAA,QAGAgd,EADA8vC,GAAAA,EAAAC,SACAD,EAAAC,SAAA,UAEA,WAAA,EAIA,IAWAC,EACAC,EACA1mD,EAbA2mD,EAAAltD,EAAA,kCACAmtD,EAAAntD,EAAA,8BAEAotD,EADAptD,EAAA,4BACAotD,iBACAC,EAAArtD,EAAA,aAAA2qD,MACA2C,EAAAD,EAAAC,qBACAC,EAAAF,EAAAE,0BACAC,EAAAH,EAAAG,2BACAC,EAAAJ,EAAAI,mCAMAztD,EAAA,WAAAA,CAAAkpD,EAAA0D,GACA,IAAAc,EAAAP,EAAAO,eACAC,EAAA,CAAA,QAAA,QAAA,UAAA,QAAA,UAYA,SAAAjB,EAAAl3C,EAAA0sC,EAAA0L,GACAhC,EAAAA,GAAA5rD,EAAA,oBACAwV,EAAAA,GAAA,CAAA,EAOA,kBAAAo4C,IAAAA,EAAA1L,aAAA0J,GAIArsD,KAAAsuD,aAAAr4C,EAAAq4C,WACAD,IAAAruD,KAAAsuD,WAAAtuD,KAAAsuD,cAAAr4C,EAAAs4C,oBAIAvuD,KAAA4sD,cAAAiB,EAAA7tD,KAAAiW,EAAA,wBAAAo4C,GAKAruD,KAAA4H,OAAA,IAAA+lD,EACA3tD,KAAAe,OAAA,EACAf,KAAAwuD,MAAA,KACAxuD,KAAAyuD,WAAA,EACAzuD,KAAA0uD,QAAA,KACA1uD,KAAA0sD,OAAA,EACA1sD,KAAA2uD,YAAA,EACA3uD,KAAA4uD,SAAA,EAMA5uD,KAAA8C,MAAA,EAIA9C,KAAA6uD,cAAA,EACA7uD,KAAA8uD,iBAAA,EACA9uD,KAAA+uD,mBAAA,EACA/uD,KAAAgvD,iBAAA,EACAhvD,KAAAivD,QAAA,EAGAjvD,KAAAkvD,WAAA,IAAAj5C,EAAAi5C,UAGAlvD,KAAAmvD,cAAAl5C,EAAAk5C,YAGAnvD,KAAA+sD,WAAA,EAKA/sD,KAAAovD,gBAAAn5C,EAAAm5C,iBAAA,OAGApvD,KAAAqvD,WAAA,EAGArvD,KAAAsvD,aAAA,EACAtvD,KAAAuvD,QAAA,KACAvvD,KAAAkH,SAAA,KACA+O,EAAA/O,WACAumD,IAAAA,EAAAhtD,EAAA,mBAAAgtD,eACAztD,KAAAuvD,QAAA,IAAA9B,EAAAx3C,EAAA/O,UACAlH,KAAAkH,SAAA+O,EAAA/O,SAEA,CACA,SAAAyiD,EAAA1zC,GAEA,GADAo2C,EAAAA,GAAA5rD,EAAA,sBACAT,gBAAA2pD,GAAA,OAAA,IAAAA,EAAA1zC,GAIA,IAAAo4C,EAAAruD,gBAAAqsD,EACArsD,KAAA8sD,eAAA,IAAAK,EAAAl3C,EAAAjW,KAAAquD,GAGAruD,KAAAusD,UAAA,EACAt2C,IACA,mBAAAA,EAAAhM,OAAAjK,KAAA8qD,MAAA70C,EAAAhM,MACA,mBAAAgM,EAAAkzC,UAAAnpD,KAAAwvD,SAAAv5C,EAAAkzC,UAEAkE,EAAAhuD,KAAAW,KACA,CAwDA,SAAAyvD,EAAA9M,EAAAriB,EAAAp5B,EAAAwoD,EAAAC,GACAlyC,EAAA,mBAAA6iB,GACA,IAKA3kB,EALAhB,EAAAgoC,EAAAmK,eACA,GAAA,OAAAxsB,EACA3lB,EAAAi0C,SAAA,EAuNA,SAAAjM,EAAAhoC,GAEA,GADA8C,EAAA,cACA9C,EAAA+xC,MAAA,OACA,GAAA/xC,EAAA40C,QAAA,CACA,IAAAjvB,EAAA3lB,EAAA40C,QAAAxpD,MACAu6B,GAAAA,EAAAv/B,SACA4Z,EAAA/S,OAAAhF,KAAA09B,GACA3lB,EAAA5Z,QAAA4Z,EAAA2zC,WAAA,EAAAhuB,EAAAv/B,OAEA,CACA4Z,EAAA+xC,OAAA,EACA/xC,EAAA7X,KAIA8sD,EAAAjN,IAGAhoC,EAAAk0C,cAAA,EACAl0C,EAAAm0C,kBACAn0C,EAAAm0C,iBAAA,EACAe,EAAAlN,IAGA,CA9OAmN,CAAAnN,EAAAhoC,QAIA,GADAg1C,IAAAh0C,EA6CA,SAAAhB,EAAA2lB,GACA,IAAA3kB,EAjPAzd,EAkPAoiC,EAjPAn6B,EAAA+B,SAAAhK,IAAAA,aAAAovD,GAiPA,iBAAAhtB,QAAAnhC,IAAAmhC,GAAA3lB,EAAA2zC,aACA3yC,EAAA,IAAAoyC,EAAA,QAAA,CAAA,SAAA,SAAA,cAAAztB,IAnPA,IAAApiC,EAqPA,OAAAyd,CACA,CAnDAo0C,CAAAp1C,EAAA2lB,IACA3kB,EACAwyC,EAAAxL,EAAAhnC,QACA,GAAAhB,EAAA2zC,YAAAhuB,GAAAA,EAAAv/B,OAAA,EAIA,GAHA,iBAAAu/B,GAAA3lB,EAAA2zC,YAAAhwD,OAAAid,eAAA+kB,KAAAn6B,EAAAlD,YACAq9B,EA3MA,SAAAA,GACA,OAAAn6B,EAAAa,KAAAs5B,EACA,CAyMA0vB,CAAA1vB,IAEAovB,EACA/0C,EAAAg0C,WAAAR,EAAAxL,EAAA,IAAAuL,GAAA+B,EAAAtN,EAAAhoC,EAAA2lB,GAAA,QACA,GAAA3lB,EAAA+xC,MACAyB,EAAAxL,EAAA,IAAAqL,OACA,IAAArzC,EAAAoyC,UACA,OAAA,EAEApyC,EAAAi0C,SAAA,EACAj0C,EAAA40C,UAAAroD,GACAo5B,EAAA3lB,EAAA40C,QAAAloD,MAAAi5B,GACA3lB,EAAA2zC,YAAA,IAAAhuB,EAAAv/B,OAAAkvD,EAAAtN,EAAAhoC,EAAA2lB,GAAA,GAAA4vB,EAAAvN,EAAAhoC,IAEAs1C,EAAAtN,EAAAhoC,EAAA2lB,GAAA,EAEA,MACAovB,IACA/0C,EAAAi0C,SAAA,EACAsB,EAAAvN,EAAAhoC,IAOA,OAAAA,EAAA+xC,QAAA/xC,EAAA5Z,OAAA4Z,EAAAiyC,eAAA,IAAAjyC,EAAA5Z,OACA,CACA,SAAAkvD,EAAAtN,EAAAhoC,EAAA2lB,EAAAovB,GACA/0C,EAAA+zC,SAAA,IAAA/zC,EAAA5Z,SAAA4Z,EAAA7X,MACA6X,EAAA00C,WAAA,EACA1M,EAAA1oC,KAAA,OAAAqmB,KAGA3lB,EAAA5Z,QAAA4Z,EAAA2zC,WAAA,EAAAhuB,EAAAv/B,OACA2uD,EAAA/0C,EAAA/S,OAAAsS,QAAAomB,GAAA3lB,EAAA/S,OAAAhF,KAAA09B,GACA3lB,EAAAk0C,cAAAe,EAAAjN,IAEAuN,EAAAvN,EAAAhoC,EACA,CA3GArc,OAAAC,eAAAorD,EAAA1mD,UAAA,YAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,YAAAzN,IAAAa,KAAA8sD,gBAGA9sD,KAAA8sD,eAAAC,SACA,EACAj7C,IAAA,SAAA1T,GAGA4B,KAAA8sD,iBAMA9sD,KAAA8sD,eAAAC,UAAA3uD,EACA,IAEAurD,EAAA1mD,UAAAkmD,QAAAyE,EAAAzE,QACAQ,EAAA1mD,UAAAktD,WAAAvC,EAAAwC,UACAzG,EAAA1mD,UAAAusD,SAAA,SAAAltD,EAAAjB,GACAA,EAAAiB,EACA,EAMAqnD,EAAA1mD,UAAAL,KAAA,SAAA09B,EAAAp5B,GACA,IACAyoD,EADAh1C,EAAA3a,KAAA8sD,eAcA,OAZAnyC,EAAA2zC,WAUAqB,GAAA,EATA,iBAAArvB,KACAp5B,EAAAA,GAAAyT,EAAAy0C,mBACAz0C,EAAAzT,WACAo5B,EAAAn6B,EAAAa,KAAAs5B,EAAAp5B,GACAA,EAAA,IAEAyoD,GAAA,GAKAF,EAAAzvD,KAAAsgC,EAAAp5B,GAAA,EAAAyoD,EACA,EAGAhG,EAAA1mD,UAAAiX,QAAA,SAAAomB,GACA,OAAAmvB,EAAAzvD,KAAAsgC,EAAA,MAAA,GAAA,EACA,EA6DAqpB,EAAA1mD,UAAAotD,SAAA,WACA,OAAA,IAAArwD,KAAA8sD,eAAA4B,OACA,EAGA/E,EAAA1mD,UAAAqtD,YAAA,SAAA75C,GACAg3C,IAAAA,EAAAhtD,EAAA,mBAAAgtD,eACA,IAAA8B,EAAA,IAAA9B,EAAAh3C,GACAzW,KAAA8sD,eAAAyC,QAAAA,EAEAvvD,KAAA8sD,eAAA5lD,SAAAlH,KAAA8sD,eAAAyC,QAAAroD,SAKA,IAFA,IAAApG,EAAAd,KAAA8sD,eAAAllD,OAAAsN,KACAq7C,EAAA,GACA,OAAAzvD,GACAyvD,GAAAhB,EAAAloD,MAAAvG,EAAAyH,MACAzH,EAAAA,EAAAc,KAKA,OAHA5B,KAAA8sD,eAAAllD,OAAA4oD,QACA,KAAAD,GAAAvwD,KAAA8sD,eAAAllD,OAAAhF,KAAA2tD,GACAvwD,KAAA8sD,eAAA/rD,OAAAwvD,EAAAxvD,OACAf,IACA,EAGA,IAAAywD,EAAA,WAqBA,SAAAC,EAAAtwD,EAAAua,GACA,OAAAva,GAAA,GAAA,IAAAua,EAAA5Z,QAAA4Z,EAAA+xC,MAAA,EACA/xC,EAAA2zC,WAAA,EACAluD,GAAAA,EAEAua,EAAA+zC,SAAA/zC,EAAA5Z,OAAA4Z,EAAA/S,OAAAsN,KAAA3M,KAAAxH,OAAA4Z,EAAA5Z,QAGAX,EAAAua,EAAAiyC,gBAAAjyC,EAAAiyC,cA5BA,SAAAxsD,GAeA,OAdAA,GAAAqwD,EAEArwD,EAAAqwD,GAIArwD,IACAA,GAAAA,IAAA,EACAA,GAAAA,IAAA,EACAA,GAAAA,IAAA,EACAA,GAAAA,IAAA,EACAA,GAAAA,IAAA,GACAA,KAEAA,CACA,CAYAuwD,CAAAvwD,IACAA,GAAAua,EAAA5Z,OAAAX,EAEAua,EAAA+xC,MAIA/xC,EAAA5Z,QAHA4Z,EAAAk0C,cAAA,EACA,GAGA,CA6HA,SAAAe,EAAAjN,GACA,IAAAhoC,EAAAgoC,EAAAmK,eACArvC,EAAA,eAAA9C,EAAAk0C,aAAAl0C,EAAAm0C,iBACAn0C,EAAAk0C,cAAA,EACAl0C,EAAAm0C,kBACArxC,EAAA,eAAA9C,EAAA+zC,SACA/zC,EAAAm0C,iBAAA,EACAlqC,EAAA05B,SAAAuR,EAAAlN,GAEA,CACA,SAAAkN,EAAAlN,GACA,IAAAhoC,EAAAgoC,EAAAmK,eACArvC,EAAA,gBAAA9C,EAAAoyC,UAAApyC,EAAA5Z,OAAA4Z,EAAA+xC,OACA/xC,EAAAoyC,YAAApyC,EAAA5Z,SAAA4Z,EAAA+xC,QACA/J,EAAA1oC,KAAA,YACAU,EAAAm0C,iBAAA,GASAn0C,EAAAk0C,cAAAl0C,EAAA+zC,UAAA/zC,EAAA+xC,OAAA/xC,EAAA5Z,QAAA4Z,EAAAiyC,cACAgE,EAAAjO,EACA,CAQA,SAAAuN,EAAAvN,EAAAhoC,GACAA,EAAA20C,cACA30C,EAAA20C,aAAA,EACA1qC,EAAA05B,SAAAuS,EAAAlO,EAAAhoC,GAEA,CACA,SAAAk2C,EAAAlO,EAAAhoC,GAwBA,MAAAA,EAAAi0C,UAAAj0C,EAAA+xC,QAAA/xC,EAAA5Z,OAAA4Z,EAAAiyC,eAAAjyC,EAAA+zC,SAAA,IAAA/zC,EAAA5Z,SAAA,CACA,IAAAuC,EAAAqX,EAAA5Z,OAGA,GAFA0c,EAAA,wBACAklC,EAAA14C,KAAA,GACA3G,IAAAqX,EAAA5Z,OAEA,KACA,CACA4Z,EAAA20C,aAAA,CACA,CAgPA,SAAAwB,EAAA/wD,GACA,IAAA4a,EAAA5a,EAAA+sD,eACAnyC,EAAAo0C,kBAAAhvD,EAAAob,cAAA,YAAA,EACAR,EAAAq0C,kBAAAr0C,EAAAs0C,OAGAt0C,EAAA+zC,SAAA,EAGA3uD,EAAAob,cAAA,QAAA,GACApb,EAAA8jD,QAEA,CACA,SAAAkN,EAAAhxD,GACA0d,EAAA,4BACA1d,EAAAkK,KAAA,EACA,CAuBA,SAAA+mD,EAAArO,EAAAhoC,GACA8C,EAAA,SAAA9C,EAAAi0C,SACAj0C,EAAAi0C,SACAjM,EAAA14C,KAAA,GAEA0Q,EAAAq0C,iBAAA,EACArM,EAAA1oC,KAAA,UACA22C,EAAAjO,GACAhoC,EAAA+zC,UAAA/zC,EAAAi0C,SAAAjM,EAAA14C,KAAA,EACA,CAWA,SAAA2mD,EAAAjO,GACA,IAAAhoC,EAAAgoC,EAAAmK,eAEA,IADArvC,EAAA,OAAA9C,EAAA+zC,SACA/zC,EAAA+zC,SAAA,OAAA/L,EAAA14C,SACA,CAmHA,SAAAgnD,EAAA7wD,EAAAua,GAEA,OAAA,IAAAA,EAAA5Z,OAAA,MAEA4Z,EAAA2zC,WAAA9/C,EAAAmM,EAAA/S,OAAAwU,SAAAhc,GAAAA,GAAAua,EAAA5Z,QAEAyN,EAAAmM,EAAA40C,QAAA50C,EAAA/S,OAAAjC,KAAA,IAAA,IAAAgV,EAAA/S,OAAA7G,OAAA4Z,EAAA/S,OAAAspD,QAAAv2C,EAAA/S,OAAAvD,OAAAsW,EAAA5Z,QACA4Z,EAAA/S,OAAA4oD,SAGAhiD,EAAAmM,EAAA/S,OAAAupD,QAAA/wD,EAAAua,EAAA40C,SAEA/gD,GATA,IAAAA,CAUA,CACA,SAAA4iD,EAAAzO,GACA,IAAAhoC,EAAAgoC,EAAAmK,eACArvC,EAAA,cAAA9C,EAAAg0C,YACAh0C,EAAAg0C,aACAh0C,EAAA+xC,OAAA,EACA9nC,EAAA05B,SAAA+S,EAAA12C,EAAAgoC,GAEA,CACA,SAAA0O,EAAA12C,EAAAgoC,GAIA,GAHAllC,EAAA,gBAAA9C,EAAAg0C,WAAAh0C,EAAA5Z,SAGA4Z,EAAAg0C,YAAA,IAAAh0C,EAAA5Z,SACA4Z,EAAAg0C,YAAA,EACAhM,EAAA4J,UAAA,EACA5J,EAAA1oC,KAAA,OACAU,EAAAw0C,aAAA,CAGA,IAAAmC,EAAA3O,EAAA8J,iBACA6E,GAAAA,EAAAnC,aAAAmC,EAAAC,WACA5O,EAAAwG,SAEA,CAEA,CASA,SAAAtjD,EAAAw8C,EAAAl1C,GACA,IAAA,IAAA5M,EAAA,EAAAojC,EAAA0e,EAAAthD,OAAAR,EAAAojC,EAAApjC,IACA,GAAA8hD,EAAA9hD,KAAA4M,EAAA,OAAA5M,EAEA,OAAA,CACA,CA1pBAopD,EAAA1mD,UAAAgH,KAAA,SAAA7J,GACAqd,EAAA,OAAArd,GACAA,EAAAuK,SAAAvK,EAAA,IACA,IAAAua,EAAA3a,KAAA8sD,eACA0E,EAAApxD,EAMA,GALA,IAAAA,IAAAua,EAAAm0C,iBAAA,GAKA,IAAA1uD,GAAAua,EAAAk0C,gBAAA,IAAAl0C,EAAAiyC,cAAAjyC,EAAA5Z,QAAA4Z,EAAAiyC,cAAAjyC,EAAA5Z,OAAA,IAAA4Z,EAAA+xC,OAGA,OAFAjvC,EAAA,qBAAA9C,EAAA5Z,OAAA4Z,EAAA+xC,OACA,IAAA/xC,EAAA5Z,QAAA4Z,EAAA+xC,MAAA0E,EAAApxD,MAAA4vD,EAAA5vD,MACA,KAKA,GAAA,KAHAI,EAAAswD,EAAAtwD,EAAAua,KAGAA,EAAA+xC,MAEA,OADA,IAAA/xC,EAAA5Z,QAAAqwD,EAAApxD,MACA,KA0BA,IA2BAwO,EA3BAijD,EAAA92C,EAAAk0C,aA6CA,OA5CApxC,EAAA,gBAAAg0C,IAGA,IAAA92C,EAAA5Z,QAAA4Z,EAAA5Z,OAAAX,EAAAua,EAAAiyC,gBAEAnvC,EAAA,6BADAg0C,GAAA,GAMA92C,EAAA+xC,OAAA/xC,EAAAi0C,QAEAnxC,EAAA,mBADAg0C,GAAA,GAEAA,IACAh0C,EAAA,WACA9C,EAAAi0C,SAAA,EACAj0C,EAAA7X,MAAA,EAEA,IAAA6X,EAAA5Z,SAAA4Z,EAAAk0C,cAAA,GAEA7uD,KAAA8qD,MAAAnwC,EAAAiyC,eACAjyC,EAAA7X,MAAA,EAGA6X,EAAAi0C,UAAAxuD,EAAAswD,EAAAc,EAAA72C,KAIA,QADAnM,EAAApO,EAAA,EAAA6wD,EAAA7wD,EAAAua,GAAA,OAEAA,EAAAk0C,aAAAl0C,EAAA5Z,QAAA4Z,EAAAiyC,cACAxsD,EAAA,IAEAua,EAAA5Z,QAAAX,EACAua,EAAA00C,WAAA,GAEA,IAAA10C,EAAA5Z,SAGA4Z,EAAA+xC,QAAA/xC,EAAAk0C,cAAA,GAGA2C,IAAApxD,GAAAua,EAAA+xC,OAAA0E,EAAApxD,OAEA,OAAAwO,GAAAxO,KAAAia,KAAA,OAAAzL,GACAA,CACA,EA6GAm7C,EAAA1mD,UAAA6nD,MAAA,SAAA1qD,GACA+tD,EAAAnuD,KAAA,IAAAiuD,EAAA,WACA,EACAtE,EAAA1mD,UAAA+/C,KAAA,SAAA0O,EAAAC,GACA,IAAAv/C,EAAApS,KACA2a,EAAA3a,KAAA8sD,eACA,OAAAnyC,EAAA8zC,YACA,KAAA,EACA9zC,EAAA6zC,MAAAkD,EACA,MACA,KAAA,EACA/2C,EAAA6zC,MAAA,CAAA7zC,EAAA6zC,MAAAkD,GACA,MACA,QACA/2C,EAAA6zC,MAAA5rD,KAAA8uD,GAGA/2C,EAAA8zC,YAAA,EACAhxC,EAAA,wBAAA9C,EAAA8zC,WAAAkD,GACA,IACAC,IADAD,IAAA,IAAAA,EAAA5rD,MAAA2rD,IAAA9sC,EAAAitC,QAAAH,IAAA9sC,EAAAktC,OACAtF,EAAAuF,EAGA,SAAAC,EAAAzF,EAAA0F,GACAx0C,EAAA,YACA8uC,IAAAn6C,GACA6/C,IAAA,IAAAA,EAAAC,aACAD,EAAAC,YAAA,EAkBAz0C,EAAA,WAEAi0C,EAAA94C,eAAA,QAAAu5C,GACAT,EAAA94C,eAAA,SAAAw5C,GACAV,EAAA94C,eAAA,QAAAy5C,GACAX,EAAA94C,eAAA,QAAAkwC,GACA4I,EAAA94C,eAAA,SAAAo5C,GACA5/C,EAAAwG,eAAA,MAAA4zC,GACAp6C,EAAAwG,eAAA,MAAAm5C,GACA3/C,EAAAwG,eAAA,OAAA05C,GACAC,GAAA,GAOA53C,EAAA00C,YAAAqC,EAAAjF,iBAAAiF,EAAAjF,eAAA+F,WAAAH,IA/BA,CACA,SAAA7F,IACA/uC,EAAA,SACAi0C,EAAA3rD,KACA,CAdA4U,EAAAg0C,WAAA/pC,EAAA05B,SAAAsT,GAAAx/C,EAAAvQ,KAAA,MAAA+vD,GACAF,EAAAz4C,GAAA,SAAA+4C,GAmBA,IAAAK,EAgFA,SAAAjgD,GACA,OAAA,WACA,IAAAuI,EAAAvI,EAAA06C,eACArvC,EAAA,cAAA9C,EAAA00C,YACA10C,EAAA00C,YAAA10C,EAAA00C,aACA,IAAA10C,EAAA00C,YAAAjC,EAAAh7C,EAAA,UACAuI,EAAA+zC,SAAA,EACAkC,EAAAx+C,GAEA,CACA,CA1FAqgD,CAAArgD,GACAs/C,EAAAz4C,GAAA,QAAAo5C,GACA,IAAAE,GAAA,EAsBA,SAAAD,EAAAhyB,GACA7iB,EAAA,UACA,IAAAjP,EAAAkjD,EAAArqD,MAAAi5B,GACA7iB,EAAA,aAAAjP,IACA,IAAAA,KAKA,IAAAmM,EAAA8zC,YAAA9zC,EAAA6zC,QAAAkD,GAAA/2C,EAAA8zC,WAAA,IAAA,IAAA5oD,EAAA8U,EAAA6zC,MAAAkD,MAAAa,IACA90C,EAAA,8BAAA9C,EAAA00C,YACA10C,EAAA00C,cAEAj9C,EAAAsgD,QAEA,CAIA,SAAA5J,EAAAntC,GACA8B,EAAA,UAAA9B,GACAo2C,IACAL,EAAA94C,eAAA,QAAAkwC,GACA,IAAAsE,EAAAsE,EAAA,UAAAvD,EAAAuD,EAAA/1C,EACA,CAMA,SAAAw2C,IACAT,EAAA94C,eAAA,SAAAw5C,GACAL,GACA,CAEA,SAAAK,IACA30C,EAAA,YACAi0C,EAAA94C,eAAA,QAAAu5C,GACAJ,GACA,CAEA,SAAAA,IACAt0C,EAAA,UACArL,EAAA2/C,OAAAL,EACA,CAUA,OAvDAt/C,EAAA6G,GAAA,OAAAq5C,GAniBA,SAAA/5C,EAAAo6C,EAAAlxD,GAGA,GAAA,mBAAA8W,EAAAyD,gBAAA,OAAAzD,EAAAyD,gBAAA22C,EAAAlxD,GAMA8W,EAAAY,SAAAZ,EAAAY,QAAAw5C,GAAA5vD,MAAAC,QAAAuV,EAAAY,QAAAw5C,IAAAp6C,EAAAY,QAAAw5C,GAAAz4C,QAAAzY,GAAA8W,EAAAY,QAAAw5C,GAAA,CAAAlxD,EAAA8W,EAAAY,QAAAw5C,IAAAp6C,EAAAU,GAAA05C,EAAAlxD,EACA,CAqjBAua,CAAA01C,EAAA,QAAA5I,GAOA4I,EAAA7vD,KAAA,QAAAswD,GAMAT,EAAA7vD,KAAA,SAAAuwD,GAOAV,EAAAz3C,KAAA,OAAA7H,GAGAuI,EAAA+zC,UACAjxC,EAAA,eACArL,EAAAyxC,UAEA6N,CACA,EAYA/H,EAAA1mD,UAAA8uD,OAAA,SAAAL,GACA,IAAA/2C,EAAA3a,KAAA8sD,eACAmF,EAAA,CACAC,YAAA,GAIA,GAAA,IAAAv3C,EAAA8zC,WAAA,OAAAzuD,KAGA,GAAA,IAAA2a,EAAA8zC,WAEA,OAAAiD,GAAAA,IAAA/2C,EAAA6zC,QACAkD,IAAAA,EAAA/2C,EAAA6zC,OAGA7zC,EAAA6zC,MAAA,KACA7zC,EAAA8zC,WAAA,EACA9zC,EAAA+zC,SAAA,EACAgD,GAAAA,EAAAz3C,KAAA,SAAAja,KAAAiyD,IAPAjyD,KAaA,IAAA0xD,EAAA,CAEA,IAAAkB,EAAAj4C,EAAA6zC,MACAlrD,EAAAqX,EAAA8zC,WACA9zC,EAAA6zC,MAAA,KACA7zC,EAAA8zC,WAAA,EACA9zC,EAAA+zC,SAAA,EACA,IAAA,IAAAnuD,EAAA,EAAAA,EAAA+C,EAAA/C,IAAAqyD,EAAAryD,GAAA0Z,KAAA,SAAAja,KAAA,CACAkyD,YAAA,IAEA,OAAAlyD,IACA,CAGA,IAAAwB,EAAAqE,EAAA8U,EAAA6zC,MAAAkD,GACA,OAAA,IAAAlwD,IACAmZ,EAAA6zC,MAAA3tB,OAAAr/B,EAAA,GACAmZ,EAAA8zC,YAAA,EACA,IAAA9zC,EAAA8zC,aAAA9zC,EAAA6zC,MAAA7zC,EAAA6zC,MAAA,IACAkD,EAAAz3C,KAAA,SAAAja,KAAAiyD,IAJAjyD,IAMA,EAIA2pD,EAAA1mD,UAAAgW,GAAA,SAAA45C,EAAApxD,GACA,IAAArC,EAAAiuD,EAAApqD,UAAAgW,GAAA5Z,KAAAW,KAAA6yD,EAAApxD,GACAkZ,EAAA3a,KAAA8sD,eAqBA,MApBA,SAAA+F,GAGAl4C,EAAAo0C,kBAAA/uD,KAAAmb,cAAA,YAAA,GAGA,IAAAR,EAAA+zC,SAAA1uD,KAAA6jD,UACA,aAAAgP,IACAl4C,EAAAg0C,YAAAh0C,EAAAo0C,oBACAp0C,EAAAo0C,kBAAAp0C,EAAAk0C,cAAA,EACAl0C,EAAA+zC,SAAA,EACA/zC,EAAAm0C,iBAAA,EACArxC,EAAA,cAAA9C,EAAA5Z,OAAA4Z,EAAAi0C,SACAj0C,EAAA5Z,OACA6uD,EAAA5vD,MACA2a,EAAAi0C,SACAhqC,EAAA05B,SAAAyS,EAAA/wD,QAIAZ,CACA,EACAuqD,EAAA1mD,UAAA8Y,YAAA4tC,EAAA1mD,UAAAgW,GACA0wC,EAAA1mD,UAAA2V,eAAA,SAAAi6C,EAAApxD,GACA,IAAArC,EAAAiuD,EAAApqD,UAAA2V,eAAAvZ,KAAAW,KAAA6yD,EAAApxD,GAUA,MATA,aAAAoxD,GAOAjuC,EAAA05B,SAAAwS,EAAA9wD,MAEAZ,CACA,EACAuqD,EAAA1mD,UAAAsZ,mBAAA,SAAAs2C,GACA,IAAAzzD,EAAAiuD,EAAApqD,UAAAsZ,mBAAA7a,MAAA1B,KAAA2B,WAUA,MATA,aAAAkxD,QAAA1zD,IAAA0zD,GAOAjuC,EAAA05B,SAAAwS,EAAA9wD,MAEAZ,CACA,EAqBAuqD,EAAA1mD,UAAA4gD,OAAA,WACA,IAAAlpC,EAAA3a,KAAA8sD,eAUA,OATAnyC,EAAA+zC,UACAjxC,EAAA,UAIA9C,EAAA+zC,SAAA/zC,EAAAo0C,kBAMA,SAAApM,EAAAhoC,GACAA,EAAAq0C,kBACAr0C,EAAAq0C,iBAAA,EACApqC,EAAA05B,SAAA0S,EAAArO,EAAAhoC,GAEA,CAVAkpC,CAAA7jD,KAAA2a,IAEAA,EAAAs0C,QAAA,EACAjvD,IACA,EAiBA2pD,EAAA1mD,UAAAyvD,MAAA,WAQA,OAPAj1C,EAAA,wBAAAzd,KAAA8sD,eAAA4B,UACA,IAAA1uD,KAAA8sD,eAAA4B,UACAjxC,EAAA,SACAzd,KAAA8sD,eAAA4B,SAAA,EACA1uD,KAAAia,KAAA,UAEAja,KAAA8sD,eAAAmC,QAAA,EACAjvD,IACA,EAUA2pD,EAAA1mD,UAAA6vD,KAAA,SAAAnQ,GACA,IAAAoQ,EAAA/yD,KACA2a,EAAA3a,KAAA8sD,eACAmC,GAAA,EAwBA,IAAA,IAAA1uD,KAvBAoiD,EAAA1pC,GAAA,OAAA,WAEA,GADAwE,EAAA,eACA9C,EAAA40C,UAAA50C,EAAA+xC,MAAA,CACA,IAAApsB,EAAA3lB,EAAA40C,QAAAxpD,MACAu6B,GAAAA,EAAAv/B,QAAAgyD,EAAAnwD,KAAA09B,EACA,CACAyyB,EAAAnwD,KAAA,KACA,IACA+/C,EAAA1pC,GAAA,QAAA,SAAAqnB,IACA7iB,EAAA,gBACA9C,EAAA40C,UAAAjvB,EAAA3lB,EAAA40C,QAAAloD,MAAAi5B,IAGA3lB,EAAA2zC,YAAA,MAAAhuB,KAAA3lB,EAAA2zC,YAAAhuB,GAAAA,EAAAv/B,UACAgyD,EAAAnwD,KAAA09B,KAEA2uB,GAAA,EACAtM,EAAA+P,SAEA,IAIA/P,OACAxjD,IAAAa,KAAAO,IAAA,mBAAAoiD,EAAApiD,KACAP,KAAAO,GAAA,SAAAw8B,GACA,OAAA,WACA,OAAA4lB,EAAA5lB,GAAAr7B,MAAAihD,EAAAhhD,UACA,CACA,CAJA,CAIApB,IAKA,IAAA,IAAAH,EAAA,EAAAA,EAAAguD,EAAArtD,OAAAX,IACAuiD,EAAA1pC,GAAAm1C,EAAAhuD,GAAAJ,KAAAia,KAAAY,KAAA7a,KAAAouD,EAAAhuD,KAYA,OAPAJ,KAAA8qD,MAAA,SAAA1qD,GACAqd,EAAA,gBAAArd,GACA6uD,IACAA,GAAA,EACAtM,EAAAkB,SAEA,EACA7jD,IACA,EACA,mBAAAf,SACA0qD,EAAA1mD,UAAAhE,OAAA+zD,eAAA,WAIA,YAHA7zD,IAAAuuD,IACAA,EAAAjtD,EAAA,sCAEAitD,EAAA1tD,KACA,GAEA1B,OAAAC,eAAAorD,EAAA1mD,UAAA,wBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAA8sD,eAAAF,aACA,IAEAtuD,OAAAC,eAAAorD,EAAA1mD,UAAA,iBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAA8sD,gBAAA9sD,KAAA8sD,eAAAllD,MACA,IAEAtJ,OAAAC,eAAAorD,EAAA1mD,UAAA,kBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAA8sD,eAAA4B,OACA,EACA58C,IAAA,SAAA6I,GACA3a,KAAA8sD,iBACA9sD,KAAA8sD,eAAA4B,QAAA/zC,EAEA,IAIAgvC,EAAAsJ,UAAAhC,EACA3yD,OAAAC,eAAAorD,EAAA1mD,UAAA,iBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAA8sD,eAAA/rD,MACA,IA+CA,mBAAA9B,SACA0qD,EAAA3iD,KAAA,SAAAksD,EAAAjQ,GAIA,YAHA9jD,IAAA6H,IACAA,EAAAvG,EAAA,4BAEAuG,EAAA2iD,EAAAuJ,EAAAjQ,EACA,E5FszcC,GAAE5jD,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAA8B,oBAAXX,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAEtK,EAAE,CAAC,YAAY,GAAG,mBAAmB,GAAG,oCAAoC,GAAG,iCAAiC,GAAG,6BAA6B,GAAG,0BAA0B,IAAI,2BAA2B,IAAI,4BAA4B,IAAI8lB,SAAW,GAAG/d,OAAS,GAAGgS,OAAS,GAAGosC,SAAW,GAAG,kBAAkB,IAAImN,KAAO,KAAK,GAAG,CAAC,SAAS1yD,EAAQf,EAAOD,G6FlvelWC,EAAAD,QAAAwtD,EACA,IAAAa,EAAArtD,EAAA,aAAA2qD,MACA6C,EAAAH,EAAAG,2BACAmF,EAAAtF,EAAAsF,sBACAC,EAAAvF,EAAAuF,mCACAC,EAAAxF,EAAAwF,4BACAjH,EAAA5rD,EAAA,oBAEA,SAAA8yD,EAAA53C,EAAApT,GACA,IAAAirD,EAAAxzD,KAAAyzD,gBACAD,EAAAE,cAAA,EACA,IAAAryD,EAAAmyD,EAAAG,QACA,GAAA,OAAAtyD,EACA,OAAArB,KAAAia,KAAA,QAAA,IAAAm5C,GAEAI,EAAAI,WAAA,KACAJ,EAAAG,QAAA,KACA,MAAAprD,GAEAvI,KAAA4C,KAAA2F,GACAlH,EAAAsa,GACA,IAAAk4C,EAAA7zD,KAAA8sD,eACA+G,EAAAjF,SAAA,GACAiF,EAAAhF,cAAAgF,EAAA9yD,OAAA8yD,EAAAjH,gBACA5sD,KAAA8qD,MAAA+I,EAAAjH,cAEA,CACA,SAAAK,EAAAh3C,GACA,KAAAjW,gBAAAitD,GAAA,OAAA,IAAAA,EAAAh3C,GACAo2C,EAAAhtD,KAAAW,KAAAiW,GACAjW,KAAAyzD,gBAAA,CACAF,eAAAA,EAAA14C,KAAA7a,MACA8zD,eAAA,EACAJ,cAAA,EACAC,QAAA,KACAC,WAAA,KACAG,cAAA,MAIA/zD,KAAA8sD,eAAA+B,cAAA,EAKA7uD,KAAA8sD,eAAAhqD,MAAA,EACAmT,IACA,mBAAAA,EAAA+9C,YAAAh0D,KAAAktD,WAAAj3C,EAAA+9C,WACA,mBAAA/9C,EAAAg+C,QAAAj0D,KAAAk0D,OAAAj+C,EAAAg+C,QAIAj0D,KAAAiZ,GAAA,YAAAk7C,EACA,CACA,SAAAA,IACA,IAAApB,EAAA/yD,KACA,mBAAAA,KAAAk0D,QAAAl0D,KAAA8sD,eAAAC,UAKA7qD,EAAAlC,KAAA,KAAA,MAJAA,KAAAk0D,QAAA,SAAAv4C,EAAApT,GACArG,EAAA6wD,EAAAp3C,EAAApT,EACA,GAIA,CAiDA,SAAArG,EAAAygD,EAAAhnC,EAAApT,GACA,GAAAoT,EAAA,OAAAgnC,EAAA1oC,KAAA,QAAA0B,GAQA,GAPA,MAAApT,GAEAo6C,EAAA//C,KAAA2F,GAKAo6C,EAAA8J,eAAA1rD,OAAA,MAAA,IAAAuyD,EACA,GAAA3Q,EAAA8Q,gBAAAC,aAAA,MAAA,IAAAL,EACA,OAAA1Q,EAAA//C,KAAA,KACA,CArHAnC,EAAA,WAAAA,CAAAwsD,EAAAZ,GAyDAY,EAAAhqD,UAAAL,KAAA,SAAA09B,EAAAp5B,GAEA,OADAlH,KAAAyzD,gBAAAK,eAAA,EACAzH,EAAAppD,UAAAL,KAAAvD,KAAAW,KAAAsgC,EAAAp5B,EACA,EAYA+lD,EAAAhqD,UAAAiqD,WAAA,SAAA5sB,EAAAp5B,EAAA7F,GACAA,EAAA,IAAA4sD,EAAA,gBACA,EACAhB,EAAAhqD,UAAAimD,OAAA,SAAA5oB,EAAAp5B,EAAA7F,GACA,IAAAmyD,EAAAxzD,KAAAyzD,gBAIA,GAHAD,EAAAG,QAAAtyD,EACAmyD,EAAAI,WAAAtzB,EACAkzB,EAAAO,cAAA7sD,GACAssD,EAAAE,aAAA,CACA,IAAAG,EAAA7zD,KAAA8sD,gBACA0G,EAAAM,eAAAD,EAAAhF,cAAAgF,EAAA9yD,OAAA8yD,EAAAjH,gBAAA5sD,KAAA8qD,MAAA+I,EAAAjH,cACA,CACA,EAKAK,EAAAhqD,UAAA6nD,MAAA,SAAA1qD,GACA,IAAAozD,EAAAxzD,KAAAyzD,gBACA,OAAAD,EAAAI,YAAAJ,EAAAE,aAMAF,EAAAM,eAAA,GALAN,EAAAE,cAAA,EACA1zD,KAAAktD,WAAAsG,EAAAI,WAAAJ,EAAAO,cAAAP,EAAAD,gBAMA,EACAtG,EAAAhqD,UAAAusD,SAAA,SAAAltD,EAAAjB,GACAgrD,EAAAppD,UAAAusD,SAAAnwD,KAAAW,KAAAsC,GAAA,SAAA8xD,GACA/yD,EAAA+yD,EACA,GACA,C7Fk0eA,EAAE,CAAC,YAAY,GAAG,mBAAmB,GAAGpO,SAAW,KAAK,GAAG,CAAC,SAASvlD,EAAQf,EAAOD,IACpF,SAAWmlB,EAAQ9kB,IAAQ,W8F58e3B,SAAAu0D,EAAA15C,GACA,IAAAo4C,EAAA/yD,KACAA,KAAA4B,KAAA,KACA5B,KAAAs0D,MAAA,KACAt0D,KAAAu0D,OAAA,YA6iBA,SAAAC,EAAA75C,EAAArY,GACA,IAAAgyD,EAAAE,EAAAF,MACAE,EAAAF,MAAA,KACA,KAAAA,GAAA,CACA,IAAAjzD,EAAAizD,EAAA5xD,SACAiY,EAAA85C,YACApzD,EAAAiB,GACAgyD,EAAAA,EAAA1yD,IACA,CAGA+Y,EAAA+5C,mBAAA9yD,KAAA4yD,CACA,CAxjBAG,CAAA5B,EAAAp4C,EACA,CACA,CAIA,IAAA0xC,EAvBA3sD,EAAAD,QAAA2mD,EA0BAA,EAAAwO,cAAAA,EAGA,IAAAC,EAAA,CACAC,UAAAr0D,EAAA,mBAKA4sD,EAAA5sD,EAAA,6BAGA0F,EAAA1F,EAAA,UAAA0F,OACAmnD,QAAA,IAAAxtD,EAAAA,EAAA,oBAAAD,OAAAA,OAAA,oBAAAE,KAAAA,KAAA,CAAA,GAAA6F,YAAA,WAAA,EAOA,IA8IAmvD,EA9IAnH,EAAAntD,EAAA,8BAEAotD,EADAptD,EAAA,4BACAotD,iBACAC,EAAArtD,EAAA,aAAA2qD,MACA2C,EAAAD,EAAAC,qBACAE,EAAAH,EAAAG,2BACAmF,EAAAtF,EAAAsF,sBACA4B,EAAAlH,EAAAkH,uBACAC,EAAAnH,EAAAmH,qBACAC,EAAApH,EAAAoH,uBACAC,EAAArH,EAAAqH,2BACAC,EAAAtH,EAAAsH,qBACAjH,EAAAP,EAAAO,eAEA,SAAAkH,IAAA,CACA,SAAAT,EAAA3+C,EAAA0sC,EAAA0L,GACAhC,EAAAA,GAAA5rD,EAAA,oBACAwV,EAAAA,GAAA,CAAA,EAOA,kBAAAo4C,IAAAA,EAAA1L,aAAA0J,GAIArsD,KAAAsuD,aAAAr4C,EAAAq4C,WACAD,IAAAruD,KAAAsuD,WAAAtuD,KAAAsuD,cAAAr4C,EAAAq/C,oBAKAt1D,KAAA4sD,cAAAiB,EAAA7tD,KAAAiW,EAAA,wBAAAo4C,GAGAruD,KAAAu1D,aAAA,EAGAv1D,KAAAwyD,WAAA,EAEAxyD,KAAAw1D,QAAA,EAEAx1D,KAAA0sD,OAAA,EAEA1sD,KAAAuxD,UAAA,EAGAvxD,KAAA+sD,WAAA,EAKA,IAAA0I,GAAA,IAAAx/C,EAAAy/C,cACA11D,KAAA01D,eAAAD,EAKAz1D,KAAAovD,gBAAAn5C,EAAAm5C,iBAAA,OAKApvD,KAAAe,OAAA,EAGAf,KAAA21D,SAAA,EAGA31D,KAAA41D,OAAA,EAMA51D,KAAA8C,MAAA,EAKA9C,KAAA61D,kBAAA,EAGA71D,KAAA81D,QAAA,SAAAn6C,IAsQA,SAAAgnC,EAAAhnC,GACA,IAAAhB,EAAAgoC,EAAA8J,eACA3pD,EAAA6X,EAAA7X,KACAzB,EAAAsZ,EAAAg5C,QACA,GAAA,mBAAAtyD,EAAA,MAAA,IAAA+xD,EAEA,GAZA,SAAAz4C,GACAA,EAAAg7C,SAAA,EACAh7C,EAAAg5C,QAAA,KACAh5C,EAAA5Z,QAAA4Z,EAAAo7C,SACAp7C,EAAAo7C,SAAA,CACA,CAMAC,CAAAr7C,GACAgB,GAlCA,SAAAgnC,EAAAhoC,EAAA7X,EAAA6Y,EAAAta,KACAsZ,EAAA85C,UACA3xD,GAGA8hB,EAAA05B,SAAAj9C,EAAAsa,GAGAiJ,EAAA05B,SAAA2X,EAAAtT,EAAAhoC,GACAgoC,EAAA8J,eAAAyJ,cAAA,EACA/H,EAAAxL,EAAAhnC,KAIAta,EAAAsa,GACAgnC,EAAA8J,eAAAyJ,cAAA,EACA/H,EAAAxL,EAAAhnC,GAGAs6C,EAAAtT,EAAAhoC,GAEA,CAaAw7C,CAAAxT,EAAAhoC,EAAA7X,EAAA6Y,EAAAta,OAAA,CAEA,IAAAkwD,EAAA6E,EAAAz7C,IAAAgoC,EAAAoK,UACAwE,GAAA52C,EAAAi7C,QAAAj7C,EAAAk7C,mBAAAl7C,EAAA07C,iBACAC,EAAA3T,EAAAhoC,GAEA7X,EACA8hB,EAAA05B,SAAAiY,EAAA5T,EAAAhoC,EAAA42C,EAAAlwD,GAEAk1D,EAAA5T,EAAAhoC,EAAA42C,EAAAlwD,EAEA,CACA,CAvRAy0D,CAAAnT,EAAAhnC,EACA,EAGA3b,KAAA2zD,QAAA,KAGA3zD,KAAA+1D,SAAA,EACA/1D,KAAAq2D,gBAAA,KACAr2D,KAAAw2D,oBAAA,KAIAx2D,KAAAy0D,UAAA,EAIAz0D,KAAAy2D,aAAA,EAGAz2D,KAAAk2D,cAAA,EAGAl2D,KAAAkvD,WAAA,IAAAj5C,EAAAi5C,UAGAlvD,KAAAmvD,cAAAl5C,EAAAk5C,YAGAnvD,KAAA02D,qBAAA,EAIA12D,KAAA00D,mBAAA,IAAAL,EAAAr0D,KACA,CAqCA,SAAAomD,EAAAnwC,GAaA,IAAAo4C,EAAAruD,gBAZAqsD,EAAAA,GAAA5rD,EAAA,qBAaA,IAAA4tD,IAAA0G,EAAA11D,KAAA+mD,EAAApmD,MAAA,OAAA,IAAAomD,EAAAnwC,GACAjW,KAAAysD,eAAA,IAAAmI,EAAA3+C,EAAAjW,KAAAquD,GAGAruD,KAAAtB,UAAA,EACAuX,IACA,mBAAAA,EAAA5O,QAAArH,KAAAkpD,OAAAjzC,EAAA5O,OACA,mBAAA4O,EAAA0gD,SAAA32D,KAAA42D,QAAA3gD,EAAA0gD,QACA,mBAAA1gD,EAAAkzC,UAAAnpD,KAAAwvD,SAAAv5C,EAAAkzC,SACA,mBAAAlzC,EAAA4gD,QAAA72D,KAAA82D,OAAA7gD,EAAA4gD,QAEAxJ,EAAAhuD,KAAAW,KACA,CAgIA,SAAA+2D,EAAApU,EAAAhoC,EAAAg8C,EAAArzD,EAAAg9B,EAAAp5B,EAAA7F,GACAsZ,EAAAo7C,SAAAzyD,EACAqX,EAAAg5C,QAAAtyD,EACAsZ,EAAAg7C,SAAA,EACAh7C,EAAA7X,MAAA,EACA6X,EAAAoyC,UAAApyC,EAAAm7C,QAAA,IAAAb,EAAA,UAAA0B,EAAAhU,EAAAiU,QAAAt2B,EAAA3lB,EAAAm7C,SAAAnT,EAAAuG,OAAA5oB,EAAAp5B,EAAAyT,EAAAm7C,SACAn7C,EAAA7X,MAAA,CACA,CAgDA,SAAAyzD,EAAA5T,EAAAhoC,EAAA42C,EAAAlwD,GACAkwD,GASA,SAAA5O,EAAAhoC,GACA,IAAAA,EAAA5Z,QAAA4Z,EAAA63C,YACA73C,EAAA63C,WAAA,EACA7P,EAAA1oC,KAAA,SAEA,CAdA+8C,CAAArU,EAAAhoC,GACAA,EAAA85C,YACApzD,IACA40D,EAAAtT,EAAAhoC,EACA,CAaA,SAAA27C,EAAA3T,EAAAhoC,GACAA,EAAAk7C,kBAAA,EACA,IAAAvB,EAAA35C,EAAA07C,gBACA,GAAA1T,EAAAiU,SAAAtC,GAAAA,EAAA1yD,KAAA,CAEA,IAAA+hC,EAAAhpB,EAAA+7C,qBACA9uD,EAAA,IAAA7E,MAAA4gC,GACAszB,EAAAt8C,EAAA+5C,mBACAuC,EAAA3C,MAAAA,EAGA,IAFA,IAAAj6C,EAAA,EACA68C,GAAA,EACA5C,GACA1sD,EAAAyS,GAAAi6C,EACAA,EAAA6C,QAAAD,GAAA,GACA5C,EAAAA,EAAA1yD,KACAyY,GAAA,EAEAzS,EAAAsvD,WAAAA,EACAH,EAAApU,EAAAhoC,GAAA,EAAAA,EAAA5Z,OAAA6G,EAAA,GAAAqvD,EAAA1C,QAIA55C,EAAA85C,YACA95C,EAAA67C,oBAAA,KACAS,EAAAr1D,MACA+Y,EAAA+5C,mBAAAuC,EAAAr1D,KACAq1D,EAAAr1D,KAAA,MAEA+Y,EAAA+5C,mBAAA,IAAAL,EAAA15C,GAEAA,EAAA+7C,qBAAA,CACA,KAAA,CAEA,KAAApC,GAAA,CACA,IAAAh0B,EAAAg0B,EAAAh0B,MACAp5B,EAAAotD,EAAAptD,SACA7F,EAAAizD,EAAA5xD,SASA,GAPAq0D,EAAApU,EAAAhoC,GAAA,EADAA,EAAA2zC,WAAA,EAAAhuB,EAAAv/B,OACAu/B,EAAAp5B,EAAA7F,GACAizD,EAAAA,EAAA1yD,KACA+Y,EAAA+7C,uBAKA/7C,EAAAg7C,QACA,KAEA,CACA,OAAArB,IAAA35C,EAAA67C,oBAAA,KACA,CACA77C,EAAA07C,gBAAA/B,EACA35C,EAAAk7C,kBAAA,CACA,CAoCA,SAAAO,EAAAz7C,GACA,OAAAA,EAAA66C,QAAA,IAAA76C,EAAA5Z,QAAA,OAAA4Z,EAAA07C,kBAAA17C,EAAA42C,WAAA52C,EAAAg7C,OACA,CACA,SAAAyB,EAAAzU,EAAAhoC,GACAgoC,EAAAmU,QAAA,SAAAx0D,GACAqY,EAAA85C,YACAnyD,GACA6rD,EAAAxL,EAAArgD,GAEAqY,EAAA87C,aAAA,EACA9T,EAAA1oC,KAAA,aACAg8C,EAAAtT,EAAAhoC,EACA,GACA,CAaA,SAAAs7C,EAAAtT,EAAAhoC,GACA,IAAA08C,EAAAjB,EAAAz7C,GACA,GAAA08C,IAdA,SAAA1U,EAAAhoC,GACAA,EAAA87C,aAAA97C,EAAA46C,cACA,mBAAA5S,EAAAmU,QAAAn8C,EAAAoyC,WAKApyC,EAAA87C,aAAA,EACA9T,EAAA1oC,KAAA,eALAU,EAAA85C,YACA95C,EAAA46C,aAAA,EACA3wC,EAAA05B,SAAA8Y,EAAAzU,EAAAhoC,IAMA,CAIAw5C,CAAAxR,EAAAhoC,GACA,IAAAA,EAAA85C,YACA95C,EAAA42C,UAAA,EACA5O,EAAA1oC,KAAA,UACAU,EAAAw0C,cAAA,CAGA,IAAAmI,EAAA3U,EAAAmK,iBACAwK,GAAAA,EAAAnI,aAAAmI,EAAA3I,aACAhM,EAAAwG,SAEA,CAGA,OAAAkO,CACA,CAxfA52D,EAAA,WAAAA,CAAA2lD,EAAAiH,GA4GAuH,EAAA3xD,UAAA4pD,UAAA,WAGA,IAFA,IAAA0K,EAAAv3D,KAAAq2D,gBACA5nD,EAAA,GACA8oD,GACA9oD,EAAA7L,KAAA20D,GACAA,EAAAA,EAAA31D,KAEA,OAAA6M,CACA,EACA,WACA,IACAnQ,OAAAC,eAAAq2D,EAAA3xD,UAAA,SAAA,CACA2J,IAAAioD,EAAAC,WAAA,WACA,OAAA90D,KAAA6sD,WACA,GAAA,6EAAA,YAEA,CAAA,MAAA2K,GAAA,CACA,CARA,GAaA,mBAAAv4D,QAAAA,OAAAw4D,aAAA,mBAAAz/C,SAAA/U,UAAAhE,OAAAw4D,cACA1C,EAAA/8C,SAAA/U,UAAAhE,OAAAw4D,aACAn5D,OAAAC,eAAA6nD,EAAAnnD,OAAAw4D,YAAA,CACAr5D,MAAA,SAAAs5D,GACA,QAAA3C,EAAA11D,KAAAW,KAAA03D,IACA13D,OAAAomD,IACAsR,GAAAA,EAAAjL,0BAAAmI,EACA,KAGAG,EAAA,SAAA2C,GACA,OAAAA,aAAA13D,IACA,EA+BAomD,EAAAnjD,UAAA+/C,KAAA,WACAmL,EAAAnuD,KAAA,IAAAg1D,EACA,EAyBA5O,EAAAnjD,UAAAoE,MAAA,SAAAi5B,EAAAp5B,EAAA7F,GACA,IAzNAnD,EAyNAyc,EAAA3a,KAAAysD,eACAj+C,GAAA,EACA2oD,GAAAx8C,EAAA2zC,aA3NApwD,EA2NAoiC,EA1NAn6B,EAAA+B,SAAAhK,IAAAA,aAAAovD,GAwOA,OAbA6J,IAAAhxD,EAAA+B,SAAAo4B,KACAA,EAhOA,SAAAA,GACA,OAAAn6B,EAAAa,KAAAs5B,EACA,CA8NA0vB,CAAA1vB,IAEA,mBAAAp5B,IACA7F,EAAA6F,EACAA,EAAA,MAEAiwD,EAAAjwD,EAAA,SAAAA,IAAAA,EAAAyT,EAAAy0C,iBACA,mBAAA/tD,IAAAA,EAAAg0D,GACA16C,EAAA66C,OArCA,SAAA7S,EAAAthD,GACA,IAAAsa,EAAA,IAAAw5C,EAEAhH,EAAAxL,EAAAhnC,GACAiJ,EAAA05B,SAAAj9C,EAAAsa,EACA,CAgCAg8C,CAAA33D,KAAAqB,IAAA81D,GA3BA,SAAAxU,EAAAhoC,EAAA2lB,EAAAj/B,GACA,IAAAsa,EAMA,OALA,OAAA2kB,EACA3kB,EAAA,IAAAu5C,EACA,iBAAA50B,GAAA3lB,EAAA2zC,aACA3yC,EAAA,IAAAoyC,EAAA,QAAA,CAAA,SAAA,UAAAztB,KAEA3kB,IACAwyC,EAAAxL,EAAAhnC,GACAiJ,EAAA05B,SAAAj9C,EAAAsa,IACA,EAGA,CAcAi8C,CAAA53D,KAAA2a,EAAA2lB,EAAAj/B,MACAsZ,EAAA85C,YACAjmD,EAiDA,SAAAm0C,EAAAhoC,EAAAw8C,EAAA72B,EAAAp5B,EAAA7F,GACA,IAAA81D,EAAA,CACA,IAAAU,EArBA,SAAAl9C,EAAA2lB,EAAAp5B,GACAyT,EAAA2zC,aAAA,IAAA3zC,EAAA+6C,eAAA,iBAAAp1B,IACAA,EAAAn6B,EAAAa,KAAAs5B,EAAAp5B,IAEA,OAAAo5B,CACA,CAgBAw3B,CAAAn9C,EAAA2lB,EAAAp5B,GACAo5B,IAAAu3B,IACAV,GAAA,EACAjwD,EAAA,SACAo5B,EAAAu3B,EAEA,CACA,IAAAv0D,EAAAqX,EAAA2zC,WAAA,EAAAhuB,EAAAv/B,OACA4Z,EAAA5Z,QAAAuC,EACA,IAAAkL,EAAAmM,EAAA5Z,OAAA4Z,EAAAiyC,cAEAp+C,IAAAmM,EAAA63C,WAAA,GACA,GAAA73C,EAAAg7C,SAAAh7C,EAAAi7C,OAAA,CACA,IAAAmC,EAAAp9C,EAAA67C,oBACA77C,EAAA67C,oBAAA,CACAl2B,MAAAA,EACAp5B,SAAAA,EACAiwD,MAAAA,EACAz0D,SAAArB,EACAO,KAAA,MAEAm2D,EACAA,EAAAn2D,KAAA+Y,EAAA67C,oBAEA77C,EAAA07C,gBAAA17C,EAAA67C,oBAEA77C,EAAA+7C,sBAAA,CACA,MACAK,EAAApU,EAAAhoC,GAAA,EAAArX,EAAAg9B,EAAAp5B,EAAA7F,GAEA,OAAAmN,CACA,CAlFAwpD,CAAAh4D,KAAA2a,EAAAw8C,EAAA72B,EAAAp5B,EAAA7F,IAEAmN,CACA,EACA43C,EAAAnjD,UAAAg1D,KAAA,WACAj4D,KAAAysD,eAAAmJ,QACA,EACAxP,EAAAnjD,UAAAi1D,OAAA,WACA,IAAAv9C,EAAA3a,KAAAysD,eACA9xC,EAAAi7C,SACAj7C,EAAAi7C,SACAj7C,EAAAg7C,SAAAh7C,EAAAi7C,QAAAj7C,EAAAk7C,mBAAAl7C,EAAA07C,iBAAAC,EAAAt2D,KAAA2a,GAEA,EACAyrC,EAAAnjD,UAAAk1D,mBAAA,SAAAjxD,GAGA,GADA,iBAAAA,IAAAA,EAAAA,EAAA6B,iBACA,CAAA,MAAA,OAAA,QAAA,QAAA,SAAA,SAAA,OAAA,QAAA,UAAA,WAAA,OAAAlD,SAAAqB,EAAA,IAAA6B,gBAAA,GAAA,MAAA,IAAAqsD,EAAAluD,GAEA,OADAlH,KAAAysD,eAAA2C,gBAAAloD,EACAlH,IACA,EACA1B,OAAAC,eAAA6nD,EAAAnjD,UAAA,iBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAAysD,gBAAAzsD,KAAAysD,eAAAI,WACA,IAQAvuD,OAAAC,eAAA6nD,EAAAnjD,UAAA,wBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAAysD,eAAAG,aACA,IAuKAxG,EAAAnjD,UAAAimD,OAAA,SAAA5oB,EAAAp5B,EAAA7F,GACAA,EAAA,IAAA4sD,EAAA,YACA,EACA7H,EAAAnjD,UAAA2zD,QAAA,KACAxQ,EAAAnjD,UAAA8C,IAAA,SAAAu6B,EAAAp5B,EAAA7F,GACA,IAAAsZ,EAAA3a,KAAAysD,eAmBA,MAlBA,mBAAAnsB,GACAj/B,EAAAi/B,EACAA,EAAA,KACAp5B,EAAA,MACA,mBAAAA,IACA7F,EAAA6F,EACAA,EAAA,MAEAo5B,SAAAtgC,KAAAqH,MAAAi5B,EAAAp5B,GAGAyT,EAAAi7C,SACAj7C,EAAAi7C,OAAA,EACA51D,KAAAk4D,UAIAv9C,EAAA66C,QAyDA,SAAA7S,EAAAhoC,EAAAtZ,GACAsZ,EAAA66C,QAAA,EACAS,EAAAtT,EAAAhoC,GACAtZ,IACAsZ,EAAA42C,SAAA3sC,EAAA05B,SAAAj9C,GAAAshD,EAAA9gD,KAAA,SAAAR,IAEAsZ,EAAA+xC,OAAA,EACA/J,EAAAjkD,UAAA,CACA,CAjEA05D,CAAAp4D,KAAA2a,EAAAtZ,GACArB,IACA,EACA1B,OAAAC,eAAA6nD,EAAAnjD,UAAA,iBAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,OAAA5M,KAAAysD,eAAA1rD,MACA,IAqEAzC,OAAAC,eAAA6nD,EAAAnjD,UAAA,YAAA,CAIAzE,YAAA,EACAoO,IAAA,WACA,YAAAzN,IAAAa,KAAAysD,gBAGAzsD,KAAAysD,eAAAM,SACA,EACAj7C,IAAA,SAAA1T,GAGA4B,KAAAysD,iBAMAzsD,KAAAysD,eAAAM,UAAA3uD,EACA,IAEAgoD,EAAAnjD,UAAAkmD,QAAAyE,EAAAzE,QACA/C,EAAAnjD,UAAAktD,WAAAvC,EAAAwC,UACAhK,EAAAnjD,UAAAusD,SAAA,SAAAltD,EAAAjB,GACAA,EAAAiB,EACA,C9Fq/eC,GAAEjD,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAA8B,oBAAXX,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAEtK,EAAE,CAAC,YAAY,GAAG,mBAAmB,GAAG,6BAA6B,GAAG,2BAA2B,IAAI,4BAA4B,IAAI8lB,SAAW,GAAG/d,OAAS,GAAGo+C,SAAW,GAAG,iBAAiB,MAAM,GAAG,CAAC,SAASvlD,EAAQf,EAAOD,IAClO,SAAWmlB,IAAS,W+FtngBpB,IAAAyzC,EACA,SAAAC,EAAAp6D,EAAAC,EAAAC,GAAA,OAAAD,EACA,SAAAQ,GAAA,IAAAR,EACA,SAAAW,EAAAC,GAAA,GAAA,iBAAAD,GAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAAG,OAAAC,aAAA,QAAAC,IAAAH,EAAA,CAAA,IAAAI,EAAAJ,EAAAK,KAAAP,EAAAC,GAAA,WAAA,GAAA,iBAAAK,EAAA,OAAAA,EAAA,MAAA,IAAAE,UAAA,+CAAA,CAAA,OAAA,WAAAP,EAAAF,OAAAU,QAAAT,EAAA,CADAy5D,CAAA55D,EAAA,UAAA,MAAA,iBAAAR,EAAAA,EAAAU,OAAAV,EAAA,CADAq6D,CAAAr6D,MAAAD,EAAAI,OAAAC,eAAAL,EAAAC,EAAA,CAAAC,MAAAA,EAAAI,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAR,EAAAC,GAAAC,EAAAF,CAAA,CAGA,IAAAqzD,EAAA9wD,EAAA,mBACAg4D,EAAAx5D,OAAA,eACAy5D,EAAAz5D,OAAA,cACA05D,EAAA15D,OAAA,SACA25D,EAAA35D,OAAA,SACA45D,EAAA55D,OAAA,eACA65D,EAAA75D,OAAA,iBACA85D,EAAA95D,OAAA,UACA,SAAA+5D,EAAA56D,EAAA8D,GACA,MAAA,CACA9D,MAAAA,EACA8D,KAAAA,EAEA,CACA,SAAA+2D,EAAAC,GACA,IAAAzgD,EAAAygD,EAAAT,GACA,GAAA,OAAAhgD,EAAA,CACA,IAAAlQ,EAAA2wD,EAAAH,GAAA9uD,OAIA,OAAA1B,IACA2wD,EAAAL,GAAA,KACAK,EAAAT,GAAA,KACAS,EAAAR,GAAA,KACAjgD,EAAAugD,EAAAzwD,GAAA,IAEA,CACA,CACA,SAAA4wD,EAAAD,GAGAt0C,EAAA05B,SAAA2a,EAAAC,EACA,CAYA,IAAAE,EAAA96D,OAAAid,gBAAA,WAAA,IACA89C,EAAA/6D,OAAAg7D,gBAmDAhB,EAnDAD,EAAA,CACA1V,aACA,OAAA3iD,KAAA+4D,EACA,EACAn3D,KAAA,WACA,IAAAmxD,EAAA/yD,KAGA2M,EAAA3M,KAAA24D,GACA,GAAA,OAAAhsD,EACA,OAAA6L,QAAAE,OAAA/L,GAEA,GAAA3M,KAAA44D,GACA,OAAApgD,QAAAC,QAAAugD,OAAA75D,GAAA,IAEA,GAAAa,KAAA+4D,GAAAhM,UAKA,OAAA,IAAAv0C,SAAA,SAAAC,EAAAC,GACAkM,EAAA05B,UAAA,WACAyU,EAAA4F,GACAjgD,EAAAq6C,EAAA4F,IAEAlgD,EAAAugD,OAAA75D,GAAA,GAEA,GACA,IAOA,IACAo6D,EADAC,EAAAx5D,KAAA64D,GAEA,GAAAW,EACAD,EAAA,IAAA/gD,QAlDA,SAAAghD,EAAAN,GACA,OAAA,SAAAzgD,EAAAC,GACA8gD,EAAAzR,MAAA,WACAmR,EAAAN,GACAngD,EAAAugD,OAAA75D,GAAA,IAGA+5D,EAAAJ,GAAArgD,EAAAC,EACA,GAAAA,EACA,CACA,CAwCA+gD,CAAAD,EAAAx5D,WACA,CAGA,IAAAuI,EAAAvI,KAAA+4D,GAAA9uD,OACA,GAAA,OAAA1B,EACA,OAAAiQ,QAAAC,QAAAugD,EAAAzwD,GAAA,IAEAgxD,EAAA,IAAA/gD,QAAAxY,KAAA84D,GACA,CAEA,OADA94D,KAAA64D,GAAAU,EACAA,CACA,GACAt6D,OAAA+zD,eAAA,WACA,OAAAhzD,IACA,IAAAs4D,EAAAD,EAAA,UAAA,WACA,IAAAqB,EAAA15D,KAIA,OAAA,IAAAwY,SAAA,SAAAC,EAAAC,GACAghD,EAAAX,GAAA5P,QAAA,MAAA,SAAA7mD,GACAA,EACAoW,EAAApW,GAGAmW,EAAAugD,OAAA75D,GAAA,GACA,GACA,GACA,IAAAk5D,GAAAe,GA4DA15D,EAAAD,QA3DA,SAAAkjD,GACA,IAAAgX,EACAv4D,EAAA9C,OAAAyb,OAAAs/C,GAAAf,EAAAqB,EAAA,CAAA,EAAAZ,EAAA,CACA36D,MAAAukD,EACAjkD,UAAA,IACA45D,EAAAqB,EAAAlB,EAAA,CACAr6D,MAAA,KACAM,UAAA,IACA45D,EAAAqB,EAAAjB,EAAA,CACAt6D,MAAA,KACAM,UAAA,IACA45D,EAAAqB,EAAAhB,EAAA,CACAv6D,MAAA,KACAM,UAAA,IACA45D,EAAAqB,EAAAf,EAAA,CACAx6D,MAAAukD,EAAAmK,eAAA6B,WACAjwD,UAAA,IACA45D,EAAAqB,EAAAb,EAAA,CACA16D,MAAA,SAAAqa,EAAAC,GACA,IAAAnQ,EAAAnH,EAAA23D,GAAA9uD,OACA1B,GACAnH,EAAAy3D,GAAA,KACAz3D,EAAAq3D,GAAA,KACAr3D,EAAAs3D,GAAA,KACAjgD,EAAAugD,EAAAzwD,GAAA,MAEAnH,EAAAq3D,GAAAhgD,EACArX,EAAAs3D,GAAAhgD,EAEA,EACAha,UAAA,IACAi7D,IA0BA,OAzBAv4D,EAAAy3D,GAAA,KACAtH,EAAA5O,GAAA,SAAArgD,GACA,GAAAA,GAAA,+BAAAA,EAAAzB,KAAA,CACA,IAAA6X,EAAAtX,EAAAs3D,GAUA,OAPA,OAAAhgD,IACAtX,EAAAy3D,GAAA,KACAz3D,EAAAq3D,GAAA,KACAr3D,EAAAs3D,GAAA,KACAhgD,EAAApW,SAEAlB,EAAAu3D,GAAAr2D,EAEA,CACA,IAAAmW,EAAArX,EAAAq3D,GACA,OAAAhgD,IACArX,EAAAy3D,GAAA,KACAz3D,EAAAq3D,GAAA,KACAr3D,EAAAs3D,GAAA,KACAjgD,EAAAugD,OAAA75D,GAAA,KAEAiC,EAAAw3D,IAAA,CACA,IACAjW,EAAA1pC,GAAA,WAAAkgD,EAAAt+C,KAAA,KAAAzZ,IACAA,CACA,C/F2ngBC,GAAE/B,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAElC,EAAE,CAAC,kBAAkB,GAAGklB,SAAW,KAAK,GAAG,CAAC,SAASllB,EAAQf,EAAOD,GgG7ygBpE,SAAAwY,EAAAy/C,EAAAkC,GAAA,IAAAr2D,EAAAjF,OAAAiF,KAAAm0D,GAAA,GAAAp5D,OAAA4Z,sBAAA,CAAA,IAAA2hD,EAAAv7D,OAAA4Z,sBAAAw/C,GAAAkC,IAAAC,EAAAA,EAAAC,QAAA,SAAAC,GAAA,OAAAz7D,OAAA07D,yBAAAtC,EAAAqC,GAAAv7D,UAAA,KAAA+E,EAAAX,KAAAlB,MAAA6B,EAAAs2D,EAAA,CAAA,OAAAt2D,CAAA,CACA,SAAA02D,EAAAlsD,GAAA,IAAA,IAAAxN,EAAA,EAAAA,EAAAoB,UAAAZ,OAAAR,IAAA,CAAA,IAAA25D,EAAA,MAAAv4D,UAAApB,GAAAoB,UAAApB,GAAA,CAAA,EAAAA,EAAA,EAAA0X,EAAA3Z,OAAA47D,IAAA,GAAApzC,SAAA,SAAA3oB,GAAAm6D,EAAAvqD,EAAA5P,EAAA+7D,EAAA/7D,GAAA,IAAAG,OAAA67D,0BAAA77D,OAAA87D,iBAAArsD,EAAAzP,OAAA67D,0BAAAD,IAAAjiD,EAAA3Z,OAAA47D,IAAApzC,SAAA,SAAA3oB,GAAAG,OAAAC,eAAAwP,EAAA5P,EAAAG,OAAA07D,yBAAAE,EAAA/7D,GAAA,GAAA,CAAA,OAAA4P,CAAA,CACA,SAAAuqD,EAAAp6D,EAAAC,EAAAC,GAAA,OAAAD,EAAAq6D,EAAAr6D,MAAAD,EAAAI,OAAAC,eAAAL,EAAAC,EAAA,CAAAC,MAAAA,EAAAI,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAR,EAAAC,GAAAC,EAAAF,CAAA,CAEA,SAAAm8D,EAAAtsD,EAAAusD,GAAA,IAAA,IAAA/5D,EAAA,EAAAA,EAAA+5D,EAAAv5D,OAAAR,IAAA,CAAA,IAAAg6D,EAAAD,EAAA/5D,GAAAg6D,EAAA/7D,WAAA+7D,EAAA/7D,aAAA,EAAA+7D,EAAA97D,cAAA,EAAA,UAAA87D,IAAAA,EAAA77D,UAAA,GAAAJ,OAAAC,eAAAwP,EAAAyqD,EAAA+B,EAAAp8D,KAAAo8D,EAAA,CAAA,CAEA,SAAA/B,EAAA75D,GAAA,IAAAR,EACA,SAAAW,EAAAC,GAAA,GAAA,iBAAAD,GAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAAG,OAAAC,aAAA,QAAAC,IAAAH,EAAA,CAAA,IAAAI,EAAAJ,EAAAK,KAAAP,EAAAC,GAAA,WAAA,GAAA,iBAAAK,EAAA,OAAAA,EAAA,MAAA,IAAAE,UAAA,+CAAA,CAAA,OAAA,WAAAP,EAAAF,OAAAU,QAAAT,EAAA,CADAy5D,CAAA55D,EAAA,UAAA,MAAA,iBAAAR,EAAAA,EAAAU,OAAAV,EAAA,CAEA,IACAgI,EADA1F,EAAA,UACA0F,OAEAyH,EADAnN,EAAA,QACAmN,QACA4sD,EAAA5sD,GAAAA,EAAA4sD,QAAA,UAIA96D,EAAAD,QAAA,WACA,SAAAkuD,KAdA,SAAA8M,EAAAC,GAAA,KAAAD,aAAAC,GAAA,MAAA,IAAAp7D,UAAA,oCAAA,CAeAq7D,CAAA36D,KAAA2tD,GACA3tD,KAAAkV,KAAA,KACAlV,KAAAmV,KAAA,KACAnV,KAAAe,OAAA,CACA,CAjBA,IAAA25D,EAAAE,EAAAC,EA8KA,OA9KAH,EAkBA/M,GAlBAiN,EAkBA,CAAA,CACAz8D,IAAA,OACAC,MAAA,SAAA+jD,GACA,IAAAmS,EAAA,CACA/rD,KAAA45C,EACAvgD,KAAA,MAEA5B,KAAAe,OAAA,EAAAf,KAAAmV,KAAAvT,KAAA0yD,EAAAt0D,KAAAkV,KAAAo/C,EACAt0D,KAAAmV,KAAAm/C,IACAt0D,KAAAe,MACA,GACA,CACA5C,IAAA,UACAC,MAAA,SAAA+jD,GACA,IAAAmS,EAAA,CACA/rD,KAAA45C,EACAvgD,KAAA5B,KAAAkV,MAEA,IAAAlV,KAAAe,SAAAf,KAAAmV,KAAAm/C,GACAt0D,KAAAkV,KAAAo/C,IACAt0D,KAAAe,MACA,GACA,CACA5C,IAAA,QACAC,MAAA,WACA,GAAA,IAAA4B,KAAAe,OAAA,CACA,IAAAyN,EAAAxO,KAAAkV,KAAA3M,KAGA,OAFA,IAAAvI,KAAAe,OAAAf,KAAAkV,KAAAlV,KAAAmV,KAAA,KAAAnV,KAAAkV,KAAAlV,KAAAkV,KAAAtT,OACA5B,KAAAe,OACAyN,CAJA,CAKA,GACA,CACArQ,IAAA,QACAC,MAAA,WACA4B,KAAAkV,KAAAlV,KAAAmV,KAAA,KACAnV,KAAAe,OAAA,CACA,GACA,CACA5C,IAAA,OACAC,MAAA,SAAAukC,GACA,GAAA,IAAA3iC,KAAAe,OAAA,MAAA,GAGA,IAFA,IAAAD,EAAAd,KAAAkV,KACA1G,EAAA,GAAA1N,EAAAyH,KACAzH,EAAAA,EAAAc,MAAA4M,GAAAm0B,EAAA7hC,EAAAyH,KACA,OAAAiG,CACA,GACA,CACArQ,IAAA,SACAC,MAAA,SAAAgC,GACA,GAAA,IAAAJ,KAAAe,OAAA,OAAAoF,EAAAI,MAAA,GAIA,IAHA,IA5DA6L,EAAArE,EAAAxD,EA4DAiE,EAAArI,EAAAY,YAAA3G,IAAA,GACAU,EAAAd,KAAAkV,KACA3U,EAAA,EACAO,GA/DAsR,EAgEAtR,EAAAyH,KAhEAwF,EAgEAS,EAhEAjE,EAgEAhK,EA/DA4F,EAAAlD,UAAAmF,KAAA/I,KAAA+S,EAAArE,EAAAxD,GAgEAhK,GAAAO,EAAAyH,KAAAxH,OACAD,EAAAA,EAAAc,KAEA,OAAA4M,CACA,GAGA,CACArQ,IAAA,UACAC,MAAA,SAAAgC,EAAA06D,GACA,IAAAtsD,EAYA,OAXApO,EAAAJ,KAAAkV,KAAA3M,KAAAxH,QAEAyN,EAAAxO,KAAAkV,KAAA3M,KAAAjB,MAAA,EAAAlH,GACAJ,KAAAkV,KAAA3M,KAAAvI,KAAAkV,KAAA3M,KAAAjB,MAAAlH,IAGAoO,EAFApO,IAAAJ,KAAAkV,KAAA3M,KAAAxH,OAEAf,KAAAoc,QAGA0+C,EAAA96D,KAAA+6D,WAAA36D,GAAAJ,KAAAg7D,WAAA56D,GAEAoO,CACA,GACA,CACArQ,IAAA,QACAC,MAAA,WACA,OAAA4B,KAAAkV,KAAA3M,IACA,GAGA,CACApK,IAAA,aACAC,MAAA,SAAAgC,GACA,IAAAU,EAAAd,KAAAkV,KACA1U,EAAA,EACAgO,EAAA1N,EAAAyH,KAEA,IADAnI,GAAAoO,EAAAzN,OACAD,EAAAA,EAAAc,MAAA,CACA,IAAAoJ,EAAAlK,EAAAyH,KACA0yD,EAAA76D,EAAA4K,EAAAjK,OAAAiK,EAAAjK,OAAAX,EAGA,GAFA66D,IAAAjwD,EAAAjK,OAAAyN,GAAAxD,EAAAwD,GAAAxD,EAAA1D,MAAA,EAAAlH,GAEA,IADAA,GAAA66D,GACA,CACAA,IAAAjwD,EAAAjK,UACAP,EACAM,EAAAc,KAAA5B,KAAAkV,KAAApU,EAAAc,KAAA5B,KAAAkV,KAAAlV,KAAAmV,KAAA,OAEAnV,KAAAkV,KAAApU,EACAA,EAAAyH,KAAAyC,EAAA1D,MAAA2zD,IAEA,KACA,GACAz6D,CACA,CAEA,OADAR,KAAAe,QAAAP,EACAgO,CACA,GAGA,CACArQ,IAAA,aACAC,MAAA,SAAAgC,GACA,IAAAoO,EAAArI,EAAAY,YAAA3G,GACAU,EAAAd,KAAAkV,KACA1U,EAAA,EAGA,IAFAM,EAAAyH,KAAAH,KAAAoG,GACApO,GAAAU,EAAAyH,KAAAxH,OACAD,EAAAA,EAAAc,MAAA,CACA,IAAAgF,EAAA9F,EAAAyH,KACA0yD,EAAA76D,EAAAwG,EAAA7F,OAAA6F,EAAA7F,OAAAX,EAGA,GAFAwG,EAAAwB,KAAAoG,EAAAA,EAAAzN,OAAAX,EAAA,EAAA66D,GAEA,IADA76D,GAAA66D,GACA,CACAA,IAAAr0D,EAAA7F,UACAP,EACAM,EAAAc,KAAA5B,KAAAkV,KAAApU,EAAAc,KAAA5B,KAAAkV,KAAAlV,KAAAmV,KAAA,OAEAnV,KAAAkV,KAAApU,EACAA,EAAAyH,KAAA3B,EAAAU,MAAA2zD,IAEA,KACA,GACAz6D,CACA,CAEA,OADAR,KAAAe,QAAAP,EACAgO,CACA,GAGA,CACArQ,IAAAq8D,EACAp8D,MAAA,SAAAo5D,EAAAvhD,GACA,OAAArI,EAAA5N,KAAAi6D,EAAAA,EAAA,CAAA,EAAAhkD,GAAA,CAAA,EAAA,CAEAilD,MAAA,EAEAC,eAAA,IAEA,MA5KAd,EAAAK,EAAAz3D,UAAA23D,GAAAC,GAAAR,EAAAK,EAAAG,GAAAv8D,OAAAC,eAAAm8D,EAAA,YAAA,CAAAh8D,UAAA,IA8KAivD,CACA,CApKA,EhGq9gBA,EAAE,CAAC/lD,OAAS,GAAGurD,KAAO,KAAK,GAAG,CAAC,SAAS1yD,EAAQf,EAAOD,IACvD,SAAWmlB,IAAS,WiGr7gBpB,SAAAw2C,EAAAr7D,EAAAuC,GACA+4D,EAAAt7D,EAAAuC,GACAg5D,EAAAv7D,EACA,CACA,SAAAu7D,EAAAv7D,GACAA,EAAA0sD,iBAAA1sD,EAAA0sD,eAAAyC,WACAnvD,EAAA+sD,iBAAA/sD,EAAA+sD,eAAAoC,WACAnvD,EAAAka,KAAA,QACA,CAkBA,SAAAohD,EAAAt7D,EAAAuC,GACAvC,EAAAka,KAAA,QAAA3X,EACA,CAYA5C,EAAAD,QAAA,CACA0pD,QAzFA,SAAA7mD,EAAAjB,GACA,IAAA0xD,EAAA/yD,KACAu7D,EAAAv7D,KAAA8sD,gBAAA9sD,KAAA8sD,eAAAC,UACAyO,EAAAx7D,KAAAysD,gBAAAzsD,KAAAysD,eAAAM,UACA,OAAAwO,GAAAC,GACAn6D,EACAA,EAAAiB,GACAA,IACAtC,KAAAysD,eAEAzsD,KAAAysD,eAAAyJ,eACAl2D,KAAAysD,eAAAyJ,cAAA,EACAtxC,EAAA05B,SAAA+c,EAAAr7D,KAAAsC,IAHAsiB,EAAA05B,SAAA+c,EAAAr7D,KAAAsC,IAMAtC,OAMAA,KAAA8sD,iBACA9sD,KAAA8sD,eAAAC,WAAA,GAIA/sD,KAAAysD,iBACAzsD,KAAAysD,eAAAM,WAAA,GAEA/sD,KAAAwvD,SAAAltD,GAAA,MAAA,SAAAA,IACAjB,GAAAiB,EACAywD,EAAAtG,eAEAsG,EAAAtG,eAAAyJ,aAIAtxC,EAAA05B,SAAAgd,EAAAvI,IAHAA,EAAAtG,eAAAyJ,cAAA,EACAtxC,EAAA05B,SAAA8c,EAAArI,EAAAzwD,IAHAsiB,EAAA05B,SAAA8c,EAAArI,EAAAzwD,GAOAjB,GACAujB,EAAA05B,SAAAgd,EAAAvI,GACA1xD,EAAAiB,IAEAsiB,EAAA05B,SAAAgd,EAAAvI,EAEA,IACA/yD,KACA,EA2CAowD,UAjCA,WACApwD,KAAA8sD,iBACA9sD,KAAA8sD,eAAAC,WAAA,EACA/sD,KAAA8sD,eAAA8B,SAAA,EACA5uD,KAAA8sD,eAAAJ,OAAA,EACA1sD,KAAA8sD,eAAA6B,YAAA,GAEA3uD,KAAAysD,iBACAzsD,KAAAysD,eAAAM,WAAA,EACA/sD,KAAAysD,eAAAC,OAAA,EACA1sD,KAAAysD,eAAA+I,QAAA,EACAx1D,KAAAysD,eAAA8I,aAAA,EACAv1D,KAAAysD,eAAAgK,aAAA,EACAz2D,KAAAysD,eAAA8E,UAAA,EACAvxD,KAAAysD,eAAAyJ,cAAA,EAEA,EAkBA/H,eAdA,SAAAxL,EAAArgD,GAOA,IAAAg1D,EAAA3U,EAAAmK,eACAwE,EAAA3O,EAAA8J,eACA6K,GAAAA,EAAAnI,aAAAmC,GAAAA,EAAAnC,YAAAxM,EAAAwG,QAAA7mD,GAAAqgD,EAAA1oC,KAAA,QAAA3X,EACA,EjG++gBC,GAAEjD,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,YAElC,EAAE,CAACklB,SAAW,KAAK,GAAG,CAAC,SAASllB,EAAQf,EAAOD,GkGtkhB/C,IAAAg8D,EAAAh7D,EAAA,mBAAA2qD,MAAAqQ,2BAYA,SAAA35D,IAAA,CAoEApC,EAAAD,QAhEA,SAAAi8D,EAAA/Y,EAAAM,EAAAvgD,GACA,GAAA,mBAAAugD,EAAA,OAAAyY,EAAA/Y,EAAA,KAAAM,GACAA,IAAAA,EAAA,CAAA,GACAvgD,EAlBA,SAAAA,GACA,IAAAgxC,GAAA,EACA,OAAA,WACA,IAAAA,EAAA,CACAA,GAAA,EACA,IAAA,IAAAioB,EAAAh6D,UAAAZ,OAAA0B,EAAA,IAAAM,MAAA44D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IACAn5D,EAAAm5D,GAAAj6D,UAAAi6D,GAEAl5D,EAAAhB,MAAA1B,KAAAyC,EALA,CAMA,CACA,CAQAZ,CAAAa,GAAAZ,GACA,IAAAyqD,EAAAtJ,EAAAsJ,WAAA,IAAAtJ,EAAAsJ,UAAA5J,EAAA4J,SACA7tD,EAAAukD,EAAAvkD,WAAA,IAAAukD,EAAAvkD,UAAAikD,EAAAjkD,SACAm9D,EAAA,WACAlZ,EAAAjkD,UAAA0zD,GACA,EACA0J,EAAAnZ,EAAA8J,gBAAA9J,EAAA8J,eAAA8E,SACAa,EAAA,WACA1zD,GAAA,EACAo9D,GAAA,EACAvP,GAAA7pD,EAAArD,KAAAsjD,EACA,EACAoZ,EAAApZ,EAAAmK,gBAAAnK,EAAAmK,eAAA6B,WACAnC,EAAA,WACAD,GAAA,EACAwP,GAAA,EACAr9D,GAAAgE,EAAArD,KAAAsjD,EACA,EACAmG,EAAA,SAAAxmD,GACAI,EAAArD,KAAAsjD,EAAArgD,EACA,EACA6vD,EAAA,WACA,IAAA7vD,EACA,OAAAiqD,IAAAwP,GACApZ,EAAAmK,gBAAAnK,EAAAmK,eAAAJ,QAAApqD,EAAA,IAAAm5D,GACA/4D,EAAArD,KAAAsjD,EAAArgD,IAEA5D,IAAAo9D,GACAnZ,EAAA8J,gBAAA9J,EAAA8J,eAAAC,QAAApqD,EAAA,IAAAm5D,GACA/4D,EAAArD,KAAAsjD,EAAArgD,SAFA,CAIA,EACA05D,EAAA,WACArZ,EAAAc,IAAAxqC,GAAA,SAAAm5C,EACA,EAcA,OAtDA,SAAAzP,GACA,OAAAA,EAAAp1B,WAAA,mBAAAo1B,EAAAsB,KACA,CAuCAgY,CAAAtZ,GAIAjkD,IAAAikD,EAAA8J,iBAEA9J,EAAA1pC,GAAA,MAAA4iD,GACAlZ,EAAA1pC,GAAA,QAAA4iD,KANAlZ,EAAA1pC,GAAA,WAAAm5C,GACAzP,EAAA1pC,GAAA,QAAAk5C,GACAxP,EAAAc,IAAAuY,IAAArZ,EAAA1pC,GAAA,UAAA+iD,IAMArZ,EAAA1pC,GAAA,MAAAuzC,GACA7J,EAAA1pC,GAAA,SAAAm5C,IACA,IAAAnP,EAAAt2C,OAAAg2C,EAAA1pC,GAAA,QAAA6vC,GACAnG,EAAA1pC,GAAA,QAAAk5C,GACA,WACAxP,EAAA/pC,eAAA,WAAAw5C,GACAzP,EAAA/pC,eAAA,QAAAu5C,GACAxP,EAAA/pC,eAAA,UAAAojD,GACArZ,EAAAc,KAAAd,EAAAc,IAAA7qC,eAAA,SAAAw5C,GACAzP,EAAA/pC,eAAA,MAAAijD,GACAlZ,EAAA/pC,eAAA,QAAAijD,GACAlZ,EAAA/pC,eAAA,SAAAw5C,GACAzP,EAAA/pC,eAAA,MAAA4zC,GACA7J,EAAA/pC,eAAA,QAAAkwC,GACAnG,EAAA/pC,eAAA,QAAAu5C,EACA,CACA,ClG8khBA,EAAE,CAAC,kBAAkB,KAAK,IAAI,CAAC,SAAS1xD,EAAQf,EAAOD,GmGlqhBvDC,EAAAD,QAAA,WACA,MAAA,IAAAmB,MAAA,gDACA,CnGqqhBA,EAAE,CAAC,GAAG,IAAI,CAAC,SAASH,EAAQf,EAAOD,GoGlqhBnC,IAAAi8D,EASA,IAAA5N,EAAArtD,EAAA,mBAAA2qD,MACA8Q,EAAApO,EAAAoO,iBACAjH,EAAAnH,EAAAmH,qBACA,SAAAnzD,EAAAQ,GAEA,GAAAA,EAAA,MAAAA,CACA,CA+BA,SAAAjD,EAAAoC,GACAA,GACA,CACA,SAAAuhD,EAAAh8C,EAAA6tC,GACA,OAAA7tC,EAAAg8C,KAAAnO,EACA,CA6BAn1C,EAAAD,QAvBA,WACA,IAAA,IAAAk8D,EAAAh6D,UAAAZ,OAAAo7D,EAAA,IAAAp5D,MAAA44D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IACAO,EAAAP,GAAAj6D,UAAAi6D,GAEA,IAKAjvD,EALAjK,EATA,SAAAy5D,GACA,OAAAA,EAAAp7D,OACA,mBAAAo7D,EAAAA,EAAAp7D,OAAA,GAAAe,EACAq6D,EAAAx5D,MAFAb,CAGA,CAKAs6D,CAAAD,GAEA,GADAp5D,MAAAC,QAAAm5D,EAAA,MAAAA,EAAAA,EAAA,IACAA,EAAAp7D,OAAA,EACA,MAAA,IAAAm7D,EAAA,WAGA,IAAAG,EAAAF,EAAAlc,KAAA,SAAA0C,EAAApiD,GACA,IAAAquD,EAAAruD,EAAA47D,EAAAp7D,OAAA,EAEA,OAnDA,SAAA4hD,EAAAiM,EAAA+G,EAAAjzD,GACAA,EAnBA,SAAAA,GACA,IAAAgxC,GAAA,EACA,OAAA,WACAA,IACAA,GAAA,EACAhxC,EAAAhB,WAAA,EAAAC,WACA,CACA,CAYAE,CAAAa,GACA,IAAA45D,GAAA,EACA3Z,EAAA1pC,GAAA,SAAA,WACAqjD,GAAA,CACA,SACAn9D,IAAAu8D,IAAAA,EAAAj7D,EAAA,oBACAi7D,EAAA/Y,EAAA,CACA4J,SAAAqC,EACAlwD,SAAAi3D,IACA,SAAArzD,GACA,GAAAA,EAAA,OAAAI,EAAAJ,GACAg6D,GAAA,EACA55D,GACA,IACA,IAAAqqD,GAAA,EACA,OAAA,SAAAzqD,GACA,IAAAg6D,IACAvP,EAIA,OAHAA,GAAA,EAtBA,SAAApK,GACA,OAAAA,EAAAp1B,WAAA,mBAAAo1B,EAAAsB,KACA,CAuBAgY,CAAAtZ,GAAAA,EAAAsB,QACA,mBAAAtB,EAAAwG,QAAAxG,EAAAwG,eACAzmD,EAAAJ,GAAA,IAAA2yD,EAAA,QACA,CACA,CAyBAsH,CAAA5Z,EAAAiM,EADAruD,EAAA,GACA,SAAA+B,GACAqK,IAAAA,EAAArK,GACAA,GAAA+5D,EAAAv1C,QAAAznB,GACAuvD,IACAyN,EAAAv1C,QAAAznB,GACAqD,EAAAiK,GACA,GACA,IACA,OAAAwvD,EAAAK,OAAAxZ,EACA,CpG0qhBA,EAAE,CAAC,kBAAkB,GAAG,kBAAkB,KAAK,IAAI,CAAC,SAASviD,EAAQf,EAAOD,GqG5vhB5E,IAAAg9D,EAAAh8D,EAAA,mBAAA2qD,MAAAqR,sBAiBA/8D,EAAAD,QAAA,CACAouD,iBAdA,SAAAlzC,EAAA1E,EAAAymD,EAAArO,GACA,IAAAsO,EAJA,SAAA1mD,EAAAo4C,EAAAqO,GACA,OAAA,MAAAzmD,EAAA22C,cAAA32C,EAAA22C,cAAAyB,EAAAp4C,EAAAymD,GAAA,IACA,CAEAE,CAAA3mD,EAAAo4C,EAAAqO,GACA,GAAA,MAAAC,EAAA,CACA,IAAAtuD,SAAAsuD,IAAA/4D,KAAAkT,MAAA6lD,KAAAA,GAAAA,EAAA,EAEA,MAAA,IAAAF,EADApO,EAAAqO,EAAA,gBACAC,GAEA,OAAA/4D,KAAAkT,MAAA6lD,EACA,CAGA,OAAAhiD,EAAA2zC,WAAA,GAAA,KACA,ErGmwhBA,EAAE,CAAC,kBAAkB,KAAK,IAAI,CAAC,SAAS7tD,EAAQf,EAAOD,GsGrxhBvDC,EAAAD,QAAAgB,EAAA,UAAA4X,YtGwxhBA,EAAE,CAACuB,OAAS,KAAK,IAAI,CAAC,SAASnZ,EAAQf,EAAOD,IuGxxhB9CA,EAAAC,EAAAD,QAAAgB,EAAA,8BACA4sD,OAAA5tD,EACAA,EAAAkqD,SAAAlqD,EACAA,EAAA2mD,SAAA3lD,EAAA,6BACAhB,EAAA4sD,OAAA5rD,EAAA,2BACAhB,EAAAwtD,UAAAxsD,EAAA,8BACAhB,EAAAutD,YAAAvsD,EAAA,gCACAhB,EAAA8xD,SAAA9wD,EAAA,2CACAhB,EAAAo9D,SAAAp8D,EAAA,qCvG2xhBA,EAAE,CAAC,0BAA0B,GAAG,+BAA+B,GAAG,4BAA4B,GAAG,6BAA6B,GAAG,4BAA4B,GAAG,0CAA0C,GAAG,qCAAqC,MAAM,IAAI,CAAC,SAASA,EAAQf,EAAOD,GwG1whBrR,IAAA0G,EAAA1F,EAAA,eAAA0F,OAGAgB,EAAAhB,EAAAgB,YAAA,SAAAD,GAEA,QADAA,EAAA,GAAAA,IACAA,EAAA6B,eACA,IAAA,MAAA,IAAA,OAAA,IAAA,QAAA,IAAA,QAAA,IAAA,SAAA,IAAA,SAAA,IAAA,OAAA,IAAA,QAAA,IAAA,UAAA,IAAA,WAAA,IAAA,MACA,OAAA,EACA,QACA,OAAA,EAEA,EA0CA,SAAA0kD,EAAAvmD,GAEA,IAAA+zD,EACA,OAFAj7D,KAAAkH,SAXA,SAAAuP,GACA,IAAAqmD,EA/BA,SAAArmD,GACA,IAAAA,EAAA,MAAA,OAEA,IADA,IAAAsmD,IAEA,OAAAtmD,GACA,IAAA,OACA,IAAA,QACA,MAAA,OACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,MAAA,UACA,IAAA,SACA,IAAA,SACA,MAAA,SACA,IAAA,SACA,IAAA,QACA,IAAA,MACA,OAAAA,EACA,QACA,GAAAsmD,EAAA,OACAtmD,GAAA,GAAAA,GAAA1N,cACAg0D,GAAA,EAGA,CAKAC,CAAAvmD,GACA,GAAA,iBAAAqmD,IAAA32D,EAAAgB,aAAAA,IAAAA,EAAAsP,IAAA,MAAA,IAAA7V,MAAA,qBAAA6V,GACA,OAAAqmD,GAAArmD,CACA,CAOAwmD,CAAA/1D,GAEAlH,KAAAkH,UACA,IAAA,UACAlH,KAAAk9D,KAAAC,EACAn9D,KAAA+F,IAAAq3D,EACAnC,EAAA,EACA,MACA,IAAA,OACAj7D,KAAAq9D,SAAAC,EACArC,EAAA,EACA,MACA,IAAA,SACAj7D,KAAAk9D,KAAAK,EACAv9D,KAAA+F,IAAAy3D,EACAvC,EAAA,EACA,MACA,QAGA,OAFAj7D,KAAAqH,MAAAo2D,OACAz9D,KAAA+F,IAAA23D,GAGA19D,KAAA29D,SAAA,EACA39D,KAAA49D,UAAA,EACA59D,KAAA69D,SAAA13D,EAAAY,YAAAk0D,EACA,CAmCA,SAAA6C,EAAAC,GACA,OAAAA,GAAA,IAAA,EAAAA,GAAA,GAAA,EAAA,EAAAA,GAAA,GAAA,GAAA,EAAAA,GAAA,GAAA,GAAA,EACAA,GAAA,GAAA,GAAA,GAAA,CACA,CA0DA,SAAAT,EAAA12D,GACA,IAAA9F,EAAAd,KAAA49D,UAAA59D,KAAA29D,SACAz9D,EAtBA,SAAAH,EAAA6G,EAAA9F,GACA,GAAA,MAAA,IAAA8F,EAAA,IAEA,OADA7G,EAAA49D,SAAA,EACA,IAEA,GAAA59D,EAAA49D,SAAA,GAAA/2D,EAAA7F,OAAA,EAAA,CACA,GAAA,MAAA,IAAA6F,EAAA,IAEA,OADA7G,EAAA49D,SAAA,EACA,IAEA,GAAA59D,EAAA49D,SAAA,GAAA/2D,EAAA7F,OAAA,GACA,MAAA,IAAA6F,EAAA,IAEA,OADA7G,EAAA49D,SAAA,EACA,GAGA,CACA,CAKAK,CAAAh+D,KAAA4G,GACA,YAAAzH,IAAAe,EAAAA,EACAF,KAAA29D,UAAA/2D,EAAA7F,QACA6F,EAAAwB,KAAApI,KAAA69D,SAAA/8D,EAAA,EAAAd,KAAA29D,UACA39D,KAAA69D,SAAA36D,SAAAlD,KAAAkH,SAAA,EAAAlH,KAAA49D,aAEAh3D,EAAAwB,KAAApI,KAAA69D,SAAA/8D,EAAA,EAAA8F,EAAA7F,aACAf,KAAA29D,UAAA/2D,EAAA7F,QACA,CA0BA,SAAAo8D,EAAAv2D,EAAArG,GACA,IAAAqG,EAAA7F,OAAAR,GAAA,GAAA,EAAA,CACA,IAAAL,EAAA0G,EAAA1D,SAAA,UAAA3C,GACA,GAAAL,EAAA,CACA,IAAAM,EAAAN,EAAAgF,WAAAhF,EAAAa,OAAA,GACA,GAAAP,GAAA,OAAAA,GAAA,MAKA,OAJAR,KAAA29D,SAAA,EACA39D,KAAA49D,UAAA,EACA59D,KAAA69D,SAAA,GAAAj3D,EAAAA,EAAA7F,OAAA,GACAf,KAAA69D,SAAA,GAAAj3D,EAAAA,EAAA7F,OAAA,GACAb,EAAAoH,MAAA,GAAA,EAEA,CACA,OAAApH,CACA,CAIA,OAHAF,KAAA29D,SAAA,EACA39D,KAAA49D,UAAA,EACA59D,KAAA69D,SAAA,GAAAj3D,EAAAA,EAAA7F,OAAA,GACA6F,EAAA1D,SAAA,UAAA3C,EAAAqG,EAAA7F,OAAA,EACA,CAIA,SAAAq8D,EAAAx2D,GACA,IAAA1G,EAAA0G,GAAAA,EAAA7F,OAAAf,KAAAqH,MAAAT,GAAA,GACA,GAAA5G,KAAA29D,SAAA,CACA,IAAA53D,EAAA/F,KAAA49D,UAAA59D,KAAA29D,SACA,OAAAz9D,EAAAF,KAAA69D,SAAA36D,SAAA,UAAA,EAAA6C,EACA,CACA,OAAA7F,CACA,CAEA,SAAAq9D,EAAA32D,EAAArG,GACA,IAAAH,GAAAwG,EAAA7F,OAAAR,GAAA,EACA,OAAA,IAAAH,EAAAwG,EAAA1D,SAAA,SAAA3C,IACAP,KAAA29D,SAAA,EAAAv9D,EACAJ,KAAA49D,UAAA,EACA,IAAAx9D,EACAJ,KAAA69D,SAAA,GAAAj3D,EAAAA,EAAA7F,OAAA,IAEAf,KAAA69D,SAAA,GAAAj3D,EAAAA,EAAA7F,OAAA,GACAf,KAAA69D,SAAA,GAAAj3D,EAAAA,EAAA7F,OAAA,IAEA6F,EAAA1D,SAAA,SAAA3C,EAAAqG,EAAA7F,OAAAX,GACA,CAEA,SAAAo9D,EAAA52D,GACA,IAAA1G,EAAA0G,GAAAA,EAAA7F,OAAAf,KAAAqH,MAAAT,GAAA,GACA,OAAA5G,KAAA29D,SAAAz9D,EAAAF,KAAA69D,SAAA36D,SAAA,SAAA,EAAA,EAAAlD,KAAA29D,UACAz9D,CACA,CAGA,SAAAu9D,EAAA72D,GACA,OAAAA,EAAA1D,SAAAlD,KAAAkH,SACA,CAEA,SAAAw2D,EAAA92D,GACA,OAAAA,GAAAA,EAAA7F,OAAAf,KAAAqH,MAAAT,GAAA,EACA,CA1NAnH,EAAAguD,cAAAA,EA6BAA,EAAAxqD,UAAAoE,MAAA,SAAAT,GACA,GAAA,IAAAA,EAAA7F,OAAA,MAAA,GACA,IAAAb,EACAK,EACA,GAAAP,KAAA29D,SAAA,CAEA,QAAAx+D,KADAe,EAAAF,KAAAq9D,SAAAz2D,IACA,MAAA,GACArG,EAAAP,KAAA29D,SACA39D,KAAA29D,SAAA,CACA,MACAp9D,EAAA,EAEA,OAAAA,EAAAqG,EAAA7F,OAAAb,EAAAA,EAAAF,KAAAk9D,KAAAt2D,EAAArG,GAAAP,KAAAk9D,KAAAt2D,EAAArG,GACAL,GAAA,EACA,EAEAutD,EAAAxqD,UAAA8C,IAwGA,SAAAa,GACA,IAAA1G,EAAA0G,GAAAA,EAAA7F,OAAAf,KAAAqH,MAAAT,GAAA,GACA,OAAA5G,KAAA29D,SAAAz9D,EAAA,IACAA,CACA,EAzGAutD,EAAAxqD,UAAAi6D,KA0FA,SAAAt2D,EAAArG,GACA,IAAA09D,EArEA,SAAAl+D,EAAA6G,EAAArG,GACA,IAAA8J,EAAAzD,EAAA7F,OAAA,EACA,GAAAsJ,EAAA9J,EAAA,OAAA,EACA,IAAA06D,EAAA6C,EAAAl3D,EAAAyD,IACA,GAAA4wD,GAAA,EAEA,OADAA,EAAA,IAAAl7D,EAAA49D,SAAA1C,EAAA,GACAA,EAEA,KAAA5wD,EAAA9J,IAAA,IAAA06D,EAAA,OAAA,EAEA,GADAA,EAAA6C,EAAAl3D,EAAAyD,IACA4wD,GAAA,EAEA,OADAA,EAAA,IAAAl7D,EAAA49D,SAAA1C,EAAA,GACAA,EAEA,KAAA5wD,EAAA9J,IAAA,IAAA06D,EAAA,OAAA,EAEA,GADAA,EAAA6C,EAAAl3D,EAAAyD,IACA4wD,GAAA,EAIA,OAHAA,EAAA,IACA,IAAAA,EAAAA,EAAA,EAAAl7D,EAAA49D,SAAA1C,EAAA,GAEAA,EAEA,OAAA,CACA,CA8CAiD,CAAAl+D,KAAA4G,EAAArG,GACA,IAAAP,KAAA29D,SAAA,OAAA/2D,EAAA1D,SAAA,OAAA3C,GACAP,KAAA49D,UAAAK,EACA,IAAAl4D,EAAAa,EAAA7F,QAAAk9D,EAAAj+D,KAAA29D,UAEA,OADA/2D,EAAAwB,KAAApI,KAAA69D,SAAA,EAAA93D,GACAa,EAAA1D,SAAA,OAAA3C,EAAAwF,EACA,EA9FA0nD,EAAAxqD,UAAAo6D,SAAA,SAAAz2D,GACA,GAAA5G,KAAA29D,UAAA/2D,EAAA7F,OAEA,OADA6F,EAAAwB,KAAApI,KAAA69D,SAAA79D,KAAA49D,UAAA59D,KAAA29D,SAAA,EAAA39D,KAAA29D,UACA39D,KAAA69D,SAAA36D,SAAAlD,KAAAkH,SAAA,EAAAlH,KAAA49D,WAEAh3D,EAAAwB,KAAApI,KAAA69D,SAAA79D,KAAA49D,UAAA59D,KAAA29D,SAAA,EAAA/2D,EAAA7F,QACAf,KAAA29D,UAAA/2D,EAAA7F,MACA,CxGq8hBA,EAAE,CAAC,cAAc,KAAK,IAAI,CAAC,SAASN,EAAQf,EAAOD,IACnD,SAAW8C,EAAa47D,IAAgB,WyG7kiBxC,IAAA7f,EAAA79C,EAAA,sBAAA69C,SACA58C,EAAAsW,SAAA/U,UAAAvB,MACA4F,EAAAvE,MAAAE,UAAAqE,MACA82D,EAAA,CAAA,EACAC,EAAA,EAaA,SAAAC,EAAAC,EAAAC,GACAx+D,KAAAy+D,IAAAF,EACAv+D,KAAA0+D,SAAAF,CACA,CAZA/+D,EAAAwE,WAAA,WACA,OAAA,IAAAq6D,EAAA58D,EAAArC,KAAA4E,WAAApE,OAAA8B,WAAA+7C,aACA,EACAj+C,EAAAk/D,YAAA,WACA,OAAA,IAAAL,EAAA58D,EAAArC,KAAAs/D,YAAA9+D,OAAA8B,WAAAi9D,cACA,EACAn/D,EAAAi+C,aACAj+C,EAAAm/D,cAAA,SAAA3gB,GAAAA,EAAAiM,OAAA,EAMAoU,EAAAr7D,UAAA47D,MAAAP,EAAAr7D,UAAA67D,IAAA,WAAA,EACAR,EAAAr7D,UAAAinD,MAAA,WACAlqD,KAAA0+D,SAAAr/D,KAAAQ,OAAAG,KAAAy+D,IACA,EAGAh/D,EAAAs/D,OAAA,SAAAC,EAAAC,GACAvhB,aAAAshB,EAAAE,gBACAF,EAAAG,aAAAF,CACA,EAEAx/D,EAAA2/D,SAAA,SAAAJ,GACAthB,aAAAshB,EAAAE,gBACAF,EAAAG,cAAA,CACA,EAEA1/D,EAAA4/D,aAAA5/D,EAAA6/D,OAAA,SAAAN,GACAthB,aAAAshB,EAAAE,gBAEA,IAAAD,EAAAD,EAAAG,aACAF,GAAA,IACAD,EAAAE,eAAAj7D,YAAA,WACA+6D,EAAAO,YACAP,EAAAO,YACA,GAAAN,GAEA,EAGAx/D,EAAA8C,aAAA,mBAAAA,EAAAA,EAAA,SAAAd,GACA,IAAA88D,EAAAF,IACA57D,IAAAd,UAAAZ,OAAA,IAAAuG,EAAAjI,KAAAsC,UAAA,GAkBA,OAhBAy8D,EAAAG,IAAA,EAEAjgB,GAAA,WACA8f,EAAAG,KAGA97D,EACAhB,EAAAC,MAAA,KAAAe,GAEAhB,EAAApC,KAAA,MAGAI,EAAA0+D,eAAAI,GAEA,IAEAA,CACA,EAEA9+D,EAAA0+D,eAAA,mBAAAA,EAAAA,EAAA,SAAAI,UACAH,EAAAG,EACA,CzG+kiBC,GAAEl/D,KAAKW,KAAM,GAAEX,KAAKW,KAAKS,EAAQ,UAAU8B,aAAa9B,EAAQ,UAAU09D,eAE3E,EAAE,CAAC,qBAAqB,GAAGj6D,OAAS,MAAM,IAAI,CAAC,SAASzD,EAAQf,EAAOD,G0GroiBvE,IAAAy/C,EAAAz+C,EAAA,YACA0yD,EAAA1yD,EAAA,UASA,SAAA++D,IACAx/D,KAAAiiC,SAAA,KACAjiC,KAAAy/D,QAAA,KACAz/D,KAAAqjD,KAAA,KACArjD,KAAA4jD,KAAA,KACA5jD,KAAAojD,KAAA,KACApjD,KAAAmjD,SAAA,KACAnjD,KAAA0/D,KAAA,KACA1/D,KAAAskD,OAAA,KACAtkD,KAAA2/D,MAAA,KACA3/D,KAAA4/D,SAAA,KACA5/D,KAAAgX,KAAA,KACAhX,KAAA6/D,KAAA,IACA,CApBApgE,EAAAuW,MAAA8pD,EACArgE,EAAAgZ,QA0ZA,SAAAyhD,EAAAtlB,GACA,OAAAkrB,EAAA5F,GAAA,GAAA,GAAAzhD,QAAAm8B,EACA,EA3ZAn1C,EAAAsgE,cAiaA,SAAA7F,EAAAtlB,GACA,OAAAslB,EACA4F,EAAA5F,GAAA,GAAA,GAAA6F,cAAAnrB,GADAA,CAEA,EAnaAn1C,EAAAu2C,OAsVA,SAAA93C,GAKAi1D,EAAA6M,SAAA9hE,KAAAA,EAAA4hE,EAAA5hE,IACA,OAAAA,aAAAshE,EACAthE,EAAA83C,SADAwpB,EAAAv8D,UAAA+yC,OAAA32C,KAAAnB,EAEA,EA5VAuB,EAAA+/D,IAAAA,EAqBA,IAAAS,EAAA,oBACAC,EAAA,WAGAC,EAAA,qCAOAC,EAAA,CAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA/7D,OAHA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,OAMAg8D,EAAA,CAAA,KAAAh8D,OAAA+7D,GAKAE,EAAA,CAAA,IAAA,IAAA,IAAA,IAAA,KAAAj8D,OAAAg8D,GACAE,EAAA,CAAA,IAAA,IAAA,KAEAC,EAAA,yBACAC,EAAA,+BAEAC,EAAA,CACAC,YAAA,EACA,eAAA,GAGAC,EAAA,CACAD,YAAA,EACA,eAAA,GAGAE,EAAA,CACAh/B,MAAA,EACAC,OAAA,EACAg/B,KAAA,EACAC,QAAA,EACAC,MAAA,EACA,SAAA,EACA,UAAA,EACA,QAAA,EACA,WAAA,EACA,SAAA,GAEAle,EAAAriD,EAAA,eAEA,SAAAq/D,EAAA9iC,EAAAikC,EAAAC,GACA,GAAAlkC,GAAAm2B,EAAAgO,SAAAnkC,IAAAA,aAAAwiC,EAAA,OAAAxiC,EAEA,IAAAt8B,EAAA,IAAA8+D,EAEA,OADA9+D,EAAAsV,MAAAgnB,EAAAikC,EAAAC,GACAxgE,CACA,CAEA8+D,EAAAv8D,UAAA+S,MAAA,SAAAgnB,EAAAikC,EAAAC,GACA,IAAA/N,EAAA6M,SAAAhjC,GACA,MAAA,IAAA19B,UAAA,gDAAA09B,GAMA,IAAAokC,EAAApkC,EAAAn3B,QAAA,KACAw7D,GACA,IAAAD,GAAAA,EAAApkC,EAAAn3B,QAAA,KAAA,IAAA,IACAy7D,EAAAtkC,EAAA9qB,MAAAmvD,GAEAC,EAAA,GAAAA,EAAA,GAAAzzD,QADA,MACA,KAGA,IAAA/J,EAFAk5B,EAAAskC,EAAA37D,KAAA07D,GAQA,GAFAv9D,EAAAA,EAAAgK,QAEAozD,GAAA,IAAAlkC,EAAA9qB,MAAA,KAAAnR,OAAA,CAEA,IAAAwgE,EAAApB,EAAAqB,KAAA19D,GACA,GAAAy9D,EAeA,OAdAvhE,KAAAgX,KAAAlT,EACA9D,KAAA6/D,KAAA/7D,EACA9D,KAAA4/D,SAAA2B,EAAA,GACAA,EAAA,IACAvhE,KAAAskD,OAAAid,EAAA,GAEAvhE,KAAA2/D,MADAsB,EACAne,EAAA9sC,MAAAhW,KAAAskD,OAAA15C,OAAA,IAEA5K,KAAAskD,OAAA15C,OAAA,IAEAq2D,IACAjhE,KAAAskD,OAAA,GACAtkD,KAAA2/D,MAAA,CAAA,GAEA3/D,IAEA,CAEA,IAAA6zC,EAAAosB,EAAAuB,KAAA19D,GACA,GAAA+vC,EAAA,CAEA,IAAA4tB,GADA5tB,EAAAA,EAAA,IACA9qC,cACA/I,KAAAiiC,SAAAw/B,EACA39D,EAAAA,EAAA8G,OAAAipC,EAAA9yC,OACA,CAMA,GAAAmgE,GAAArtB,GAAA/vC,EAAAysB,MAAA,wBAAA,CACA,IAAAkvC,EAAA,OAAA37D,EAAA8G,OAAA,EAAA,IACA60D,GAAA5rB,GAAA+sB,EAAA/sB,KACA/vC,EAAAA,EAAA8G,OAAA,GACA5K,KAAAy/D,SAAA,EAEA,CAEA,IAAAmB,EAAA/sB,KACA4rB,GAAA5rB,IAAAgtB,EAAAhtB,IAAA,CAmBA,IADA,IASAwP,EAAAqe,EATAC,GAAA,EACAphE,EAAA,EAAAA,EAAAggE,EAAAx/D,OAAAR,IAAA,EAEA,KADAqhE,EAAA99D,EAAA+B,QAAA06D,EAAAhgE,QACA,IAAAohE,GAAAC,EAAAD,KACAA,EAAAC,EACA,EAgBA,KATAF,GAFA,IAAAC,EAEA79D,EAAA+F,YAAA,KAIA/F,EAAA+F,YAAA,IAAA83D,MAMAte,EAAAv/C,EAAAwD,MAAA,EAAAo6D,GACA59D,EAAAA,EAAAwD,MAAAo6D,EAAA,GACA1hE,KAAAqjD,KAAA5rC,mBAAA4rC,IAIAse,GAAA,EACA,IAAAphE,EAAA,EAAAA,EAAA+/D,EAAAv/D,OAAAR,IAAA,CACA,IAAAqhE,GACA,KADAA,EAAA99D,EAAA+B,QAAAy6D,EAAA//D,QACA,IAAAohE,GAAAC,EAAAD,KACAA,EAAAC,EACA,EAEA,IAAAD,IACAA,EAAA79D,EAAA/C,QAEAf,KAAA4jD,KAAA9/C,EAAAwD,MAAA,EAAAq6D,GACA79D,EAAAA,EAAAwD,MAAAq6D,GAGA3hE,KAAA6hE,YAIA7hE,KAAAmjD,SAAAnjD,KAAAmjD,UAAA,GAIA,IAAA2e,EAAA,MAAA9hE,KAAAmjD,SAAA,IACA,MAAAnjD,KAAAmjD,SAAAnjD,KAAAmjD,SAAApiD,OAAA,GAGA,IAAA+gE,EAEA,IADA,IAAAC,EAAA/hE,KAAAmjD,SAAAjxC,MAAA,MACAyxB,GAAApjC,EAAA,EAAAwhE,EAAAhhE,QAAAR,EAAAojC,EAAApjC,IAAA,CACA,IAAA8nC,EAAA05B,EAAAxhE,GACA,GAAA8nC,IACAA,EAAA9X,MAAAiwC,GAAA,CAEA,IADA,IAAAwB,EAAA,GACA33D,EAAA,EAAA7G,EAAA6kC,EAAAtnC,OAAAsJ,EAAA7G,EAAA6G,IACAg+B,EAAAnjC,WAAAmF,GAAA,IAIA23D,GAAA,IAEAA,GAAA35B,EAAAh+B,GAIA,IAAA23D,EAAAzxC,MAAAiwC,GAAA,CACA,IAAAyB,EAAAF,EAAAz6D,MAAA,EAAA/G,GACA2hE,EAAAH,EAAAz6D,MAAA/G,EAAA,GACA4hE,EAAA95B,EAAA9X,MAAAkwC,GACA0B,IACAF,EAAAr/D,KAAAu/D,EAAA,IACAD,EAAAhoD,QAAAioD,EAAA,KAEAD,EAAAnhE,SACA+C,EAAA,IAAAo+D,EAAAv8D,KAAA,KAAA7B,GAEA9D,KAAAmjD,SAAA8e,EAAAt8D,KAAA,KACA,KACA,CACA,CACA,CAGA3F,KAAAmjD,SAAApiD,OAjNA,IAkNAf,KAAAmjD,SAAA,GAGAnjD,KAAAmjD,SAAAnjD,KAAAmjD,SAAAp6C,cAGA+4D,IAKA9hE,KAAAmjD,SAAAjE,EAAAwC,QAAA1hD,KAAAmjD,WAGA,IAAAriD,EAAAd,KAAAojD,KAAA,IAAApjD,KAAAojD,KAAA,GACAgf,EAAApiE,KAAAmjD,UAAA,GACAnjD,KAAA4jD,KAAAwe,EAAAthE,EACAd,KAAA6/D,MAAA7/D,KAAA4jD,KAIAke,IACA9hE,KAAAmjD,SAAAnjD,KAAAmjD,SAAAv4C,OAAA,EAAA5K,KAAAmjD,SAAApiD,OAAA,GACA,MAAA+C,EAAA,KACAA,EAAA,IAAAA,GAGA,CAIA,IAAA48D,EAAAe,GAKA,IAAAlhE,EAAA,EAAAojC,EAAA08B,EAAAt/D,OAAAR,EAAAojC,EAAApjC,IAAA,CACA,IAAA8hE,EAAAhC,EAAA9/D,GACA,IAAA,IAAAuD,EAAA+B,QAAAw8D,GAAA,CAEA,IAAAC,EAAA5qD,mBAAA2qD,GACAC,IAAAD,IACAC,EAAAC,OAAAF,IAEAv+D,EAAAA,EAAAoO,MAAAmwD,GAAA18D,KAAA28D,EALA,CAMA,CAKA,IAAA5C,EAAA57D,EAAA+B,QAAA,MACA,IAAA65D,IAEA1/D,KAAA0/D,KAAA57D,EAAA8G,OAAA80D,GACA57D,EAAAA,EAAAwD,MAAA,EAAAo4D,IAEA,IAAA8C,EAAA1+D,EAAA+B,QAAA,KAoBA,IAnBA,IAAA28D,GACAxiE,KAAAskD,OAAAxgD,EAAA8G,OAAA43D,GACAxiE,KAAA2/D,MAAA77D,EAAA8G,OAAA43D,EAAA,GACAvB,IACAjhE,KAAA2/D,MAAA7c,EAAA9sC,MAAAhW,KAAA2/D,QAEA77D,EAAAA,EAAAwD,MAAA,EAAAk7D,IACAvB,IAEAjhE,KAAAskD,OAAA,GACAtkD,KAAA2/D,MAAA,CAAA,GAEA77D,IAAA9D,KAAA4/D,SAAA97D,GACA+8D,EAAAY,IACAzhE,KAAAmjD,WAAAnjD,KAAA4/D,WACA5/D,KAAA4/D,SAAA,KAIA5/D,KAAA4/D,UAAA5/D,KAAAskD,OAAA,CACAxjD,EAAAd,KAAA4/D,UAAA,GAAA,IACAj9B,EAAA3iC,KAAAskD,QAAA,GACAtkD,KAAAgX,KAAAlW,EAAA6hC,CACA,CAIA,OADA3iC,KAAA6/D,KAAA7/D,KAAAg2C,SACAh2C,IACA,EAaAw/D,EAAAv8D,UAAA+yC,OAAA,WACA,IAAAqN,EAAArjD,KAAAqjD,MAAA,GACAA,IAEAA,GADAA,EAAA3rC,mBAAA2rC,IACAx1C,QAAA,OAAA,KACAw1C,GAAA,KAGA,IAAAphB,EAAAjiC,KAAAiiC,UAAA,GACA29B,EAAA5/D,KAAA4/D,UAAA,GACAF,EAAA1/D,KAAA0/D,MAAA,GACA9b,GAAA,EACA+b,EAAA,GAEA3/D,KAAA4jD,KACAA,EAAAP,EAAArjD,KAAA4jD,KACA5jD,KAAAmjD,WACAS,EAAAP,IAAA,IAAArjD,KAAAmjD,SAAAt9C,QAAA,KACA7F,KAAAmjD,SACA,IAAAnjD,KAAAmjD,SAAA,KACAnjD,KAAAojD,OACAQ,GAAA,IAAA5jD,KAAAojD,OAIApjD,KAAA2/D,OACAxM,EAAAgO,SAAAnhE,KAAA2/D,QACArhE,OAAAiF,KAAAvD,KAAA2/D,OAAA5+D,SACA4+D,EAAA7c,EAAAvjC,UAAAvf,KAAA2/D,QAGA,IAAArb,EAAAtkD,KAAAskD,QAAAqb,GAAA,IAAAA,GAAA,GAsBA,OApBA19B,GAAA,MAAAA,EAAAr3B,QAAA,KAAAq3B,GAAA,KAIAjiC,KAAAy/D,WACAx9B,GAAA4+B,EAAA5+B,MAAA,IAAA2hB,GACAA,EAAA,MAAAA,GAAA,IACAgc,GAAA,MAAAA,EAAA92C,OAAA,KAAA82C,EAAA,IAAAA,IACAhc,IACAA,EAAA,IAGA8b,GAAA,MAAAA,EAAA52C,OAAA,KAAA42C,EAAA,IAAAA,GACApb,GAAA,MAAAA,EAAAx7B,OAAA,KAAAw7B,EAAA,IAAAA,GAOAriB,EAAA2hB,GALAgc,EAAAA,EAAA/xD,QAAA,SAAA,SAAA0iB,GACA,OAAA7Y,mBAAA6Y,EACA,MACA+zB,EAAAA,EAAAz2C,QAAA,IAAA,QAEA6xD,CACA,EAMAF,EAAAv8D,UAAAwV,QAAA,SAAAm8B,GACA,OAAA50C,KAAA+/D,cAAAD,EAAAlrB,GAAA,GAAA,IAAAoB,QACA,EAOAwpB,EAAAv8D,UAAA88D,cAAA,SAAAnrB,GACA,GAAAue,EAAA6M,SAAAprB,GAAA,CACA,IAAA6tB,EAAA,IAAAjD,EACAiD,EAAAzsD,MAAA4+B,GAAA,GAAA,GACAA,EAAA6tB,CACA,CAIA,IAFA,IAAAt6B,EAAA,IAAAq3B,EACAkD,EAAApkE,OAAAiF,KAAAvD,MACA2iE,EAAA,EAAAA,EAAAD,EAAA3hE,OAAA4hE,IAAA,CACA,IAAAC,EAAAF,EAAAC,GACAx6B,EAAAy6B,GAAA5iE,KAAA4iE,EACA,CAOA,GAHAz6B,EAAAu3B,KAAA9qB,EAAA8qB,KAGA,KAAA9qB,EAAAirB,KAEA,OADA13B,EAAA03B,KAAA13B,EAAA6N,SACA7N,EAIA,GAAAyM,EAAA6qB,UAAA7qB,EAAA3S,SAAA,CAGA,IADA,IAAA4gC,EAAAvkE,OAAAiF,KAAAqxC,GACAkuB,EAAA,EAAAA,EAAAD,EAAA9hE,OAAA+hE,IAAA,CACA,IAAAC,EAAAF,EAAAC,GACA,aAAAC,IACA56B,EAAA46B,GAAAnuB,EAAAmuB,GACA,CASA,OANAlC,EAAA14B,EAAAlG,WACAkG,EAAAgb,WAAAhb,EAAAy3B,WACAz3B,EAAAnxB,KAAAmxB,EAAAy3B,SAAA,KAGAz3B,EAAA03B,KAAA13B,EAAA6N,SACA7N,CACA,CAEA,GAAAyM,EAAA3S,UAAA2S,EAAA3S,WAAAkG,EAAAlG,SAAA,CASA,IAAA4+B,EAAAjsB,EAAA3S,UAAA,CAEA,IADA,IAAA1+B,EAAAjF,OAAAiF,KAAAqxC,GACAuN,EAAA,EAAAA,EAAA5+C,EAAAxC,OAAAohD,IAAA,CACA,IAAA3+C,EAAAD,EAAA4+C,GACAha,EAAA3kC,GAAAoxC,EAAApxC,EACA,CAEA,OADA2kC,EAAA03B,KAAA13B,EAAA6N,SACA7N,CACA,CAGA,GADAA,EAAAlG,SAAA2S,EAAA3S,SACA2S,EAAAgP,MAAAgd,EAAAhsB,EAAA3S,UASAkG,EAAAy3B,SAAAhrB,EAAAgrB,aATA,CAEA,IADA,IAAAoD,GAAApuB,EAAAgrB,UAAA,IAAA1tD,MAAA,KACA8wD,EAAAjiE,UAAA6zC,EAAAgP,KAAAof,EAAA5mD,WACAw4B,EAAAgP,OAAAhP,EAAAgP,KAAA,IACAhP,EAAAuO,WAAAvO,EAAAuO,SAAA,IACA,KAAA6f,EAAA,IAAAA,EAAA9oD,QAAA,IACA8oD,EAAAjiE,OAAA,GAAAiiE,EAAA9oD,QAAA,IACAiuB,EAAAy3B,SAAAoD,EAAAr9D,KAAA,IACA,CAUA,GAPAwiC,EAAAmc,OAAA1P,EAAA0P,OACAnc,EAAAw3B,MAAA/qB,EAAA+qB,MACAx3B,EAAAyb,KAAAhP,EAAAgP,MAAA,GACAzb,EAAAkb,KAAAzO,EAAAyO,KACAlb,EAAAgb,SAAAvO,EAAAuO,UAAAvO,EAAAgP,KACAzb,EAAAib,KAAAxO,EAAAwO,KAEAjb,EAAAy3B,UAAAz3B,EAAAmc,OAAA,CACA,IAAAxjD,EAAAqnC,EAAAy3B,UAAA,GACAj9B,EAAAwF,EAAAmc,QAAA,GACAnc,EAAAnxB,KAAAlW,EAAA6hC,CACA,CAGA,OAFAwF,EAAAs3B,QAAAt3B,EAAAs3B,SAAA7qB,EAAA6qB,QACAt3B,EAAA03B,KAAA13B,EAAA6N,SACA7N,CACA,CAEA,IAAA86B,EAAA96B,EAAAy3B,UAAA,MAAAz3B,EAAAy3B,SAAA92C,OAAA,GACAo6C,EACAtuB,EAAAgP,MACAhP,EAAAgrB,UAAA,MAAAhrB,EAAAgrB,SAAA92C,OAAA,GAEAq6C,EAAAD,GAAAD,GACA96B,EAAAyb,MAAAhP,EAAAgrB,SACAwD,EAAAD,EACAE,EAAAl7B,EAAAy3B,UAAAz3B,EAAAy3B,SAAA1tD,MAAA,MAAA,GAEAoxD,GADAN,EAAApuB,EAAAgrB,UAAAhrB,EAAAgrB,SAAA1tD,MAAA,MAAA,GACAi2B,EAAAlG,WAAA4+B,EAAA14B,EAAAlG,WA2BA,GApBAqhC,IACAn7B,EAAAgb,SAAA,GACAhb,EAAAib,KAAA,KACAjb,EAAAyb,OACA,KAAAyf,EAAA,GAAAA,EAAA,GAAAl7B,EAAAyb,KACAyf,EAAAnpD,QAAAiuB,EAAAyb,OAEAzb,EAAAyb,KAAA,GACAhP,EAAA3S,WACA2S,EAAAuO,SAAA,KACAvO,EAAAwO,KAAA,KACAxO,EAAAgP,OACA,KAAAof,EAAA,GAAAA,EAAA,GAAApuB,EAAAgP,KACAof,EAAA9oD,QAAA06B,EAAAgP,OAEAhP,EAAAgP,KAAA,MAEAuf,EAAAA,IAAA,KAAAH,EAAA,IAAA,KAAAK,EAAA,KAGAH,EAEA/6B,EAAAyb,KAAAhP,EAAAgP,MAAA,KAAAhP,EAAAgP,KACAhP,EAAAgP,KAAAzb,EAAAyb,KACAzb,EAAAgb,SAAAvO,EAAAuO,UAAA,KAAAvO,EAAAuO,SACAvO,EAAAuO,SAAAhb,EAAAgb,SACAhb,EAAAmc,OAAA1P,EAAA0P,OACAnc,EAAAw3B,MAAA/qB,EAAA+qB,MACA0D,EAAAL,OAEA,GAAAA,EAAAjiE,OAGAsiE,IAAAA,EAAA,IACAA,EAAA1gE,MACA0gE,EAAAA,EAAAh/D,OAAA2+D,GACA76B,EAAAmc,OAAA1P,EAAA0P,OACAnc,EAAAw3B,MAAA/qB,EAAA+qB,WACA,IAAAxM,EAAAoQ,kBAAA3uB,EAAA0P,QAAA,CAIA,GAAAgf,EACAn7B,EAAAgb,SAAAhb,EAAAyb,KAAAyf,EAAAjnD,SAIAonD,KAAAr7B,EAAAyb,MAAAzb,EAAAyb,KAAA/9C,QAAA,KAAA,IACAsiC,EAAAyb,KAAA1xC,MAAA,QAEAi2B,EAAAkb,KAAAmgB,EAAApnD,QACA+rB,EAAAyb,KAAAzb,EAAAgb,SAAAqgB,EAAApnD,SAWA,OARA+rB,EAAAmc,OAAA1P,EAAA0P,OACAnc,EAAAw3B,MAAA/qB,EAAA+qB,MAEAxM,EAAAsQ,OAAAt7B,EAAAy3B,WAAAzM,EAAAsQ,OAAAt7B,EAAAmc,UACAnc,EAAAnxB,MAAAmxB,EAAAy3B,SAAAz3B,EAAAy3B,SAAA,KACAz3B,EAAAmc,OAAAnc,EAAAmc,OAAA,KAEAnc,EAAA03B,KAAA13B,EAAA6N,SACA7N,CACA,CAEA,IAAAk7B,EAAAtiE,OAWA,OARAonC,EAAAy3B,SAAA,KAEAz3B,EAAAmc,OACAnc,EAAAnxB,KAAA,IAAAmxB,EAAAmc,OAEAnc,EAAAnxB,KAAA,KAEAmxB,EAAA03B,KAAA13B,EAAA6N,SACA7N,EAcA,IARA,IAAA4vB,EAAAsL,EAAA/7D,OAAA,GAAA,GACAo8D,GACAv7B,EAAAyb,MAAAhP,EAAAgP,MAAAyf,EAAAtiE,OAAA,KACA,MAAAg3D,GAAA,OAAAA,IAAA,KAAAA,EAIA4L,EAAA,EACApjE,EAAA8iE,EAAAtiE,OAAAR,GAAA,EAAAA,IAEA,OADAw3D,EAAAsL,EAAA9iE,IAEA8iE,EAAAxiC,OAAAtgC,EAAA,GACA,OAAAw3D,GACAsL,EAAAxiC,OAAAtgC,EAAA,GACAojE,KACAA,IACAN,EAAAxiC,OAAAtgC,EAAA,GACAojE,KAKA,IAAAR,IAAAC,EACA,KAAAO,IAAAA,EACAN,EAAAnpD,QAAA,OAIAipD,GAAA,KAAAE,EAAA,IACAA,EAAA,IAAA,MAAAA,EAAA,GAAAv6C,OAAA,IACAu6C,EAAAnpD,QAAA,IAGAwpD,GAAA,MAAAL,EAAA19D,KAAA,KAAAiF,QAAA,IACAy4D,EAAAzgE,KAAA,IAGA,IAUA4gE,EAVA/uB,EAAA,KAAA4uB,EAAA,IACAA,EAAA,IAAA,MAAAA,EAAA,GAAAv6C,OAAA,GAGAw6C,IACAn7B,EAAAgb,SAAAhb,EAAAyb,KAAAnP,EAAA,GACA4uB,EAAAtiE,OAAAsiE,EAAAjnD,QAAA,IAIAonD,KAAAr7B,EAAAyb,MAAAzb,EAAAyb,KAAA/9C,QAAA,KAAA,IACAsiC,EAAAyb,KAAA1xC,MAAA,QAEAi2B,EAAAkb,KAAAmgB,EAAApnD,QACA+rB,EAAAyb,KAAAzb,EAAAgb,SAAAqgB,EAAApnD,UAyBA,OArBA+mD,EAAAA,GAAAh7B,EAAAyb,MAAAyf,EAAAtiE,UAEA0zC,GACA4uB,EAAAnpD,QAAA,IAGAmpD,EAAAtiE,OAIAonC,EAAAy3B,SAAAyD,EAAA19D,KAAA,MAHAwiC,EAAAy3B,SAAA,KACAz3B,EAAAnxB,KAAA,MAMAm8C,EAAAsQ,OAAAt7B,EAAAy3B,WAAAzM,EAAAsQ,OAAAt7B,EAAAmc,UACAnc,EAAAnxB,MAAAmxB,EAAAy3B,SAAAz3B,EAAAy3B,SAAA,KACAz3B,EAAAmc,OAAAnc,EAAAmc,OAAA,KAEAnc,EAAAkb,KAAAzO,EAAAyO,MAAAlb,EAAAkb,KACAlb,EAAAs3B,QAAAt3B,EAAAs3B,SAAA7qB,EAAA6qB,QACAt3B,EAAA03B,KAAA13B,EAAA6N,SACA7N,CACA,EAEAq3B,EAAAv8D,UAAA4+D,UAAA,WACA,IAAAje,EAAA5jD,KAAA4jD,KACAR,EAAA8c,EAAAsB,KAAA5d,GACAR,IAEA,OADAA,EAAAA,EAAA,MAEApjD,KAAAojD,KAAAA,EAAAx4C,OAAA,IAEAg5C,EAAAA,EAAAh5C,OAAA,EAAAg5C,EAAA7iD,OAAAqiD,EAAAriD,SAEA6iD,IAAA5jD,KAAAmjD,SAAAS,EACA,C1G+piBA,EAAE,CAAC,SAAS,IAAI1E,SAAW,GAAG4D,YAAc,KAAK,IAAI,CAAC,SAASriD,EAAQf,EAAOD,G2Gx3jB9EC,EAAAD,QAAA,CACAugE,SAAA,SAAArhE,GACA,MAAA,iBAAAA,CACA,EACAwiE,SAAA,SAAAxiE,GACA,MAAA,iBAAAA,GAAA,OAAAA,CACA,EACA8kE,OAAA,SAAA9kE,GACA,OAAA,OAAAA,CACA,EACA4kE,kBAAA,SAAA5kE,GACA,OAAA,MAAAA,CACA,E3G83jBA,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS8B,EAAQf,EAAOD,IACnC,SAAWK,IAAQ,W4Gr1jBnB,SAAA8jE,EAAArxD,GAEA,IACA,IAAAzS,EAAA+jE,aAAA,OAAA,CACA,CAAA,MAAArM,GACA,OAAA,CACA,CACA,IAAA9tD,EAAA5J,EAAA+jE,aAAAtxD,GACA,OAAA,MAAA7I,GACA,SAAA7K,OAAA6K,GAAAX,aACA,CA7DArJ,EAAAD,QAoBA,SAAAgC,EAAA0qD,GACA,GAAAyX,EAAA,iBACA,OAAAniE,EAGA,IAAA0Y,GAAA,EAeA,OAdA,WACA,IAAAA,EAAA,CACA,GAAAypD,EAAA,oBACA,MAAA,IAAAhjE,MAAAurD,GACAyX,EAAA,oBACAl3D,QAAA4Q,MAAA6uC,GAEAz/C,QAAA4N,KAAA6xC,GAEAhyC,GAAA,CACA,CACA,OAAA1Y,EAAAC,MAAA1B,KAAA2B,UACA,CAGA,C5Go6jBC,GAAEtC,KAAKW,KAAM,GAAEX,KAAKW,KAAuB,oBAAXF,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAElJ,EAAE,CAAC,GAAG,IAAI,CAAC,SAASY,EAAQf,EAAOD,G6G/8jBnCC,EAAAD,QACA,SAAAg0C,EAAAhyC,EAAAJ,GACA,GAAAI,GAAAJ,EAAA,OAAAoyC,EAAAhyC,EAAAgyC,CAAApyC,GAEA,GAAA,mBAAAI,EACA,MAAA,IAAAnC,UAAA,yBAMA,OAJAhB,OAAAiF,KAAA9B,GAAAqlB,SAAA,SAAAtjB,GACAsgE,EAAAtgE,GAAA/B,EAAA+B,EACA,IAEAsgE,EAEA,SAAAA,IAEA,IADA,IAAArhE,EAAA,IAAAM,MAAApB,UAAAZ,QACAR,EAAA,EAAAA,EAAAkC,EAAA1B,OAAAR,IACAkC,EAAAlC,GAAAoB,UAAApB,GAEA,IAAAiO,EAAA/M,EAAAC,MAAA1B,KAAAyC,GACApB,EAAAoB,EAAAA,EAAA1B,OAAA,GAMA,MALA,mBAAAyN,GAAAA,IAAAnN,GACA/C,OAAAiF,KAAAlC,GAAAylB,SAAA,SAAAtjB,GACAgL,EAAAhL,GAAAnC,EAAAmC,EACA,IAEAgL,CACA,CACA,C7Gu9jBA,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS/N,EAAQf,EAAOD,G8Gv/jBnCC,EAAAD,QAIA,WAGA,IAFA,IAAAsO,EAAA,CAAA,EAEAxN,EAAA,EAAAA,EAAAoB,UAAAZ,OAAAR,IAAA,CACA,IAAA25D,EAAAv4D,UAAApB,GAEA,IAAA,IAAApC,KAAA+7D,EACAz2D,EAAApE,KAAA66D,EAAA/7D,KACA4P,EAAA5P,GAAA+7D,EAAA/7D,GAGA,CAEA,OAAA4P,CACA,EAhBA,IAAAtK,EAAAnF,OAAA2E,UAAAQ,c9G0gkBA,EAAE,CAAC,GAAG,IAAI,CAAC,SAAShD,EAAQf,EAAOD,G+G5gkBnC,MAAAspB,EAAAtoB,EAAA,SAAA2pB,oBAEA25C,EAGA,YA2DArkE,EAAAD,QAvDA,cAAAspB,EAEAzW,YAAAI,EAAAuR,EAAArR,GAEAC,MAAAH,EAAAuR,EAAArR,QAGA,IAAA5S,KAAAiW,QAAA+tD,oBAEAhkE,KAAAiW,QAAA+tD,kBAAAD,GAGA/jE,KAAAikE,aAAA,CAAA,CACA,CAIAzoB,OAAAjoC,EAAA2pC,EAAAgnB,EAAAC,GAEA,IAAAC,OAAA,IAAAF,EAAAA,EAAA,IACAG,EAAA,iBAAAF,EAAAA,EAAA,UACAnkE,KAAAikE,aAAA1wD,GAAA,CAAAG,KAAAH,EAAA+wD,QAAApnB,EAAAqnB,SAAAF,EAAAG,SAAAJ,EACA,CAEAK,UAAAlxD,UAEAvT,KAAAikE,aAAA1wD,EACA,CAEAmxD,cAEA,IAAAC,EAAA,GACAC,EAAAtmE,OAAAiF,KAAAvD,KAAAikE,cAEAW,EAAA7sB,MAAA,CAAAp3C,EAAAsH,IAAAjI,KAAAikE,aAAAtjE,GAAA6jE,SAAAxkE,KAAAikE,aAAAh8D,GAAAu8D,WACA,IAAA,IAAAjkE,EAAA,EAAAA,EAAAqkE,EAAA7jE,OAAAR,IACA,CACA,IAAAskE,EAAA7kE,KAAAikE,aAAAW,EAAArkE,IACAukE,EAAAD,EAAAnxD,KACAmxD,EAAAnxD,MAAAmxD,EAAAN,WAEAO,EAAA,GAAAzgE,OAAAygE,EAAA,UAAAzgE,OAAAwgE,EAAAN,WAEAI,GAAA,MAAAtgE,OAAAygE,EAAA,SAAAzgE,OAAAwgE,EAAAP,QAAA,KACA,CACA,OAAAK,CACA,CAGAI,YAEA/kE,KAAAykB,SAAAm4B,kBAAAI,cAAAh9C,KAAAiW,QAAA+tD,kBAAAhkE,KAAA0kE,cACA,E/GihkBA,EAAE,CAACxgD,MAAQ,KAAK,IAAI,CAAC,SAASzjB,EAAQf,EAAOD,GgH9kkB7C,MAAAspB,EAAAtoB,EAAA,SAAA2pB,oBAmSA1qB,EAAAD,QAjSA,cAAAspB,EAEAzW,YAAAI,EAAAuR,EAAArR,GAEAC,MAAAH,EAAAuR,EAAArR,GAEA5S,KAAA8S,YAAA,wBAGA9S,KAAAglE,WAAA,EACAhlE,KAAAilE,aAAA,EACA,iBAAAplE,SAEAG,KAAAglE,WAAA,OAEA,IAAAnlE,OAAAqlE,UAAA,mBAAArlE,OAAAqlE,SAAAC,mBAEAnlE,KAAAilE,aAAA,IAKAjlE,KAAAolE,WAAA,EACAplE,KAAAqlE,QAAA,EACArlE,KAAAglE,gBAAA,IAAAnlE,OAAAwlE,SAEArlE,KAAAolE,WAAA,GAIAplE,KAAAslE,sBAAA,EAEAtlE,KAAAulE,uBAAA,EAEAvlE,KAAAwlE,sBAAA,EAGAxlE,KAAAylE,oBAAA,EAEAzlE,KAAA0lE,0BAAA,CAGA,CAEA3oB,WAAAtS,GAEA,GAAAzqC,KAAA0lE,yBAEA,OAAA1lE,KAAA0lE,yBAAAj7B,GAEA,GAAAzqC,KAAAolE,UACA,CACA,IAAAO,EAAA9lE,OAAAwlE,OAAA56B,GACA,GAAA,GAAAk7B,EAAA5kE,OAEA,MAAA,GAGA,CAEA,IAAA6kE,EAAA,GACA,IAAA,IAAArlE,EAAA,EAAAA,EAAAolE,EAAA5kE,OAAAR,IAEAqlE,EAAAhjE,KAAA+iE,EAAA,IAEA,OAAAC,CACA,CACA,CACA,OAAA5lE,KAAAglE,WAAAhlE,KAAAilE,YAEAplE,OAAAqlE,SAAAC,iBAAA16B,IAKAzqC,KAAAqf,IAAA/B,MAAA,iCAAAjZ,OAAAomC,EAAA,0EACA,GAEA,CAEAuS,cAAAvS,EAAAyS,GAEA,GAAAl9C,KAAAslE,qBAEA,OAAAtlE,KAAAslE,qBAAA76B,EAAAyS,GAEA,GAAAl9C,KAAAolE,UACA,CAEAvlE,OAAAwlE,OAAA56B,GAMAo7B,KAAA3oB,EAEA,MACA,GAAAl9C,KAAAglE,WAAAhlE,KAAAilE,YACA,CACA,IAAAa,EAAAjmE,OAAAqlE,SAAAC,iBAAA16B,GAEA,IAAA,IAAAlqC,EAAA,EAAAA,EAAAulE,EAAA/kE,OAAAR,IAEA,OAAAulE,EAAAvlE,GAAAwlE,SAEA,IAAA,QACA,IAAA,SACA,IAAA,WACAD,EAAAvlE,GAAAnC,MAAA8+C,EACA,MACA,IAAA,SACA,IAAA,IACA4oB,EAAAvlE,GAAA28D,KAAAhgB,EACA,MACA,QACA4oB,EAAAvlE,GAAAylE,UAAA9oB,EAIA,MAIAl9C,KAAAqf,IAAA/B,MAAA,2BAAAjZ,OAAAomC,EAAA,MAAAyS,EAEA,CAEAL,cAAApS,EAAAyS,GAEA,GAAAl9C,KAAAwlE,qBAEA,OAAAxlE,KAAAwlE,qBAAA/6B,EAAAyS,GAEA,GAAAl9C,KAAAolE,UACA,CACAvlE,OAAAwlE,OAAA56B,GACAl1B,OAAA2nC,EACA,MACA,GAAAl9C,KAAAglE,WAAAhlE,KAAAilE,YACA,CACA,IAAAa,EAAAjmE,OAAAqlE,SAAAC,iBAAA16B,GACA,IAAA,IAAAlqC,EAAA,EAAAA,EAAAulE,EAAA/kE,OAAAR,IAEAulE,EAAAvlE,GAAA0lE,mBAAA,YAAA/oB,EAEA,MAIAl9C,KAAAqf,IAAA/B,MAAA,2BAAAjZ,OAAAomC,EAAA,MAAAyS,EAEA,CAEAJ,eAAArS,EAAAyS,GAEA,GAAAl9C,KAAAwlE,qBAEA,OAAAxlE,KAAAulE,sBAAA96B,EAAAyS,GAEA,GAAAl9C,KAAAolE,UACA,CACAvlE,OAAAwlE,OAAA56B,GACAj1B,QAAA0nC,EACA,MACA,GAAAl9C,KAAAglE,WAAAhlE,KAAAilE,YACA,CACA,IAAAa,EAAAjmE,OAAAqlE,SAAAC,iBAAA16B,GACA,IAAA,IAAAlqC,EAAA,EAAAA,EAAAulE,EAAA/kE,OAAAR,IAEAulE,EAAAvlE,GAAA0lE,mBAAA,aAAA/oB,EAEA,MAIAl9C,KAAAqf,IAAA/B,MAAA,4BAAAjZ,OAAAomC,EAAA,MAAAyS,EAEA,CAEAgpB,YAAAz7B,GAEA,GAAAzqC,KAAAylE,mBAEA,OAAAzlE,KAAAylE,mBAAAh7B,GAEA,GAAAzqC,KAAAolE,UACA,CAEA,OADAvlE,OAAAwlE,OAAA56B,GACAo7B,MACA,CACA,IAAA7lE,KAAAglE,YAAAhlE,KAAAilE,YA2BA,OADAjlE,KAAAqf,IAAA/B,MAAA,2BAAAjZ,OAAAomC,EAAA,SACA,GA1BA,CACA,IAAAq7B,EAAAjmE,OAAAqlE,SAAAC,iBAAA16B,GACA,GAAAq7B,EAAA/kE,OAAA,EAEA,OAAA,KAEA,GAAA,GAAA+kE,EAAA/kE,OAEA,MAAA,SAAA+kE,EAAA,GAAAC,SAAA,YAAAD,EAAA,GAAAC,QAEAD,EAAA,GAAA1nE,MAEA,UAAA0nE,EAAA,GAAAC,QAEAD,EAAA,GAAA5I,KAIA4I,EAAA,GAAAE,SAGA,CAOA,CAGAG,SAAA17B,EAAA27B,GAEA,GAAApmE,KAAAqmE,uBAEA,OAAArmE,KAAAqmE,uBAAA57B,EAAA27B,GAEA,GAAApmE,KAAAolE,UACA,CAEAvlE,OAAAwlE,OAAA56B,GACA07B,SAAAC,EACA,MACA,GAAApmE,KAAAglE,WAAAhlE,KAAAilE,YACA,CACA,IAAAa,EAAAjmE,OAAAqlE,SAAAC,iBAAA16B,GAEA,IAAA,IAAAlqC,EAAA,EAAAA,EAAAulE,EAAA/kE,OAAAR,IAEAulE,EAAAvlE,GAAA+lE,UAAA7hC,IAAA2hC,EAEA,MAGApmE,KAAAqf,IAAA/B,MAAA,6BAAAjZ,OAAAomC,EAAA,MAAA27B,EAEA,CAEAG,YAAA97B,EAAA27B,GAEA,GAAApmE,KAAAwmE,0BAEA,OAAAxmE,KAAAwmE,0BAAA/7B,EAAA27B,GAEA,GAAApmE,KAAAolE,UACA,CAEAvlE,OAAAwlE,OAAA56B,GACA87B,YAAAH,EACA,MACA,GAAApmE,KAAAglE,WAAAhlE,KAAAilE,YACA,CACA,IAAAa,EAAAjmE,OAAAqlE,SAAAC,iBAAA16B,GAEA,IAAA,IAAAlqC,EAAA,EAAAA,EAAAulE,EAAA/kE,OAAAR,IAEAulE,EAAAvlE,GAAA+lE,UAAAvyD,OAAAqyD,EAEA,MAGApmE,KAAAqf,IAAA/B,MAAA,kCAAAjZ,OAAAomC,EAAA,MAAA27B,EAEA,CAEAK,YAAAh8B,EAAA27B,GAEA,CAGAM,SAAAj8B,EAAA27B,GAEA,EhHqlkBA,EAAE,CAACliD,MAAQ,KAAK,IAAI,CAAC,SAASzjB,EAAQf,EAAOD,GiHn3kB7C,MAAAspB,EAAAtoB,EAAA,SAAA2pB,oBAmBA1qB,EAAAD,QAjBA,cAAAspB,EAEAzW,YAAAI,EAAAuR,EAAArR,GAEAC,MAAAH,EAAAuR,EAAArR,GAEA5S,KAAA8S,YAAA,kBACA,CAEA2pC,iBAAAhS,EAAAn3B,GAEA,IAAA8pB,OAAA,IAAA9pB,EAAA,CAAA,EAAAA,EAEA,OAAAtT,KAAAkkB,MAAAyiD,SAAAp0B,eAAA,CAAAwE,QAAA/2C,KAAA+2C,QAAA6vB,OAAA5mE,KAAA4mE,OAAAC,OAAAzpC,GAAAqN,EACA,EjHw3kBA,EAAE,CAACvmB,MAAQ,KAAK,IAAI,CAAC,SAASzjB,EAAQf,EAAOD,GkHx4kB7C,MAAAspB,EAAAtoB,EAAA,SAAA2pB,oBAoJA1qB,EAAAD,QAlJA,cAAAspB,EAEAzW,YAAAI,EAAAuR,EAAArR,GAEAC,MAAAH,EAAAuR,EAAArR,GAAA3U,iBAAA+B,KAAA,gBA6EA,SAAA8mE,EAAAC,EAAA76C,GAEAlsB,KAAAgnE,gBAAAF,GAIA9mE,KAAAinE,MAAAH,GAAApyD,OACA,KAEA,IAAAwyD,EACA,CACAlqC,IAAA,GAAA34B,OAAArE,KAAAiW,QAAAkxD,WAAA9iE,OAAAyiE,EAAA,uBAAAziE,OAAA0iE,IAIA,OAFAG,EAAAlnE,KAAAq8B,sBAAA6qC,GAEAlnE,KAAAonE,WAAAvpC,QAAAqpC,GACA,CAAArxD,EAAAonB,EAAAoqC,KAEA,GAAAxxD,EAGA,OADA7V,KAAAqf,IAAA1S,MAAA,uCAAAtI,OAAAyiE,EAAA,mBAAAziE,OAAA0iE,EAAA,mBAAA1iE,OAAA6iE,EAAAlqC,IAAA,OAAA34B,OAAAwR,IACAqW,EAAArW,GAEA,IAAAyxD,EAAA,EACAD,EAAAE,QAEAD,EAAAD,EAAAE,OAGA,IAAAC,EAAA,GACAC,EAAAznE,KAAAiW,QAAAyxD,kBACA,IAAA,IAAAnnE,EAAA,EAAAA,EAAA+mE,EAAAG,EAAAlnE,IAGAinE,EAAA5kE,KAAA,GAAAyB,OAAArE,KAAAiW,QAAAkxD,WAAA9iE,OAAAyiE,EAAA,iBAAAziE,OAAA0iE,EAAA,KAAA1iE,OAAA9D,EAAAknE,EAAA,KAAApjE,OAAAojE,IAGA,IAAAE,EAAA,GAEA3nE,KAAAkkB,MAAAiN,QAAAmH,UAAAkvC,EAAA,GACA,CAAAI,EAAAC,KAEA,IAAAvxC,EACA,CACA0G,IAAA,GAAA34B,OAAArE,KAAAiW,QAAAkxD,WAAA9iE,OAAAujE,IAEAtxC,EAAAt2B,KAAAq8B,sBAAA/F,GAEAt2B,KAAAonE,WAAAvpC,QAAA+pC,GACA,CAAAE,EAAAC,EAAAC,KAEAL,EAAAA,EAAAtjE,OAAA2jE,GAEAH,EAAAC,KACA,IAEAG,GAEA/7C,EAAA+7C,EAAAN,IACA,GACA,GAEA,IAzIA3nE,KAAA8S,YAAA,qBAEA9S,KAAAkkB,MAAAoC,SAAA4hD,qBAEAloE,KAAAiW,QAAAkxD,UAAAnnE,KAAAkkB,MAAAoC,SAAA4hD,qBAEAloE,KAAAiW,QAAAkxD,YAEAnnE,KAAAiW,QAAAkxD,UAAA,SAGAnnE,KAAAkkB,MAAAoC,SAAA6hD,6BAEAnoE,KAAAiW,QAAAyxD,kBAAA1nE,KAAAkkB,MAAAoC,SAAA6hD,6BAEAnoE,KAAAiW,QAAAyxD,oBAEA1nE,KAAAiW,QAAAyxD,kBAAA,KAGA1nE,KAAAonE,WAAApnE,KAAAkkB,MAAA4G,eAAAf,8CAAA,cAEA/pB,KAAAinE,MAAA,CAAA,EAEAjnE,KAAAq8B,sBAAApY,GAAAA,CACA,CAEA+iD,gBAAAF,GAGA9mE,KAAAinE,MAAAxjE,eAAAqjE,KAEA9mE,KAAAinE,MAAAH,GAAA9mE,KAAAkkB,MAAA4G,eAAAf,8CAAA,eAGA/pB,KAAAinE,MAAAH,GAAA3zD,OAAA,IACAnT,KAAAinE,MAAAH,GAAA5zD,UAAA,IAEAlT,KAAAkkB,MAAA0iD,OAAAE,GAAA9mE,KAAAinE,MAAAH,GAAA1zD,UAEA,CAEAg1D,UAAAtB,EAAAuB,EAAAn8C,GAEAlsB,KAAAgnE,gBAAAF,GAEA9mE,KAAAinE,MAAAH,GAAApyD,OACA,KAEA,IAAA4zD,EAAAtoE,KAAAinE,MAAAH,GAAA78D,KAAAo+D,GAEA,GAAAC,EAEA,OAAAA,EAGA,IAAAhyC,EACA,CACA0G,IAAA,GAAA34B,OAAArE,KAAAiW,QAAAkxD,WAAA9iE,OAAAyiE,EAAA,KAAAziE,OAAAgkE,IAIA,OAFA/xC,EAAAt2B,KAAAq8B,sBAAA/F,GAEAt2B,KAAAonE,WAAAvpC,QAAAvH,GACA,CAAAzgB,EAAAonB,EAAAoqC,KAEAA,GAEArnE,KAAAinE,MAAAH,GAAAzzD,IAAAg0D,EAAAgB,GAEAn8C,EAAArW,EAAAwxD,KACA,GAGA,ElH68kBA,EAAE,CAACnjD,MAAQ,KAAK,IAAI,CAAC,SAASzjB,EAAQf,EAAOD,GmH9hlB7C,MAAAspB,EAAAtoB,EAAA,SAAA2pB,oBAmHA1qB,EAAAD,QAjHA,cAAAspB,EAEAzW,YAAAI,EAAAuR,EAAArR,GAEAC,MAAAH,EAAAuR,EAAArR,GAEA5S,KAAA8S,YAAA,uBAEA9S,KAAA4/B,UAAA,CAAA,EACA5/B,KAAAuoE,gBAAA,CAAA,EAKAvoE,KAAAwoE,iBAAA,GAGAxoE,KAAAyoE,qBAAAroC,IAAA,CACA,CAEA2a,YAAA3a,EAAAsoC,EAAAC,GAEA3oE,KAAA4/B,UAAAQ,GAAAsoC,EAIA1oE,KAAAuoE,gBAAAnoC,GAFA,iBAAAuoC,EAEAA,EAIA,uBAAAtkE,OAAA+7B,EAAA,gDAAA/7B,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,IAEA,CAEAwnC,mBAAA0tB,EAAAC,EAAAH,EAAAI,GAEA,IACA7tB,EAAA,CACAjS,OAAA4/B,EACAG,QAAAF,EACA3oC,SAAAwoC,EACAxO,OALA,iBAAA4O,EAAAA,EAAA,8BAAAzkE,OAAAukE,EAAA,OAAAvkE,OAAAwkE,EAAA,mDAAAxkE,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,MAOA,iBAAAg1D,GAEA1oE,KAAAqf,IAAA1S,MAAA,uEAEA3M,KAAAwoE,iBAAA5lE,KAAAq4C,EACA,CAEA+tB,yBAAA5oC,GAYA,IAAA,IAAA7/B,EAAA,EAAAA,EAAAP,KAAAwoE,iBAAAznE,OAAAR,IAEA,GAAA6/B,EAAAv6B,QAAA7F,KAAAwoE,iBAAAjoE,GAAAwoE,UAAA3oC,EAAAr/B,OAAAf,KAAAwoE,iBAAAjoE,GAAAwoE,QAAAhoE,QACA,GAAAq/B,EAAAv6B,QAAA7F,KAAAwoE,iBAAAjoE,GAAAyoC,QAIA,OAFAhpC,KAAA4/B,UAAAQ,GAAApgC,KAAAwoE,iBAAAjoE,GAAA2/B,SACAlgC,KAAAuoE,gBAAAnoC,GAAA,6CAAA/7B,OAAA+7B,EAAA,yCAAA/7B,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,YAAArP,OAAArE,KAAAwoE,iBAAAjoE,GAAAyoC,OAAA,SAAA3kC,OAAArE,KAAAwoE,iBAAAjoE,GAAAwoE,QAAA,KACA/oE,KAAA4/B,UAAAQ,GAGA,OAAA,CACA,CAEA6oC,YAAA7oC,GAaA,OATApgC,KAAA4/B,UAAAn8B,eAAA28B,IAEApgC,KAAAkpE,aAAA9oC,GAGApgC,KAAA4/B,UAAAn8B,eAAA28B,IAEApgC,KAAAgpE,yBAAA5oC,KAEApgC,KAAA4/B,UAAAn8B,eAAA28B,IAEApgC,KAAA4/B,UAAAQ,EAMA,CAEA8oC,aAAA9oC,GAEA,IAAAC,EAAArgC,KAAAyoE,qBAAAroC,GASA,OAPAC,IAEArgC,KAAA4/B,UAAAQ,GAAAC,EAAAH,SACAlgC,KAAAuoE,gBAAAnoC,GAAA,2BAAA/7B,OAAA+7B,EAAA,yCAAA/7B,OAAArE,KAAAmkB,KAAA,QAAA9f,OAAArE,KAAA0T,KAAA,YAAArP,OAAAg8B,EAAA65B,OAAA,MAIA75B,CACA,EnHmilBA,EAAE,CAACnc,MAAQ,KAAK,IAAI,CAAC,SAASzjB,EAAQf,EAAOD,GoHhplB7C,MAAA0pE,EAAA1oE,EAAA,SA6mBAf,EAAAD,QA3mBA,cAAA0pE,EAEA72D,YAAA8O,GAEAvO,MAAAuO,GAEAphB,KAAAopE,UAAA,IAAApxD,SAAA,+DAGAhY,KAAA8qB,eAAAtB,6BAAA,mBAAA/oB,EAAA,gCACAT,KAAA8qB,eAAAtB,6BAAA,iBAAA/oB,EAAA,oCACAT,KAAA8qB,eAAAtB,6BAAA,eAAA/oB,EAAA,2BACAT,KAAA8qB,eAAAtB,6BAAA,oBAAA/oB,EAAA,iCACAT,KAAA8qB,eAAAtB,6BAAA,SAAA/oB,EAAA,kBAEAT,KAAA8qB,eAAArB,2BAAA,gBACAzpB,KAAA8qB,eAAArB,2BAAA,kBAEAzpB,KAAA2mE,SAAA3mE,KAAA8qB,eAAArB,2BAAA,YAEAzpB,KAAA+2C,QAAA,CAAA,EACA/2C,KAAA4mE,OAAA,CAAA,EAGA5mE,KAAAq3C,aAAA,EAGAr3C,KAAAsmB,SAAAswB,WAEA52C,KAAAqpE,gBAAArpE,KAAAsmB,SAAAswB,WAGA52C,KAAAspE,kCAAA,EACAtpE,KAAAupE,+BAEAvpE,KAAA8qB,eAAA1B,eAAA,WAAA3oB,EAAA,cACAT,KAAA8qB,eAAA1B,eAAA,kBAAA3oB,EAAA,qBAGAT,KAAA23C,MAAA33C,KAAA8qB,eAAAtG,YAAAk1B,QACA,CAGA2vB,gBAAAG,GAEA,GAAA,iBAAAA,EAGA,OADAxpE,KAAAqf,IAAA/E,KAAA,SAAAjW,OAAArE,KAAAmkB,KAAA,oEACA,EAEA,IAAA+yB,EAAA54C,OAAAiF,KAAAimE,GACA,GAAAtyB,EAAAn2C,OAAA,EAEA,IAAA,IAAAR,EAAA,EAAAA,EAAA22C,EAAAn2C,OAAAR,IACA,CAEA,IAAA42C,EAAAD,EAAA32C,GACAP,KAAA8qB,eAAArB,2BAAA,WAAA+/C,EAAAryB,GAAAA,EACA,CAEA,CAKAsyB,QAAAC,EAAAzlD,EAAA0lD,GAEA,IAAArzC,EAAA,iBAAArS,EAAAA,EAAA,CAAA,EACA2lD,EAAA,iBAAAF,EAAAA,EAAA1pE,KAAAkkB,MAAAK,UAEA,YAAA,IAAAolD,GAGAA,EAAAlmE,eAAA,2BAEA6yB,EAAAt2B,KAAAkkB,MAAAiN,QAAA2O,OAAA,CAAA,EAAA6pC,EAAAE,sBAAAvzC,IAEAt2B,KAAA8qB,eAAApB,wCAAA,WAAA4M,EAAAszC,EAAAD,IAIA3pE,KAAA8qB,eAAArB,2BAAA,WAAA6M,EAAAszC,EAEA,CAKAE,eAAAC,EAAA9lD,EAAA+lD,GAEA,IAAA1zC,EAAA,iBAAArS,EAAAA,EAAA,CAAA,EACAgmD,EAAA,iBAAAF,EAAAA,EAAA/pE,KAAAkkB,MAAAK,UAEA,YAAA,IAAAylD,GAGAA,EAAAvmE,eAAA,2BAEA6yB,EAAAt2B,KAAAkkB,MAAAiN,QAAA2O,OAAA,CAAA,EAAAkqC,EAAAH,sBAAAvzC,IAGAt2B,KAAA8qB,eAAApB,wCAAA,kBAAA4M,EAAA2zC,EAAAD,IAIAhqE,KAAA8qB,eAAArB,2BAAA,kBAAA6M,EAAA2zC,EAEA,CAEAV,+BAQA,IAAAvpE,KAAAspE,iCACA,CAQA,IAAAY,EAAAA,CAAA32D,EAAAD,EAAA4Y,KAEA,IAAA5W,EAAA/B,EAAAzF,OACAsvB,EAAA,iBAAA9pB,EAAAA,EAAA,CAAA,EAEAtT,KAAAq3C,aAAA,EAEAr3C,KAAAqf,IAAA/B,MAAA,mCAAAjZ,OAAAiR,EAAA,mBAAA8nB,GAEAp9B,KAAAq3C,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,mCAAAjZ,OAAAiR,EAAA,MAGA,IAAA60D,GAAA,EACAC,GAAA,EACAC,GAAA,EAKA,GAFA/0D,EAAAzP,QAAA,KAEA,EACA,CAEA,IAAAykE,EAAAh1D,EAAAzP,QAAA,KACAskE,EAAA70D,EAAA+P,UAAA,EAAAilD,GACAF,EAAA90D,EAAA+P,UAAAilD,EAAA,EACA,KAEA,CAEA,IAAAA,EAAAh1D,EAAAzP,QAAA,KACAskE,EAAA70D,EAAA+P,UAAA,EAAAilD,GAEA,IAAAC,EAAAj1D,EAAAzP,QAAA,KACAukE,EAAA90D,EAAA+P,UAAAilD,EAAA,EAAAC,GAEAF,EAAA/0D,EAAA+P,UAAAklD,EAAA,EACA,CAaA,GAJAH,EAPAvzD,MAAAuzD,GAOApqE,KAAA2mE,SAAAp0B,eAAA,CAAAwE,QAAA/2C,KAAA+2C,QAAA6vB,OAAA5mE,KAAA4mE,OAAAC,OAAAzpC,GAAAgtC,GALAz/D,SAAAy/D,IASAD,IAAAC,EAGA,OADApqE,KAAAqf,IAAA/E,KAAA,8DAAAjW,OAAAiR,EAAA,MACA4W,EAAAtrB,MAAA,8DAAAyD,OAAAiR,EAAA,MAAA,IAIAtV,KAAAwqE,eAAApC,UAAA+B,EAAAC,GACA,CAAAv0D,EAAAu1B,IAEAv1B,GAEA7V,KAAAqf,IAAA1S,MAAA,8CAAAtI,OAAA8lE,EAAA,eAAA9lE,OAAA+lE,EAAA,WAAA/lE,OAAAiR,EAAA,OAAAjR,OAAAwR,GAAAA,GACAqW,EAAArW,EAAA,KAMAqW,EAAA,KAFAm+C,EAEArqE,KAAA28C,oBAAA0tB,EAAAj/B,GAIA,KAEA,EAEAprC,KAAAyqE,aAAA9xC,gBAAA,OAAA,KAAAuxC,GACAlqE,KAAAyqE,aAAA9xC,gBAAA,YAAA,KAAAuxC,GAGA,IAAAQ,EAAAA,CAAAn3D,EAAAD,KAEA,IAAAgC,EAAA/B,EAAAzF,OACAsvB,EAAA,iBAAA9pB,EAAAA,EAAA,CAAA,EAEAtT,KAAAq3C,aAAA,EAEAr3C,KAAAqf,IAAA/B,MAAA,qCAAAjZ,OAAAiR,EAAA,mBAAA8nB,GAEAp9B,KAAAq3C,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,qCAAAjZ,OAAAiR,EAAA,MAIA,IAAAq1D,EAAAr1D,EAAApD,MAAA,KAGA,OAAAlS,KAAA2mE,SAAAp0B,eAAA,CAAAwE,QAAA/2C,KAAA+2C,QAAA6vB,OAAA5mE,KAAA4mE,OAAAC,OAAAzpC,GAAAutC,EAAA,IAEAA,EAAA,GAIA,EACA,EAEA3qE,KAAAyqE,aAAAzlD,WAAA,cAAA,KAAA0lD,GACA1qE,KAAAyqE,aAAAzlD,WAAA,QAAA,KAAA0lD,GAGA,IAAAE,EAAAA,CAAAr3D,EAAAD,KAEA,IAAAgC,EAAA/B,EAAAzF,OACAsvB,EAAA,iBAAA9pB,EAAAA,EAAA,CAAA,EAEAtT,KAAAq3C,aAAA,EAEAr3C,KAAAqf,IAAA/B,MAAA,qCAAAjZ,OAAAiR,EAAA,mBAAA8nB,GAEAp9B,KAAAq3C,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,qCAAAjZ,OAAAiR,EAAA,MAGA,IAAAu1D,GAAA,EACAC,GAAA,EAGAP,EAAAj1D,EAAAzP,QAAA,KAYA,OAXAglE,EAAAv1D,EAAA+P,UAAA,EAAAklD,GACAA,GAAA,EAEAO,EAAAx1D,EAAA+P,UAAAklD,EAAA,GAIAM,EAAAv1D,EAIAu1D,EAMAC,EAOA9qE,KAAA28C,oBAAAkuB,EAAA7qE,KAAA2mE,SAAAp0B,eAAA,CAAAwE,QAAA/2C,KAAA+2C,QAAA6vB,OAAA5mE,KAAA4mE,OAAAC,OAAAzpC,GAAA0tC,IAJA9qE,KAAA28C,oBAAAkuB,EAAAv3D,IAPAtT,KAAAqf,IAAA/E,KAAA,yDAAAjW,OAAAiR,EAAA,MACA,yDAAAjR,OAAAiR,EAAA,KAWA,EAEAtV,KAAAyqE,aAAAzlD,WAAA,OAAA,KAAA4lD,GACA5qE,KAAAyqE,aAAAzlD,WAAA,cAAA,KAAA4lD,GAGA,IAAAG,EAAAA,CAAAx3D,EAAAD,KAEA,IAAAgC,EAAA/B,EAAAzF,OACAsvB,EAAA,iBAAA9pB,EAAAA,EAAA,CAAA,EAEAtT,KAAAq3C,aAAA,EAEAr3C,KAAAqf,IAAA/B,MAAA,wCAAAjZ,OAAAiR,EAAA,mBAAA8nB,GAEAp9B,KAAAq3C,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,wCAAAjZ,OAAAiR,EAAA,MAGA,IAAAu1D,GAAA,EACAC,GAAA,EAGAP,EAAAj1D,EAAAzP,QAAA,KAYA,OAXAglE,EAAAv1D,EAAA+P,UAAA,EAAAklD,GACAA,GAAA,EAEAO,EAAAx1D,EAAA+P,UAAAklD,EAAA,GAIAM,EAAAv1D,EAIAu1D,EAMAC,EAOA9qE,KAAAgrE,uBAAAH,EAAA7qE,KAAA2mE,SAAAp0B,eAAA,CAAAwE,QAAA/2C,KAAA+2C,QAAA6vB,OAAA5mE,KAAA4mE,OAAAC,OAAAzpC,GAAA0tC,IAJA9qE,KAAAgrE,uBAAAH,EAAAv3D,IAPAtT,KAAAqf,IAAA/E,KAAA,yDAAAjW,OAAAiR,EAAA,MACA,yDAAAjR,OAAAiR,EAAA,KAWA,EAEAtV,KAAAyqE,aAAAzlD,WAAA,QAAA,KAAA+lD,GACA/qE,KAAAyqE,aAAAzlD,WAAA,iBAAA,KAAA+lD,GAGA,IAAAE,EAAAA,CAAA13D,EAAAD,KAEA,IAAAgC,EAAA/B,EAAAzF,OACAsvB,EAAA,iBAAA9pB,EAAAA,EAAA,CAAA,EAEAtT,KAAAq3C,aAAA,EAEAr3C,KAAAqf,IAAA/B,MAAA,iCAAAjZ,OAAAiR,EAAA,mBAAA8nB,GAEAp9B,KAAAq3C,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,iCAAAjZ,OAAAiR,EAAA,MAGA,IAAAsS,EAAA5nB,KAAA2mE,SAAAp0B,eAAA,CAAAwE,QAAA/2C,KAAA+2C,QAAA6vB,OAAA5mE,KAAA4mE,OAAAC,OAAAzpC,GAAA9nB,GACA,OAAA,MAAAsS,GAAA,aAAAA,QAAA,IAAAA,EAEA,GAEAA,CAAA,EAEA5nB,KAAAyqE,aAAAzlD,WAAA,OAAA,KAAAimD,GACAjrE,KAAAyqE,aAAAzlD,WAAA,UAAA,KAAAimD,GAEAjrE,KAAAyqE,aAAAzlD,WAAA,aAAA,MACA,CAAAzR,EAAAD,KAEA,IAAAgC,EAAA/B,EAAAzF,OACAsvB,EAAA,iBAAA9pB,EAAAA,EAAA,CAAA,EAEAtT,KAAAq3C,aAAA,EAEAr3C,KAAAqf,IAAA/B,MAAA,8BAAAjZ,OAAAiR,EAAA,mBAAA8nB,GAEAp9B,KAAAq3C,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,8BAAAjZ,OAAAiR,EAAA,MAGA,IAAA41D,EAAAlrE,KAAA2mE,SAAAp0B,eAAA,CAAAwE,QAAA/2C,KAAA+2C,QAAA6vB,OAAA5mE,KAAA4mE,OAAAC,OAAAzpC,GAAA9nB,GACA,OAAAtV,KAAAo1B,WAAApE,iBAAAk6C,EAAA,IAEAlrE,KAAAyqE,aAAAzlD,WAAA,YAAA,MACA,CAAAzR,EAAAD,KAEA,IAAAgC,EAAA/B,EAAAzF,OACAsvB,EAAA,iBAAA9pB,EAAAA,EAAA,CAAA,EAEAtT,KAAAq3C,aAAA,EAEAr3C,KAAAqf,IAAA/B,MAAA,6BAAAjZ,OAAAiR,EAAA,mBAAA8nB,GAEAp9B,KAAAq3C,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,6BAAAjZ,OAAAiR,EAAA,MAGA,IAAA41D,EAAAlrE,KAAA2mE,SAAAp0B,eAAA,CAAAwE,QAAA/2C,KAAA+2C,QAAA6vB,OAAA5mE,KAAA4mE,OAAAC,OAAAzpC,GAAA9nB,GACA,OAAAtV,KAAAo1B,WAAAtE,2BAAA9wB,KAAAo1B,WAAA5D,qBAAA05C,EAAA,GAAA,IAGA,IAAAC,EAAAA,CAAA53D,EAAAD,KAEA,IAAAgC,EAAA/B,EAAAzF,OAEA9N,KAAAq3C,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,yCAAAjZ,OAAAiR,EAAA,MAGA,IAAAua,EAAA,EACAsF,EAAA,KAEA,GAAA7f,EAAAvU,OAAA,EACA,CACA,IAAA4pE,EAAAr1D,EAAApD,MAAA,KACAy4D,EAAA5pE,OAAA,IAEA8uB,EAAAllB,SAAAggE,EAAA,KAEAA,EAAA5pE,OAAA,IAEAo0B,EAAAxqB,SAAAggE,EAAA,IAEA,CAEA,OAAA3qE,KAAAorE,eAAAp2C,oBAAAnF,EAAAsF,EAAA,EAEAn1B,KAAAyqE,aAAAzlD,WAAA,wBAAA,KAAAmmD,GACAnrE,KAAAyqE,aAAAzlD,WAAA,SAAA,KAAAmmD,GAEA,IAAAE,EAAAA,CAAA93D,EAAAD,KAEA,IAAAgC,EAAA/B,EAAAzF,OAEA9N,KAAAq3C,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,mCAAAjZ,OAAAiR,EAAA,MAGA,IAAAg2D,EAAA,EACAn2C,EAAA,QAEA,GAAA7f,EAAAvU,OAAA,EACA,CACA,IAAA4pE,EAAAr1D,EAAApD,MAAA,KACAy4D,EAAA5pE,OAAA,IAEAuqE,EAAA3gE,SAAAggE,EAAA,KAEAA,EAAA5pE,OAAA,IAEAo0B,EAAAxqB,SAAAggE,EAAA,IAEA,CAEA,OAAA3qE,KAAAorE,eAAAz2C,qBAAA22C,EAAAn2C,EAAA,EAEAn1B,KAAAyqE,aAAAzlD,WAAA,kBAAA,KAAAqmD,GACArrE,KAAAyqE,aAAAzlD,WAAA,QAAA,KAAAqmD,GAEA,IAAAE,EAAAA,CAAAh4D,EAAAD,KAEA,IAAAgC,EAAA/B,EAAAzF,OACAsvB,EAAA,iBAAA9pB,EAAAA,EAAA,CAAA,EAEAtT,KAAAq3C,aAAA,EAEAr3C,KAAAqf,IAAA/B,MAAA,2CAAAjZ,OAAAiR,EAAA,mBAAA8nB,GAEAp9B,KAAAq3C,aAAA,GAEAr3C,KAAAqf,IAAA/B,MAAA,2CAAAjZ,OAAAiR,EAAA,MAGA,IAAAsS,EAAA5nB,KAAA2mE,SAAAp0B,eAAA,CAAAwE,QAAA/2C,KAAA+2C,QAAA6vB,OAAA5mE,KAAA4mE,OAAAC,OAAAzpC,GAAA9nB,GACA,OAAA,MAAAsS,GAAA,aAAAA,QAAA,IAAAA,EAEA,GAEA5nB,KAAAo1B,WAAAhF,wBAAApwB,KAAAo1B,WAAArF,mBAAAnI,GAAA,EAEA5nB,KAAAyqE,aAAAzlD,WAAA,0BAAA,KAAAumD,GAEA,IAAAC,EAAAA,CAAAj4D,EAAAD,KAEA,IAAAgC,EAAA/B,EAAAzF,OACAsvB,EAAA,iBAAA9pB,EAAAA,EAAA,CAAA,EAEAsU,EAAA5nB,KAAA2mE,SAAAp0B,eAAA,CAAAwE,QAAA/2C,KAAA+2C,QAAA6vB,OAAA5mE,KAAA4mE,OAAAC,OAAAzpC,GAAA9nB,GACAm2D,SAAA7jD,EAaA,OAZA,MAAAA,GAAA,aAAA6jD,EAEAzrE,KAAAqf,IAAA/B,MAAA,6BAAAjZ,OAAAiR,EAAA,SAAAjR,OAAAonE,EAAA,MAEA,UAAAA,EAEAzrE,KAAAqf,IAAA/B,MAAA,6BAAAjZ,OAAAiR,EAAA,kBAAAsS,GAIA5nB,KAAAqf,IAAA/B,MAAA,6BAAAjZ,OAAAiR,EAAA,WAAAjR,OAAAonE,EAAA,QAAApnE,OAAAujB,EAAA,MAEA,EAAA,EAEA5nB,KAAAyqE,aAAAzlD,WAAA,cAAA,KAAAwmD,GACAxrE,KAAAyqE,aAAAzlD,WAAA,QAAA,KAAAwmD,GAGA,IAAAE,EAAAA,CAAAn4D,EAAAD,KAEA,IAAAgC,EAAA/B,EAAAzF,OAEA,OADA9N,KAAAqf,IAAA/B,MAAA,8BAAAjZ,OAAAiR,IACA,EAAA,EAEAtV,KAAAyqE,aAAAzlD,WAAA,kBAAA,KAAA0mD,GACA1rE,KAAAyqE,aAAAzlD,WAAA,QAAA,KAAA0mD,GAEA,IAAAC,EAAAA,CAAAp4D,EAAAD,KAEA,IAAAgC,EAAA/B,EAAAzF,OACA89D,EAAA,IAAAhrE,MAAA,6BAAAyD,OAAAiR,IAGA,OAFAtV,KAAAqf,IAAA/B,MAAA,6BAAAjZ,OAAAiR,GAAAs2D,EAAAC,OAEA,EAAA,EAEA7rE,KAAAyqE,aAAAzlD,WAAA,eAAA,KAAA2mD,GAEA3rE,KAAAspE,kCAAA,CACA,CACA,CAEAwC,cAAAC,EAAAz4D,EAAA4Y,GAEA,IAAAkR,EAAA,iBAAA9pB,EAAAA,EAAA,CAAA,EACA,OAAAtT,KAAAyqE,aAAA/kD,YAAAqmD,EAAA3uC,EAAAlR,EACA,CAEAywB,oBAAAvc,EAAA9sB,EAAA4Y,GAEA,IAAA8/C,EAAAhsE,KAAA86C,iBAAAmuB,YAAA7oC,GAGA,OAAA4rC,EAIAhsE,KAAA8rE,cAAAE,EAAA14D,EAAA4Y,GAFA,EAGA,CAEA+/C,iBAAAF,EAAAG,EAAAhgD,GAGA,IAAAtE,EAAA,GACA,GAAA,mBAAAsE,EAyBA,CACA,GAAAnpB,MAAAC,QAAAkpE,IAAA,iBAAAA,EACA,CACA,GAAAnpE,MAAAC,QAAAkpE,GAEA,IAAA,IAAA3rE,EAAA,EAAAA,EAAA2rE,EAAAnrE,OAAAR,IAEAqnB,GAAA5nB,KAAA8rE,cAAAC,EAAAG,EAAA3rE,QAIA,CACA,IAAA+T,EAAAhW,OAAAiF,KAAA2oE,GACA,IAAA,IAAA3rE,EAAA,EAAAA,EAAA+T,EAAAvT,OAAAR,IAEAqnB,GAAA5nB,KAAA8rE,cAAAC,EAAAG,EAAA53D,EAAA/T,IAEA,CAEA,OAAAqnB,CACA,CAGA,MAAA,EAEA,CAhDA,IAAA7kB,MAAAC,QAAAkpE,IAAA,iBAAAA,EAmBA,OAAAhgD,EAAAtrB,MAAA,2DAAA,IAjBAZ,KAAAmxB,QAAAmH,UAAA4zC,EAAA,GACA,CAAA9gC,EAAA+gC,IAEAnsE,KAAA8rE,cAAAC,EAAA3gC,GACA,CAAAv1B,EAAAu2D,KAEAxkD,GAAAwkD,EACAD,SAGAt2D,GAEAqW,EAAArW,EAAA+R,IAmCA,CAEAojD,uBAAA5qC,EAAA8rC,EAAAhgD,GAEA,IAAA8/C,EAAAhsE,KAAA86C,iBAAAmuB,YAAA7oC,GAGA,OAAA4rC,EAIAhsE,KAAAisE,iBAAAD,EAAAE,EAAAhgD,GAFA,EAGA,GAKAxsB,EAAAD,QAAA4sE,qBAAA5rE,EAAA,oBACAf,EAAAD,QAAA6sE,cAAA7rE,EAAA,aAEAf,EAAAD,QAAA8sE,eAAA9rE,EAAA,0CAGAf,EAAAD,QAAA2pE,UAAA,IAAApxD,SAAA,8DpHqplBA,EAAE,CAAC,gBAAgB,IAAI,+BAA+B,IAAI,yBAAyB,IAAI,kCAAkC,IAAI,8BAA8B,IAAI,yCAAyC,IAAIkM,MAAQ,GAAG,mBAAmB,GAAG,YAAY,KAAK,IAAI,CAAC,SAASzjB,EAAQf,EAAOD,GqHlpmB3RC,EAAAD,QAnGA,MAEA6S,YAAAk6D,EAAAC,GAEAzsE,KAAA0sE,WAAA,iBAAAD,EAAAA,EAAA,CAAA,EAEAzsE,KAAA82C,KAAA01B,EAGAxsE,KAAA2sE,sBAAA,IACA3sE,KAAA4sE,eAAA,EAEA5sE,KAAA6sE,SAAA,CAAA,EACA7sE,KAAA6sE,SAAAC,WAAA,GACA9sE,KAAA6sE,SAAAE,KAAA,GACA/sE,KAAA6sE,SAAAG,QAAA,GACAhtE,KAAA6sE,SAAAI,OAAA,GACAjtE,KAAA6sE,SAAAK,OAAA,GAEAltE,KAAA82C,KAAA8F,kBAAA8oB,yBAAA1lE,KAAA0lE,yBAAA7qD,KAAA7a,MACAA,KAAA82C,KAAA8F,kBAAA6oB,mBAAAzlE,KAAAylE,mBAAA5qD,KAAA7a,MACAA,KAAA82C,KAAA8F,kBAAA4oB,qBAAAxlE,KAAAwlE,qBAAA3qD,KAAA7a,MACAA,KAAA82C,KAAA8F,kBAAA2oB,sBAAAvlE,KAAAulE,sBAAA1qD,KAAA7a,MACAA,KAAA82C,KAAA8F,kBAAA0oB,qBAAAtlE,KAAAslE,qBAAAzqD,KAAA7a,KACA,CAEAmtE,oBAAA1iC,EAAAyS,GAEA,IAAAR,OAAA,IAAAQ,EAAA,GAAAA,EACA,MACA,CACAkwB,UAAAptE,KAAA82C,KAAAz3B,IAAA0D,eACArP,KAAA+2B,EACA65B,QAAA5nB,EAEA,CAEAgpB,yBAAAj7B,GAIA,OAFAzqC,KAAA4sE,eAAA5sE,KAAA6sE,SAAAC,WAAAlqE,KAAA5C,KAAAmtE,oBAAA1iC,IACAzqC,KAAA82C,KAAAz3B,IAAA3B,KAAA,iCAAArZ,OAAAomC,EAAA,MACA,EACA,CAEAg7B,mBAAAh7B,GAIA,OAFAzqC,KAAA4sE,eAAA5sE,KAAA6sE,SAAAE,KAAAnqE,KAAA5C,KAAAmtE,oBAAA1iC,IACAzqC,KAAA82C,KAAAz3B,IAAA3B,KAAA,oCAAArZ,OAAAomC,EAAA,MACAzqC,KAAA0sE,WAAAjpE,eAAAgnC,GAGAzqC,KAAA0sE,WAAAjiC,IAEAzqC,KAAA82C,KAAAz3B,IAAA/E,KAAA,0BAAAjW,OAAAomC,EAAA,8CACA,GACA,CAEA+6B,qBAAA/6B,EAAAyS,GAWA,OATAl9C,KAAA4sE,eAAA5sE,KAAA6sE,SAAAI,OAAArqE,KAAA5C,KAAAmtE,oBAAA1iC,EAAAyS,IACAA,EAAAn8C,OAAAf,KAAA2sE,sBAEA3sE,KAAA82C,KAAAz3B,IAAA3B,KAAA,oCAAArZ,OAAAomC,EAAA,8BAAApmC,OAAArE,KAAA2sE,sBAAA,gBAAA,CAAArI,QAAApnB,EAAA73B,UAAA,EAAArlB,KAAA2sE,yBAIA3sE,KAAA82C,KAAAz3B,IAAA3B,KAAA,oCAAArZ,OAAAomC,EAAA,KAAA,CAAA65B,QAAApnB,IAEA,EACA,CACAqoB,sBAAA96B,EAAAyS,GAWA,OATAl9C,KAAA4sE,eAAA5sE,KAAA6sE,SAAAG,QAAApqE,KAAA5C,KAAAmtE,oBAAA1iC,EAAAyS,IACAA,EAAAn8C,OAAAf,KAAA2sE,sBAEA3sE,KAAA82C,KAAAz3B,IAAA3B,KAAA,qCAAArZ,OAAAomC,EAAA,8BAAApmC,OAAArE,KAAA2sE,sBAAA,gBAAA,CAAArI,QAAApnB,EAAA73B,UAAA,EAAArlB,KAAA2sE,yBAIA3sE,KAAA82C,KAAAz3B,IAAA3B,KAAA,qCAAArZ,OAAAomC,EAAA,KAAA,CAAA65B,QAAApnB,IAEA,EACA,CAEAooB,qBAAA76B,EAAAyS,GAWA,OATAl9C,KAAA4sE,eAAA5sE,KAAA6sE,SAAAK,OAAAtqE,KAAA5C,KAAAmtE,oBAAA1iC,EAAAyS,IACAA,EAAAn8C,OAAAf,KAAA2sE,sBAEA3sE,KAAA82C,KAAAz3B,IAAA3B,KAAA,oCAAArZ,OAAAomC,EAAA,8BAAApmC,OAAArE,KAAA2sE,sBAAA,gBAAA,CAAArI,QAAApnB,EAAA73B,UAAA,EAAArlB,KAAA2sE,yBAIA3sE,KAAA82C,KAAAz3B,IAAA3B,KAAA,oCAAArZ,OAAAomC,EAAA,KAAA,CAAA65B,QAAApnB,IAEA,EACA,ErHkxmBA,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KC14mBX,CD04mBiB,IACjB","file":"pict.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Pict = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nvar eachOfLimit = require('async.util.eachoflimit');\nvar withoutIndex = require('async.util.withoutindex');\n\nmodule.exports = function eachLimit(arr, limit, iterator, cb) {\n    return eachOfLimit(limit)(arr, withoutIndex(iterator), cb);\n};\n\n},{\"async.util.eachoflimit\":3,\"async.util.withoutindex\":14}],2:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(tasks) {\n    function makeCallback(index) {\n        function fn() {\n            if (tasks.length) {\n                tasks[index].apply(null, arguments);\n            }\n            return fn.next();\n        }\n        fn.next = function() {\n            return (index < tasks.length - 1) ? makeCallback(index + 1) : null;\n        };\n        return fn;\n    }\n    return makeCallback(0);\n};\n\n},{}],3:[function(require,module,exports){\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar onlyOnce = require('async.util.onlyonce');\nvar keyIterator = require('async.util.keyiterator');\n\nmodule.exports = function eachOfLimit(limit) {\n    return function(obj, iterator, cb) {\n        cb = once(cb || noop);\n        obj = obj || [];\n        var nextKey = keyIterator(obj);\n        if (limit <= 0) {\n            return cb(null);\n        }\n        var done = false;\n        var running = 0;\n        var errored = false;\n\n        (function replenish() {\n            if (done && running <= 0) {\n                return cb(null);\n            }\n\n            while (running < limit && !errored) {\n                var key = nextKey();\n                if (key === null) {\n                    done = true;\n                    if (running <= 0) {\n                        cb(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iterator(obj[key], key, onlyOnce(function(err) {\n                    running -= 1;\n                    if (err) {\n                        cb(err);\n                        errored = true;\n                    } else {\n                        replenish();\n                    }\n                }));\n            }\n        })();\n    };\n};\n\n},{\"async.util.keyiterator\":7,\"async.util.noop\":9,\"async.util.once\":10,\"async.util.onlyonce\":11}],4:[function(require,module,exports){\n'use strict';\nvar setImmediate = require('async.util.setimmediate');\nvar restParam = require('async.util.restparam');\n\nmodule.exports = function(fn) {\n    return restParam(function(args) {\n        var callback = args.pop();\n        args.push(function() {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate(function() {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        var sync = true;\n        fn.apply(this, args);\n        sync = false;\n    });\n};\n\n},{\"async.util.restparam\":12,\"async.util.setimmediate\":13}],5:[function(require,module,exports){\n'use strict';\n\nmodule.exports = Array.isArray || function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar isArray = require('async.util.isarray');\n\nmodule.exports = function isArrayLike(arr) {\n    return isArray(arr) || (\n        // has a positive integer length property\n        typeof arr.length === 'number' &&\n        arr.length >= 0 &&\n        arr.length % 1 === 0\n    );\n};\n\n},{\"async.util.isarray\":5}],7:[function(require,module,exports){\n'use strict';\n\nvar _keys = require('async.util.keys');\nvar isArrayLike = require('async.util.isarraylike');\n\nmodule.exports = function keyIterator(coll) {\n    var i = -1;\n    var len;\n    var keys;\n    if (isArrayLike(coll)) {\n        len = coll.length;\n        return function next() {\n            i++;\n            return i < len ? i : null;\n        };\n    } else {\n        keys = _keys(coll);\n        len = keys.length;\n        return function next() {\n            i++;\n            return i < len ? keys[i] : null;\n        };\n    }\n};\n\n},{\"async.util.isarraylike\":6,\"async.util.keys\":8}],8:[function(require,module,exports){\n'use strict';\n\nmodule.exports = Object.keys || function keys(obj) {\n    var _keys = [];\n    for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            _keys.push(k);\n        }\n    }\n    return _keys;\n};\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function noop () {};\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function once(fn) {\n    return function() {\n        if (fn === null) return;\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function only_once(fn) {\n    return function() {\n        if (fn === null) throw new Error('Callback was already called.');\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n\n},{}],12:[function(require,module,exports){\n'use strict';\nmodule.exports = function restParam(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n        var length = Math.max(arguments.length - startIndex, 0);\n        var rest = new Array(length);\n        for (var index = 0; index < length; index++) {\n            rest[index] = arguments[index + startIndex];\n        }\n        switch (startIndex) {\n            case 0:\n                return func.call(this, rest);\n            case 1:\n                return func.call(this, arguments[0], rest);\n        }\n    };\n};\n\n},{}],13:[function(require,module,exports){\n(function (setImmediate){(function (){\n'use strict';\n\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\nvar fallback = function(fn) {\n    setTimeout(fn, 0);\n};\n\nmodule.exports = function setImmediate(fn) {\n    // not a direct alias for IE10 compatibility\n    return (_setImmediate || fallback)(fn);\n};\n\n}).call(this)}).call(this,require(\"timers\").setImmediate)\n\n},{\"timers\":106}],14:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function withoutIndex(iterator) {\n    return function(value, index, callback) {\n        return iterator(value, callback);\n    };\n};\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar isArray = require('async.util.isarray');\nvar restParam = require('async.util.restparam');\nvar ensureAsync = require('async.util.ensureasync');\nvar iterator = require('async.iterator');\n\nmodule.exports = function(tasks, cb) {\n    cb = once(cb || noop);\n    if (!isArray(tasks)) return cb(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return cb();\n\n    function wrapIterator(iterator) {\n        return restParam(function(err, args) {\n            if (err) {\n                cb.apply(null, [err].concat(args));\n            } else {\n                var next = iterator.next();\n                if (next) {\n                    args.push(wrapIterator(next));\n                } else {\n                    args.push(cb);\n                }\n                ensureAsync(iterator).apply(null, args);\n            }\n        });\n    }\n    wrapIterator(iterator(tasks))();\n};\n\n},{\"async.iterator\":2,\"async.util.ensureasync\":4,\"async.util.isarray\":5,\"async.util.noop\":9,\"async.util.once\":10,\"async.util.restparam\":12}],16:[function(require,module,exports){\n'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n},{}],17:[function(require,module,exports){\n\n},{}],18:[function(require,module,exports){\narguments[4][17][0].apply(exports,arguments)\n},{\"dup\":17}],19:[function(require,module,exports){\n(function (Buffer){(function (){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"base64-js\":16,\"buffer\":19,\"ieee754\":57}],20:[function(require,module,exports){\nmodule.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n\n},{}],21:[function(require,module,exports){\n/**\n* Cache data structure with:\n*  - enumerable items\n*  - unique hash item access (if none is passed in, one is generated)\n*  - size (length) expiration\n*  - controllable expiration (e.g. keep in cache longer if older/less likely to change)\n*  - time-based expiration\n*  - custom expiration based on passed-in function\n*\n* Also:\n*  - built to work well with browserify\n*  - no dependencies at all\n*  - pet friendly\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nconst libLinkedList = require(`./LinkedList.js`);\n\nclass CashMoney extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'ObjectCache';\n\n\t\t// The map of node objects by hash because Reasons.\n\t\tthis._HashMap = {};\n\n\t\tthis._RecordMap = {};\n\n\t\tthis._List = new libLinkedList();\n\n\t\t// If the list gets over maxLength, we will automatically remove nodes on insertion.\n\t\tthis.maxLength = 0;\n\n\t\t// If cache entries get over this age, they are removed with prune\n\t\tthis.maxAge = 0;\n\t}\n\n\tget RecordMap()\n\t{\n\t\treturn this._RecordMap;\n\t}\n\n\t// Add (or update) a node in the cache\n\tput(pData, pHash)\n\t{\n\t\t// If the hash of the record exists\n\t\tif (this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\t// Just update the hashed records datum\n\t\t\tthis._HashMap[pHash].Datum = pData;\n\t\t\tthis._RecordMap[pHash] = pData;\n\t\t\treturn this._HashMap[pHash].Datum;\n\t\t}\n\n\t\tlet tmpNode = this._List.push(pData, pHash);\n\t\tthis._HashMap[tmpNode.Hash] = tmpNode;\n\t\tthis._RecordMap[pHash] = pData;\n\n\t\t// Automatically prune if over length, but only prune this nodes worth.\n\t\tif (this.maxLength > 0   &&   this._List.length > this.maxLength)\n\t\t{\n\t\t\t// Pop it off the head of the list\n\t\t\ttmpNode = this._List.pop();\n\t\t\t// Also remove it from the hashmap\n\t\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\t\tdelete this._HashMap[tmpNode.Hash];\n\t\t}\n\n\t\t// Now some expiration properties on the node metadata... namely the birthdate in ms of the node\n\t\ttmpNode.Metadata.Created = +new Date();\n\n\t\treturn tmpNode.Datum;\n\t}\n\n\t// Read a datum by hash from the cache\n\tread(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._HashMap[pHash].Datum;\n\t}\n\n\t// Reinvigorate a node based on hash, updating the timestamp and moving it to the head of the list (also removes custom metadata)\n\ttouch(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get the old node out of the list\n\t\tlet tmpNode = this._List.remove(this._HashMap[pHash]);\n\t\t// Remove it from the hash map\n\t\tdelete this._RecordMap[pHash];\n\t\tdelete this._HashMap[pHash];\n\n\t\t// Now put it back, fresh.\n\t\treturn this.put(tmpNode.Datum, tmpNode.Hash);\n\t}\n\n\t// Expire a cached record based on hash\n\texpire(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpNode = this._HashMap[pHash];\n\n\t\t// Remove it from the list of cached records\n\t\ttmpNode = this._List.remove(tmpNode);\n\t\t// Also remove it from the hashmap\n\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\tdelete this._HashMap[tmpNode.Hash];\n\n\t\t// Return it in case the consumer wants to do anything with it\n\t\treturn tmpNode;\n\t}\n\n\t// Prune records from the cached set based on maxAge\n\tpruneBasedOnExpiration(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tif (this.maxAge < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now enumerate each record and remove any that are expired\n\t\tlet tmpNow = +new Date();\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\t// Expire the node if it is older than max age milliseconds\n\t\t\tif (tmpNow - this._HashMap[tmpKeys[i]].Metadata.Created >= this.maxAge)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on maxLength\n\tpruneBasedOnLength(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\t// Pop records off until we have reached maxLength unless it's 0\n\t\tif (this.maxLength > 0)\n\t\t{\n\t\t\twhile (this._List.length > this.maxLength)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this._List.pop());\n\t\t\t}\n\t\t}\n\n\t\treturn fComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on passed in pPruneFunction(pDatum, pHash, pNode) -- returning true expires it\n\tpruneCustom(fComplete, fPruneFunction, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\tlet tmpNode = this._HashMap[tmpKeys[i]];\n\t\t\t// Expire the node if the passed in function returns true\n\t\t\tif (fPruneFunction(tmpNode.Datum, tmpNode.Hash, tmpNode))\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune the list down to the asserted rules (max age then max length if still too long)\n\tprune(fComplete)\n\t{\n\t\tlet tmpRemovedRecords = [];\n\n\t\t// If there are no cached records, we are done.\n\t\tif (this._List.length < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now prune based on expiration time\n\t\tthis.pruneBasedOnExpiration((fExpirationPruneComplete)=>\n\t\t\t{\n\t\t\t\t// Now prune based on length, then return the removed records in the callback.\n\t\t\t\tthis.pruneBasedOnLength(fComplete, tmpRemovedRecords);\n\t\t\t}, tmpRemovedRecords);\n\t}\n\n\t// Get a low level node (including metadata statistics) by hash from the cache\n\tgetNode(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\n\t\treturn this._HashMap[pHash];\n\t}\n}\n\nmodule.exports = CashMoney;\n},{\"./LinkedList.js\":23,\"fable-serviceproviderbase\":33}],22:[function(require,module,exports){\n/**\n* Double Linked List Node\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Linked List Node Prototype\n*\n* @class LinkedListNode\n* @constructor\n*/\n\nclass LinkedListNode\n{\n\tconstructor()\n\t{\n\t\tthis.Hash = false;\n\t\tthis.Datum = false;\n\n\t\t// This is where expiration and other elements are stored;\n\t\tthis.Metadata = {};\n\n\t\tthis.LeftNode = false;\n\t\tthis.RightNode = false;\n\n\t\t// To allow safe specialty operations on nodes\n\t\tthis.__ISNODE = true;\n\t}\n}\n\nmodule.exports = LinkedListNode;\n},{}],23:[function(require,module,exports){\n\"use strict\"\n/**\n* Simple double linked list to hold the cache entries in, in order.\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module FeeFiFo\n*/\n\nconst libLinkedListNode = require('./LinkedList-Node.js');\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nclass LinkedList\n{\n\tconstructor()\n\t{\n\t\t// Total number of nodes ever processed by this ADT\n\t\tthis.totalNodes = 0;\n\n\t\t// The length of the set of nodes currently in the list\n\t\tthis.length = 0;\n\n\t\tthis.head = false;\n\t\tthis.tail = false;\n\t}\n\n\t// Create a node object.\n\tinitializeNode(pDatum, pHash)\n\t{\n\t\t// Don't allow undefined to be added to the list because of reasons\n\t\tif (typeof(pDatum) === 'undefined')\n\t\t\treturn false;\n\n\t\tthis.totalNodes++;\n\n\t\t// Get (or create) a unique hash\n\t\tlet tmpHash = (typeof(pHash) != 'undefined') ? pHash : `NODE[${this.totalNodes}]`;\n\n\t\tlet tmpNode = new libLinkedListNode();\n\n\t\ttmpNode.Hash = tmpHash;\n\t\ttmpNode.Datum = pDatum;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Add a node to the end (right of tail) of the list.\n\tappend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.tail.RightNode = tmpNode;\n\t\ttmpNode.LeftNode = this.tail;\n\t\tthis.tail = tmpNode;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Append to tail of list (FIFO)\n\tpush(pDatum, pHash)\n\t{\n\t\treturn this.append(pDatum, pHash);\n\t}\n\n\t// Add a node to the beginning (left of head) of the list.\n\tprepend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.head.LeftNode = tmpNode;\n\t\ttmpNode.RightNode = this.head;\n\t\tthis.head = tmpNode;\n\t\treturn tmpNode;\n\t}\n\n\t// Remove a node from the list\n\tremove(pNode)\n\t{\n\t\tif (typeof(pNode) === 'undefined')\n\t\t\treturn false;\n\n\t\tif (!pNode.__ISNODE)\n\t\t\treturn false;\n\n\t\tthis.length--;\n\n\t\t// Last element in list.  Empty it out.\n\t\tif (this.length < 1)\n\t\t{\n\t\t\tthis.head = false;\n\t\t\tthis.tail = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's somewhere in the middle, surgically remove it.\n\t\tif (pNode.LeftNode && pNode.RightNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = pNode.RightNode;\n\t\t\tpNode.RightNode.LeftNode = pNode.LeftNode;\n\n\t\t\tpNode.RightNode = false;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's the tail\n\t\tif (pNode.LeftNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = false;\n\t\t\tthis.tail = pNode.LeftNode;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It must be the head\n\t\tpNode.RightNode.LeftNode = false;\n\t\tthis.head = pNode.RightNode;\n\t\tpNode.RightNode = false;\n\t\treturn pNode;\n\t}\n\n\t// Remove the head of the list (FIFO)\n\tpop()\n\t{\n\t\treturn this.remove(this.head);\n\t}\n\n\t// Enumerate over each node IN ORDER, running the function fAction(pDatum, pHash, fCallback) then calling the function fComplete callback when done\n\teach(fAction, fComplete)\n\t{\n\t\tif (this.length < 1)\n\t\t\treturn fComplete();\n\n\t\tlet tmpNode = false;\n\n\t\tlet fIterator = (pError)=>\n\t\t{\n\t\t\t// If the user passed in a callback with an error, call their callback with the error\n\t\t\tif (pError)\n\t\t\t\treturn fComplete(pError);\n\n\t\t\t// If there is no node, this must be the initial run.\n\t\t\tif (!tmpNode)\n\t\t\t\ttmpNode = this.head;\n\t\t\t// Check if we are at the tail of the list\n\t\t\telse if (!tmpNode.RightNode)\n\t\t\t\treturn fComplete();\n\t\t\t// Proceed to the next node\n\t\t\telse\n\t\t\t\ttmpNode = tmpNode.RightNode;\n\n\t\t\t// Call the actual action\n\t\t\t// I hate this pattern because long tails eventually cause stack overflows.\n\t\t\tfAction(tmpNode.Datum, tmpNode.Hash, fIterator);\n\t\t};\n\n\t\t// Now kick off the iterator\n\t\treturn fIterator();\n\t}\n\n\t// Seek a specific node, 0 is the index of the first node.\n\tseek(pNodeIndex)\n\t{\n\t\tif (!pNodeIndex)\n\t\t\treturn false;\n\t\tif (this.length < 1)\n\t\t\treturn false;\n\t\tif (pNodeIndex >= this.length)\n\t\t\treturn false;\n\n\t\tlet tmpNode = this.head;\n\t\tfor (let i = 0; i < pNodeIndex; i++)\n\t\t{\n\t\t\ttmpNode = tmpNode.RightNode;\n\t\t}\n\n\t\treturn tmpNode;\n\t}\n}\n\nmodule.exports = LinkedList;\n},{\"./LinkedList-Node.js\":22}],24:[function(require,module,exports){\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n},{}],25:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n\n},{}],26:[function(require,module,exports){\n/**\n* Base Logger Class\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\nclass BaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = (typeof(pLogStreamSettings) == 'object') ? pLogStreamSettings : {};\n\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\t// We added this as the mechanism for tracking loggers to allow multiple simultaneous streams\n\t\t// to the same provider.\n\t\tthis.loggerUUID = this.generateInsecureUUID();\n\n\t\t// Eventually we can use this array to ompute which levels the provider allows.\n\t\t// For now it's just used to precompute some string concatenations.\n\t\tthis.levels = (\n\t\t\t[\n\t\t\t\t\"trace\",\n\t\t\t\t\"debug\",\n\t\t\t\t\"info\",\n\t\t\t\t\"warn\",\n\t\t\t\t\"error\",\n\t\t\t\t\"fatal\"\n\t\t\t]);\n\t}\n\n\t// This is meant to generate programmatically insecure UUIDs to identify loggers\n\tgenerateInsecureUUID()\n\t{\n\t\tlet tmpDate = new Date().getTime();\n\t\tlet tmpUUID = 'LOGSTREAM-xxxxxx-yxxxxx'.replace(/[xy]/g,\n\t\t\t\t(pCharacter) =>\n\t\t\t\t{\n\t\t\t\t\t// Funny algorithm from w3resource that is twister-ish without the deep math and security\n\t\t\t\t\t// ..but good enough for unique log stream identifiers\n\t\t\t\t\tlet tmpRandomData = (tmpDate + Math.random()*16)%16 | 0;\n\t\t\t\t\ttmpDate = Math.floor(tmpDate/16);\n\n\t\t\t\t\treturn (pCharacter =='x' ? tmpRandomData : (tmpRandomData&0x3|0x8)).toString(16);\n\t\t\t\t});\n\t\treturn tmpUUID;\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n\n},{}],27:[function(require,module,exports){\n/**\n* Default Logger Provider Function\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\nvar getDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\ttmpDefaultProviders.default = tmpDefaultProviders.console;\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();\n},{\"./Fable-Log-Logger-Console.js\":29}],28:[function(require,module,exports){\nmodule.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]\n},{}],29:[function(require,module,exports){\nlet libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings);\n\n\t\tthis._ShowTimeStamps = this._Settings.hasOwnProperty('showtimestamps') ? (this._Settings.showtimestamps == true) : true;\n\t\tthis._FormattedTimeStamps = this._Settings.hasOwnProperty('formattedtimestamps') ? (this._Settings.formattedtimestamps == true) : true;\n\n\t\tthis._ContextMessage = this._Settings.hasOwnProperty('Context') ? `(${this._Settings.Context})` : \n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? `(${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'Unnamed_Log_Context';\n\n\t\t// Allow the user to decide what gets output to the console\n\t\tthis._OutputLogLinesToConsole = this._Settings.hasOwnProperty('outputloglinestoconsole') ? this._Settings.outputloglinestoconsole : true;\n\t\tthis._OutputObjectsToConsole = this._Settings.hasOwnProperty('outputobjectstoconsole') ? this._Settings.outputobjectstoconsole : true;\n\n\t\t// Precompute the prefix for each level\n\t\tthis.prefixCache = {};\n\t\tfor (let i = 0; i <= this.levels.length; i++)\n\t\t{\n\t\t\tthis.prefixCache[this.levels[i]] = `[${this.levels[i]}] ${this._ContextMessage}: `;\n\n\t\t\tif (this._ShowTimeStamps)\n\t\t\t{\n\t\t\t\t// If there is a timestamp we need a to prepend space before the prefixcache string, since the timestamp comes first\n\t\t\t\tthis.prefixCache[this.levels[i]] = ' '+this.prefixCache[this.levels[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpTimeStamp = '';\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = (new Date()).toISOString();\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = +new Date();\n\t\t}\n\n\t\tlet tmpLogLine = `${tmpTimeStamp}${this.prefixCache[pLevel]}${pLogText}`;\n\n\t\tif (this._OutputLogLinesToConsole)\n\t\t{\n\t\t\tconsole.log(tmpLogLine);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (this._OutputObjectsToConsole && (typeof(pObject) !== 'undefined'))\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 2));\n\t\t}\n\n\t\t// Provide an easy way to be overridden and be consistent\n\t\treturn tmpLogLine;\n\t}\n}\n\nmodule.exports = ConsoleLogger;\n},{\"./Fable-Log-BaseLogger.js\":26}],30:[function(require,module,exports){\nconst libConsoleLog = require('./Fable-Log-Logger-Console.js');\nconst libFS = require('fs');\nconst libPath = require('path');\n\nclass SimpleFlatFileLogger extends libConsoleLog\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings, pFableLog);\n\n\t\t// If a path isn't provided for the logfile, it tries to use the ProductName or Context\n\t\tthis.logFileRawPath = (this._Settings.hasOwnProperty('path')) ? this._Settings.path : `./${this._ContextMessage}.log`;\n\t\tthis.logFilePath = libPath.normalize(this.logFileRawPath);\n\n\t\tthis.logFileStreamOptions = (this._Settings.hasOwnProperty('fileStreamoptions')) ? this._Settings.fileStreamOptions : (\n\t\t\t{\n\t\t\t\t\"flags\": \"a\",\n\t\t\t\t\"encoding\": \"utf8\"\n\t\t\t})\n\n\t\tthis.fileWriter = libFS.createWriteStream(this.logFilePath, this.logFileStreamOptions);\n\n\t\tthis.activelyWriting = false;\n\n\t\tthis.logLineStrings = [];\n\t\tthis.logObjectStrings = [];\n\n\t\tthis.defaultWriteCompleteCallback = ()=>{};\n\t\tthis.defaultBufferFlushCallback = ()=>{};\n\t}\n\n\tcloseWriter(fCloseComplete)\n\t{\n\t\tlet tmpCloseComplete = (typeof(fCloseComplete) == 'function') ? fCloseComplete : ()=>{};\n\t\tif (this.fileWriter)\n\t\t{\n\t\t\tthis.fileWriter.end('\\n');\n\t\t\treturn this.fileWriter.once('finish', tmpCloseComplete.bind(this));\n\t\t}\n\t};\n\n\tcompleteBufferFlushToLogFile(fFlushComplete)\n\t{\n\t\tthis.activelyWriting = false;\n\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\tif (this.logLineStrings.length > 0)\n\t\t{\n\t\t\tthis.flushBufferToLogFile(tmpFlushComplete);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpFlushComplete();\n\t\t}\n\t}\n\n\tflushBufferToLogFile(fFlushComplete)\n\t{\n\t\tif (!this.activelyWriting)\n\t\t{\n\t\t\t// Only want to be writing one thing at a time....\n\t\t\tthis.activelyWriting = true;\n\n\t\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\t\t// Get the current buffer arrays.  These should always have matching number of elements.\n\t\t\tlet tmpLineStrings = this.logLineStrings;\n\t\t\tlet tmpObjectStrings = this.logObjectStrings;\n\n\t\t\t// Reset these to be filled while we process this queue...\n\t\t\tthis.logLineStrings = [];\n\t\t\tthis.logObjectStrings = [];\n\n\t\t\t// This is where we will put each line before writing it to the file...\n\t\t\tlet tmpConstructedBufferOutputString = '';\n\n\t\t\tfor (let i = 0; i < tmpLineStrings.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: Windows Newline?   ....... yo no se!\n\t\t\t\ttmpConstructedBufferOutputString += `${tmpLineStrings[i]}\\n`;\n\t\t\t\tif (tmpObjectStrings[i] !== false)\n\t\t\t\t{\n\t\t\t\t\ttmpConstructedBufferOutputString += `${tmpObjectStrings[i]}\\n`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.fileWriter.write(tmpConstructedBufferOutputString, 'utf8'))\n\t\t\t{\n\t\t\t\t// If the streamwriter returns false, we need to wait for it to drain.\n\t\t\t\tthis.fileWriter.once('drain', this.completeBufferFlushToLogFile.bind(this, tmpFlushComplete));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.completeBufferFlushToLogFile(tmpFlushComplete);\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpLogLine = super.write(pLevel, pLogText, pObject);\n\n\t\t// Use a very simple array as the write buffer\n\t\tthis.logLineStrings.push(tmpLogLine);\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tthis.logObjectStrings.push(JSON.stringify(pObject, null, 4));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logObjectStrings.push(false);\n\t\t}\n\n\t\tthis.flushBufferToLogFile();\n\t}\n}\n\nmodule.exports = SimpleFlatFileLogger;\n},{\"./Fable-Log-Logger-Console.js\":29,\"fs\":18,\"path\":72}],31:[function(require,module,exports){\n/**\n* Fable Logging Service\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass FableLog extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'Logging';\n\n\t\tlet tmpSettings = (typeof(pSettings) === 'object') ? pSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders-Node.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.datumDecorator = (pDatum) => pDatum;\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetDatumDecorator(fDatumDecorator)\n\t{\n\t\tif (typeof(fDatumDecorator) === 'function')\n\t\t{\n\t\t\tthis.datumDecorator = fDatumDecorator;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.datumDecorator = (pDatum) => pDatum;\n\t\t}\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'default',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableLog(pSettings);\n}\n\n\nmodule.exports = FableLog;\nmodule.exports.new = autoConstruct;\nmodule.exports.LogProviderBase = require('./Fable-Log-BaseLogger.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-Console.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-SimpleFlatFile.js');\n\n},{\"./Fable-Log-BaseLogger.js\":26,\"./Fable-Log-DefaultProviders-Node.js\":27,\"./Fable-Log-DefaultStreams.json\":28,\"./Fable-Log-Logger-Console.js\":29,\"./Fable-Log-Logger-SimpleFlatFile.js\":30,\"fable-serviceproviderbase\":33}],32:[function(require,module,exports){\n/**\n* Fable Core Pre-initialization Service Base\n*\n* For a couple services, we need to be able to instantiate them before the Fable object is fully initialized.\n* This is a base class for those services.\n*\n* @author <steven@velozo.com>\n*/\n\nclass FableCoreServiceProviderBase\n{\n\tconstructor(pOptions, pServiceHash)\n\t{\n\t\tthis.fable = false;\n\n\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions : {};\n\n\t\tthis.serviceType = 'Unknown';\n\n\t\t// The hash will be a non-standard UUID ... the UUID service uses this base class!\n\t\tthis.UUID = `CORESVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`;\n\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash : `${this.UUID}`;\n\t}\n\n\n\tstatic isFableService = true;\n\n\t// After fable is initialized, it would be expected to be wired in as a normal service.\n\tconnectFable(pFable)\n\t{\n\t\tthis.fable = pFable;\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = FableCoreServiceProviderBase;\n\n},{}],33:[function(require,module,exports){\n/**\n* Fable Service Base\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tthis.fable = pFable;\n\n\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t: ((typeof(pFable) === 'object') && !pFable.isFable) ? pFable\n\t\t\t\t\t\t: {};\n\n\t\tthis.serviceType = 'Unknown';\n\n\t\tif (typeof(pFable.getUUID) == 'function')\n\t\t{\n\t\t\tthis.UUID = pFable.getUUID();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.UUID = `NoFABLESVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`\n\t\t}\n\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash : `${this.UUID}`;\n\n\t\t// Pull back a few things\n\t\tthis.log = this.fable.log;\n\t\tthis.servicesMap = this.fable.servicesMap;\n\t\tthis.services = this.fable.services;\n\t}\n\n\tstatic isFableService = true;\n}\n\nmodule.exports = FableServiceProviderBase;\n\nmodule.exports.CoreServiceProviderBase = require('./Fable-ServiceProviderBase-Preinit.js');\n},{\"./Fable-ServiceProviderBase-Preinit.js\":32}],34:[function(require,module,exports){\nmodule.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n\n},{}],35:[function(require,module,exports){\n(function (process){(function (){\n/**\n* Fable Settings Template Processor\n*\n* This class allows environment variables to come in via templated expressions, and defaults to be set.\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\nconst libPrecedent = require('precedent');\n\nclass FableSettingsTemplateProcessor\n{\n\tconstructor(pDependencies)\n\t{\n        // Use a no-dependencies templating engine to parse out environment variables\n\t\tthis.templateProcessor = new libPrecedent();\n\n        // TODO: Make the environment variable wrap expression demarcation characters configurable?\n\t\tthis.templateProcessor.addPattern('${', '}',\n\t\t\t(pTemplateValue)=>\n\t\t\t{\n\t\t\t\tlet tmpTemplateValue = pTemplateValue.trim();\n\n\t\t\t\tlet tmpSeparatorIndex = tmpTemplateValue.indexOf('|');\n\n\t\t\t\tconst tmpDefaultValue = tmpSeparatorIndex >= 0 ? tmpTemplateValue.substring(tmpSeparatorIndex+1) : '';\n\n\t\t\t\tlet tmpEnvironmentVariableName = (tmpSeparatorIndex > -1) ? tmpTemplateValue.substring(0, tmpSeparatorIndex) : tmpTemplateValue;\n\n\t\t\t\tif (process.env.hasOwnProperty(tmpEnvironmentVariableName))\n\t\t\t\t{\n\t\t\t\t\treturn process.env[tmpEnvironmentVariableName];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpDefaultValue;\n\t\t\t\t}\n\t\t\t});\n    }\n\n    parseSetting(pString)\n    {\n        return this.templateProcessor.parseString(pString);\n    }\n}\n\nmodule.exports = FableSettingsTemplateProcessor;\n\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":78,\"precedent\":75}],36:[function(require,module,exports){\n/**\n* Fable Settings Add-on\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nconst libFableSettingsTemplateProcessor = require('./Fable-Settings-TemplateProcessor.js');\n\nclass FableSettings extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'SettingsManager';\n\n\t\t// Initialize the settings value template processor\n\t\tthis.settingsTemplateProcessor = new libFableSettingsTemplateProcessor();\n\n\t\t// set straight away so anything that uses it respects the initial setting\n\t\tthis._configureEnvTemplating(pSettings);\n\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')));\n\t}\n\n\t// Update the configuration for environment variable templating based on the current settings object\n\t_configureEnvTemplating(pSettings)\n\t{\n\t\t// default environment variable templating to on\n\t\tthis._PerformEnvTemplating = !pSettings || pSettings.NoEnvReplacement !== true;\n\t}\n\n\t// Resolve (recursive) any environment variables found in settings object.\n\t_resolveEnv(pSettings)\n\t{\n\t\tfor (const tmpKey in pSettings)\n\t\t{\n\t\t\tif (typeof(pSettings[tmpKey]) === 'object')\n\t\t\t{\n\t\t\t\tthis._resolveEnv(pSettings[tmpKey]);\n\t\t\t}\n\t\t\telse if (typeof(pSettings[tmpKey]) === 'string')\n\t\t\t{\n\t\t\t\tpSettings[tmpKey] = this.settingsTemplateProcessor.parseSetting(pSettings[tmpKey]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if a value is an object (but not an array).\n\t */\n\t_isObject(value)\n\t{\n\t\treturn typeof(value) === 'object' && !Array.isArray(value);\n\t}\n\n\t/**\n\t * Merge two plain objects. Keys that are objects in both will be merged property-wise.\n\t */\n\t_deepMergeObjects(toObject, fromObject)\n\t{\n\t\tif (!fromObject || !this._isObject(fromObject))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject.keys(fromObject).forEach((key) =>\n\t\t{\n\t\t\tconst fromValue = fromObject[key];\n\t\t\tif (this._isObject(fromValue))\n\t\t\t{\n\t\t\t\tconst toValue = toObject[key];\n\t\t\t\tif (toValue && this._isObject(toValue))\n\t\t\t\t{\n\t\t\t\t\t// both are objects, so do a recursive merge\n\t\t\t\t\tthis._deepMergeObjects(toValue, fromValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoObject[key] = fromValue;\n\t\t});\n\t\treturn toObject;\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\t\ttmpSettingsTo = this._deepMergeObjects(tmpSettingsTo, tmpSettingsFromCopy);\n\n\t\tif (this._PerformEnvTemplating)\n\t\t{\n\t\t\tthis._resolveEnv(tmpSettingsTo);\n\t\t}\n\t\t// Update env tempating config, since we just updated the config object, and it may have changed\n\t\tthis._configureEnvTemplating(tmpSettingsTo);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\n\t\tthis.settings = this._deepMergeObjects(tmpSettingsFromCopy, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = FableSettings;\nmodule.exports.new = autoConstruct;\n},{\"./Fable-Settings-Default\":34,\"./Fable-Settings-TemplateProcessor.js\":35,\"fable-serviceproviderbase\":33}],37:[function(require,module,exports){\n/**\n* Random Byte Generator - Browser version\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn this.generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n\n},{}],38:[function(require,module,exports){\n/**\n* Fable UUID Generator\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;0\n\nconst libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'UUID';\n\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = FableUUID;\nmodule.exports.new = autoConstruct;\n\n},{\"./Fable-UUID-Random.js\":37,\"fable-serviceproviderbase\":33}],39:[function(require,module,exports){\n/**\n* Fable Application Services Management\n* @author <steven@velozo.com>\n*/\n\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableService extends libFableServiceBase.CoreServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'ServiceManager';\n\n\t\tthis.serviceTypes = [];\n\n\t\t// A map of instantiated services\n\t\tthis.servicesMap = {};\n\n\t\t// A map of the default instantiated service by type\n\t\tthis.services = {};\n\n\t\t// A map of class constructors for services\n\t\tthis.serviceClasses = {};\n\n\t\t// If we need extra service initialization capabilities\n\t\tthis.extraServiceInitialization = false;\n\t}\n\n\taddServiceType(pServiceType, pServiceClass)\n\t{\n\t\tif (this.servicesMap.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\t// TODO: Check if any services are running?\n\t\t\tthis.fable.log.warn(`Adding a service type [${pServiceType}] that already exists.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the container for instantiated services to go in\n\t\t\tthis.servicesMap[pServiceType] = {};\n\n\t\t\t// Add the type to the list of types\n\t\t\tthis.serviceTypes.push(pServiceType);\n\t\t}\n\n\t\t// Using the static member of the class is a much more reliable way to check if it is a service class than instanceof\n\t\tif ((typeof(pServiceClass) == 'function') && (pServiceClass.isFableService))\n\t\t{\n\t\t\t// Add the class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = pServiceClass;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the base class to the list of classes\n\t\t\tthis.fable.log.error(`Attempted to add service type [${pServiceType}] with an invalid class.  Using base service class, which will not crash but won't provide meaningful services.`);\n\t\t\tthis.serviceClasses[pServiceType] = libFableServiceBase;\n\t\t}\n\t}\n\n\t// This is for the services that are meant to run mostly single-instance so need a default at initialization\n\taddAndInstantiateServiceType(pServiceType, pServiceClass)\n\t{\n\t\tthis.addServiceType(pServiceType, pServiceClass);\n\t\treturn this.instantiateServiceProvider(pServiceType, {}, `${pServiceType}-Default`);\n\t}\n\n\t// Some services expect to be overloaded / customized class.\n\tinstantiateServiceProviderFromPrototype(pServiceType, pOptions, pCustomServiceHash, pServicePrototype)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new pServicePrototype(this.fable, pOptions, pCustomServiceHash);\n\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\n\tinstantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = this.instantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\t// Create a service provider but don't register it to live forever in fable.services\n\tinstantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new this.serviceClasses[pServiceType](this.fable, pOptions, pCustomServiceHash);\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\t\treturn tmpService;\n\t}\n\n\t// Connect an initialized service provider that came before Fable was initialized\n\tconnectPreinitServiceProviderInstance(pServiceInstance)\n\t{\n\t\tlet tmpServiceType = pServiceInstance.serviceType;\n\t\tlet tmpServiceHash = pServiceInstance.Hash;\n\n\t\t// The service should already be instantiated, so just connect it to fable\n\t\tpServiceInstance.connectFable(this.fable);\n\n\t\tif (!this.servicesMap.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\t// If the core service hasn't registered itself yet, create the service container for it.\n\t\t\t// This means you couldn't register another with this type unless it was later registered with a constructor class.\n\t\t\tthis.servicesMap[tmpServiceType] = {};\n\t\t}\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[tmpServiceType][tmpServiceHash] = pServiceInstance;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(tmpServiceType, tmpServiceHash)\n\t\t}\n\n\t\treturn pServiceInstance;\n\t}\n\n\tsetDefaultServiceInstantiation(pServiceType, pServiceHash)\n\t{\n\t\tif (this.servicesMap[pServiceType].hasOwnProperty(pServiceHash))\n\t\t{\n\t\t\tthis.fable[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\tthis.services[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nmodule.exports = FableService;\n\nmodule.exports.ServiceProviderBase = libFableServiceBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceBase.CoreServiceProviderBase;\n},{\"fable-serviceproviderbase\":33}],40:[function(require,module,exports){\n/**\n* Fable Application Services Support Library\n* @author <steven@velozo.com>\n*/\n// Pre-init services\nconst libFableSettings = require('fable-settings');\nconst libFableUUID = require('fable-uuid');\nconst libFableLog = require('fable-log');\n\nconst libFableServiceManager = require('./Fable-ServiceManager.js');\n\nclass Fable\n{\n\tconstructor(pSettings)\n\t{\n\t\t// Initialization Phase 0: Set up the lowest level state (core services)\n\t\t// Container for the core services prototypes.\n\t\t// This is here so if an API consumer changes the default for a core service,\n\t\t// fable still runs with what was initialized.\n\t\tthis._coreServices = {};\n\n\t\t// Instantiate the default Settings Manager\n\t\tthis._coreServices.SettingsManager = new libFableSettings(pSettings);\n\t\t// Instantiate the UUID generator\n\t\tthis._coreServices.UUID = new libFableUUID(this._coreServices.SettingsManager.settings);\n\t\t// Instantiate the logging system\n\t\tthis._coreServices.Logging = new libFableLog(this._coreServices.SettingsManager.settings);\n\t\tthis._coreServices.Logging.initialize();\n\n\t\t// Initialization Phase 1: Instantiate the service manager\n\t\t// This is the start actual bootstrapping point for fable\n\t\tthis._coreServices.ServiceManager = new libFableServiceManager(this);\n\t\tthis.serviceManager = this._coreServices.ServiceManager;\n\t\tthis.serviceManager.connectFable(this);\n\t\t// Bootstrapping of fable into the Service Manager is complete\n\n\t\t// Initialization Phase 2: Map in the default services.\n\t\t// They will then be available in the Default service provider set as well.\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.ServiceManager);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.UUID);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.Logging);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.SettingsManager);\n\n\t\t// Initialize and instantiate the default baked-in Data Arithmatic service\n\t\tthis.serviceManager.addAndInstantiateServiceType('EnvironmentData', require('./services/Fable-Service-EnvironmentData.js'));\n\t\tthis.serviceManager.addServiceType('Template', require('./services/Fable-Service-Template.js'));\n\t\tthis.serviceManager.addServiceType('MetaTemplate', require('./services/Fable-Service-MetaTemplate.js'));\n\t\tthis.serviceManager.addServiceType('Anticipate', require('./services/Fable-Service-Anticipate.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('DataFormat', require('./services/Fable-Service-DataFormat.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('DataGeneration', require('./services/Fable-Service-DataGeneration.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('Utility', require('./services/Fable-Service-Utility.js'));\n\t\tthis.serviceManager.addServiceType('Operation', require('./services/Fable-Service-Operation.js'));\n\t\tthis.serviceManager.addServiceType('RestClient', require('./services/Fable-Service-RestClient.js'));\n\t\tthis.serviceManager.addServiceType('CSVParser', require('./services/Fable-Service-CSVParser.js'));\n\t\tthis.serviceManager.addServiceType('Manifest', require('manyfest'));\n\t\tthis.serviceManager.addServiceType('ObjectCache', require('cachetrax'));\n\t\tthis.serviceManager.addServiceType('FilePersistence', require('./services/Fable-Service-FilePersistence.js'));\n\t}\n\n\tget isFable()\n\t{\n\t\treturn true;\n\t}\n\n\tget settings()\n\t{\n\t\treturn this._coreServices.SettingsManager.settings;\n\t}\n\n\tget settingsManager()\n\t{\n\t\treturn this._coreServices.SettingsManager;\n\t}\n\n\tget log()\n\t{\n\t\treturn this._coreServices.Logging;\n\t}\n\n\tget services()\n\t{\n\t\treturn this._coreServices.ServiceManager.services;\n\t}\n\n\tget servicesMap()\n\t{\n\t\treturn this._coreServices.ServiceManager.servicesMap;\n\t}\n\n\tgetUUID()\n\t{\n\t\treturn this._coreServices.UUID.getUUID();\n\t}\n\n\tget fable()\n\t{\n\t\treturn this;\n\t};\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new Fable(pSettings);\n}\n\nmodule.exports = Fable;\nmodule.exports.new = autoConstruct;\n\nmodule.exports.LogProviderBase = libFableLog.LogProviderBase;\nmodule.exports.ServiceProviderBase = libFableServiceManager.ServiceProviderBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceManager.CoreServiceProviderBase;\n\nmodule.exports.precedent = libFableSettings.precedent;\n},{\"./Fable-ServiceManager.js\":39,\"./services/Fable-Service-Anticipate.js\":41,\"./services/Fable-Service-CSVParser.js\":42,\"./services/Fable-Service-DataFormat.js\":43,\"./services/Fable-Service-DataGeneration.js\":45,\"./services/Fable-Service-EnvironmentData.js\":46,\"./services/Fable-Service-FilePersistence.js\":47,\"./services/Fable-Service-MetaTemplate.js\":48,\"./services/Fable-Service-Operation.js\":52,\"./services/Fable-Service-RestClient.js\":53,\"./services/Fable-Service-Template.js\":54,\"./services/Fable-Service-Utility.js\":55,\"cachetrax\":21,\"fable-log\":31,\"fable-settings\":36,\"fable-uuid\":38,\"manyfest\":70}],41:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceAnticipate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'AsyncAnticipate';\n\n\t\t// The queue of operations waiting to run.\n\t\tthis.operationQueue = [];\n\t\tthis.erroredOperations = [];\n\n\t\tthis.executingOperationCount = 0;\n\t\tthis.completedOperationCount = 0;\n\n\t\tthis.maxOperations = 1;\n\n\t\tthis.lastError = undefined;\n\t\tthis.waitingFunctions = [];\n\t}\n\n\tcheckQueue()\n\t{\n\t\t// This checks to see if we need to start any operations.\n\t\tif (this.operationQueue.length > 0 && this.executingOperationCount < this.maxOperations)\n\t\t{\n\t\t\tlet tmpOperation = this.operationQueue.shift();\n\t\t\tthis.executingOperationCount += 1;\n\t\t\ttmpOperation(this.buildAnticipatorCallback());\n\t\t}\n\t\telse if (this.waitingFunctions.length > 0 && this.executingOperationCount < 1)\n\t\t{\n\t\t\t// If there are no operations left, and we have waiting functions, call them.\n\t\t\tfor (let i = 0; i < this.waitingFunctions.length; i++)\n\t\t\t{\n\t\t\t\tthis.waitingFunctions[i](this.lastError);\n\t\t\t}\n\t\t\t// Reset our state\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.waitingFunctions = [];\n\t\t}\n\t}\n\n\t// Expects a function fAsynchronousFunction(fCallback)\n\tanticipate(fAsynchronousFunction)\n\t{\n\t\tthis.operationQueue.push(fAsynchronousFunction);\n\t\tthis.checkQueue();\n\t}\n\n\tbuildAnticipatorCallback()\n\t{\n\t\t// This uses closure-scoped state to track the callback state\n\t\tlet tmpCallbackState = (\n\t\t\t{\n\t\t\t\tCalled: false,\n\t\t\t\tError: undefined,\n\t\t\t\tOperationSet: this\n\t\t\t});\t\t\n\t\treturn hoistedCallback;\n\t\tfunction hoistedCallback(pError)\n\t\t{\n\t\t\tif (tmpCallbackState.Called)\n\t\t\t{\n\t\t\t\t// If they call the callback twice, throw an error\n\t\t\t\tthrow new Error(\"Anticipation async callback called twice...\");\n\t\t\t}\n\t\t\ttmpCallbackState.Called = true;\n\t\t\ttmpCallbackState.error = pError;\n\n\t\t\ttmpCallbackState.OperationSet.executingOperationCount -= 1;\n\t\t\ttmpCallbackState.OperationSet.completedOperationCount += 1;\n\n\t\t\ttmpCallbackState.OperationSet.checkQueue();\n\t\t}\n\t}\n\n\twait(fCallback)\n\t{\n\t\tthis.waitingFunctions.push(fCallback);\n\t\tthis.checkQueue();\n\t}\n}\n\nmodule.exports = FableServiceAnticipate;\n},{\"../Fable-ServiceManager.js\":39}],42:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Parsing CSVs.  Why?  Because it's a thing that needs to be done.\n*\n* 1. And the other node CSV parsers had issues with the really messy files we had.\n* \n*\n* 2. None of the CSV parsers dealt with and multi-line quoted string columns\n*    which are apparently a-ok according to the official spec.\n* Plus a lot of them are asynchronous because apparently that's the best way to\n* do anything; unfortunately some files have a sequence issue with that.\n*\n* @class CSVParser\n*/\nclass CSVParser extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'CSVParser';\n\n        this.Header = [];\n        this.HeaderFieldNames = [];\n\n        this.Delimiter = ',';\n        this.QuoteCharacter = '\"';\n\n        this.CleanCharacters = ['\\r'];\n\n        this.HeaderLineIndex = 0;\n        this.HasHeader = true;\n        this.HasSetHeader = false;\n        this.EmitHeader = false;\n\n        this.EmitJSON = true;\n\n        this.EscapedQuoteString = '&quot;';\n\n        // Current Line Parsing State\n        this.CurrentLine = '';\n        this.CurrentRecord = [];\n\n        this.InQuote = false;\n        this.InEscapedQuote = false;\n\n        this.LinesParsed = 0;\n        this.RowsEmitted = 0;\n    }\n\n    marshalRowToJSON(pRowArray)\n    {\n        if (!Array.isArray(pRowArray))\n        {\n            return false;\n        }\n\n        for (let i = this.HeaderFieldNames.length; i < pRowArray.length; i++)\n        {\n            this.HeaderFieldNames[i] = `${i}`;\n        }\n\n        let tmpObject = {};\n\n        for (let i = 0; i < pRowArray.length; i++)\n        {\n            tmpObject[this.HeaderFieldNames[i]] = pRowArray[i];\n        }\n\n        return tmpObject;\n    }\n\n    // Set the header data, for use in marshalling to JSON.\n    setHeader (pHeaderArray)\n    {\n        this.Header = pHeaderArray;\n\n        for (let i = 0; i < this.Header.length; i++)\n        {\n            if (typeof(this.Header[i]) == 'undefined')\n            {\n                this.HeaderFieldNames[i] = `${i}`;\n            }\n            else\n            {\n                this.HeaderFieldNames[i] = this.Header[i].toString();\n            }\n        }\n    }\n\n    resetRowState()\n    {\n        this.CurrentRecord = [];\n    }\n\n    pushLine()\n    {\n        for (let i = 0; i < this.CleanCharacters.length; i++)\n        {\n            this.CurrentLine = this.CurrentLine.replace(this.CleanCharacters[i],'');\n        }\n        this.CurrentRecord.push(this.CurrentLine);\n        this.CurrentLine = '';\n    }\n\n    emitRow(pFormatAsJSON)\n    {\n        let tmpFormatAsJSON = (typeof(pFormatAsJSON) == 'undefined') ? this.EmitJSON : pFormatAsJSON;\n\n        this.RowsEmitted++;\n        let tmpCompletedRecord = this.CurrentRecord;\n        this.CurrentRecord = [];\n\n        if (tmpFormatAsJSON)\n        {\n            return this.marshalRowToJSON(tmpCompletedRecord);\n        }\n        else\n        {\n            return tmpCompletedRecord;\n        }\n    }\n\n    parseCSVLine (pLineString)\n    {\n        this.LinesParsed++;\n\n        for (let i = 0; i < pLineString.length; i++)\n        {\n            if ((!this.InQuote) && (pLineString[i] == this.Delimiter))\n            {\n                this.pushLine();\n            }\n            else if (pLineString[i] == this.QuoteCharacter)\n            {\n                // If we are in the second part of an escaped quote, ignore it.\n                if (this.InEscapedQuote)\n                {\n                    this.InEscapedQuote = false;\n                }\n                // If we aren't in a quote, enter quote\n                else if (!this.InQuote)\n                {\n                    this.InQuote = true;\n                }\n                // We are in a quote, so peek forward to see if this is an \"escaped\" quote pair\n                else if ((i < pLineString.length) && (pLineString[i+1] == this.QuoteCharacter))\n                {\n                    this.CurrentLine += this.EscapedQuoteString;\n                    this.InEscapedQuote = true;\n                }\n                // We are in a quote, this isn't an \"escaped\" quote pair, so go out of quote mode\n                else\n                {\n                    this.InQuote = false;\n                }\n            }\n            else\n            {\n                this.CurrentLine += pLineString[i];\n            }\n        }\n\n        // See if we are in a multiline quoted entry -- if not, emit the row.\n        if (!this.InQuote)\n        {\n            // Push the last remaining column from the buffer to the current line.\n            this.pushLine();\n\n            // Check to see if there is a header -- and if so, if this is the header row\n            if (this.HasHeader && !this.HasSetHeader && (this.RowsEmitted == this.HeaderLineIndex))\n            {\n                this.HasSetHeader = true;\n                // Override the format as json bit\n                this.setHeader(this.emitRow(false));\n\n                // No matter what, formatting this as JSON is silly and we don't want to go there anyway.\n                if (this.EmitHeader)\n                {\n                    return this.Header;\n                }\n                else\n                {\n                    return false;\n                }\n            }\n            else\n            {\n                return this.emitRow();\n            }\n        }\n        else\n        {\n            return false;\n        }\n    };\n}\n\nmodule.exports = CSVParser;\n},{\"fable-serviceproviderbase\":33}],43:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Data Formatting and Translation Functions\n*\n* @class DataFormat\n*/\nclass DataFormat extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'DataArithmatic';\n\n\t\t// Regular Expressions (so they don't have to be recompiled every time)\n\t\t// These could be defined as static, but I'm not sure if that will work with browserify ... and specifically the QT browser.\n\t\tthis._Regex_formatterInsertCommas = /.{1,3}/g;\n\t\t// Match Function:\n\t\t// function(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t\t// Thoughts about below:   /^([+-]?)(0*)(\\d+)(\\.(\\d+))?$/;\n\t\tthis._Regex_formatterAddCommasToNumber = /^([-+]?)(0?)(\\d+)(.?)(\\d+)$/g;\n\t\tthis._Regex_formatterDollarsRemoveCommas = /,/gi;\n\t\tthis._Regex_formatterCleanNonAlphaChar = /[^a-zA-Z]/gi;\n\t\tthis._Regex_formatterCapitalizeEachWord = /([a-zA-Z]+)/g;\n\n\t\t// TODO: Potentially pull these in from a configuration.\n\t\t// TODO: Use locale data for this if it's defaults all the way down.\n\t\tthis._Value_MoneySign_Currency = '$';\n\t\tthis._Value_NaN_Currency = '--';\n\t\tthis._Value_GroupSeparator_Number = ',';\n\n\t\tthis._Value_Prefix_StringHash = 'HSH';\n\t\tthis._Value_Clean_formatterCleanNonAlpha = '';\n\n\t\tthis._UseEngineStringStartsWith = (typeof(String.prototype.startsWith) === 'function');\n\t\tthis._UseEngineStringEndsWith = (typeof(String.prototype.endsWith) === 'function');\n\t}\n\n\n\t/*************************************************************************\n\t * String Manipulation and Comparison Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Reverse a string\n\t *\n\t * @param {string} pString - The string to reverse\n\t * @returns {string}\n\t */\n\tstringReverse (pString)\n\t{\n\t\t// TODO: Benchmark if there are faster ways we want to do this with all the newer JS stuff\n\t\t//       ... and if it will work with browserify in a clean way.\n\t\treturn pString.split('').reverse().join('');\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pStartIndex\n\t * @returns {*}\n\t */\n\tstringStartsWith (pString, pSearchString, pStartIndex)\n\t{\n\t\tif (this._UseEngineStringStartsWith)\n\t\t{\n\t\t\treturn pString.startsWith(pSearchString, pStartIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringStartsWith_Polyfill.call(pString, pSearchString, pStartIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pStartIndex - The index to start the search at\n\t * @returns {boolean}\n\t */\n\tstringStartsWith_Polyfill (pSearchString, pStartIndex)\n\t{\n\t\treturn this.slice(pStartIndex || 0, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pEndIndex\n\t * @returns {*}\n\t */\n\tstringEndsWith (pString, pSearchString, pEndIndex)\n\t{\n\t\tif (this._UseEngineStringEndsWith)\n\t\t{\n\t\t\treturn pString.endsWith(pSearchString, pEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringEndsWith_Polyfill.call(pString, pSearchString, pEndIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pEndIndex - The index to end the search at\n\t * @returns {boolean}\n\t */\n\tstringEndsWith_Polyfill (pSearchString, pEndIndex)\n\t{\n\t\t// This works much better than >= because\n\t\t// it compensates for NaN:\n\t\tif (!(pEndIndex < this.length))\n\t\t{\n\t\t\tpEndIndex = this.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpEndIndex |= 0; // round position\n\t\t}\n\t\treturn this.substr(pEndIndex - pSearchString.length, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Generate an insecure string hash.  Not meant to be secure, just a quick way to generate a hash for a string.  This is not a cryptographic hash.  Additional warranty and disclaimer ... this is not for passwords!\n\t *\n\t * @param {string} pString\n\t * @returns {string}\n\t */\n\tinsecureStringHash (pString)\n\t{\n\t\tlet tmpHash = 0;\n\t\tlet tmpStringLength = pString.length;\n\t\tlet tmpCharacterIndex = 0;\n\n\t\twhile (tmpCharacterIndex < tmpStringLength)\n\t\t{\n\t\t\ttmpHash = (tmpHash << 5) - tmpHash + pString.charCodeAt(tmpCharacterIndex++) | 0;\n\t\t}\n\n\t\treturn `${this._Value_Prefix_StringHash}${tmpHash}`;\n\t}\n\n\tcapitalizeEachWord (pString)\n\t{\n\t\treturn pString.replace(this._Regex_formatterCapitalizeEachWord,\n\t\t\t(pMatch) =>\n\t\t\t{\n\t\t\t\treturn pMatch.charAt(0).toUpperCase() + pMatch.substr(1);\n\t\t\t});\n\t}\n\n\t/**\n\t * Clean wrapping characters if they exist consistently around the string.  If they do not, the string is returned unchanged.\n\t *\n\t * @param {string} pWrapCharacter - The character expected as the wrapping character\n\t * @param {string} pString - the string to clean\n\t * @returns {string}\n\t */\n\tcleanEnclosureWrapCharacters (pWrapCharacter, pString)\n\t{\n\t\t// # Use case from ManyFest DSL:\n\t\t//\n\t\t// When a boxed property is passed in, it should have quotes of some\n\t\t// kind around it.\n\t\t//\n\t\t// For instance:\n\t\t// \t\tMyValues['Name']\n\t\t// \t\tMyValues[\"Age\"]\n\t\t// \t\tMyValues[`Cost`]\n\t\t//\n\t\t// This function is necessary to remove the wrapping quotes before object\n\t\t// resolution can occur.\n\t\tif (pString.startsWith(pWrapCharacter) && pString.endsWith(pWrapCharacter))\n\t\t{\n\t\t\treturn pString.substring(1, pString.length - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn pString;\n\t\t}\n\t}\n\n\t/**\n\t * Clean a string of any non-alpha characters (including numbers)\n\t *\n\t * @param {*} pString\n\t * @returns\n\t */\n\tcleanNonAlphaCharacters (pString)\n\t{\n\t\tif ((typeof(pString) == 'string') && (pString != ''))\n\t\t{\n\t\t\treturn pString.replace(this._Regex_formatterCleanNonAlphaChar, this._Value_Clean_formatterCleanNonAlpha);\n\t\t}\n\n\t\treturn '';\n\t}\n\n\n\t/*************************************************************************\n\t * Number Formatting Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Insert commas every 3 characters from the right.  Used by formatterAddCommasToNumber().\n\t *\n\t * @param {*} pString\n\t * @returns {*}\n\t */\n\tformatterInsertCommas (pString)\n\t{\n\t\t// Reverse, because it's easier to do things from the left, given arbitrary digit counts\n\t\tlet tmpReversed = this.stringReverse(pString);\n\t\t// Add commas every three characters\n\t\tlet tmpReversedWithCommas = tmpReversed.match(this._Regex_formatterInsertCommas).join(',');\n\t\t// Reverse again (back to normal direction)\n\t\treturn this.stringReverse(tmpReversedWithCommas);\n\t}\n\n\tprocessAddCommasToNumberRegex(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t{\n\t\t// If there was no decimal, the last capture grabs the final digit, so\n\t\t// we have to put it back together with the 'before' substring\n\t\treturn pSign + (pDecimal ? this.formatterInsertCommas(pBefore) + pDecimal + pAfter : this.formatterInsertCommas(pBefore + pAfter));\n\t}\n\n\t/**\n\t * Add Commas to a Number for readability.\n\t *\n\t * @param {*} pNumber\n\t * @returns {string}\n\t */\n\tformatterAddCommasToNumber (pNumber)\n\t{\n\t\t// If the regex doesn't match, `replace` returns the string unmodified\n\t\treturn (pNumber.toString()).replace\n\t\t(\n\t\t\tthis._Regex_formatterAddCommasToNumber,\n\t\t\tthis.processAddCommasToNumberRegex.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * This will take a number and format it as a dollar string.  It will also add commas to the number.  If the number is not a number, it will return '--'.\n\t *\n\t * @param {*} pValue\n\t * @returns {string}\n\t */\n\tformatterDollars (pValue)\n\t{\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tlet tmpDollarAmount = this.fable.Utility.bigDecimal.round(pValue, 2);\n\n\t\tif (isNaN(tmpDollarAmount))\n\t\t{\n\t\t\t// Try again and see if what was passed in was a dollars string.\n\t\t\tif (typeof(pValue) == 'string')\n\t\t\t{\n\t\t\t\t// TODO: Better rounding function?  This is a hack to get rid of the currency symbol and commas.\n\t\t\t\ttmpDollarAmount = parseFloat(pValue.replace(this._Value_MoneySign_Currency,'').replace(this._Regex_formatterDollarsRemoveCommas,'')).toFixed(2);\n\t\t\t}\n\t\t\t// If we didn't get a number, return the \"not a number\" string.\n\t\t\tif (isNaN(tmpDollarAmount))\n\t\t\t{\n\t\t\t\treturn this._Value_NaN_Currency;\n\t\t\t}\n\t\t}\n\n\t\t// TODO: Get locale data and use that for this stuff.\n\t\treturn `$${this.formatterAddCommasToNumber(tmpDollarAmount)}`;\n\t}\n\n\t/**\n\t * Round a number to a certain number of digits.  If the number is not a number, it will return 0.  If no digits are specified, it will default to 2 significant digits.\n\t *\n\t * @param {*} pValue\n\t * @param {number} pDigits\n\t * @returns {string}\n\t */\n\tformatterRoundNumber (pValue, pDigits)\n\t{\n\t\tlet tmpDigits = (typeof(pDigits) == 'undefined') ? 2 : pDigits;\n\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\n\t\tlet tmpValue = this.fable.Utility.bigDecimal.round(pValue, tmpDigits);\n\t\tif (isNaN(tmpValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpValue;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate a reapeating padding string to be appended before or after depending on \n\t * which padding function it uses.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringGeneratePaddingString(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpTargetLength = pTargetLength >> 0;\n\t\tlet tmpPadString = String((typeof pPadString !== 'undefined' ? pPadString : ' '));\n\t\tif (pString.length > pTargetLength)\n\t\t{\n\t\t\t// No padding string if the source string is already longer than the target length, return an empty string\n\t\t\treturn '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpPadLength = pTargetLength - pString.length;\n\t\t\tif (tmpPadLength > pPadString.length)\n\t\t\t{\n\t\t\t\tpPadString += pPadString.repeat(tmpTargetLength / pPadString.length);\n\t\t\t}\n\t\t\treturn pPadString.slice(0,tmpPadLength);\n\t\t}\n\t}\n\n\t/**\n\t * Pad the start of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadStart = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString) + tmpString;\n\t}\n\n\t/**\n\t * Pad the end of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadEnd = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn tmpString + this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString);\n\t}\n\n\t/*************************************************************************\n\t * Time Formatting Functions (milliseconds)\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Format a time length in milliseconds into a human readable string.\n\t * @param {number} pTimeSpan \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeSpan(pTimeSpan)\n\t{\n\t\tif (typeof(pTimeSpan) != 'number')\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpMs = parseInt(pTimeSpan%1000);\n\t\tlet tmpSeconds = parseInt((pTimeSpan/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeSpan/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeSpan/(1000*60*60));\n\n\t\treturn `${this.stringPadStart(tmpHours,2,'0')}:${this.stringPadStart(tmpMinutes,2,'0')}:${this.stringPadStart(tmpSeconds,2,'0')}.${this.stringPadStart(tmpMs,3,'0')}`;\n\t}\n\n\t/**\n\t * Format the time delta between two times in milliseconds into a human readable string.\n\t * \n\t * @param {number} pTimeStart \n\t * @param {number} pTimeEnd \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeDelta(pTimeStart, pTimeEnd)\n\t{\n\t\tif ((typeof(pTimeStart) != 'number') || (typeof(pTimeEnd) != 'number'))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.formatTimeSpan(pTimeEnd-pTimeStart);\n\t}\n\n\t// THE FOLLOWING TERRIBLE FUNCTIONS ARE FOR QT / WKHTMLTOPDF when luxon and moment don't work so well\n\tgetMonthFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tgetMonthAbbreviatedFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tformatSortableStringFromDate (pDate)\n\t{\n\t\treturn pDate.getFullYear()+this.stringPadStart(pDate.getMonth(),2,'0')+this.stringPadStart(pDate.getDate(),2,'0');\n\t}\n\n\t/*************************************************************************\n\t * String Tokenization Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Return the string before the matched substring.\n\t *\n\t * If the substring is not found, the entire string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringBeforeMatch (pString, pMatch)\n\t{\n\t\treturn pString.split(pMatch)[0];\n\t}\n\n\t/**\n\t * Return the string after the matched substring.\n\t *\n\t * If the substring is not found, an empty string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringAfterMatch (pString, pMatch)\n\t{\n\t\tlet tmpStringSplitLocation = pString.indexOf(pMatch);\n\n\t\tif ((tmpStringSplitLocation < 0) || ((tmpStringSplitLocation + pMatch.length) >= pString.length))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn pString.substring(tmpStringSplitLocation + pMatch.length);\n\t}\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures (pString, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\tif (tmpEnclosureDepth == 0)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t}\n\t\t\t\ttmpEnclosureDepth++;\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpEnclosureCount;\n\t}\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosedValueStartIndex = 0;\n\t\tlet tmpEnclosedValueEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This is the end of an enclosure\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t\t{\n\t\t\t// Return an empty string if the enclosure is not found\n\t\t\treturn '';\n\t\t}\n\n\t\tif ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t\t}\n\t}\n\n\n\t/**\n\t * Remove an enclosure from a string based on the index of the enclosure.\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToRemove\n\t * @param {number} pEnclosureStart\n\t * @param {number} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringRemoveEnclosureByIndex (pString, pEnclosureIndexToRemove, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToRemove = (typeof(pEnclosureIndexToRemove) == 'number') ? pEnclosureIndexToRemove : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosureStartIndex = 0;\n\t\tlet tmpEnclosureEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToRemove == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosureStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosureEndIndex <= tmpEnclosureStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToRemove)\n\t\t{\n\t\t\treturn tmpString;\n\t\t}\n\n\t\tlet tmpReturnString = '';\n\n\t\tif (tmpEnclosureStartIndex > 1)\n\t\t{\n\t\t\ttmpReturnString = tmpString.substring(0, tmpEnclosureStartIndex);\n\t\t}\n\n\t\tif ((tmpString.length > (tmpEnclosureEndIndex + 1)) && (tmpEnclosureEndIndex > tmpEnclosureStartIndex))\n\t\t{\n\t\t\ttmpReturnString += tmpString.substring(tmpEnclosureEndIndex+1);\n\t\t}\n\n\t\treturn tmpReturnString;\n\t}\n}\n\nmodule.exports = DataFormat;\n},{\"fable-serviceproviderbase\":33}],44:[function(require,module,exports){\nmodule.exports={\n\t\"DefaultIntegerMinimum\": 0,\n\t\"DefaultIntegerMaximum\": 9999999,\n\n\t\"DefaultNumericStringLength\": 10,\n\n\t\"MonthSet\": [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n\n\t\"WeekDaySet\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\n\n\t\"ColorSet\": \n\t\t[\n\t\t\t\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Blue\", \"Indigo\", \"Violet\", \"Pink\", \"Purple\", \"Turquoise\", \"Gold\",\n\t\t\t\"Lime\", \"Maroon\", \"Navy\", \"Coral\", \"Teal\", \"Brown\", \"White\", \"Black\", \"Sky\", \"Berry\",\n\t\t\t\"Grey\", \"Straw\", \"Silver\", \"Sapphire\"\n\t\t],\n\n\t\"SurNameSet\":\n\t\t[\n\t\t\t\"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Miller\", \"Davis\", \"Garcia\", \"Rodriguez\", \"Wilson\",\n\t\t\t\"Martinez\", \"Anderson\", \"Taylor\", \"Thomas\", \"Hernandez\", \"Moore\", \"Martin\", \"Jackson\", \"Thompson\", \"White\",\n\t\t\t\"Lopez\", \"Lee\", \"Gonzalez\", \"Harris\", \"Clark\", \"Lewis\", \"Robinson\", \"Walker\", \"Perez\", \"Hall\",\n\t\t\t\"Young\", \"Allen\", \"Sanchez\", \"Wright\", \"King\", \"Scott\", \"Green\", \"Baker\", \"Adams\", \"Nelson\",\n\t\t\t\"Hill\", \"Ramirez\", \"Campbell\", \"Mitchell\", \"Roberts\", \"Carter\", \"Phillips\", \"Evans\", \"Turner\", \"Torres\",\n\t\t\t\"Parker\", \"Collins\", \"Edwards\", \"Stewart\", \"Flores\", \"Morris\", \"Nguyen\", \"Murphy\", \"Rivera\", \"Cook\",\n\t\t\t\"Rogers\", \"Morgan\", \"Peterson\", \"Cooper\", \"Reed\", \"Bailey\", \"Bell\", \"Gomez\", \"Kelly\", \"Howard\",\n\t\t\t\"Ward\", \"Cox\", \"Diaz\", \"Richardson\", \"Wood\", \"Watson\", \"Brooks\", \"Bennett\", \"Gray\", \"James\",\n\t\t\t\"Reyes\", \"Cruz\", \"Hughes\", \"Price\", \"Myers\", \"Long\", \"Foster\", \"Sanders\", \"Ross\", \"Morales\",\n\t\t\t\"Powell\", \"Sullivan\", \"Russell\", \"Ortiz\", \"Jenkins\", \"Gutierrez\", \"Perry\", \"Butler\", \"Barnes\", \"Fisher\"\n\t\t],\n\n\t\"NameSet\":\n\t\t[\n\t\t\t\"Mary\", \"Patricia\", \"Jennifer\", \"Linda\", \"Elizabeth\", \"Barbara\", \"Susan\", \"Jessica\", \"Sarah\", \"Karen\",\n\t\t\t\"Lisa\", \"Nancy\", \"Betty\", \"Sandra\", \"Margaret\", \"Ashley\", \"Kimberly\", \"Emily\", \"Donna\", \"Michelle\",\n\t\t\t\"Carol\", \"Amanda\", \"Melissa\", \"Deborah\", \"Stephanie\", \"Dorothy\", \"Rebecca\", \"Sharon\", \"Laura\", \"Cynthia\",\n\t\t\t\"Amy\", \"Kathleen\", \"Angela\", \"Shirley\", \"Brenda\", \"Emma\", \"Anna\", \"Pamela\", \"Nicole\", \"Samantha\",\n\t\t\t\"Katherine\", \"Christine\", \"Helen\", \"Debra\", \"Rachel\", \"Carolyn\", \"Janet\", \"Maria\", \"Catherine\", \"Heather\",\n\t\t\t\"Diane\", \"Olivia\", \"Julie\", \"Joyce\", \"Victoria\", \"Ruth\", \"Virginia\", \"Lauren\", \"Kelly\", \"Christina\",\n\t\t\t\"Joan\", \"Evelyn\", \"Judith\", \"Andrea\", \"Hannah\", \"Megan\", \"Cheryl\", \"Jacqueline\", \"Martha\", \"Madison\",\n\t\t\t\"Teresa\", \"Gloria\", \"Sara\", \"Janice\", \"Ann\", \"Kathryn\", \"Abigail\", \"Sophia\", \"Frances\", \"Jean\",\n\t\t\t\"Alice\", \"Judy\", \"Isabella\", \"Julia\", \"Grace\", \"Amber\", \"Denise\", \"Danielle\", \"Marilyn\", \"Beverly\",\n\t\t\t\"Charlotte\", \"Natalie\", \"Theresa\", \"Diana\", \"Brittany\", \"Doris\", \"Kayla\", \"Alexis\", \"Lori\", \"Marie\",\n\t\t\t\"James\", \"Robert\", \"John\", \"Michael\", \"David\", \"William\", \"Richard\", \"Joseph\", \"Thomas\", \"Christopher\",\n\t\t\t\"Charles\", \"Daniel\", \"Matthew\", \"Anthony\", \"Mark\", \"Donald\", \"Steven\", \"Andrew\", \"Paul\", \"Joshua\",\n\t\t\t\"Kenneth\", \"Kevin\", \"Brian\", \"George\", \"Timothy\", \"Ronald\", \"Jason\", \"Edward\", \"Jeffrey\", \"Ryan\",\n\t\t\t\"Jacob\", \"Gary\", \"Nicholas\", \"Eric\", \"Jonathan\", \"Stephen\", \"Larry\", \"Justin\", \"Scott\", \"Brandon\",\n\t\t\t\"Benjamin\", \"Samuel\", \"Gregory\", \"Alexander\", \"Patrick\", \"Frank\", \"Raymond\", \"Jack\", \"Dennis\", \"Jerry\",\n\t\t\t\"Tyler\", \"Aaron\", \"Jose\", \"Adam\", \"Nathan\", \"Henry\", \"Zachary\", \"Douglas\", \"Peter\", \"Kyle\",\n\t\t\t\"Noah\", \"Ethan\", \"Jeremy\", \"Walter\", \"Christian\", \"Keith\", \"Roger\", \"Terry\", \"Austin\", \"Sean\",\n\t\t\t\"Gerald\", \"Carl\", \"Harold\", \"Dylan\", \"Arthur\", \"Lawrence\", \"Jordan\", \"Jesse\", \"Bryan\", \"Billy\",\n\t\t\t\"Bruce\", \"Gabriel\", \"Joe\", \"Logan\", \"Alan\", \"Juan\", \"Albert\", \"Willie\", \"Elijah\", \"Wayne\",\n\t\t\t\"Randy\", \"Vincent\", \"Mason\", \"Roy\", \"Ralph\", \"Bobby\", \"Russell\", \"Bradley\", \"Philip\", \"Eugene\"\n\t\t]\n}\n},{}],45:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceDataGeneration extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'DataGeneration';\n\n\t\tthis.defaultData = require('./Fable-Service-DataGeneration-DefaultValues.json');\n\t}\n\n\t// Return a random integer between pMinimum and pMaximum\n\trandomIntegerBetween(pMinimum, pMaximum)\n\t{\n\t\treturn Math.floor(Math.random() * (pMaximum - pMinimum)) + pMinimum;\n\t}\n\t// Return a random integer up to the passed-in maximum\n\trandomIntegerUpTo(pMaximum)\n\t{\n\t\treturn this.randomIntegerBetween(0, pMaximum);\n\t}\n\t// Return a random integer between 0 and 9999999\n\trandomInteger()\n\t{\n\t\treturn Math.floor(Math.random()*this.defaultData.DefaultIntegerMaximum);\n\t}\n\n\n\trandomNumericString(pLength, pMaxNumber)\n\t{\n\t\tlet tmpLength = (typeof(pLength) === 'undefined') ? 10 : pLength;\n\t\tlet tmpMaxNumber = (typeof(pMaxNumber) === 'undefined') ? ((10 ** tmpLength) - 1) : pMaxNumber;\n\n\t\treturn this.services.DataFormat.stringPadStart(this.randomIntegerUpTo(tmpMaxNumber), pLength, '0');\n\t}\n\n\n\trandomMonth()\n\t{\n\t\treturn this.defaultData.MonthSet[this.randomIntegerUpTo(this.defaultData.MonthSet.length-1)];\n\t}\n\trandomDayOfWeek()\n\t{\n\t\treturn this.defaultData.WeekDaySet[this.randomIntegerUpTo(this.defaultData.WeekDaySet.length-1)];\n\t}\n\n\n\trandomColor()\n\t{\n\t\treturn this.defaultData.ColorSet[this.randomIntegerUpTo(this.defaultData.ColorSet.length-1)];\n\t}\n\n\n\trandomName()\n\t{\n\t\treturn this.defaultData.NameSet[this.randomIntegerUpTo(this.defaultData.NameSet.length-1)];\n\t}\n\trandomSurname()\n\t{\n\t\treturn this.defaultData.SurNameSet[this.randomIntegerUpTo(this.defaultData.SurNameSet.length-1)];\n\t}\n}\n\nmodule.exports = FableServiceDataGeneration;\n},{\"../Fable-ServiceManager.js\":39,\"./Fable-Service-DataGeneration-DefaultValues.json\":44}],46:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceEnvironmentData extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'EnvironmentData';\n\n\t\tthis.Environment = `node.js`;\n\t}\n}\n\nmodule.exports = FableServiceEnvironmentData;\n},{\"../Fable-ServiceManager.js\":39}],47:[function(require,module,exports){\n(function (process){(function (){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nconst libFS = require('fs');\nconst libPath = require('path');\n\n\nclass FableServiceFilePersistence extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'FilePersistence';\n\n\t\tif (!this.options.hasOwnProperty('Mode'))\n\t\t{\n\t\t\tthis.options.Mode = parseInt('0777', 8) & ~process.umask();\n\t\t}\n\n\t\tthis.currentInputFolder = `/tmp`;\n\t\tthis.currentOutputFolder = `/tmp`;\n\t}\n\n\tjoinPath(...pPathArray)\n\t{\n\t\treturn libPath.resolve(...pPathArray);\n\t}\n\n\texistsSync(pPath)\n\t{\n\t\treturn libFS.existsSync(pPath);\n\t}\n\n\texists(pPath, fCallback)\n\t{\n\t\tlet tmpFileExists = this.existsSync(pPath);;\n\n\t\treturn fCallback(null, tmpFileExists);\n\t}\n\n\twriteFileSync(pFileName, pFileContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFileSync(pFileName, pFileContent, tmpOptions);\n\t}\n\n\tappendFileSync(pFileName, pAppendContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.appendFileSync(pFileName, pAppendContent, tmpOptions);\n\t}\n\n\tdeleteFileSync(pFileName)\n\t{\n\t\treturn libFS.unlinkSync(pFileName);\n\t}\n\n\tdeleteFolderSync(pFileName)\n\t{\n\t\treturn libFS.rmdirSync(pFileName);\n\t}\n\n\twriteFileSyncFromObject(pFileName, pObject)\n\t{\n\t\treturn this.writeFileSync(pFileName, JSON.stringify(pObject, null, 4));\n\t}\n\n\twriteFileSyncFromArray(pFileName, pFileArray)\n\t{\n\t\tif (!Array.isArray(pFileArray))\n\t\t{\n\t\t\tthis.log.error(`File Persistence Service attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).`);\n\t\t\treturn Error('Attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let i = 0; i < pFileArray.length; i++)\n\t\t\t{\n\t\t\t\treturn this.appendFileSync(pFileName, `${pFileArray[i]}\\n`);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Default folder behaviors\n\n\tgetDefaultOutputPath(pFileName)\n\t{\n\t\treturn libPath.join(this.currentOutputFolder, pFileName);\n\t}\n\n\tdataFolderWriteSync(pFileName, pFileContent)\n\t{\n\t\treturn this.writeFileSync(this.getDefaultOutputPath(pFileName), pFileContent);\n\t}\n\n\tdataFolderWriteSyncFromObject(pFileName, pObject)\n\t{\n\t\treturn this.writeFileSyncFromObject(this.getDefaultOutputPath(pFileName), pObject);\n\t}\n\n\tdataFolderWriteSyncFromArray(pFileName, pFileArray)\n\t{\n\t\treturn this.writeFileSyncFromArray(this.getDefaultOutputPath(pFileName), pFileArray);\n\t}\n\n\t// Folder management\n\tmakeFolderRecursive(pParameters, fCallback)\n\t{\n\t\tlet tmpParameters = pParameters;\n\n\t\tif (typeof(pParameters) == 'string')\n\t\t{\n\t\t\ttmpParameters = { Path: pParameters };\n\t\t}\n\t\telse if (typeof(pParameters) !== 'object')\n\t\t{\n\t\t\tfCallback(new Error('Parameters object or string not properly passed to recursive folder create.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(tmpParameters.Path) !== 'string'))\n\t\t{\n\t\t\tfCallback(new Error('Parameters object needs a path to run the folder create operation.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!tmpParameters.hasOwnProperty('Mode'))\n\t\t{\n\t\t\ttmpParameters.Mode = this.options.Mode;\n\t\t}\n\n\t\t// Check if we are just starting .. if so, build the initial state for our recursive function\n\t\tif (typeof(tmpParameters.CurrentPathIndex) === 'undefined')\n\t\t{\n\t\t\t// Build the tools to start recursing\n\t\t\ttmpParameters.ActualPath = libPath.normalize(tmpParameters.Path);\n\t\t\ttmpParameters.ActualPathParts = tmpParameters.ActualPath.split(libPath.sep);\n\t\t\ttmpParameters.CurrentPathIndex = 0;\n\t\t\ttmpParameters.CurrentPath = '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is not our first run, so we will continue the recursion.\n\t\t\t// Build the new base path\n\t\t\tif (tmpParameters.CurrentPath == libPath.sep)\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\n\t\t\t// Increment the path index\n\t\t\ttmpParameters.CurrentPathIndex++;\n\t\t}\n\n\t\t// Check if the path is fully complete\n\t\tif (tmpParameters.CurrentPathIndex >= tmpParameters.ActualPathParts.length)\n\t\t{\n\t\t\treturn fCallback(null);\n\t\t}\n\n\t\t// Check if the path exists (and is a folder)\n\t\tlibFS.open(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], 'r',\n\t\t\t(pError, pFileDescriptor)=>\n\t\t\t{\n\t\t\t\tif (pFileDescriptor)\n\t\t\t\t{\n\t\t\t\t\tlibFS.closeSync(pFileDescriptor);\n\t\t\t\t}\n\n\t\t\t\tif (pError && pError.code=='ENOENT')\n\t\t\t\t{\n\t\t\t\t\t/* Path doesn't exist, create it */\n\t\t\t\t\tlibFS.mkdir(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], tmpParameters.Mode,\n\t\t\t\t\t\t(pCreateError) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!pCreateError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// We have now created our folder and there was no error -- continue.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (pCreateError.code =='EEXIST')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// The folder exists -- our dev might be running this in parallel/async/whatnot.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(pCreateError.code);\n\t\t\t\t\t\t\t\treturn fCallback(pCreateError);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nmodule.exports = FableServiceFilePersistence;\n}).call(this)}).call(this,require('_process'))\n\n},{\"../Fable-ServiceManager.js\":39,\"_process\":78,\"fs\":18,\"path\":72}],48:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\n/**\n* Precedent Meta-Templating\n* @author      Steven Velozo <steven@velozo.com>\n* @description Process text stream trie and postfix tree, parsing out meta-template expression functions.\n*/\nconst libWordTree = require(`./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js`);\nconst libStringParser = require(`./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js`);\n\n\nclass FableServiceMetaTemplate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'MetaTemplate';\n\n\t\tthis.WordTree = new libWordTree();\n\n\t\t// In order to allow asynchronous template processing we need to use the async.eachLimit function\n\t\tthis.StringParser = new libStringParser(this.fable.services.Utility.eachLimit);\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\taddPatternAsync(pPatternStart, pPatternEnd, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternAsync(pPatternStart, pPatternEnd, pParserPromise);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData, fCallback)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceMetaTemplate;\n},{\"../Fable-ServiceManager.js\":39,\"./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js\":49,\"./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js\":50}],49:[function(require,module,exports){\n/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor(fEachLimit)\n\t{\n\t\tthis.eachLimit = fEachLimit;\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacterAsync (pCharacter, pParserState, pData, fCallback)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\treturn fCallback();\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn fCallback();\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t * @param {function} fCallback - The callback function to call when the parse is complete\n\t */\n\tparseString (pString, pParseTree, pData, fCallback)\n\t{\n\t\tif (typeof(fCallback) !== 'function')\n\t\t{\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\t\tfor (var i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: This is not fast.\n\t\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData, fCallback);\n\t\t\t}\n\n\t\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\t\treturn tmpParserState.Output;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is the async mode\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\t\t\ttmpParserState.Asynchronous = true;\n\n\t\t\tthis.eachLimit(pString, 1,\n\t\t\t\t(pCharacter, fCharacterCallback) =>\n\t\t\t\t{\n\t\t\t\t\tthis.parseCharacterAsync(pCharacter, tmpParserState, pData, fCharacterCallback);\n\t\t\t\t},\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\t// Flush the remaining data\n\t\t\t\t\tthis.flushOutputBuffer(tmpParserState);\n\t\t\t\t\tfCallback(pError, tmpParserState.Output);\n\t\t\t\t});\n\n\t\t}\n\t}\n}\n\nmodule.exports = StringParser;\n\n},{}],50:[function(require,module,exports){\n/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn tmpLeaf;\n\t}\n\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternAsync (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParser);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t}\n\t}\n}\n\nmodule.exports = WordTree;\n\n},{}],51:[function(require,module,exports){\nmodule.exports = (\n    {\n        \"Metadata\": {\n            \"UUID\": false,\n            \"Hash\": false,\n\n            \"Title\": \"\",\n            \"Summary\": \"\",\n\n            \"Version\": 0\n        },\n        \"Status\": {\n            \"Completed\": false,\n\n            \"CompletionProgress\": 0,\n            \"CompletionTimeElapsed\": 0,\n\n            \"Steps\": 1,\n            \"StepsCompleted\": 0,\n\n            \"StartTime\": 0,\n            \"EndTime\": 0\n        },\n        \"Errors\": [],\n        \"Log\": []\n    }\n);\n},{}],52:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nconst _OperationStatePrototypeString = JSON.stringify(require('./Fable-Service-Operation-DefaultSettings.js'));\n\nclass FableOperation extends libFableServiceBase\n{\n\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PhasedOperation';\n\n\t\tthis.state = JSON.parse(_OperationStatePrototypeString);\n\n\t\t// Match the service instantiation to the operation.\n\t\tthis.state.Metadata.Hash = this.Hash;\n\t\tthis.state.Metadata.UUID = this.UUID;\n\n\t\tthis.name = (typeof(this.options.Name) == 'string') ? this.options.Name : `Unnamed Operation ${this.state.Metadata.UUID}`;\n\n\t\tthis.log = this;\n\t}\n\n\twriteOperationLog(pLogLevel, pLogText, pLogObject)\n\t{\n\t\tthis.state.Log.push(`${new Date().toUTCString()} [${pLogLevel}]: ${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Log.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\twriteOperationErrors(pLogText, pLogObject)\n\t{\n\t\tthis.state.Errors.push(`${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Errors.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('TRACE', pLogText, pLogObject);\n\t\tthis.fable.log.trace(pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('DEBUG', pLogText, pLogObject);\n\t\tthis.fable.log.debug(pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('INFO', pLogText, pLogObject);\n\t\tthis.fable.log.info(pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('WARN', pLogText, pLogObject);\n\t\tthis.fable.log.warn(pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('ERROR', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.error(pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('FATAL', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.fatal(pLogText, pLogObject);\n\t}\n}\n\nmodule.exports = FableOperation;\n},{\"../Fable-ServiceManager.js\":39,\"./Fable-Service-Operation-DefaultSettings.js\":51}],53:[function(require,module,exports){\n(function (Buffer){(function (){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nconst libSimpleGet = require('simple-get');\nconst libCookie = require('cookie');\n\nclass FableServiceRestClient extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.TraceLog = false;\n\t\tif (this.options.TraceLog || this.fable.TraceLog)\n\t\t{\n\t\t\tthis.TraceLog = true;\n\t\t}\n\n\t\tthis.dataFormat = this.fable.services.DataFormat;\n\n\t\tthis.serviceType = 'RestClient';\n\n\t\tthis.cookie = false;\n\n\t\t// This is a function that can be overridden, to allow the management\n\t\t// of the request options before they are passed to the request library.\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tget simpleGet()\n\t{\n\t\treturn libSimpleGet;\n\t}\n\n\tprepareCookies(pRequestOptions)\n\t{\n\t\tif (this.cookie)\n\t\t{\n\t\t\tlet tmpCookieObject = this.cookie;\n\t\t\tif (!pRequestOptions.hasOwnProperty('headers'))\n\t\t\t{\n\t\t\t\tpRequestOptions.headers = {};\n\t\t\t}\n\t\t\tlet tmpCookieKeys = Object.keys(tmpCookieObject);\n\t\t\tif (tmpCookieKeys.length > 0)\n\t\t\t{\n\t\t\t\t// Only grab the first for now.\n\t\t\t\tpRequestOptions.headers.cookie = libCookie.serialize(tmpCookieKeys[0], tmpCookieObject[tmpCookieKeys[0]]);\t\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn pRequestOptions;\n\t}\n\n\tpreRequest(pOptions)\n\t{\n\t\t// Validate the options object\n\t\tlet tmpOptions = this.prepareCookies(pOptions);\n\t\treturn this.prepareRequestOptions(tmpOptions);\n\t}\n\n\texecuteChunkedRequest(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpData.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpData);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteChunkedRequestBinary(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\ttmpOptions.json = false;\n\t\ttmpOptions.encoding = null;\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpDataBuffer = false;\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO: Potentially create a third option that streams this to a file?  So it doesn't have to hold it all in memory.\n\t\t\t\t\t\tif (!tmpDataBuffer)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.from(pChunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.concat([tmpDataBuffer, pChunk]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpDataBuffer.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpDataBuffer);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteJSONRequest(pOptions, fCallback)\n\t{\n\t\tpOptions.json = true;\n\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\tif (!tmpOptions.hasOwnProperty('headers'))\n\t\t{\n\t\t\ttmpOptions.headers = {};\n\t\t}\n\t\t/* Automated headers break some APIs\n\t\tif (!tmpOptions.headers.hasOwnProperty('Content-Type'))\n\t\t{\n\t\t\ttmpOptions.headers['Content-Type'] = 'application/json';\n\t\t}\n\t\t*/\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} JSON request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpJSONData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpJSONData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> JSON ${tmpOptions.method} completed - received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, JSON.parse(tmpJSONData));\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetJSON(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeJSONRequest(tmpRequestOptions, fCallback);\n\t}\n\n\tputJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PUT JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PUT';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpostJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`POST JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'POST';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpatchJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PATCH JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PATCH';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\theadJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`HEAD JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'HEAD';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tdelJSON(pOptions, fCallback)\n\t{\n\t\tpOptions.method = 'DELETE';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tgetRawText(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeChunkedRequest(tmpRequestOptions, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceRestClient;\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"../Fable-ServiceManager.js\":39,\"buffer\":19,\"cookie\":24,\"simple-get\":85}],54:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceTemplate extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Template';\n\n\t\t// These are the exact regex's used in lodash/underscore\n\t\t// TODO: Switch this to precedent\n\t\tthis.Matchers = (\n\t\t\t{\n\t\t\t\tEvaluate: /<%([\\s\\S]+?)%>/g,\n\t\t\t\tInterpolate: /<%=([\\s\\S]+?)%>/g,\n\t\t\t\tEscaper: /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g,\n\t\t\t\tUnescaper: /\\\\(\\\\|'|r|n|t|u2028|u2029)/g,\n\t\t\t\t// This is how underscore does it, so we are keeping it for now.\n\t\t\t\tGuaranteedNonMatch: /.^/\n\t\t\t});\n\n\t\t// This is a helper for the escaper and unescaper functions.\n\t\t// Right now we are going to keep what underscore is doing, but, not forever.\n\t\tthis.templateEscapes = {\n\t\t\t'\\\\': '\\\\',\n\t\t\t\"'\": \"'\",\n\t\t\t'r': '\\r',\n\t\t\t'\\r': 'r',\n\t\t\t'n': '\\n',\n\t\t\t'\\n': 'n',\n\t\t\t't': '\\t',\n\t\t\t'\\t': 't',\n\t\t\t'u2028': '\\u2028',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'u2029': '\\u2029',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\t// This is defined as such to underscore that it is a dynamic programming\n\t\t// function on this class.\n\t\tthis.renderFunction = false;\n        this.templateString = false;\n\t}\n\n\trenderTemplate(pData)\n\t{\n\t\treturn this.renderFunction(pData);\n\t}\n\n\ttemplateFunction(pData)\n\t{\n\t\tlet fRenderTemplateBound = this.renderTemplate.bind(this);\n\t\treturn fRenderTemplateBound;\n\t}\n\n\tbuildTemplateFunction(pTemplateText, pData)\n\t{\n\t\t// For now this is being kept in a weird form ... this is to mimic the old\n\t\t// underscore code until this is rewritten using precedent.\n\t\tthis.TemplateSource = \"__p+='\" + pTemplateText\n\t\t\t.replace(this.Matchers.Escaper,\n\t\t\t\t(pMatch)=>\n\t\t\t\t{\n\t\t\t\t\treturn `\\\\${this.templateEscapes[pMatch]}`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Interpolate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `'+\\n(${decodeURIComponent(pCode)})+\\n'`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Evaluate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `';\\n${decodeURIComponent(pCode)}\\n;__p+='`;\n\t\t\t\t}) + `';\\n`;\n\n\n\t\tthis.TemplateSource = `with(pTemplateDataObject||{}){\\n${this.TemplateSource}}\\n`;\n\t\tthis.TemplateSource = `var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n${this.TemplateSource}return __p;\\n`;\n\n\t\tthis.renderFunction = new Function('pTemplateDataObject', this.TemplateSource);\n\n\t\tif (typeof(pData) != 'undefined')\n\t\t{\n\t\t\treturn this.renderFunction(pData);\n\t\t}\n\n\t\t// Provide the compiled function source as a convenience for build time\n\t\t// precompilation.\n\t\tthis.TemplateSourceCompiled = 'function(obj){\\n' + this.TemplateSource + '}';\n\n\t\treturn this.templateFunction();\n\t}\n}\n\nmodule.exports = FableServiceTemplate;\n},{\"../Fable-ServiceManager.js\":39}],55:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\n// TODO: These are still pretty big -- consider the smaller polyfills\nconst libAsyncWaterfall = require('async.waterfall');\nconst libAsyncEachLimit = require('async.eachlimit');\n\nconst libBigDecimal = require('js-big-decimal');\n\nclass FableServiceUtility extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\tthis.templates = {};\n\n\t\t// These two functions are used extensively throughout\n\t\tthis.waterfall = libAsyncWaterfall;\n\t\tthis.eachLimit = libAsyncEachLimit;\n\n\t\tthis.bigDecimal = libBigDecimal;\n\t}\n\n\t// Underscore and lodash have a behavior, _.extend, which merges objects.\n\t// Now that es6 gives us this, use the native thingy.\n\t// Nevermind, the native thing is not stable enough across environments\n\t// Basic shallow copy\n\textend(pDestinationObject, ...pSourceObjects)\n\t{\n\t\tfor (let i = 0; i < pSourceObjects.length; i++)\n\t\t{\n\t\t\tlet tmpSourceObject = pSourceObjects[i];\n\t\t\tif (typeof(tmpSourceObject) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpObjectProperties = Object.keys(tmpSourceObject);\n\t\t\t\tfor (let k = 0; k < tmpObjectProperties.length; k++)\n\t\t\t\t{\n\t\t\t\t\tpDestinationObject[tmpObjectProperties[k]] = tmpSourceObject[tmpObjectProperties[k]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pDestinationObject;\n\t}\n\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\ttemplate(pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Template');\n\n\t\treturn tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t}\n\n\t// Build a template function from a template hash, and, register it with the service provider\n\tbuildHashedTemplate(pTemplateHash, pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.serviceManager.instantiateServiceProvider('Template', {}, pTemplateHash);\n\n\t\tthis.templates[pTemplateHash] = tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\n\t\treturn this.templates[pTemplateHash];\n\t}\n\n\t// This is a safe, modern version of chunk from underscore\n\t// Algorithm pulled from a mix of these two polyfills:\n\t// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\n\t// https://youmightnotneed.com/lodash\n\t// This implementation was most tolerant in browsers.  Uglify can fix the rest.\n\tchunk (pInput, pChunkSize, pChunkCache)\n\t{\n\t\tlet tmpInputArray = [...pInput];\n\t\t// Note lodash defaults to 1, underscore defaults to 0\n\t\tlet tmpChunkSize = (typeof(pChunkSize) == 'number') ? pChunkSize : 0;\n\t\tlet tmpChunkCache = (typeof(pChunkCache) != 'undefined') ? pChunkCache : [];\n\n\t\tif (tmpChunkSize <= 0)\n\t\t{\n\t\t\treturn tmpChunkCache;\n\t\t}\n\n\t\twhile (tmpInputArray.length)\n\t\t{\n\t\t\ttmpChunkCache.push(tmpInputArray.splice(0, tmpChunkSize));\n\t\t}\n\n\t\treturn tmpChunkCache;\n\t}\n\n\t// Convert an ISO string to a javascript date object\n\t// Adapted from https://stackoverflow.com/a/54751179\n\t//\n\t// Takes strings like: 2022-11-04T11:34:45.000Z\n\t//                and: 1986-06-11T09:34:46.012Z+0200\n\t// ... and converts them into javascript timestamps, following the directions of the timezone stuff.\n\t//\n\t// This is not meant to replace the more complex libraries such as moment or luxon.\n\t// This *is* meant to be a simple, small, and fast way to convert ISO strings to dates in engines\n\t// with ultra limited JS capabilities where those don't work.\n\tisoStringToDate (pISOString)\n\t{\n\n\t\t// Split the string into an array based on the digit groups.\n\t\tlet tmpDateParts = pISOString.split( /\\D+/ );\n\n\t\t// Set up a date object with the current time.\n\t\tlet tmpReturnDate = new Date();\n\n\t\t// Track the number of hours we need to adjust the date by based on the timezone.\n\t\tlet tmpTimeZoneOffsetInHours = 0;\n\t\t// Track the number of minutes we need to adjust the date by based on the timezone.\n\t\tlet tmpTimeZoneOffsetInMinutes = 0;\n\n\t\t// Manually parse the parts of the string and set each part for the\n\t\t// date. Note: Using the UTC versions of these functions is necessary\n\t\t// because we're manually adjusting for time zones stored in the\n\t\t// string.\n\t\ttmpReturnDate.setUTCFullYear( parseInt( tmpDateParts[ 0 ] ) );\n\n\t\t// The month numbers are one \"off\" from what normal humans would expect\n\t\t// because January == 0.\n\t\ttmpReturnDate.setUTCMonth( parseInt( tmpDateParts[ 1 ] - 1 ) );\n\t\ttmpReturnDate.setUTCDate( parseInt( tmpDateParts[ 2 ] ) );\n\n\t\t// Set the time parts of the date object.\n\t\ttmpReturnDate.setUTCHours( parseInt( tmpDateParts[ 3 ] ) );\n\t\ttmpReturnDate.setUTCMinutes( parseInt( tmpDateParts[ 4 ] ) );\n\t\ttmpReturnDate.setUTCSeconds( parseInt( tmpDateParts[ 5 ] ) );\n\t\ttmpReturnDate.setUTCMilliseconds( parseInt( tmpDateParts[ 6 ] ) );\n\n\t\t// If there's a value for either the hours or minutes offset.\n\t\tif (tmpDateParts[ 7 ] || tmpDateParts[ 8 ])\n\t\t{\n\t\t\t// If there's a value for the minutes offset.\n\t\t\tif (tmpDateParts[8])\n\t\t\t{\n\t\t\t\t// Convert the minutes value into an hours value.\n\t\t\t\ttmpTimeZoneOffsetInMinutes = parseInt(tmpDateParts[8]) / 60;\n\t\t\t}\n\n\t\t\t// Add the hours and minutes values to get the total offset in hours.\n\t\t\ttmpTimeZoneOffsetInHours = parseInt(tmpDateParts[7]) + tmpTimeZoneOffsetInMinutes;\n\n\t\t\t// If the sign for the timezone is a plus to indicate the timezone is ahead of UTC time.\n\t\t\tif (pISOString.substr( -6, 1 ) == \"+\")\n\t\t\t{\n\t\t\t\t// Make the offset negative since the hours will need to be subtracted from the date.\n\t\t\t\ttmpTimeZoneOffsetInHours *= -1;\n\t\t\t}\n\t\t}\n\n\t\t// Get the current hours for the date and add the offset to get the correct time adjusted for timezone.\n\t\ttmpReturnDate.setHours( tmpReturnDate.getHours() + tmpTimeZoneOffsetInHours );\n\n\t\t// Return the Date object calculated from the string.\n\t\treturn tmpReturnDate;\n\t}\n}\n\nmodule.exports = FableServiceUtility;\n},{\"../Fable-ServiceManager.js\":39,\"async.eachlimit\":1,\"async.waterfall\":15,\"js-big-decimal\":59}],56:[function(require,module,exports){\nvar http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n\n},{\"http\":86,\"url\":107}],57:[function(require,module,exports){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],58:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n\n},{}],59:[function(require,module,exports){\n(function (global){(function (){\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bigDecimal\"] = factory();\n\telse\n\t\troot[\"bigDecimal\"] = factory();\n})(global, function() {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 165:\n/***/ (function(__unused_webpack_module, exports) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.abs = void 0;\nfunction abs(n) {\n    if (typeof n == 'number' || typeof n == 'bigint')\n        n = n.toString();\n    if (n[0] == '-')\n        return n.substring(1);\n    return n;\n}\nexports.abs = abs;\n\n\n/***/ }),\n\n/***/ 217:\n/***/ (function(__unused_webpack_module, exports) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pad = exports.trim = exports.add = void 0;\n//function add {\nfunction add(number1, number2) {\n    var _a;\n    if (number2 === void 0) { number2 = \"0\"; }\n    var neg = 0, ind = -1, neg_len;\n    //check for negatives\n    if (number1[0] == '-') {\n        number1 = number1.substring(1);\n        if (!testZero(number1)) {\n            neg++;\n            ind = 1;\n            neg_len = number1.length;\n        }\n    }\n    if (number2[0] == '-') {\n        number2 = number2.substring(1);\n        if (!testZero(number2)) {\n            neg++;\n            ind = 2;\n            neg_len = number2.length;\n        }\n    }\n    number1 = trim(number1);\n    number2 = trim(number2);\n    _a = pad(trim(number1), trim(number2)), number1 = _a[0], number2 = _a[1];\n    if (neg == 1) {\n        if (ind === 1)\n            number1 = compliment(number1);\n        else if (ind === 2)\n            number2 = compliment(number2);\n    }\n    var res = addCore(number1, number2);\n    if (!neg)\n        return trim(res);\n    else if (neg == 2)\n        return ('-' + trim(res));\n    else {\n        if (number1.length < (res.length))\n            return trim(res.substring(1));\n        else\n            return ('-' + trim(compliment(res)));\n    }\n}\nexports.add = add;\nfunction compliment(number) {\n    if (testZero(number)) {\n        return number;\n    }\n    var s = '', l = number.length, dec = number.split('.')[1], ld = dec ? dec.length : 0;\n    for (var i = 0; i < l; i++) {\n        if (number[i] >= '0' && number[i] <= '9')\n            s += (9 - parseInt(number[i]));\n        else\n            s += number[i];\n    }\n    var one = (ld > 0) ? ('0.' + (new Array(ld)).join('0') + '1') : '1';\n    return addCore(s, one);\n}\nfunction trim(number) {\n    var parts = number.split('.');\n    if (!parts[0])\n        parts[0] = '0';\n    while (parts[0][0] == '0' && parts[0].length > 1)\n        parts[0] = parts[0].substring(1);\n    return parts[0] + (parts[1] ? ('.' + parts[1]) : '');\n}\nexports.trim = trim;\nfunction pad(number1, number2) {\n    var parts1 = number1.split('.'), parts2 = number2.split('.');\n    //pad integral part\n    var length1 = parts1[0].length, length2 = parts2[0].length;\n    if (length1 > length2) {\n        parts2[0] = (new Array(Math.abs(length1 - length2) + 1)).join('0') + (parts2[0] ? parts2[0] : '');\n    }\n    else {\n        parts1[0] = (new Array(Math.abs(length1 - length2) + 1)).join('0') + (parts1[0] ? parts1[0] : '');\n    }\n    //pad fractional part\n    length1 = parts1[1] ? parts1[1].length : 0,\n        length2 = parts2[1] ? parts2[1].length : 0;\n    if (length1 || length2) {\n        if (length1 > length2) {\n            parts2[1] = (parts2[1] ? parts2[1] : '') + (new Array(Math.abs(length1 - length2) + 1)).join('0');\n        }\n        else {\n            parts1[1] = (parts1[1] ? parts1[1] : '') + (new Array(Math.abs(length1 - length2) + 1)).join('0');\n        }\n    }\n    number1 = parts1[0] + ((parts1[1]) ? ('.' + parts1[1]) : '');\n    number2 = parts2[0] + ((parts2[1]) ? ('.' + parts2[1]) : '');\n    return [number1, number2];\n}\nexports.pad = pad;\nfunction addCore(number1, number2) {\n    var _a;\n    _a = pad(number1, number2), number1 = _a[0], number2 = _a[1];\n    var sum = '', carry = 0;\n    for (var i = number1.length - 1; i >= 0; i--) {\n        if (number1[i] === '.') {\n            sum = '.' + sum;\n            continue;\n        }\n        var temp = parseInt(number1[i]) + parseInt(number2[i]) + carry;\n        sum = (temp % 10) + sum;\n        carry = Math.floor(temp / 10);\n    }\n    return carry ? (carry.toString() + sum) : sum;\n}\nfunction testZero(number) {\n    return (/^0[0]*[.]{0,1}[0]*$/.test(number));\n}\n\n\n/***/ }),\n\n/***/ 423:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\n\nvar add_1 = __webpack_require__(217);\nvar abs_1 = __webpack_require__(165);\nvar round_1 = __webpack_require__(350);\nvar multiply_1 = __webpack_require__(182);\nvar divide_1 = __webpack_require__(415);\nvar modulus_1 = __webpack_require__(213);\nvar compareTo_1 = __webpack_require__(664);\nvar subtract_1 = __webpack_require__(26);\nvar roundingModes_1 = __webpack_require__(916);\nvar bigDecimal = /** @class */ (function () {\n    function bigDecimal(number) {\n        if (number === void 0) { number = '0'; }\n        this.value = bigDecimal.validate(number);\n    }\n    bigDecimal.validate = function (number) {\n        if (number) {\n            number = number.toString();\n            if (isNaN(number))\n                throw Error(\"Parameter is not a number: \" + number);\n            if (number[0] == '+')\n                number = number.substring(1);\n        }\n        else\n            number = '0';\n        //handle missing leading zero\n        if (number.startsWith('.'))\n            number = '0' + number;\n        else if (number.startsWith('-.'))\n            number = '-0' + number.substr(1);\n        //handle exponentiation\n        if (/e/i.test(number)) {\n            var _a = number.split(/[eE]/), mantisa = _a[0], exponent = _a[1];\n            mantisa = (0, add_1.trim)(mantisa);\n            var sign = '';\n            if (mantisa[0] == '-') {\n                sign = '-';\n                mantisa = mantisa.substring(1);\n            }\n            if (mantisa.indexOf('.') >= 0) {\n                exponent = parseInt(exponent) + mantisa.indexOf('.');\n                mantisa = mantisa.replace('.', '');\n            }\n            else {\n                exponent = parseInt(exponent) + mantisa.length;\n            }\n            if (mantisa.length < exponent) {\n                number = sign + mantisa + (new Array(exponent - mantisa.length + 1)).join('0');\n            }\n            else if (mantisa.length >= exponent && exponent > 0) {\n                number = sign + (0, add_1.trim)(mantisa.substring(0, exponent)) +\n                    ((mantisa.length > exponent) ? ('.' + mantisa.substring(exponent)) : '');\n            }\n            else {\n                number = sign + '0.' + (new Array(-exponent + 1)).join('0') + mantisa;\n            }\n        }\n        return number;\n    };\n    bigDecimal.prototype.getValue = function () {\n        return this.value;\n    };\n    bigDecimal.prototype.setValue = function (num) {\n        this.value = bigDecimal.validate(num);\n    };\n    bigDecimal.getPrettyValue = function (number, digits, separator) {\n        if (!(digits || separator)) {\n            digits = 3;\n            separator = ',';\n        }\n        else if (!(digits && separator)) {\n            throw Error('Illegal Arguments. Should pass both digits and separator or pass none');\n        }\n        number = bigDecimal.validate(number);\n        var neg = number.charAt(0) == '-';\n        if (neg)\n            number = number.substring(1);\n        var len = number.indexOf('.');\n        len = len > 0 ? len : (number.length);\n        var temp = '';\n        for (var i = len; i > 0;) {\n            if (i < digits) {\n                digits = i;\n                i = 0;\n            }\n            else\n                i -= digits;\n            temp = number.substring(i, i + digits) + ((i < (len - digits) && i >= 0) ? separator : '') + temp;\n        }\n        return (neg ? '-' : '') + temp + number.substring(len);\n    };\n    bigDecimal.prototype.getPrettyValue = function (digits, separator) {\n        return bigDecimal.getPrettyValue(this.value, digits, separator);\n    };\n    bigDecimal.round = function (number, precision, mode) {\n        if (precision === void 0) { precision = 0; }\n        if (mode === void 0) { mode = roundingModes_1.RoundingModes.HALF_EVEN; }\n        number = bigDecimal.validate(number);\n        // console.log(number)\n        if (isNaN(precision))\n            throw Error(\"Precision is not a number: \" + precision);\n        return (0, round_1.roundOff)(number, precision, mode);\n    };\n    bigDecimal.prototype.round = function (precision, mode) {\n        if (precision === void 0) { precision = 0; }\n        if (mode === void 0) { mode = roundingModes_1.RoundingModes.HALF_EVEN; }\n        if (isNaN(precision))\n            throw Error(\"Precision is not a number: \" + precision);\n        return new bigDecimal((0, round_1.roundOff)(this.value, precision, mode));\n    };\n    bigDecimal.abs = function (number) {\n        number = bigDecimal.validate(number);\n        return (0, abs_1.abs)(number);\n    };\n    bigDecimal.prototype.abs = function () {\n        return new bigDecimal((0, abs_1.abs)(this.value));\n    };\n    bigDecimal.floor = function (number) {\n        number = bigDecimal.validate(number);\n        if (number.indexOf('.') === -1)\n            return number;\n        return bigDecimal.round(number, 0, roundingModes_1.RoundingModes.FLOOR);\n    };\n    bigDecimal.prototype.floor = function () {\n        if (this.value.indexOf('.') === -1)\n            return new bigDecimal(this.value);\n        return new bigDecimal(this.value).round(0, roundingModes_1.RoundingModes.FLOOR);\n    };\n    bigDecimal.ceil = function (number) {\n        number = bigDecimal.validate(number);\n        if (number.indexOf('.') === -1)\n            return number;\n        return bigDecimal.round(number, 0, roundingModes_1.RoundingModes.CEILING);\n    };\n    bigDecimal.prototype.ceil = function () {\n        if (this.value.indexOf('.') === -1)\n            return new bigDecimal(this.value);\n        return new bigDecimal(this.value).round(0, roundingModes_1.RoundingModes.CEILING);\n    };\n    bigDecimal.add = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return (0, add_1.add)(number1, number2);\n    };\n    bigDecimal.prototype.add = function (number) {\n        return new bigDecimal((0, add_1.add)(this.value, number.getValue()));\n    };\n    bigDecimal.subtract = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return (0, subtract_1.subtract)(number1, number2);\n    };\n    bigDecimal.prototype.subtract = function (number) {\n        return new bigDecimal((0, subtract_1.subtract)(this.value, number.getValue()));\n    };\n    bigDecimal.multiply = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return (0, multiply_1.multiply)(number1, number2);\n    };\n    bigDecimal.prototype.multiply = function (number) {\n        return new bigDecimal((0, multiply_1.multiply)(this.value, number.getValue()));\n    };\n    bigDecimal.divide = function (number1, number2, precision) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return (0, divide_1.divide)(number1, number2, precision);\n    };\n    bigDecimal.prototype.divide = function (number, precision) {\n        return new bigDecimal((0, divide_1.divide)(this.value, number.getValue(), precision));\n    };\n    bigDecimal.modulus = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return (0, modulus_1.modulus)(number1, number2);\n    };\n    bigDecimal.prototype.modulus = function (number) {\n        return new bigDecimal((0, modulus_1.modulus)(this.value, number.getValue()));\n    };\n    bigDecimal.compareTo = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return (0, compareTo_1.compareTo)(number1, number2);\n    };\n    bigDecimal.prototype.compareTo = function (number) {\n        return (0, compareTo_1.compareTo)(this.value, number.getValue());\n    };\n    bigDecimal.negate = function (number) {\n        number = bigDecimal.validate(number);\n        return (0, subtract_1.negate)(number);\n    };\n    bigDecimal.prototype.negate = function () {\n        return new bigDecimal((0, subtract_1.negate)(this.value));\n    };\n    bigDecimal.RoundingModes = roundingModes_1.RoundingModes;\n    return bigDecimal;\n}());\nmodule.exports = bigDecimal;\n\n\n/***/ }),\n\n/***/ 664:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.compareTo = void 0;\nvar add_1 = __webpack_require__(217);\nfunction compareTo(number1, number2) {\n    var _a;\n    var negative = false;\n    if (number1[0] == '-' && number2[0] != \"-\") {\n        return -1;\n    }\n    else if (number1[0] != '-' && number2[0] == '-') {\n        return 1;\n    }\n    else if (number1[0] == '-' && number2[0] == '-') {\n        number1 = number1.substr(1);\n        number2 = number2.substr(1);\n        negative = true;\n    }\n    _a = (0, add_1.pad)(number1, number2), number1 = _a[0], number2 = _a[1];\n    if (number1.localeCompare(number2) == 0) {\n        return 0;\n    }\n    for (var i = 0; i < number1.length; i++) {\n        if (number1[i] == number2[i]) {\n            continue;\n        }\n        else if (number1[i] > number2[i]) {\n            if (negative) {\n                return -1;\n            }\n            else {\n                return 1;\n            }\n        }\n        else {\n            if (negative) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n    }\n    return 0;\n}\nexports.compareTo = compareTo;\n\n\n/***/ }),\n\n/***/ 415:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.divide = void 0;\nvar add_1 = __webpack_require__(217);\nvar round_1 = __webpack_require__(350);\nfunction divide(dividend, divisor, precission) {\n    if (precission === void 0) { precission = 8; }\n    if (divisor == 0) {\n        throw new Error('Cannot divide by 0');\n    }\n    dividend = dividend.toString();\n    divisor = divisor.toString();\n    // remove trailing zeros in decimal ISSUE#18\n    dividend = dividend.replace(/(\\.\\d*?[1-9])0+$/g, \"$1\").replace(/\\.0+$/, \"\");\n    divisor = divisor.replace(/(\\.\\d*?[1-9])0+$/g, \"$1\").replace(/\\.0+$/, \"\");\n    if (dividend == 0)\n        return '0';\n    var neg = 0;\n    if (divisor[0] == '-') {\n        divisor = divisor.substring(1);\n        neg++;\n    }\n    if (dividend[0] == '-') {\n        dividend = dividend.substring(1);\n        neg++;\n    }\n    var pt_dvsr = divisor.indexOf('.') > 0 ? divisor.length - divisor.indexOf('.') - 1 : -1;\n    divisor = (0, add_1.trim)(divisor.replace('.', ''));\n    if (pt_dvsr >= 0) {\n        var pt_dvnd = dividend.indexOf('.') > 0 ? dividend.length - dividend.indexOf('.') - 1 : -1;\n        if (pt_dvnd == -1) {\n            dividend = (0, add_1.trim)(dividend + (new Array(pt_dvsr + 1)).join('0'));\n        }\n        else {\n            if (pt_dvsr > pt_dvnd) {\n                dividend = dividend.replace('.', '');\n                dividend = (0, add_1.trim)(dividend + (new Array(pt_dvsr - pt_dvnd + 1)).join('0'));\n            }\n            else if (pt_dvsr < pt_dvnd) {\n                dividend = dividend.replace('.', '');\n                var loc = dividend.length - pt_dvnd + pt_dvsr;\n                dividend = (0, add_1.trim)(dividend.substring(0, loc) + '.' + dividend.substring(loc));\n            }\n            else if (pt_dvsr == pt_dvnd) {\n                dividend = (0, add_1.trim)(dividend.replace('.', ''));\n            }\n        }\n    }\n    var prec = 0, dl = divisor.length, rem = '0', quotent = '';\n    var dvnd = (dividend.indexOf('.') > -1 && dividend.indexOf('.') < dl) ? dividend.substring(0, dl + 1) : dividend.substring(0, dl);\n    dividend = (dividend.indexOf('.') > -1 && dividend.indexOf('.') < dl) ? dividend.substring(dl + 1) : dividend.substring(dl);\n    if (dvnd.indexOf('.') > -1) {\n        var shift = dvnd.length - dvnd.indexOf('.') - 1;\n        dvnd = dvnd.replace('.', '');\n        if (dl > dvnd.length) {\n            shift += dl - dvnd.length;\n            dvnd = dvnd + (new Array(dl - dvnd.length + 1)).join('0');\n        }\n        prec = shift;\n        quotent = '0.' + (new Array(shift)).join('0');\n    }\n    precission = precission + 2;\n    while (prec <= precission) {\n        var qt = 0;\n        while (parseInt(dvnd) >= parseInt(divisor)) {\n            dvnd = (0, add_1.add)(dvnd, '-' + divisor);\n            qt++;\n        }\n        quotent += qt;\n        if (!dividend) {\n            if (!prec)\n                quotent += '.';\n            prec++;\n            dvnd = dvnd + '0';\n        }\n        else {\n            if (dividend[0] == '.') {\n                quotent += '.';\n                prec++;\n                dividend = dividend.substring(1);\n            }\n            dvnd = dvnd + dividend.substring(0, 1);\n            dividend = dividend.substring(1);\n        }\n    }\n    return ((neg == 1) ? '-' : '') + (0, add_1.trim)((0, round_1.roundOff)(quotent, precission - 2));\n}\nexports.divide = divide;\n\n\n/***/ }),\n\n/***/ 213:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.modulus = void 0;\nvar divide_1 = __webpack_require__(415);\nvar round_1 = __webpack_require__(350);\nvar multiply_1 = __webpack_require__(182);\nvar subtract_1 = __webpack_require__(26);\nvar roundingModes_1 = __webpack_require__(916);\nfunction modulus(dividend, divisor) {\n    if (divisor == 0) {\n        throw new Error('Cannot divide by 0');\n    }\n    dividend = dividend.toString();\n    divisor = divisor.toString();\n    validate(dividend);\n    validate(divisor);\n    var sign = '';\n    if (dividend[0] == '-') {\n        sign = '-';\n        dividend = dividend.substr(1);\n    }\n    if (divisor[0] == '-') {\n        divisor = divisor.substr(1);\n    }\n    var result = (0, subtract_1.subtract)(dividend, (0, multiply_1.multiply)(divisor, (0, round_1.roundOff)((0, divide_1.divide)(dividend, divisor), 0, roundingModes_1.RoundingModes.FLOOR)));\n    return sign + result;\n}\nexports.modulus = modulus;\nfunction validate(oparand) {\n    if (oparand.indexOf('.') != -1) {\n        throw new Error('Modulus of non-integers not supported');\n    }\n}\n\n\n/***/ }),\n\n/***/ 182:\n/***/ (function(__unused_webpack_module, exports) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.multiply = void 0;\nfunction multiply(number1, number2) {\n    number1 = number1.toString();\n    number2 = number2.toString();\n    /*Filter numbers*/\n    var negative = 0;\n    if (number1[0] == '-') {\n        negative++;\n        number1 = number1.substr(1);\n    }\n    if (number2[0] == '-') {\n        negative++;\n        number2 = number2.substr(1);\n    }\n    number1 = trailZero(number1);\n    number2 = trailZero(number2);\n    var decimalLength1 = 0;\n    var decimalLength2 = 0;\n    if (number1.indexOf('.') != -1) {\n        decimalLength1 = number1.length - number1.indexOf('.') - 1;\n    }\n    if (number2.indexOf('.') != -1) {\n        decimalLength2 = number2.length - number2.indexOf('.') - 1;\n    }\n    var decimalLength = decimalLength1 + decimalLength2;\n    number1 = trailZero(number1.replace('.', ''));\n    number2 = trailZero(number2.replace('.', ''));\n    if (number1.length < number2.length) {\n        var temp = number1;\n        number1 = number2;\n        number2 = temp;\n    }\n    if (number2 == '0') {\n        return '0';\n    }\n    /*\n    * Core multiplication\n    */\n    var length = number2.length;\n    var carry = 0;\n    var positionVector = [];\n    var currentPosition = length - 1;\n    var result = \"\";\n    for (var i = 0; i < length; i++) {\n        positionVector[i] = number1.length - 1;\n    }\n    for (var i = 0; i < 2 * number1.length; i++) {\n        var sum = 0;\n        for (var j = number2.length - 1; j >= currentPosition && j >= 0; j--) {\n            if (positionVector[j] > -1 && positionVector[j] < number1.length) {\n                sum += parseInt(number1[positionVector[j]--]) * parseInt(number2[j]);\n            }\n        }\n        sum += carry;\n        carry = Math.floor(sum / 10);\n        result = sum % 10 + result;\n        currentPosition--;\n    }\n    /*\n    * Formatting result\n    */\n    result = trailZero(adjustDecimal(result, decimalLength));\n    if (negative == 1) {\n        result = '-' + result;\n    }\n    return result;\n}\nexports.multiply = multiply;\n/*\n* Add decimal point\n*/\nfunction adjustDecimal(number, decimal) {\n    if (decimal == 0)\n        return number;\n    else {\n        number = (decimal >= number.length) ? ((new Array(decimal - number.length + 1)).join('0') + number) : number;\n        return number.substr(0, number.length - decimal) + '.' + number.substr(number.length - decimal, decimal);\n    }\n}\n/*\n* Removes zero from front and back*/\nfunction trailZero(number) {\n    while (number[0] == '0') {\n        number = number.substr(1);\n    }\n    if (number.indexOf('.') != -1) {\n        while (number[number.length - 1] == '0') {\n            number = number.substr(0, number.length - 1);\n        }\n    }\n    if (number == \"\" || number == \".\") {\n        number = '0';\n    }\n    else if (number[number.length - 1] == '.') {\n        number = number.substr(0, number.length - 1);\n    }\n    if (number[0] == '.') {\n        number = '0' + number;\n    }\n    return number;\n}\n\n\n/***/ }),\n\n/***/ 350:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.roundOff = void 0;\nvar roundingModes_1 = __webpack_require__(916);\n/**\n *\n * @param input the number to round\n * @param n precision\n * @param mode Rounding Mode\n */\nfunction roundOff(input, n, mode) {\n    if (n === void 0) { n = 0; }\n    if (mode === void 0) { mode = roundingModes_1.RoundingModes.HALF_EVEN; }\n    if (mode === roundingModes_1.RoundingModes.UNNECESSARY) {\n        throw new Error(\"UNNECESSARY Rounding Mode has not yet been implemented\");\n    }\n    if (typeof (input) == 'number' || typeof (input) == 'bigint')\n        input = input.toString();\n    var neg = false;\n    if (input[0] === '-') {\n        neg = true;\n        input = input.substring(1);\n    }\n    var parts = input.split('.'), partInt = parts[0], partDec = parts[1];\n    //handle case of -ve n: roundOff(12564,-2)=12600\n    if (n < 0) {\n        n = -n;\n        if (partInt.length <= n)\n            return '0';\n        else {\n            var prefix = partInt.substr(0, partInt.length - n);\n            input = prefix + '.' + partInt.substr(partInt.length - n) + partDec;\n            prefix = roundOff(input, 0, mode);\n            return (neg ? '-' : '') + prefix + (new Array(n + 1).join('0'));\n        }\n    }\n    // handle case when integer output is desired\n    if (n == 0) {\n        var l = partInt.length;\n        if (greaterThanFive(parts[1], partInt, neg, mode)) {\n            partInt = increment(partInt);\n        }\n        return (neg && parseInt(partInt) ? '-' : '') + partInt;\n    }\n    // handle case when n>0\n    if (!parts[1]) {\n        return (neg ? '-' : '') + partInt + '.' + (new Array(n + 1).join('0'));\n    }\n    else if (parts[1].length < n) {\n        return (neg ? '-' : '') + partInt + '.' + parts[1] + (new Array(n - parts[1].length + 1).join('0'));\n    }\n    partDec = parts[1].substring(0, n);\n    var rem = parts[1].substring(n);\n    if (rem && greaterThanFive(rem, partDec, neg, mode)) {\n        partDec = increment(partDec);\n        if (partDec.length > n) {\n            return (neg ? '-' : '') + increment(partInt, parseInt(partDec[0])) + '.' + partDec.substring(1);\n        }\n    }\n    return (neg && (parseInt(partInt) || parseInt(partDec)) ? '-' : '') + partInt + '.' + partDec;\n}\nexports.roundOff = roundOff;\nfunction greaterThanFive(part, pre, neg, mode) {\n    if (!part || part === new Array(part.length + 1).join('0'))\n        return false;\n    // #region UP, DOWN, CEILING, FLOOR \n    if (mode === roundingModes_1.RoundingModes.DOWN || (!neg && mode === roundingModes_1.RoundingModes.FLOOR) ||\n        (neg && mode === roundingModes_1.RoundingModes.CEILING))\n        return false;\n    if (mode === roundingModes_1.RoundingModes.UP || (neg && mode === roundingModes_1.RoundingModes.FLOOR) ||\n        (!neg && mode === roundingModes_1.RoundingModes.CEILING))\n        return true;\n    // #endregion\n    // case when part !== five\n    var five = '5' + (new Array(part.length).join('0'));\n    if (part > five)\n        return true;\n    else if (part < five)\n        return false;\n    // case when part === five\n    switch (mode) {\n        case roundingModes_1.RoundingModes.HALF_DOWN: return false;\n        case roundingModes_1.RoundingModes.HALF_UP: return true;\n        case roundingModes_1.RoundingModes.HALF_EVEN:\n        default: return (parseInt(pre[pre.length - 1]) % 2 == 1);\n    }\n}\nfunction increment(part, c) {\n    if (c === void 0) { c = 0; }\n    if (!c)\n        c = 1;\n    if (typeof (part) == 'number')\n        part.toString();\n    var l = part.length - 1, s = '';\n    for (var i = l; i >= 0; i--) {\n        var x = parseInt(part[i]) + c;\n        if (x == 10) {\n            c = 1;\n            x = 0;\n        }\n        else {\n            c = 0;\n        }\n        s += x;\n    }\n    if (c)\n        s += c;\n    return s.split('').reverse().join('');\n}\n\n\n/***/ }),\n\n/***/ 916:\n/***/ (function(__unused_webpack_module, exports) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RoundingModes = void 0;\nvar RoundingModes;\n(function (RoundingModes) {\n    /**\n     * Rounding mode to round towards positive infinity.\n     */\n    RoundingModes[RoundingModes[\"CEILING\"] = 0] = \"CEILING\";\n    /**\n     * Rounding mode to round towards zero.\n     */\n    RoundingModes[RoundingModes[\"DOWN\"] = 1] = \"DOWN\";\n    /**\n     * Rounding mode to round towards negative infinity.\n     */\n    RoundingModes[RoundingModes[\"FLOOR\"] = 2] = \"FLOOR\";\n    /**\n     * Rounding mode to round towards \"nearest neighbor\" unless both neighbors are equidistant,\n     * in which case round down.\n     */\n    RoundingModes[RoundingModes[\"HALF_DOWN\"] = 3] = \"HALF_DOWN\";\n    /**\n     * Rounding mode to round towards the \"nearest neighbor\" unless both neighbors are equidistant,\n     * in which case, round towards the even neighbor.\n     */\n    RoundingModes[RoundingModes[\"HALF_EVEN\"] = 4] = \"HALF_EVEN\";\n    /**\n     * Rounding mode to round towards \"nearest neighbor\" unless both neighbors are equidistant,\n     * in which case round up.\n     */\n    RoundingModes[RoundingModes[\"HALF_UP\"] = 5] = \"HALF_UP\";\n    /**\n     * Rounding mode to assert that the requested operation has an exact result, hence no rounding is necessary.\n     * UNIMPLEMENTED\n     */\n    RoundingModes[RoundingModes[\"UNNECESSARY\"] = 6] = \"UNNECESSARY\";\n    /**\n     * Rounding mode to round away from zero.\n     */\n    RoundingModes[RoundingModes[\"UP\"] = 7] = \"UP\";\n})(RoundingModes = exports.RoundingModes || (exports.RoundingModes = {}));\n\n\n/***/ }),\n\n/***/ 26:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.negate = exports.subtract = void 0;\nvar add_1 = __webpack_require__(217);\nfunction subtract(number1, number2) {\n    number1 = number1.toString();\n    number2 = number2.toString();\n    number2 = negate(number2);\n    return (0, add_1.add)(number1, number2);\n}\nexports.subtract = subtract;\nfunction negate(number) {\n    if (number[0] == '-') {\n        number = number.substr(1);\n    }\n    else {\n        number = '-' + number;\n    }\n    return number;\n}\nexports.negate = negate;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \tvar __webpack_exports__ = __webpack_require__(423);\n/******/ \t\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],60:[function(require,module,exports){\n// When a boxed property is passed in, it should have quotes of some\n// kind around it.\n//\n// For instance:\n// \t\tMyValues['Name']\n// \t\tMyValues[\"Age\"]\n// \t\tMyValues[`Cost`]\n//\n// This function removes the wrapping quotes.\n//\n// Please note it *DOES NOT PARSE* template literals, so backticks just\n// end up doing the same thing as other quote types.\n//\n// TODO: Should template literals be processed?  If so what state do they have access to?  That should happen here if so.\n// TODO: Make a simple class include library with these\nconst cleanWrapCharacters = (pCharacter, pString) =>\n{\n\tif (pString.startsWith(pCharacter) && pString.endsWith(pCharacter))\n\t{\n\t\treturn pString.substring(1, pString.length - 1);\n\t}\n\telse\n\t{\n\t\treturn pString;\n\t}\n};\n\nmodule.exports = cleanWrapCharacters;\n},{}],61:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Hash Translation\n*\n* This is a very simple translation table for hashes, which allows the same schema to resolve\n* differently based on a loaded translation table.\n*\n* This is to prevent the requirement for mutating schemas over and over again when we want to\n* reuse the structure but look up data elements by different addresses.\n*\n* One side-effect of this is that a translation table can \"override\" the built-in hashes, since\n* this is always used to resolve hashes before any of the functionCallByHash(pHash, ...) perform\n* their lookups by hash.\n*\n* @class ManyfestHashTranslation\n*/\nclass ManyfestHashTranslation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n        this.translationTable = {};\n\t}\n\n    translationCount()\n    {\n        return Object.keys(this.translationTable).length;\n    }\n\n    addTranslation(pTranslation)\n    {\n        // This adds a translation in the form of:\n        // { \"SourceHash\": \"DestinationHash\", \"SecondSourceHash\":\"SecondDestinationHash\" }\n        if (typeof(pTranslation) != 'object')\n        {\n            this.logError(`Hash translation addTranslation expected a translation be type object but was passed in ${typeof(pTranslation)}`);\n            return false;\n        }\n\n        let tmpTranslationSources = Object.keys(pTranslation)\n\n        tmpTranslationSources.forEach(\n            (pTranslationSource) =>\n            {\n                if (typeof(pTranslation[pTranslationSource]) != 'string')\n                {\n                    this.logError(`Hash translation addTranslation expected a translation destination hash for [${pTranslationSource}] to be a string but the referrant was a ${typeof(pTranslation[pTranslationSource])}`);\n                }\n                else\n                {\n                    this.translationTable[pTranslationSource] = pTranslation[pTranslationSource];\n                }\n            });\n    }\n\n    removeTranslationHash(pTranslationHash)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslationHash))\n        {\n            delete this.translationTable[pTranslationHash];\n        }\n    }\n\n    // This removes translations.\n    // If passed a string, just removes the single one.\n    // If passed an object, it does all the source keys.\n    removeTranslation(pTranslation)\n    {\n        if (typeof(pTranslation) == 'string')\n        {\n            this.removeTranslationHash(pTranslation);\n            return true;\n        }\n        else if (typeof(pTranslation) == 'object')\n        {\n            let tmpTranslationSources = Object.keys(pTranslation)\n\n            tmpTranslationSources.forEach(\n                (pTranslationSource) =>\n                {\n                    this.removeTranslation(pTranslationSource);\n                });\n            return true;\n        }\n        else\n        {\n            this.logError(`Hash translation removeTranslation expected either a string or an object but the passed-in translation was type ${typeof(pTranslation)}`);\n            return false;\n        }\n    }\n\n    clearTranslations()\n    {\n        this.translationTable = {};\n    }\n\n    translate(pTranslation)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslation))\n        {\n            return this.translationTable[pTranslation];\n        }\n        else\n        {\n            return pTranslation;\n        }\n    }\n}\n\nmodule.exports = ManyfestHashTranslation;\n},{\"./Manyfest-LogToConsole.js\":62}],62:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\n\n/**\n* Manyfest simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n\n    console.log(`[Manyfest] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject));\n};\n\nmodule.exports = logToConsole;\n},{}],63:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Resolver\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressResolverCheckAddressExists\n*/\nclass ManyfestObjectAddressResolverCheckAddressExists\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// Check if an address exists.\n\t//\n\t// This is necessary because the getValueAtAddress function is ambiguous on\n\t// whether the element/property is actually there or not (it returns\n\t// undefined whether the property exists or not).  This function checks for\n\t// existance and returns true or false dependent.\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\t// TODO: Should these throw an error?\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Check if the property exists.\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName].hasOwnProperty(tmpBoxedPropertyReference);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Use the new in operator to see if the element is in the array\n\t\t\t\t\treturn (tmpBoxedPropertyNumber in pObject[tmpBoxedPropertyName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Check if the property exists\n\t\t\t\treturn pObject.hasOwnProperty(pAddress);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// Because this is an impossible address, the property doesn't exist\n\t\t\t\t\t// TODO: Should we throw an error in this condition?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverCheckAddressExists;\n},{\"./Manyfest-LogToConsole.js\":62}],64:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - DeleteValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverDeleteValue\n*/\nclass ManyfestObjectAddressResolverDeleteValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// TODO: Dry me\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Count from the end to the beginning so splice doesn't %&%#$ up the array\n\t\t\t\tfor (let i = tmpInputArray.length - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Delete elements end to beginning\n\t\t\t\t\t\ttmpInputArray.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tdelete pObject[tmpObjectPropertyName];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tdelete pObject[pAddress];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverDeleteValue;\n},{\"../source/Manyfest-ParseConditionals.js\":68,\"./Manyfest-CleanWrapCharacters.js\":60,\"./Manyfest-LogToConsole.js\":62}],65:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - GetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverGetValue\n*/\nclass ManyfestObjectAddressResolverGetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress, pParentAddress, pRootObject)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// Set the root object to the passed-in object if it isn't set yet.  This is expected to be the root object.\n\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// Adding simple back-navigation in objects\n\t\tif (tmpSeparatorIndex == 0)\n\t\t{\n\t\t\t// Given an address of \"Bundle.Contract.IDContract...Project.IDProject\" the ... would be interpreted as two back-navigations from IDContract.\n\t\t\t// When the address is passed in, though, the first . is already eliminated.  So we can count the dots.\n\t\t\tlet tmpParentAddressParts = tmpParentAddress.split('.');\n\n\t\t\tlet tmpBackNavigationCount = 0;\n\n\t\t\t// Count the number of dots\n\t\t\tfor (let i = 0; i < pAddress.length; i++)\n\t\t\t{\n\t\t\t\tif (pAddress.charAt(i) != '.')\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttmpBackNavigationCount++;\n\t\t\t}\n\n\t\t\tlet tmpParentAddressLength = tmpParentAddressParts.length - tmpBackNavigationCount;\n\n\t\t\tif (tmpParentAddressLength < 0)\n\t\t\t{\n\t\t\t\t// We are trying to back navigate more than we can.\n\t\t\t\t// TODO: Should this be undefined or should we bank out at the bottom and try to go forward?\n\t\t\t\t// This seems safest for now.\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are trying to back navigate to a parent object.\n\t\t\t\t// Recurse with the back-propagated parent address, and, the new address without the back-navigation dots.\n\t\t\t\tlet tmpRecurseAddress = pAddress.slice(tmpBackNavigationCount);\n\t\t\t\tif (tmpParentAddressLength > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpRecurseAddress = `${tmpParentAddressParts.slice(0, tmpParentAddressLength).join('.')}.${tmpRecurseAddress}`;\n\t\t\t\t}\n\t\t\t\tthis.logInfo(`Back-navigation detected.  Recursing back to address [${tmpRecurseAddress}]`);\n\t\t\t\treturn this.getValueAtAddress(tmpRootObject, tmpRecurseAddress);\n\t\t\t}\n\t\t}\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\tlet tmpOutputArray = [];\n\t\t\t\tfor (let i = 0; i < tmpInputArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOutputArray.push(tmpInputArray[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpOutputArray;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn pObject[tmpObjectPropertyName];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\treturn pObject[pAddress];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverGetValue;\n},{\"../source/Manyfest-ParseConditionals.js\":68,\"./Manyfest-CleanWrapCharacters.js\":60,\"./Manyfest-LogToConsole.js\":62}],66:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - SetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressSetValue\n*/\nclass ManyfestObjectAddressSetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyReference] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the time in recursion to set the value in the object\n\t\t\t\tpObject[pAddress] = pValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressSetValue;\n},{\"./Manyfest-CleanWrapCharacters.js\":60,\"./Manyfest-LogToConsole.js\":62}],67:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Generation\n*\n* Automagically generate addresses and properties based on a passed-in object,\n* to be used for easy creation of schemas.  Meant to simplify the lives of\n* developers wanting to create schemas without typing a bunch of stuff.\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressGeneration\n*/\nclass ManyfestObjectAddressGeneration\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// generateAddressses\n\t//\n\t// This flattens an object into a set of key:value pairs for *EVERY SINGLE\n\t// POSSIBLE ADDRESS* in the object.  It can get ... really insane really\n\t// quickly.  This is not meant to be used directly to generate schemas, but\n\t// instead as a starting point for scripts or UIs.\n\t//\n\t// This will return a mega set of key:value pairs with all possible schema\n\t// permutations and default values (when not an object) and everything else.\n\tgenerateAddressses (pObject, pBaseAddress, pSchema)\n\t{\n\t\tlet tmpBaseAddress = (typeof(pBaseAddress) == 'string') ? pBaseAddress : '';\n\t\tlet tmpSchema = (typeof(pSchema) == 'object') ? pSchema : {};\n\n\t\tlet tmpObjectType = typeof(pObject);\n\n\t\tlet tmpSchemaObjectEntry = (\n\t\t\t{\n\t\t\t\tAddress: tmpBaseAddress,\n\t\t\t\tHash: tmpBaseAddress,\n\t\t\t\tName: tmpBaseAddress,\n\t\t\t\t// This is so scripts and UI controls can force a developer to opt-in.\n\t\t\t\tInSchema: false\n\t\t\t}\n\t\t)\n\n\t\tif ((tmpObjectType == 'object') && (pObject == null))\n\t\t{\n\t\t\ttmpObjectType = 'null';\n\t\t}\n\n\t\tswitch(tmpObjectType)\n\t\t{\n\t\t\tcase 'string':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'String';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\tcase 'bigint':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Number';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\tcase 'null':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Any';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif (Array.isArray(pObject))\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Array';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < pObject.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[i], `${tmpBaseAddress}[${i}]`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Object';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t\ttmpBaseAddress += '.';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectProperties = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectProperties.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[tmpObjectProperties[i]], `${tmpBaseAddress}${tmpObjectProperties[i]}`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'symbol':\n\t\t\tcase 'function':\n\t\t\t\t// Symbols and functions neither recurse nor get added to the schema\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tmpSchema;\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressGeneration;\n},{\"./Manyfest-LogToConsole.js\":62}],68:[function(require,module,exports){\n// Given a string, parse out any conditional expressions and set whether or not to keep the record.\n//\n// For instance:\n// \t\t'files[]<<~?format,==,Thumbnail?~>>'\n//      'files[]<<~?format,==,Metadata?~>>'\n//      'files[]<<~?size,>,4000?~>>'\n//\n// The wrapping parts are the <<~? and ?~>> megabrackets.\n//\n// The function does not need to alter the string -- just check the conditionals within.\n\n// TODO: Consider making this an es6 class\n\n// Let's use indexOf since it is apparently the fastest.\nconst _ConditionalStanzaStart = '<<~?';\nconst _ConditionalStanzaStartLength = _ConditionalStanzaStart.length;\nconst _ConditionalStanzaEnd = '?~>>';\nconst _ConditionalStanzaEndLength = _ConditionalStanzaEnd.length;\n\n// Test the condition of a value in a record\nconst testCondition = (pManyfest, pRecord, pSearchAddress, pSearchComparator, pValue) =>\n{\n\tswitch(pSearchComparator)\n\t{\n\t\tcase '!=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) != pValue);\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) < pValue);\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) > pValue);\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) <= pValue);\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) >= pValue);\n\t\t\tbreak;\n\t\tcase '===':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === pValue);\n\t\t\tbreak;\n\t\tcase '==':\n\t\tdefault:\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) == pValue);\n\t\t\tbreak;\n\t}\n};\n\nconst parseConditionals = (pManyfest, pAddress, pRecord) =>\n{\n\tlet tmpKeepRecord = true;\n\n\t/*\n\t\tAlgorithm is simple:\n\n\t\t1.  Enuerate start points\n\n\t\t2.  Find stop points within each start point\n\t\t3. Check the conditional\n\t*/\n\n\tlet tmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart);\n\n\twhile (tmpStartIndex != -1)\n\t{\n\t\tlet tmpStopIndex = pAddress.indexOf(_ConditionalStanzaEnd, tmpStartIndex+_ConditionalStanzaStartLength);\n\n\t\tif (tmpStopIndex != -1)\n\t\t{\n\t\t\tlet tmpMagicComparisonPatternSet = pAddress.substring(tmpStartIndex+_ConditionalStanzaStartLength, tmpStopIndex).split(',');\n\n\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\t\t\tlet tmpSearchComparator = tmpMagicComparisonPatternSet[1];\n\t\t\tlet tmpSearchValue = tmpMagicComparisonPatternSet[2];\n\n\t\t\t// Process the piece\n\t\t\ttmpKeepRecord = tmpKeepRecord && testCondition(pManyfest, pRecord, tmpSearchAddress, tmpSearchComparator, tmpSearchValue);\n\t\t\ttmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart, tmpStopIndex+_ConditionalStanzaEndLength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpStartIndex = -1;\n\t\t}\n\t\t\n\t}\n\n\treturn tmpKeepRecord;\n}\n\nmodule.exports = parseConditionals;\n},{}],69:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Schema Manipulation Functions\n*\n* @class ManyfestSchemaManipulation\n*/\nclass ManyfestSchemaManipulation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n    // This translates the default address mappings to something different.\n    //\n    // For instance you can pass in manyfest schema descriptor object:\n    // \t{\n\t//\t  \"Address.Of.a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t//\t  \"Address.Of.b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t//  }\n    //\n    //\n    // And then an address mapping (basically a Hash->Address map)\n    //  {\n    //    \"a\": \"New.Address.Of.a\",\n    //    \"b\": \"New.Address.Of.b\"\n    //  }\n    //\n    // NOTE: This mutates the schema object permanently, altering the base hash.\n    //       If there is a collision with an existing address, it can lead to overwrites.\n    // TODO: Discuss what should happen on collisions.\n\tresolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\tif (typeof(pManyfestSchemaDescriptors) != 'object')\n\t\t{\n\t\t\tthis.logError(`Attempted to resolve address mapping but the descriptor was not an object.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof(pAddressMapping) != 'object')\n\t\t{\n\t\t\t// No mappings were passed in\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the arrays of both the schema definition and the hash mapping\n\t\tlet tmpManyfestAddresses = Object.keys(pManyfestSchemaDescriptors);\n\t\tlet tmpHashMapping = {};\n\t\ttmpManyfestAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tif (pManyfestSchemaDescriptors[pAddress].hasOwnProperty('Hash'))\n\t\t\t\t{\n\t\t\t\t\ttmpHashMapping[pManyfestSchemaDescriptors[pAddress].Hash] = pAddress;\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet tmpAddressMappingSet = Object.keys(pAddressMapping);\n\n\t\ttmpAddressMappingSet.forEach(\n\t\t\t(pInputAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpNewDescriptorAddress = pAddressMapping[pInputAddress];\n\t\t\t\tlet tmpOldDescriptorAddress = false;\n\t\t\t\tlet tmpDescriptor = false;\n\n\t\t\t\t// See if there is a matching descriptor either by Address directly or Hash\n\t\t\t\tif (pManyfestSchemaDescriptors.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = pInputAddress;\n\t\t\t\t}\n\t\t\t\telse if (tmpHashMapping.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = tmpHashMapping[pInputAddress];\n\t\t\t\t}\n\n\t\t\t\t// If there was a matching descriptor in the manifest, store it in the temporary descriptor\n\t\t\t\tif (tmpOldDescriptorAddress)\n\t\t\t\t{\n\t\t\t\t\ttmpDescriptor = pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t\tdelete pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Create a new descriptor!  Map it to the input address.\n\t\t\t\t\ttmpDescriptor = { Hash:pInputAddress };\n\t\t\t\t}\n\n\t\t\t\t// Now re-add the descriptor to the manyfest schema\n\t\t\t\tpManyfestSchemaDescriptors[tmpNewDescriptorAddress] = tmpDescriptor;\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tsafeResolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\t// This returns the descriptors as a new object, safely remapping without mutating the original schema Descriptors\n\t\tlet tmpManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptors));\n\t\tthis.resolveAddressMappings(tmpManyfestSchemaDescriptors, pAddressMapping);\n\t\treturn tmpManyfestSchemaDescriptors;\n\t}\n\n\tmergeAddressMappings(pManyfestSchemaDescriptorsDestination, pManyfestSchemaDescriptorsSource)\n\t{\n\t\tif ((typeof(pManyfestSchemaDescriptorsSource) != 'object') || (typeof(pManyfestSchemaDescriptorsDestination) != 'object'))\n\t\t{\n\t\t\tthis.logError(`Attempted to merge two schema descriptors but both were not objects.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpSource = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsSource));\n\t\tlet tmpNewManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsDestination));\n\n\t\t// The first passed-in set of descriptors takes precedence.\n\t\tlet tmpDescriptorAddresses = Object.keys(tmpSource);\n\n\t\ttmpDescriptorAddresses.forEach(\n\t\t\t(pDescriptorAddress) =>\n\t\t\t{\n\t\t\t\tif (!tmpNewManyfestSchemaDescriptors.hasOwnProperty(pDescriptorAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpNewManyfestSchemaDescriptors[pDescriptorAddress] = tmpSource[pDescriptorAddress];\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpNewManyfestSchemaDescriptors;\n\t}\n}\n\nmodule.exports = ManyfestSchemaManipulation;\n},{\"./Manyfest-LogToConsole.js\":62}],70:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\nlet libHashTranslation = require('./Manyfest-HashTranslation.js');\nlet libObjectAddressCheckAddressExists = require('./Manyfest-ObjectAddress-CheckAddressExists.js');\nlet libObjectAddressGetValue = require('./Manyfest-ObjectAddress-GetValue.js');\nlet libObjectAddressSetValue = require('./Manyfest-ObjectAddress-SetValue.js');\nlet libObjectAddressDeleteValue = require('./Manyfest-ObjectAddress-DeleteValue.js');\nlet libObjectAddressGeneration = require('./Manyfest-ObjectAddressGeneration.js');\nlet libSchemaManipulation = require('./Manyfest-SchemaManipulation.js');\n\nconst _DefaultConfiguration = { Scope:'DEFAULT', Descriptors: {} }\n\n/**\n* Manyfest object address-based descriptions and manipulations.\n*\n* @class Manyfest\n*/\nclass Manyfest extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'Manifest';\n\n\t\t// Wire in logging\n\t\tthis.logInfo = libSimpleLog;\n\t\tthis.logError = libSimpleLog;\n\n\t\t// Create an object address resolver and map in the functions\n\t\tthis.objectAddressCheckAddressExists = new libObjectAddressCheckAddressExists(this.logInfo, this.logError);\n\t\tthis.objectAddressGetValue = new libObjectAddressGetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressSetValue = new libObjectAddressSetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressDeleteValue = new libObjectAddressDeleteValue(this.logInfo, this.logError);\n\n\t\tif (!this.options.hasOwnProperty('defaultValues'))\n\t\t{\n\t\t\tthis.options.defaultValues = (\n\t\t\t\t{\n\t\t\t\t\t\"String\": \"\",\n\t\t\t\t\t\"Number\": 0,\n\t\t\t\t\t\"Float\": 0.0,\n\t\t\t\t\t\"Integer\": 0,\n\t\t\t\t\t\"Boolean\": false,\n\t\t\t\t\t\"Binary\": 0,\n\t\t\t\t\t\"DateTime\": 0,\n\t\t\t\t\t\"Array\": [],\n\t\t\t\t\t\"Object\": {},\n\t\t\t\t\t\"Null\": null\n\t\t\t\t});\n\t\t}\n\t\tif (!this.options.hasOwnProperty('strict'))\n\t\t{\n\t\t\tthis.options.strict = false;\n\t\t}\n\n\t\tthis.scope = undefined;\n\t\tthis.elementAddresses = undefined;\n\t\tthis.elementHashes = undefined;\n\t\tthis.elementDescriptors = undefined;\n\n\t\tthis.reset();\n\n\t\tif (typeof(this.options) === 'object')\n\t\t{\n\t\t\tthis.loadManifest(this.options);\n\t\t}\n\n\t\tthis.schemaManipulations = new libSchemaManipulation(this.logInfo, this.logError);\n\t\tthis.objectAddressGeneration = new libObjectAddressGeneration(this.logInfo, this.logError);\n\n\t\tthis.hashTranslations = new libHashTranslation(this.logInfo, this.logError);\n\t}\n\n\t/*************************************************************************\n\t * Schema Manifest Loading, Reading, Manipulation and Serialization Functions\n\t */\n\n\t// Reset critical manifest properties\n\treset()\n\t{\n\t\tthis.scope = 'DEFAULT';\n\t\tthis.elementAddresses = [];\n\t\tthis.elementHashes = {};\n\t\tthis.elementDescriptors = {};\n\t}\n\n\tclone()\n\t{\n\t\t// Make a copy of the options in-place\n\t\tlet tmpNewOptions = JSON.parse(JSON.stringify(this.options));\n\n\t\tlet tmpNewManyfest = new Manyfest(this.getManifest(), this.logInfo, this.logError, tmpNewOptions);\n\n\t\t// Import the hash translations\n\t\ttmpNewManyfest.hashTranslations.addTranslation(this.hashTranslations.translationTable);\n\n\t\treturn tmpNewManyfest;\n\t}\n\n\t// Deserialize a Manifest from a string\n\tdeserialize(pManifestString)\n\t{\n\t\t// TODO: Add guards for bad manifest string\n\t\treturn this.loadManifest(JSON.parse(pManifestString));\n\t}\n\n\t// Load a manifest from an object\n\tloadManifest(pManifest)\n\t{\n\t\tif (typeof(pManifest) !== 'object')\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading manifest; expecting an object but parameter was type ${typeof(pManifest)}.`);\n\t\t}\n\n\t\tlet tmpManifest = (typeof(pManifest) == 'object') ? pManifest : {};\n\n\t\tlet tmpDescriptorKeys = Object.keys(_DefaultConfiguration);\n\n\t\tfor (let i = 0; i < tmpDescriptorKeys.length; i++)\n\t\t{\n\t\t\tif (!tmpManifest.hasOwnProperty(tmpDescriptorKeys[i]))\n\t\t\t{\n\t\t\t\ttmpManifest[tmpDescriptorKeys[i]] = JSON.parse(JSON.stringify(_DefaultConfiguration[tmpDescriptorKeys[i]]));\n\t\t\t}\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Scope'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Scope) === 'string')\n\t\t\t{\n\t\t\t\tthis.scope = tmpManifest.Scope;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest; expecting a string but property was type ${typeof(tmpManifest.Scope)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest object.  Property \"Scope\" does not exist in the root of the object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Descriptors'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Descriptors) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpDescriptionAddresses = Object.keys(tmpManifest.Descriptors);\n\t\t\t\tfor (let i = 0; i < tmpDescriptionAddresses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.addDescriptor(tmpDescriptionAddresses[i], tmpManifest.Descriptors[tmpDescriptionAddresses[i]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading description object from manifest object.  Expecting an object in 'Manifest.Descriptors' but the property was type ${typeof(tmpManifest.Descriptors)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object description from manifest object.  Property \"Descriptors\" does not exist in the root of the Manifest object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('HashTranslations'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.HashTranslations) === 'object')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < tmpManifest.HashTranslations.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// Each translation is \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Serialize the Manifest to a string\n\tserialize()\n\t{\n\t\treturn JSON.stringify(this.getManifest());\n\t}\n\n\tgetManifest()\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tScope: this.scope,\n\t\t\t\tDescriptors: JSON.parse(JSON.stringify(this.elementDescriptors)),\n\t\t\t\tHashTranslations: JSON.parse(JSON.stringify(this.hashTranslations.translationTable))\n\t\t\t});\n\t}\n\n\t// Add a descriptor to the manifest\n\taddDescriptor(pAddress, pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) === 'object')\n\t\t{\n\t\t\t// Add the Address into the Descriptor if it doesn't exist:\n\t\t\tif (!pDescriptor.hasOwnProperty('Address'))\n\t\t\t{\n\t\t\t\tpDescriptor.Address = pAddress;\n\t\t\t}\n\n\t\t\tif (!this.elementDescriptors.hasOwnProperty(pAddress))\n\t\t\t{\n\t\t\t\tthis.elementAddresses.push(pAddress);\n\t\t\t}\n\n\t\t\t// Add the element descriptor to the schema\n\t\t\tthis.elementDescriptors[pAddress] = pDescriptor;\n\n\t\t\t// Always add the address as a hash\n\t\t\tthis.elementHashes[pAddress] = pAddress;\n\n\t\t\tif (pDescriptor.hasOwnProperty('Hash'))\n\t\t\t{\n\t\t\t\t// TODO: Check if this is a good idea or not..\n\t\t\t\t//       Collisions are bound to happen with both representations of the address/hash in here and developers being able to create their own hashes.\n\t\t\t\tthis.elementHashes[pDescriptor.Hash] = pAddress;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpDescriptor.Hash = pAddress;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object descriptor for address '${pAddress}' from manifest object.  Expecting an object but property was type ${typeof(pDescriptor)}.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetDescriptorByHash(pHash)\n\t{\n\t\treturn this.getDescriptor(this.resolveHashAddress(pHash));\n\t}\n\n\tgetDescriptor(pAddress)\n\t{\n\t\treturn this.elementDescriptors[pAddress];\n\t}\n\n\t// execute an action function for each descriptor\n\teachDescriptor(fAction)\n\t{\n        let tmpDescriptorAddresses = Object.keys(this.elementDescriptors);\n        for (let i = 0; i < tmpDescriptorAddresses.length; i++)\n        {\n            fAction(this.elementDescriptors[tmpDescriptorAddresses[i]]);\n        }\n\n\t}\n\n\t/*************************************************************************\n\t * Beginning of Object Manipulation (read & write) Functions\n\t */\n\t// Check if an element exists by its hash\n\tcheckAddressExistsByHash (pObject, pHash)\n\t{\n\t\treturn this.checkAddressExists(pObject,this.resolveHashAddress(pHash));\n\t}\n\n\t// Check if an element exists at an address\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\treturn this.objectAddressCheckAddressExists.checkAddressExists(pObject, pAddress);\n\t}\n\n\t// Turn a hash into an address, factoring in the translation table.\n\tresolveHashAddress(pHash)\n\t{\n\t\tlet tmpAddress = undefined;\n\n\t\tlet tmpInElementHashTable = this.elementHashes.hasOwnProperty(pHash);\n\t\tlet tmpInTranslationTable = this.hashTranslations.translationTable.hasOwnProperty(pHash);\n\n\t\t// The most straightforward: the hash exists, no translations.\n\t\tif (tmpInElementHashTable && !tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[pHash];\n\t\t}\n\t\t// There is a translation from one hash to another, and, the elementHashes contains the pointer end\n\t\telse if (tmpInTranslationTable && this.elementHashes.hasOwnProperty(this.hashTranslations.translate(pHash)))\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[this.hashTranslations.translate(pHash)];\n\t\t}\n\t\t// Use the level of indirection only in the Translation Table\n\t\telse if (tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.hashTranslations.translate(pHash);\n\t\t}\n\t\t// Just treat the hash as an address.\n\t\t// TODO: Discuss this ... it is magic but controversial\n\t\telse\n\t\t{\n\t\t\ttmpAddress = pHash;\n\t\t}\n\n\t\treturn tmpAddress;\n\t}\n\n\t// Get the value of an element by its hash\n\tgetValueByHash (pObject, pHash)\n\t{\n\t\tlet tmpValue = this.getValueAtAddress(pObject, this.resolveHashAddress(pHash));\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptorByHash(pHash));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\tlet tmpValue = this.objectAddressGetValue.getValueAtAddress(pObject, pAddress);\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptor(pAddress));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Set the value of an element by its hash\n\tsetValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.setValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressSetValue.setValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Delete the value of an element by its hash\n\tdeleteValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.deleteValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressDeleteValue.deleteValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Validate the consistency of an object against the schema\n\tvalidate(pObject)\n\t{\n\t\tlet tmpValidationData =\n\t\t{\n\t\t\tError: null,\n\t\t\tErrors: [],\n\t\t\tMissingElements:[]\n\t\t};\n\n\t\tif (typeof(pObject) !== 'object')\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Expected passed in object to be type object but was passed in ${typeof(pObject)}`);\n\t\t}\n\n\t\tlet addValidationError = (pAddress, pErrorMessage) =>\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Element at address \"${pAddress}\" ${pErrorMessage}.`);\n\t\t};\n\n\t\t// Now enumerate through the values and check for anomalies based on the schema\n\t\tfor (let i = 0; i < this.elementAddresses.length; i++)\n\t\t{\n\t\t\tlet tmpDescriptor = this.getDescriptor(this.elementAddresses[i]);\n\t\t\tlet tmpValueExists = this.checkAddressExists(pObject, tmpDescriptor.Address);\n\t\t\tlet tmpValue = this.getValueAtAddress(pObject, tmpDescriptor.Address);\n\n\t\t\tif ((typeof(tmpValue) == 'undefined') || !tmpValueExists)\n\t\t\t{\n\t\t\t\t// This will technically mean that `Object.Some.Value = undefined` will end up showing as \"missing\"\n\t\t\t\t// TODO: Do we want to do a different message based on if the property exists but is undefined?\n\t\t\t\ttmpValidationData.MissingElements.push(tmpDescriptor.Address);\n\t\t\t\tif (tmpDescriptor.Required || this.options.strict)\n\t\t\t\t{\n\t\t\t\t\taddValidationError(tmpDescriptor.Address, 'is flagged REQUIRED but is not set in the object');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now see if there is a data type specified for this element\n\t\t\tif (tmpDescriptor.DataType)\n\t\t\t{\n\t\t\t\tlet tmpElementType = typeof(tmpValue);\n\t\t\t\tswitch(tmpDescriptor.DataType.toString().trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpValueString = tmpValue.toString();\n\t\t\t\t\t\t\tif (tmpValueString.indexOf('.') > -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// TODO: Is this an error?\n\t\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but has a decimal point in the number.`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DateTime':\n\t\t\t\t\t\tlet tmpValueDate = new Date(tmpValue);\n\t\t\t\t\t\tif (tmpValueDate.toString() == 'Invalid Date')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is not parsable as a Date by Javascript`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Check if this is a string, in the default case\n\t\t\t\t\t\t// Note this is only when a DataType is specified and it is an unrecognized data type.\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} (which auto-converted to String because it was unrecognized) but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpValidationData;\n\t}\n\n\t// Returns a default value, or, the default value for the data type (which is overridable with configuration)\n\tgetDefaultValue(pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) != 'object')\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (pDescriptor.hasOwnProperty('Default'))\n\t\t{\n\t\t\treturn pDescriptor.Default;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Default to a null if it doesn't have a type specified.\n\t\t\t// This will ensure a placeholder is created but isn't misinterpreted.\n\t\t\tlet tmpDataType = (pDescriptor.hasOwnProperty('DataType')) ? pDescriptor.DataType : 'String';\n\t\t\tif (this.options.defaultValues.hasOwnProperty(tmpDataType))\n\t\t\t{\n\t\t\t\treturn this.options.defaultValues[tmpDataType];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// give up and return null\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enumerate through the schema and populate default values if they don't exist.\n\tpopulateDefaults(pObject, pOverwriteProperties)\n\t{\n\t\treturn this.populateObject(pObject, pOverwriteProperties,\n\t\t\t// This just sets up a simple filter to see if there is a default set.\n\t\t\t(pDescriptor) =>\n\t\t\t{\n\t\t\t\treturn pDescriptor.hasOwnProperty('Default');\n\t\t\t});\n\t}\n\n\t// Forcefully populate all values even if they don't have defaults.\n\t// Based on type, this can do unexpected things.\n\tpopulateObject(pObject, pOverwriteProperties, fFilter)\n\t{\n\t\t// Automatically create an object if one isn't passed in.\n\t\tlet tmpObject = (typeof(pObject) === 'object') ? pObject : {};\n\t\t// Default to *NOT OVERWRITING* properties\n\t\tlet tmpOverwriteProperties = (typeof(pOverwriteProperties) == 'undefined') ? false : pOverwriteProperties;\n\t\t// This is a filter function, which is passed the schema and allows complex filtering of population\n\t\t// The default filter function just returns true, populating everything.\n\t\tlet tmpFilterFunction = (typeof(fFilter) == 'function') ? fFilter : (pDescriptor) => { return true; };\n\n\t\tthis.elementAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpDescriptor = this.getDescriptor(pAddress);\n\t\t\t\t// Check the filter function to see if this is an address we want to set the value for.\n\t\t\t\tif (tmpFilterFunction(tmpDescriptor))\n\t\t\t\t{\n\t\t\t\t\t// If we are overwriting properties OR the property does not exist\n\t\t\t\t\tif (tmpOverwriteProperties || !this.checkAddressExists(tmpObject, pAddress))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setValueAtAddress(tmpObject, pAddress, this.getDefaultValue(tmpDescriptor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpObject;\n\t}\n};\n\nmodule.exports = Manyfest;\n},{\"./Manyfest-HashTranslation.js\":61,\"./Manyfest-LogToConsole.js\":62,\"./Manyfest-ObjectAddress-CheckAddressExists.js\":63,\"./Manyfest-ObjectAddress-DeleteValue.js\":64,\"./Manyfest-ObjectAddress-GetValue.js\":65,\"./Manyfest-ObjectAddress-SetValue.js\":66,\"./Manyfest-ObjectAddressGeneration.js\":67,\"./Manyfest-SchemaManipulation.js\":69,\"fable-serviceproviderbase\":33}],71:[function(require,module,exports){\nvar wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n\n},{\"wrappy\":110}],72:[function(require,module,exports){\n(function (process){(function (){\n// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":78}],73:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase')\n\nconst defaultPictSettings = (\n\t{\n\t\tName: 'DefaultPictApplication',\n\n\t\t// The main \"viewport\" is the view that is used to host our application\n\t\tMainViewportViewIdentifier: 'Default-View',\n\t\tMainViewportRenderableHash: false,\n\t\tMainViewportDestinationAddress: false,\n\t\tMainViewportDefaultDataAddress: false,\n\n\t\t// Whether or not we should automatically render the main viewport after we initialize the pict application\n\t\tAutoSolveAfterInitialize: true,\n\t\tAutoRenderMainViewportViewAfterInitialize: true,\n\n\t\tManifests: {},\n\t\t// The prefix to prepend on all template destination hashes\n\t\tIdentifierAddressPrefix: 'PICT-'\n\t});\n\nclass PictApplication extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tthis.serviceType = 'PictApplication';\n\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict state\n\t\tthis.AppData = this.fable.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\n\t\t// Load all the manifests for the application\n\t\tlet tmpManifestKeys = Object.keys(this.options.Manifests);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++)\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.fable.serviceManager.instantiateServiceProvider('Manifest', this.options.Manifests[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing solve() function...`)\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpViewsToSolve[i].solve();\n\t\t}\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\t// Walk through any loaded views and solve them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoSolveWithApp)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoSolveOrdinal - b.options.AutoSolveOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToSolve[i].solveAsync.bind(tmpViewsToSolve[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\ttmpViewsToInitialize[i].initialize();\n\t\t\t}\n\t\t\tthis.onAfterInitialize();\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Solve the template synchronously\n\t\t\t\tthis.solve();\n\t\t\t}\n\t\t\t// Now check and see if we should automatically render as well\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Render the template synchronously\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallBack)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\t// TODO: Some optimization cleverness could be gained by grouping them into a parallelized async operation, by ordinal.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority\n\t\t\t// If they are all the default priority 0, it will end up being add order due to JSON Object Property Key order stuff\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = tmpViewsToInitialize[i];\n\t\t\t\ttmpAnticipate.anticipate(tmpView.initializeAsync.bind(tmpView));\n\t\t\t}\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.solveAsync.bind(this));\n\t\t\t}\n\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.renderMainViewportAsync.bind(this));\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallBack();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\trender(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\t// Now get the view (by hash) from the loaded views\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not render from View ${tmpViewIdentifier} because it is not a valid view.`);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn tmpView.render(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress);\n\t}\n\trenderMainViewport()\n\t{\n\t\treturn this.render(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress);\n\t}\n\n\trenderAsync(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tlet tmpErrorMessage = `PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not asynchronously render from View ${tmpViewIdentifier} because it is not a valid view.`;\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.error(tmpErrorMessage);\n\t\t\t}\n\t\t\treturn fCallback(new Error(tmpErrorMessage));\n\t\t}\n\n\t\treturn tmpView.renderAsync(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress, fCallback);\n\t}\n\trenderMainViewportAsync(fCallback)\n\t{\n\t\treturn this.renderAsync(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress, fCallback);\n\t}\n}\n\nmodule.exports = PictApplication;\n},{\"fable-serviceproviderbase\":33}],74:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst defaultPictViewSettings = (\n\t{\n\t\tDefaultRenderable: false,\n\t\tDefaultDestinationAddress: false,\n\t\tDefaultTemplateRecordAddress: false,\n\n\t\tViewIdentifier: false,\n\n\t\t// If this is set to true, when the App initializes this will.\n\t\t// After the App initializes, initialize will be called as soon as it's added.\n\t\tAutoInitialize: true,\n\t\tAutoInitializeOrdinal: 0,\n\n\t\t// If this is set to true, when the App autorenders (on load) this will.\n\t\t// After the App initializes, render will be called as soon as it's added.\n\t\tAutoRender: true,\n\t\tAutoRenderOrdinal: 0,\n\n\t\tAutoSolveWithApp: true,\n\t\tAutoSolveOrdinal: 0,\n\n\t\tCSSHash: false,\n\t\tCSS: false,\n\t\tCSSProvider: false,\n\t\tCSSPriority: 500,\n\n\t\tTemplates: [],\n\n\t\tDefaultTemplates: [],\n\n\t\tRenderables: [],\n\n\t\tManifests: {}\n\t});\n\nclass PictView extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Intersect default options, parent constructor, service information\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictViewSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tif (!this.options.ViewIdentifier)\n\t\t{\n\t\t\tthis.options.ViewIdentifier = `AutoViewID-${this.fable.getUUID()}`;\n\t\t}\n\t\tthis.serviceType = 'PictView';\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict application state\n\t\tthis.AppData = this.pict.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastRenderedTimestamp = false;\n\n\t\t// Load all templates from the array in the options\n\t\t// Templates are in the form of {Hash:'Some-Template-Hash',Template:'Template content',Source:'TemplateSource'}\n\t\tfor (let i = 0; i < this.options.Templates.length; i++)\n\t\t{\n\t\t\tlet tmpTemplate = this.options.Templates[i];\n\n\t\t\tif (!tmpTemplate.hasOwnProperty('Hash') || !tmpTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Template ${i} in the options array.`, tmpTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addTemplate(tmpTemplate.Hash, tmpTemplate.Template, tmpTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load all default templates from the array in the options\n\t\t// Templates are in the form of {Prefix:'',Postfix:'-List-Row',Template:'Template content',Source:'TemplateSourceString'}\n\t\tfor (let i = 0; i < this.options.DefaultTemplates.length; i++)\n\t\t{\n\t\t\tlet tmpDefaultTemplate = this.options.DefaultTemplates[i];\n\n\t\t\tif (!tmpDefaultTemplate.hasOwnProperty('Postfix') || !tmpDefaultTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Default Template ${i} in the options array.`, tmpDefaultTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpDefaultTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpDefaultTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addDefaultTemplate(tmpDefaultTemplate.Prefix, tmpDefaultTemplate.Postfix, tmpDefaultTemplate.Template, tmpDefaultTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load the CSS if it's available\n\t\tif (this.options.CSS)\n\t\t{\n\t\t\tlet tmpCSSHash = this.options.CSSHash ? this.options.CSSHash : `View-${this.options.ViewIdentifier}`;\n\t\t\tlet tmpCSSProvider = this.options.CSSProvider ? this.options.CSSProvider : tmpCSSHash;\n\t\t\tthis.pict.CSSMap.addCSS(tmpCSSHash, this.options.CSS, tmpCSSProvider, this.options.CSSPriority);\n\t\t}\n\n\t\t// Load all renderables\n\t\t// Renderables are launchable renderable instructions with templates\n\t\t// They look as such: {Identifier:'ContentEntry', TemplateHash:'Content-Entry-Section-Main', ContentDestinationAddress:'#ContentSection', RecordAddress:'AppData.Content.DefaultText', ManifestTransformation:'ManyfestHash', ManifestDestinationAddress:'AppData.Content.DataToTransformContent'}\n\t\t// The only parts that are necessary are Identifier and Template\n\t\t// A developer can then do render('ContentEntry') and it just kinda works.  Or they can override the ContentDestinationAddress\n\t\tthis.renderables = {};\n\t\tfor (let i = 0; i < this.options.Renderables.length; i++)\n\t\t{\n\t\t\tlet tmpRenderable = this.options.Renderables[i];\n\t\t\tthis.addRenderable(this.options.Renderables[i]);\n\t\t}\n\t}\n\n\taddRenderable(pRenderableHash, pTemplateHash, pDefaultTemplateDataAddress, pDefaultDestinationAddress, pRenderMethod)\n\t{\n\t\tlet tmpRenderable = false;\n\n\t\tif (typeof(pRenderableHash) == 'object')\n\t\t{\n\t\t\t// The developer passed in the renderable as an object.\n\t\t\t// Use theirs instead!\n\t\t\ttmpRenderable = pRenderableHash;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpRenderMethod = (typeof(pRenderMethod) !== 'string') ? pRenderMethod : 'replace';\n\t\t\ttmpRenderable = (\n\t\t\t\t{\n\t\t\t\t\tRenderableHash: pRenderableHash,\n\t\t\t\t\tTemplateHash: pTemplateHash,\n\t\t\t\t\tDefaultTemplateDataAddress: pDefaultTemplateDataAddress,\n\t\t\t\t\tDefaultDestinationAddress: pDefaultDestinationAddress,\n\t\t\t\t\tRenderMethod: tmpRenderMethod\n\t\t\t\t});\n\t\t}\n\n\t\tif ((typeof(tmpRenderable.RenderableHash) != 'string') || (typeof(tmpRenderable.TemplateHash) != 'string'))\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Renderable; RenderableHash or TemplateHash are invalid.`, tmpRenderable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} adding renderable [${tmpRenderable.RenderableHash}] pointed to template ${tmpRenderable.TemplateHash}.`);\n\t\t\t}\n\n\t\t\tthis.renderables[tmpRenderable.RenderableHash] = tmpRenderable;\n\t\t}\n\t}\n\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\tthis.onAfterInitialize();\n\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallback)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallback();\n\t\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonBeforeRender(pRenderable, pRenderDestinationAddress, pData)\n\t{\n\t\t// Overload this to mess with stuff before the content gets generated from the template\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeRenderAsync(pRenderable, pRenderDestinationAddress, pData, fCallback)\n\t{\n\t\tthis.onBeforeRender(pRenderable, pRenderDestinationAddress, pData);\n\t\treturn fCallback();\n\t}\n\n\trender(pRenderable, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it is not a valid renderable.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\tlet tmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\t// Generate the content output from the template and data\n\t\tlet tmpContent = this.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData)\n\n\t\t// Assign the content to the destination address\n\t\tswitch(tmpRenderable.RenderMethod)\n\t\t{\n\t\t\tcase 'append':\n\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'prepend':\n\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'append_once':\n\t\t\t\t// Try to find the content in the destination address\n\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t{\n\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\t}\n\t\t\tcase 'replace':\n\t\t\tdefault:\n\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Execute the developer-overridable post-render behavior\n\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, tmpContent)\n\n\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\t}\n\trenderAsync(pRenderable, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`));\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`));\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn fCallback(Error(`Could not render ${tmpRenderableHash}`));\n\t\t}\n\n\t\tlet tmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\tlet tmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\t// Render the template (asynchronously)\n\t\tthis.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData,\n\t\t\t(pError, pContent) =>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render (asynchronously) ${tmpRenderableHash} (param ${pRenderable}) because it did not parse the template.`, pError);\n\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t}\n\n\t\t\t\t// Assign the content to the destination address\n\t\t\t\tswitch(tmpRenderable.RenderMethod)\n\t\t\t\t{\n\t\t\t\t\tcase 'append':\n\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'prepend':\n\t\t\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'append_once':\n\t\t\t\t\t\t// Try to find the content in the destination address\n\t\t\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'replace':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Execute the developer-overridable post-render behavior\n\t\t\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, pContent)\n\n\t\t\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\t\t\treturn fCallback(null, pContent);\n\t\t\t});\n\t}\n\n\tonAfterRender()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterRenderAsync(fCallback)\n\t{\n\t\tthis.onAfterRender();\n\t\treturn fCallback();\n\t}\n}\n\nmodule.exports = PictView;\n},{\"fable-serviceproviderbase\":33}],75:[function(require,module,exports){\n/**\n* Precedent Meta-Templating\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Process text streams, parsing out meta-template expressions.\n*/\nvar libWordTree = require(`./WordTree.js`);\nvar libStringParser = require(`./StringParser.js`);\n\nclass Precedent\n{\n\t/**\n\t * Precedent Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser();\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData);\n\t}\n}\n\nmodule.exports = Precedent;\n\n},{\"./StringParser.js\":76,\"./WordTree.js\":77}],76:[function(require,module,exports){\n/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t */\n\tparseString (pString, pParseTree, pData)\n\t{\n\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\tfor (var i = 0; i < pString.length; i++)\n\t\t{\n\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData);\n\t\t}\n\n\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\treturn tmpParserState.Output;\n\t}\n}\n\nmodule.exports = StringParser;\n\n},{}],77:[function(require,module,exports){\n/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n\n},{}],78:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],79:[function(require,module,exports){\n(function (global){(function (){\n/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],80:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],81:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],82:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":80,\"./encode\":81}],83:[function(require,module,exports){\n/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n},{\"buffer\":19}],84:[function(require,module,exports){\n(function (Buffer){(function (){\n/*! simple-concat. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function (stream, cb) {\n  var chunks = []\n  stream.on('data', function (chunk) {\n    chunks.push(chunk)\n  })\n  stream.once('end', function () {\n    if (cb) cb(null, Buffer.concat(chunks))\n    cb = null\n  })\n  stream.once('error', function (err) {\n    if (cb) cb(err)\n    cb = null\n  })\n}\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":19}],85:[function(require,module,exports){\n(function (Buffer){(function (){\n/*! simple-get. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = simpleGet\n\nconst concat = require('simple-concat')\nconst decompressResponse = require('decompress-response') // excluded from browser build\nconst http = require('http')\nconst https = require('https')\nconst once = require('once')\nconst querystring = require('querystring')\nconst url = require('url')\n\nconst isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'\n\nfunction simpleGet (opts, cb) {\n  opts = Object.assign({ maxRedirects: 10 }, typeof opts === 'string' ? { url: opts } : opts)\n  cb = once(cb)\n\n  if (opts.url) {\n    const { hostname, port, protocol, auth, path } = url.parse(opts.url) // eslint-disable-line node/no-deprecated-api\n    delete opts.url\n    if (!hostname && !port && !protocol && !auth) opts.path = path // Relative redirect\n    else Object.assign(opts, { hostname, port, protocol, auth, path }) // Absolute redirect\n  }\n\n  const headers = { 'accept-encoding': 'gzip, deflate' }\n  if (opts.headers) Object.keys(opts.headers).forEach(k => (headers[k.toLowerCase()] = opts.headers[k]))\n  opts.headers = headers\n\n  let body\n  if (opts.body) {\n    body = opts.json && !isStream(opts.body) ? JSON.stringify(opts.body) : opts.body\n  } else if (opts.form) {\n    body = typeof opts.form === 'string' ? opts.form : querystring.stringify(opts.form)\n    opts.headers['content-type'] = 'application/x-www-form-urlencoded'\n  }\n\n  if (body) {\n    if (!opts.method) opts.method = 'POST'\n    if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)\n    if (opts.json && !opts.form) opts.headers['content-type'] = 'application/json'\n  }\n  delete opts.body; delete opts.form\n\n  if (opts.json) opts.headers.accept = 'application/json'\n  if (opts.method) opts.method = opts.method.toUpperCase()\n\n  const originalHost = opts.hostname // hostname before potential redirect\n  const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls\n  const req = protocol.request(opts, res => {\n    if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      opts.url = res.headers.location // Follow 3xx redirects\n      delete opts.headers.host // Discard `host` header on redirect (see #32)\n      res.resume() // Discard response\n\n      const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api\n      // If redirected host is different than original host, drop headers to prevent cookie leak (#73)\n      if (redirectHost !== null && redirectHost !== originalHost) {\n        delete opts.headers.cookie\n        delete opts.headers.authorization\n      }\n\n      if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {\n        opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)\n        delete opts.headers['content-length']; delete opts.headers['content-type']\n      }\n\n      if (opts.maxRedirects-- === 0) return cb(new Error('too many redirects'))\n      else return simpleGet(opts, cb)\n    }\n\n    const tryUnzip = typeof decompressResponse === 'function' && opts.method !== 'HEAD'\n    cb(null, tryUnzip ? decompressResponse(res) : res)\n  })\n  req.on('timeout', () => {\n    req.abort()\n    cb(new Error('Request timed out'))\n  })\n  req.on('error', cb)\n\n  if (isStream(body)) body.on('error', cb).pipe(req)\n  else req.end(body)\n\n  return req\n}\n\nsimpleGet.concat = (opts, cb) => {\n  return simpleGet(opts, (err, res) => {\n    if (err) return cb(err)\n    concat(res, (err, data) => {\n      if (err) return cb(err)\n      if (opts.json) {\n        try {\n          data = JSON.parse(data.toString())\n        } catch (err) {\n          return cb(err, res, data)\n        }\n      }\n      cb(null, res, data)\n    })\n  })\n}\n\n;['get', 'post', 'put', 'patch', 'head', 'delete'].forEach(method => {\n  simpleGet[method] = (opts, cb) => {\n    if (typeof opts === 'string') opts = { url: opts }\n    return simpleGet(Object.assign({ method: method.toUpperCase() }, opts), cb)\n  }\n})\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":19,\"decompress-response\":17,\"http\":86,\"https\":56,\"once\":71,\"querystring\":82,\"simple-concat\":84,\"url\":107}],86:[function(require,module,exports){\n(function (global){(function (){\nvar ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./lib/request\":88,\"./lib/response\":89,\"builtin-status-codes\":20,\"url\":107,\"xtend\":111}],87:[function(require,module,exports){\n(function (global){(function (){\nexports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],88:[function(require,module,exports){\n(function (process,global,Buffer){(function (){\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer)\n\n},{\"./capability\":87,\"./response\":89,\"_process\":78,\"buffer\":19,\"inherits\":58,\"readable-stream\":104}],89:[function(require,module,exports){\n(function (process,global,Buffer){(function (){\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer)\n\n},{\"./capability\":87,\"_process\":78,\"buffer\":19,\"inherits\":58,\"readable-stream\":104}],90:[function(require,module,exports){\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n\n},{}],91:[function(require,module,exports){\n(function (process){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n}).call(this)}).call(this,require('_process'))\n\n},{\"./_stream_readable\":93,\"./_stream_writable\":95,\"_process\":78,\"inherits\":58}],92:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n},{\"./_stream_transform\":94,\"inherits\":58}],93:[function(require,module,exports){\n(function (process,global){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../errors\":90,\"./_stream_duplex\":91,\"./internal/streams/async_iterator\":96,\"./internal/streams/buffer_list\":97,\"./internal/streams/destroy\":98,\"./internal/streams/from\":100,\"./internal/streams/state\":102,\"./internal/streams/stream\":103,\"_process\":78,\"buffer\":19,\"events\":25,\"inherits\":58,\"string_decoder/\":105,\"util\":17}],94:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}\n},{\"../errors\":90,\"./_stream_duplex\":91,\"inherits\":58}],95:[function(require,module,exports){\n(function (process,global){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../errors\":90,\"./_stream_duplex\":91,\"./internal/streams/destroy\":98,\"./internal/streams/state\":102,\"./internal/streams/stream\":103,\"_process\":78,\"buffer\":19,\"inherits\":58,\"util-deprecate\":109}],96:[function(require,module,exports){\n(function (process){(function (){\n'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;\n}).call(this)}).call(this,require('_process'))\n\n},{\"./end-of-stream\":99,\"_process\":78}],97:[function(require,module,exports){\n'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();\n},{\"buffer\":19,\"util\":17}],98:[function(require,module,exports){\n(function (process){(function (){\n'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":78}],99:[function(require,module,exports){\n// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;\n},{\"../../../errors\":90}],100:[function(require,module,exports){\nmodule.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n\n},{}],101:[function(require,module,exports){\n// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;\n},{\"../../../errors\":90,\"./end-of-stream\":99}],102:[function(require,module,exports){\n'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};\n},{\"../../../errors\":90}],103:[function(require,module,exports){\nmodule.exports = require('events').EventEmitter;\n\n},{\"events\":25}],104:[function(require,module,exports){\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n\n},{\"./lib/_stream_duplex.js\":91,\"./lib/_stream_passthrough.js\":92,\"./lib/_stream_readable.js\":93,\"./lib/_stream_transform.js\":94,\"./lib/_stream_writable.js\":95,\"./lib/internal/streams/end-of-stream.js\":99,\"./lib/internal/streams/pipeline.js\":101}],105:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n},{\"safe-buffer\":83}],106:[function(require,module,exports){\n(function (setImmediate,clearImmediate){(function (){\nvar nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n}).call(this)}).call(this,require(\"timers\").setImmediate,require(\"timers\").clearImmediate)\n\n},{\"process/browser.js\":78,\"timers\":106}],107:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n},{\"./util\":108,\"punycode\":79,\"querystring\":82}],108:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n},{}],109:[function(require,module,exports){\n(function (global){(function (){\n\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],110:[function(require,module,exports){\n// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n\n},{}],111:[function(require,module,exports){\nmodule.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n},{}],112:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst defaultConfiguration = (\n\t{\n\t\t// This is the address for the <script /> tag that contains the CSS.\n\t\tCSSElementAddress: '#PICT-CSS'\n\t}\n)\n\nclass PictCSS extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\t// No merging of options necessary\n\t\tif (typeof(this.options.CSSElementAddress) === 'undefined')\n\t\t{\n\t\t\tthis.options.CSSElementAddress = defaultConfiguration.CSSElementAddress;\n\t\t}\n\n\t\tthis.inlineCSSMap = {};\n\t}\n\n\t// Add a CSS fragment to the CSS map (each view can have its own CSS fragment)\n\t// Hash is shared across all views, so if 10 views all load the \"My-Table-View\" fragment, it will only be loaded once.\n\taddCSS(pHash, pContent, pPriority, pProvider)\n\t{\n\t\tlet tmpPriority = (typeof(pPriority) !== 'undefined') ? pPriority : 1000;\n\t\tlet tmpProvidor = (typeof(pProvider) === 'string') ? pProvider : 'Unknown';\n\t\tthis.inlineCSSMap[pHash] = { Hash: pHash, Content: pContent, Provider: tmpProvidor, Priority:tmpPriority };\n\t}\n\n\tremoveCSS(pHash)\n\t{\n\t\tdelete this.inlineCSSMap[pHash];\n\t}\n\n\tgenerateCSS()\n\t{\n\t\tlet tmpCSS = '';\n\t\tlet tmpCSSHashes = Object.keys(this.inlineCSSMap);\n\t\t// Sort the hashes by Priority\n\t\ttmpCSSHashes.sort((a, b) => { return this.inlineCSSMap[a].Priority - this.inlineCSSMap[b].Priority; });\n\t\tfor (let i = 0; i < tmpCSSHashes.length; i++)\n\t\t{\n\t\t\tlet tmpCSSFragment = this.inlineCSSMap[tmpCSSHashes[i]];\n\t\t\tlet tmpCSSComment = tmpCSSFragment.Hash;\n\t\t\tif (tmpCSSFragment.Hash != tmpCSSFragment.Provider)\n\t\t\t{\n\t\t\t\ttmpCSSComment = `${tmpCSSComment} from ${tmpCSSFragment.Provider}`;\n\t\t\t}\n\t\t\ttmpCSS += `/* ${tmpCSSComment} */\\n${tmpCSSFragment.Content}\\n`;\n\t\t}\n\t\treturn tmpCSS;\n\t}\n\n\t// Inject the CSS into the magic DOM element for it\n\tinjectCSS()\n\t{\n\t\tthis.services.ContentAssignment.assignContent(this.options.CSSElementAddress, this.generateCSS());\n\t}\n}\n\nmodule.exports = PictCSS;\n},{\"fable\":40}],113:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictContentAssignment extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictContentAssignment';\n\n\t\t// Check to see if we are running in a browser\n\t\tthis.inBrowser = false;\n\t\tthis.hasDocument = false;\n\t\tif (typeof (window) == 'object')\n\t\t{\n\t\t\tthis.inBrowser = true;\n\t\t\t// Now check that the browser has a document object\n\t\t\tif ((typeof (window.document) != 'undefined') && (typeof (window.document.querySelectorAll) == 'function'))\n\t\t\t{\n\t\t\t\tthis.hasDocument = true;\n\t\t\t}\n\t\t}\n\n\t\t// If we're in a browser, check to see if jQuery is available.\n\t\tthis.hasJquery = false;\n\t\tthis.jQuery = false;\n\t\tif (this.inBrowser && typeof (window.jQuery) !== 'undefined')\n\t\t{\n\t\t\tthis.hasJquery = true;\n\t\t}\n\n\t\t// API Consumers can craft their own assign function\n\t\tthis.customAssignFunction = false;\n\t\t// API Consumers can also craft their own prepend function\n\t\tthis.customPrependFunction = false;\n\t\t// API Consumers can also craft their own append function\n\t\tthis.customAppendFunction = false;\n\n\t\t// API Consumers can also craft their own read function\n\t\tthis.customReadFunction = false;\n\t\t// API Consumers can even craft their own get element function.\n\t\tthis.customGetElementFunction = false;\n\n\n\t}\n\n\tgetElement(pAddress)\n\t{\n\t\tif (this.customGetElementFunction)\n\t\t{\n\t\t\treturn this.customGetElementFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpElements = window.jQuery(pAddress);\n\t\t\tif (tmpElements.length == 0)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// TODO: This isn't the most efficient method, but it is the most compatible.\n\t\t\t\tlet tmpElementSet = [];\n\t\t\t\tfor (let i = 0; i < tmpElements.length; i++)\n\t\t\t\t{\n\t\t\t\t\ttmpElementSet.push(tmpElements[0]);\n\t\t\t\t}\n\t\t\t\treturn tmpElementSet;\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\treturn window.document.querySelectorAll(pAddress);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content GET ELEMENT for [${pAddress}] will return empty because none of the browser methods are available`);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tassignContent(pAddress, pContent)\n\t{\n\t\tif (this.customAssignFunction)\n\t\t{\n\t\t\treturn this.customAssignFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\n\t\t\t// Should we ensure we matched 1 and exactly 1 element?\n\t\t\t//if (tmpTargetElement && tmpTargetElement.length == 1)\n\t\t\t//{\n\t\t\t// Set the content\n\t\t\ttmpTargetElement.html(pContent);\n\t\t\t//}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'BUTTON':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\tcase 'A':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content ASSIGN to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tappendContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customAppendFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.append(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"beforeend\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content APPEND to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tprependContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customPrependFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.prepend(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"afterbegin\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content PREPEND in [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\treadContent(pAddress)\n\t{\n\t\tif (this.customReadFunction)\n\t\t{\n\t\t\treturn this.customReadFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\treturn tmpTargetElement.html();\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tif (tmpTargetElementSet.length < 1)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse if (tmpTargetElementSet.length == 1)\n\t\t\t{\n\t\t\t\tif ((tmpTargetElementSet[0].tagName == 'INPUT') || (tmpTargetElementSet[0].tagName == 'TEXTAREA'))\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].value;\n\t\t\t\t}\n\t\t\t\telse if (tmpTargetElementSet[0].tagName == 'SCRIPT')\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].text;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].innerHTML;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content READ from [${pAddress}]...`);\n\t\t\treturn '';\n\t\t}\n\t}\n\n\n\taddClass(pAddress, pClass)\n\t{\n\t\tif (this.customAddClassFunction)\n\t\t{\n\t\t\treturn this.customAddClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.addClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.add(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content ADDCLASS to [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\tremoveClass(pAddress, pClass)\n\t{\n\t\tif (this.customRemoveClassFunction)\n\t\t{\n\t\t\treturn this.customRemoveClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.remove(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVECLASS from [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\ttoggleClass(pAddress, pClass)\n\t{\n\t\t// STUB\n\t}\n\n\thasClass(pAddress, pClass)\n\t{\n\t\t// STUB\n\t}\n\n}\n\nmodule.exports = PictContentAssignment;\n},{\"fable\":40}],114:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictDataProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictDataProvider';\n\t}\n\n    getDataByAddress(pAddress, pData)\n    {\n        let tmpData = (typeof(pData) === 'undefined') ? {} : pData;\n\n        return this.fable.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, pAddress);\n    }\n}\n\nmodule.exports = PictDataProvider;\n},{\"fable\":40}],115:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictMeadowEntityProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictMeadowProvider';\n\n\t\tif (this.fable.settings.PictDefaultURLPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = this.fable.settings.PictDefaultURLPrefix;\n\t\t}\n\t\telse if (!this.options.urlPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = '/1.0/';\n\t\t}\n\n\t\tif (this.fable.settings.PictDefaultDownloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = this.fable.settings.PictDefaultDownloadBatchSize;\n\t\t}\n\t\telse if (!this.options.downloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = 100;\n\t\t}\n\n\t\tthis.restClient = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('RestClient');\n\n\t\tthis.cache = {};\n\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tinitializeCache(pEntity)\n\t{\n\t\t// This should not be happening as often as it's happening.\n\t\tif (!this.cache.hasOwnProperty(pEntity))\n\t\t{\n\t\t\tthis.cache[pEntity] = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('ObjectCache');\n\t\t\t// TODO: Make this a configuration?\n\t\t\t// For now cache for 30 seconds.\n\t\t\tthis.cache[pEntity].maxAge = 30000;\n\t\t\tthis.cache[pEntity].maxLength = 10000;\n\n\t\t\tthis.fable.Bundle[pEntity] = this.cache[pEntity].RecordMap;\n\t\t}\n\t}\n\n\tgetEntity (pEntity, pIDRecord, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tlet tmpPossibleRecord = this.cache[pEntity].read(pIDRecord);\n\n\t\t\t\tif (tmpPossibleRecord)\n\t\t\t\t{\n\t\t\t\t\treturn tmpPossibleRecord;\n\t\t\t\t}\n\n\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}/${pIDRecord}`\n\t\t\t\t\t});\n\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pBody)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.cache[pEntity].put(pBody, pIDRecord);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pBody);\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tgetEntitySet = function (pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// TODO: Should we test for too many record IDs here by string length?\n\t\t// FBL~ID${pDestinationEntity}~INN~${tmpIDRecordsCommaSeparated}\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tlet tmpCountOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}s/Count/FilteredTo/${pMeadowFilterExpression}`\n\t\t\t\t\t});\n\t\t\t\ttmpCountOptions = this.prepareRequestOptions(tmpCountOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpCountOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Error getting bulk entity count of [${pEntity}] filtered to [${pMeadowFilterExpression}] from server [${tmpCountOptions.url}]: ${pError}`);\n\t\t\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet tmpRecordCount = 0;\n\t\t\t\t\t\tif (pBody.Count)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpRecordCount = pBody.Count;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpDownloadURIFragments = [];\n\t\t\t\t\t\tlet tmpDownloadBatchSize = this.options.downloadBatchSize;\n\t\t\t\t\t\tfor (let i = 0; i < (tmpRecordCount / tmpDownloadBatchSize); i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Generate each of the URI fragments to download\n\t\t\t\t\t\t\ttmpDownloadURIFragments.push(`${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${i*tmpDownloadBatchSize}/${tmpDownloadBatchSize}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpEntitySet = [];\n\t\t\t\t\t\t// Now run these in series (it's possible to parallelize but no reason to)\n\t\t\t\t\t\tthis.fable.Utility.eachLimit(tmpDownloadURIFragments, 1,\n\t\t\t\t\t\t\t(pURIFragment, fDownloadCallback)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\turl: `${this.options.urlPrefix}${pURIFragment}`\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\t\t\t\t\tthis.restClient.getJSON(pURIFragment,\n\t\t\t\t\t\t\t\t\t(pDownloadError, pDownloadResponse, pDownloadBody)=>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttmpEntitySet = tmpEntitySet.concat(pDownloadBody);\n\t\t\t\t\t\t\t\t\t\t// Should we be caching each record?\n\t\t\t\t\t\t\t\t\t\treturn fDownloadCallback(pDownloadError);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(pFullDownloadError)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(pFullDownloadError, tmpEntitySet);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t});\n\t}\n}\n\nmodule.exports = PictMeadowEntityProvider;\n},{\"fable\":40}],116:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictTemplateProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictTemplateProvider';\n\n        this.templates = {};\n        this.templateSources = {};\n\n        // Default templates are stored by prefix.\n        // The longest prefix match is used.\n        // Case sensitive.\n        this.defaultTemplates = [];\n\n        // This function can be overloaded to load templates from a database, in a page or other source.\n        this.loadTemplateFunction = (pTemplateHash) => { return false; };\n\t}\n\n    addTemplate(pTemplateHash, pTemplate, pTemplateSource)\n    {\n        this.templates[pTemplateHash] = pTemplate;\n\n        if (typeof(pTemplateSource) == 'string')\n        {\n            this.templateSources[pTemplateHash] = pTemplateSource;\n        }\n        else\n        {\n            this.templateSources[pTemplateHash] = `Direct addTemplate('${pTemplateHash}') function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`;\n        }\n    }\n\n    addDefaultTemplate(pPrefix, pPostfix, pTemplate, pSource)\n    {\n        let tmpSource = (typeof(pSource) == 'string') ? pSource : `Direct addDefaultTemplate('${pPrefix}','${pPostfix}',..) function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`\n        let tmpDefaultTemplate = {\n            prefix: pPrefix,\n            postfix: pPostfix,\n            template: pTemplate,\n            source: tmpSource\n        };\n        if (typeof(pTemplate) != 'string')\n        {\n            this.log.error('PictTemplateProvider.addDefaultTemplate: pTemplate is not a string.');\n        }\n        this.defaultTemplates.push(tmpDefaultTemplate);\n    }\n\n    checkDefaultTemplateHash(pTemplateHash)\n    {\n        /*\n         * Default templates are managed by postfix and prefix.  The use case is things like titles, headers, list \n         * wrappers, rows, etc.\n         *\n         * So we might have a default template for a list wrapper and it should expect \"-ListWrap\" as the postfix.\n         * And we might have a default template for a list row and it should expect \"-ListRow\" as the postfix.\n         * The list might have a \"-ListTitle\", or we might have shared titles and it would just be \"-Title\".\n         * \n         * The idea is to allow fallbacks on defaults.\n         */\n        for (let i = 0; i < this.defaultTemplates.length; i++)\n        {\n            if ((pTemplateHash.indexOf(this.defaultTemplates[i].postfix) == pTemplateHash.length - this.defaultTemplates[i].postfix.length)\n                && (pTemplateHash.indexOf(this.defaultTemplates[i].prefix) == 0))\n            {\n                this.templates[pTemplateHash] = this.defaultTemplates[i].template;\n                this.templateSources[pTemplateHash] = `Auto created in checkDefaultTemplateHash('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${this.defaultTemplates[i].prefix}]...[${this.defaultTemplates[i].postfix}]`;\n                return this.templates[pTemplateHash];\n            }\n        }\n        return false;\n    }\n\n    getTemplate(pTemplateHash)\n    {\n        // TODO: Optimize this.\n        // If the template doesn't exist, try to load it with the loading function\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.loadTemplate(pTemplateHash);\n        }\n        // If the loading function fails, try to load it from the default templates\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.checkDefaultTemplateHash(pTemplateHash);\n        }\n        if (this.templates.hasOwnProperty(pTemplateHash))\n        {\n            return this.templates[pTemplateHash];\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    loadTemplate(pTemplateHash)\n    {\n        let tmpTemplate = this.loadTemplateFunction(pTemplateHash);\n\n        if (tmpTemplate)\n        {\n            this.templates[pTemplateHash] = tmpTemplate.template;\n            this.templateSources[pTemplateHash] = `Loaded in loadTemplate('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${tmpTemplate.source}]`;\n\n        }\n\n        return tmpTemplate;\n    }\n}\n\nmodule.exports = PictTemplateProvider;\n},{\"fable\":40}],117:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nconst libFable = require('fable');\n\nclass Pict extends libFable\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\tthis.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n\n\t\t// The templateProvider provides a basic key->template mapping with default fallback capabilities\n\t\tthis.serviceManager.addAndInstantiateServiceType('TemplateProvider', require('./Pict-Template-Provider.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('EntityProvider',  require('./Pict-Meadow-EntityProvider.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('DataProvider',  require('./Pict-DataProvider.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('ContentAssignment',  require('./Pict-Content-Assignment.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('CSSMap', require('./Pict-CSS.js'));\n\n\t\tthis.serviceManager.instantiateServiceProvider('MetaTemplate');\n\t\tthis.serviceManager.instantiateServiceProvider('DataGeneration');\n\n\t\tthis.manifest = this.serviceManager.instantiateServiceProvider('Manifest');\n\n\t\tthis.AppData = {};\n\t\tthis.Bundle = {};\n\n\t\t// Log noisness goes from 0 - 5, where 5 is show me everything.\n\t\tthis.LogNoisiness = 0;\n\n\t\t// Load manifest sets\n\t\tif (this.settings.Manifests)\n\t\t{\n\t\t\tthis.loadManifestSet(this.settings.Manifests);\n\t\t}\n\n\t\tthis._DefaultPictTemplatesInitialized = false;\n\t\tthis.initializePictTemplateEngine();\n\n\t\tthis.serviceManager.addServiceType('PictView',  require('pict-view'));\n\t\tthis.serviceManager.addServiceType('PictApplication',  require('pict-application'));\n\n\t\t// Expose the named views directly, through a convenience accessor\n\t\tthis.views = this.serviceManager.servicesMap.PictView;\n\t}\n\n\t// Load manifests in as Hashed services\n\tloadManifestSet (pManifestSet)\n\t{\n\t\tif (typeof(pManifestSet) != 'object')\n\t\t{\n\t\t\tthis.log.warn(`PICT [${this.UUID}] could not load Manifest Set; pManifestSet was not an object.`);\n\t\t\treturn false;\n\t\t}\n\t\tlet tmpManifestKeys = Object.keys(pManifestSet);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++ )\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.serviceManager.instantiateServiceProvider('Manifest', pManifestSet[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddView(pViewHash, pOptions, pViewPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpViewHash = (typeof(pViewHash) == 'string') ? pViewHash : this.fable.getUUID();\n\n\t\tif (typeof(pViewPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pViewPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pViewPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\t\t\treturn this.serviceManager.instantiateServiceProviderFromPrototype('PictView', tmpOptions, tmpViewHash, pViewPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.serviceManager.instantiateServiceProvider('PictView', tmpOptions, tmpViewHash);\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddApplication(pApplicationHash, pOptions, pApplicationPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpApplicationHash = (typeof(pApplicationHash) == 'string') ? pApplicationHash : this.fable.getUUID();\n\n\t\tif (typeof(pApplicationPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pApplicationPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pApplicationPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\n\t\t\treturn this.serviceManager.instantiateServiceProviderFromPrototype('PictApplication', tmpOptions, tmpApplicationHash, pApplicationPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.serviceManager.instantiateServiceProvider('PictApplication', tmpOptions, tmpApplicationHash);\n\t\t}\n\t}\n\n\tinitializePictTemplateEngine()\n\t{\n\t\t/*\n\t\t *\n\t\t * To stave off madness, these are inefficient for now.  The wkhtmltopdf renderer leaves much to be desired\n\t\t * in the way of feedback with regards to javascript compatibility.\n\t\t *\n\t\t */\n\t\tif (!this._DefaultPictTemplatesInitialized)\n\t\t{\n\t\t\t// Expects one of the following:\n\t\t\t// \t\t{~Entity:Book:1~}\n\t\t\t//          ...meaning GET BOOK 1\n\t\t\t// \t\t{~Entity:Book:AppData.Some.Address.IDBook~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook\n\t\t\t// \t\t{~E:Book:AppData.Some.Address.IDBook:Render-Book-Template~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook and render it to Render-Book-Template\n\t\t\tlet fEntityRender = (pHash, pData, fCallback) =>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpEntity = false;\n\t\t\t\t\tlet tmpEntityID = false;\n\t\t\t\t\tlet tmpEntityTemplate = false;\n\n\t\t\t\t\t// This expression requires 2 parts -- a third is optional, and, if present, is the template to render to.\n\t\t\t\t\tlet tmpHashSeparator = tmpHash.indexOf('|');\n\n\t\t\t\t\tif (tmpHashSeparator < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\t\tlet tmpHashEntitySeparator = tmpHash.indexOf(':');\n\t\t\t\t\t\ttmpEntity = tmpHash.substring(0, tmpHashEntitySeparator);\n\t\t\t\t\t\ttmpEntityID = tmpHash.substring(tmpHashEntitySeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is a 3 part hash (the entity, the ID, and the template)\n\t\t\t\t\t\tlet tmpHashEntitySeparator = tmpHash.indexOf(':');\n\t\t\t\t\t\ttmpEntity = tmpHash.substring(0, tmpHashEntitySeparator);\n\n\t\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf('|');\n\t\t\t\t\t\ttmpEntityID = tmpHash.substring(tmpHashEntitySeparator + 1, tmpHashTemplateSeparator);\n\n\t\t\t\t\t\ttmpEntityTemplate = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isNaN(tmpEntityID))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpEntityID = parseInt(tmpEntityID);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is an address, so we need to get the value at the address\n\t\t\t\t\t\ttmpEntityID = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpEntityID);\n\t\t\t\t\t}\n\n\t\t\t\t\t// No Entity or EntityID\n\t\t\t\t\tif (!tmpEntity || !tmpEntityID)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to get the entity\n\t\t\t\t\tthis.EntityProvider.getEntity(tmpEntity, tmpEntityID,\n\t\t\t\t\t\t(pError, pRecord) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Pict: Entity Render: Error getting entity [${tmpEntity}] with ID [${tmpEntityID}] for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\t\t\treturn fCallback(pError, '');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Now render the template\n\t\t\t\t\t\t\tif (tmpEntityTemplate)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(null, this.parseTemplateByHash(tmpEntityTemplate, pRecord));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternAsync('{~E:', '~}', fEntityRender);\n\t\t\tthis.MetaTemplate.addPatternAsync('{~Entity:', '~}', fEntityRender);\n\n\t\t\t// {NE~Some.Address|If the left value is truthy, render this value.~}\n\t\t\tlet fNotEmptyRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Should switch this to indexOf so pipes can be in the content.\n\t\t\t\t\tlet tmpHashParts = tmpHash.split('|');\n\n\t\t\t\t\t// For now just check truthiness\n\t\t\t\t\tif (this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHashParts[0]))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpHashParts[1];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~NotEmpty:', '~}', fNotEmptyRender);\n\t\t\tthis.MetaTemplate.addPattern('{~NE:', '~}', fNotEmptyRender);\n\n\t\t\t// {~T:Template:AddressOfData~}\n\t\t\tlet fTemplateRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~T:', '~}', fTemplateRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Template:', '~}', fTemplateRender);\n\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~TS:', '~}', fTemplateSetRender);\n\t\t\tthis.MetaTemplate.addPattern('{~TemplateSet:', '~}', fTemplateSetRender);\n\n\t\t\t//{~Data:AppData.Some.Value.to.Render~}\n\t\t\tlet fDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn tmpValue;\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~D:', '~}', fDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Data:', '~}', fDataRender);\n\n\t\t\tthis.MetaTemplate.addPattern('{~Dollars:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterDollars(tmpColumnData);\n\t\t\t\t});\n\t\t\tthis.MetaTemplate.addPattern('{~Digits:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterAddCommasToNumber(this.DataFormat.formatterRoundNumber(tmpColumnData, 2));\n\t\t\t\t});\n\n\t\t\tlet fRandomNumberString = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumberString]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpStringLength = 4;\n\t\t\t\t\tlet tmpMaxNumber = 9999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpStringLength = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomNumericString(tmpStringLength, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumberString:', '~}',fRandomNumberString);\n\t\t\tthis.MetaTemplate.addPattern('{~RNS:', '~}',fRandomNumberString);\n\n\t\t\tlet fRandomNumber = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumber]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpMinimumNumber = 0;\n\t\t\t\t\tlet tmpMaxNumber = 9999999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMinimumNumber = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomIntegerBetween(tmpMinimumNumber, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumber:', '~}',fRandomNumber);\n\t\t\tthis.MetaTemplate.addPattern('{~RN:', '~}',fRandomNumber);\n\n\t\t\tlet fPascalCaseIdentifier = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn this.DataFormat.cleanNonAlphaCharacters(this.DataFormat.capitalizeEachWord(tmpValue));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~PascalCaseIdentifier:', '~}',fPascalCaseIdentifier);\n\n\t\t\tlet fLogValue = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tlet tmpValueType = typeof(tmpValue);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValueType == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is ${tmpValueType}.`);\n\t\t\t\t\t}\n\t\t\t\t\telse if (tmpValueType == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is an obect.`, tmpValue);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] if a ${tmpValueType} = [${tmpValue}]`);\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogValue:', '~}',fLogValue);\n\t\t\tthis.MetaTemplate.addPattern('{~LV:', '~}',fLogValue);\n\n\n\t\t\tlet fLogStatement = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tthis.log.trace(`PICT Template Log Message: ${tmpHash}`);\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogStatement:', '~}',fLogStatement);\n\t\t\tthis.MetaTemplate.addPattern('{~LS:', '~}',fLogStatement);\n\n\t\t\tlet fBreakpoint = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpError = new Error(`PICT Template Breakpoint: ${tmpHash}`);\n\t\t\t\t\tthis.log.trace(`PICT Template Breakpoint: ${tmpHash}`, tmpError.stack);\n\t\t\t\t\tdebugger;\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~Breakpoint', '~}',fBreakpoint);\n\n\t\t\tthis._DefaultPictTemplatesInitialized = true;\n\t\t}\n\t}\n\n\tparseTemplate (pTemplateString, pData, fCallback)\n\t{\n\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\treturn this.MetaTemplate.parseString(pTemplateString, tmpData, fCallback);\n\t}\n\n\tparseTemplateByHash (pTemplateHash, pData, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\treturn this.parseTemplate(tmpTemplateString, pData, fCallback);\n\t}\n\n\tparseTemplateSet (pTemplateString, pDataSet, fCallback)\n\t{\n\t\t// TODO: This will need streaming -- for now janky old string append does the trick\n\t\tlet tmpValue = '';\n\t\tif (typeof(fCallback) == 'function')\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tthis.Utility.eachLimit(pDataSet, 1,\n\t\t\t\t\t(pRecord, fRecordTemplateCallback)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplate(pTemplateString, pRecord,\n\t\t\t\t\t\t\t(pError, pTemplateResult)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValue += pTemplateResult;\n\t\t\t\t\t\t\t\treturn fRecordTemplateCallback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t(pError)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fCallback(pError, tmpValue);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn fCallback(Error('Pict: Template Set: pDataSet is not an array or object.'), '');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tif (Array.isArray(pDataSet))\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < pDataSet.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpKeys = Object.keys(pDataSet);\n\t\t\t\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[tmpKeys[i]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpValue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\tparseTemplateSetByHash (pTemplateHash, pDataSet, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\treturn this.parseTemplateSet(tmpTemplateString, pDataSet, fCallback);\n\t}\n};\n\nmodule.exports = Pict;\n\nmodule.exports.PictApplicationClass = require('pict-application');\nmodule.exports.PictViewClass = require('pict-view');\n\nmodule.exports.EnvironmentLog = require('./environments/Pict-Environment-Log.js');\n\n// This is to help understand the type of enivironement we're executing in\nmodule.exports.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n},{\"./Pict-CSS.js\":112,\"./Pict-Content-Assignment.js\":113,\"./Pict-DataProvider.js\":114,\"./Pict-Meadow-EntityProvider.js\":115,\"./Pict-Template-Provider.js\":116,\"./environments/Pict-Environment-Log.js\":118,\"fable\":40,\"pict-application\":73,\"pict-view\":74}],118:[function(require,module,exports){\n/**\n* Pict browser shim loader\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\n\nclass PictEnvironmentLog\n{\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\t}\n\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\tcustomGetElementFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\tcustomReadFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\tcustomAppendFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\tcustomPrependFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomAssignFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Assign.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n}\n\nmodule.exports = PictEnvironmentLog;\n},{}]},{},[117])(117)\n});\n\n","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\nvar eachOfLimit = require('async.util.eachoflimit');\nvar withoutIndex = require('async.util.withoutindex');\n\nmodule.exports = function eachLimit(arr, limit, iterator, cb) {\n    return eachOfLimit(limit)(arr, withoutIndex(iterator), cb);\n};\n","'use strict';\n\nmodule.exports = function(tasks) {\n    function makeCallback(index) {\n        function fn() {\n            if (tasks.length) {\n                tasks[index].apply(null, arguments);\n            }\n            return fn.next();\n        }\n        fn.next = function() {\n            return (index < tasks.length - 1) ? makeCallback(index + 1) : null;\n        };\n        return fn;\n    }\n    return makeCallback(0);\n};\n","var once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar onlyOnce = require('async.util.onlyonce');\nvar keyIterator = require('async.util.keyiterator');\n\nmodule.exports = function eachOfLimit(limit) {\n    return function(obj, iterator, cb) {\n        cb = once(cb || noop);\n        obj = obj || [];\n        var nextKey = keyIterator(obj);\n        if (limit <= 0) {\n            return cb(null);\n        }\n        var done = false;\n        var running = 0;\n        var errored = false;\n\n        (function replenish() {\n            if (done && running <= 0) {\n                return cb(null);\n            }\n\n            while (running < limit && !errored) {\n                var key = nextKey();\n                if (key === null) {\n                    done = true;\n                    if (running <= 0) {\n                        cb(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iterator(obj[key], key, onlyOnce(function(err) {\n                    running -= 1;\n                    if (err) {\n                        cb(err);\n                        errored = true;\n                    } else {\n                        replenish();\n                    }\n                }));\n            }\n        })();\n    };\n};\n","'use strict';\nvar setImmediate = require('async.util.setimmediate');\nvar restParam = require('async.util.restparam');\n\nmodule.exports = function(fn) {\n    return restParam(function(args) {\n        var callback = args.pop();\n        args.push(function() {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate(function() {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        var sync = true;\n        fn.apply(this, args);\n        sync = false;\n    });\n};\n","'use strict';\n\nmodule.exports = Array.isArray || function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n","'use strict';\n\nvar isArray = require('async.util.isarray');\n\nmodule.exports = function isArrayLike(arr) {\n    return isArray(arr) || (\n        // has a positive integer length property\n        typeof arr.length === 'number' &&\n        arr.length >= 0 &&\n        arr.length % 1 === 0\n    );\n};\n","'use strict';\n\nvar _keys = require('async.util.keys');\nvar isArrayLike = require('async.util.isarraylike');\n\nmodule.exports = function keyIterator(coll) {\n    var i = -1;\n    var len;\n    var keys;\n    if (isArrayLike(coll)) {\n        len = coll.length;\n        return function next() {\n            i++;\n            return i < len ? i : null;\n        };\n    } else {\n        keys = _keys(coll);\n        len = keys.length;\n        return function next() {\n            i++;\n            return i < len ? keys[i] : null;\n        };\n    }\n};\n","'use strict';\n\nmodule.exports = Object.keys || function keys(obj) {\n    var _keys = [];\n    for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            _keys.push(k);\n        }\n    }\n    return _keys;\n};\n","'use strict';\n\nmodule.exports = function noop () {};\n","'use strict';\n\nmodule.exports = function once(fn) {\n    return function() {\n        if (fn === null) return;\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n","'use strict';\n\nmodule.exports = function only_once(fn) {\n    return function() {\n        if (fn === null) throw new Error('Callback was already called.');\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n","'use strict';\nmodule.exports = function restParam(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n        var length = Math.max(arguments.length - startIndex, 0);\n        var rest = new Array(length);\n        for (var index = 0; index < length; index++) {\n            rest[index] = arguments[index + startIndex];\n        }\n        switch (startIndex) {\n            case 0:\n                return func.call(this, rest);\n            case 1:\n                return func.call(this, arguments[0], rest);\n        }\n    };\n};\n","'use strict';\n\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\nvar fallback = function(fn) {\n    setTimeout(fn, 0);\n};\n\nmodule.exports = function setImmediate(fn) {\n    // not a direct alias for IE10 compatibility\n    return (_setImmediate || fallback)(fn);\n};\n","'use strict';\n\nmodule.exports = function withoutIndex(iterator) {\n    return function(value, index, callback) {\n        return iterator(value, callback);\n    };\n};\n","'use strict';\n\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar isArray = require('async.util.isarray');\nvar restParam = require('async.util.restparam');\nvar ensureAsync = require('async.util.ensureasync');\nvar iterator = require('async.iterator');\n\nmodule.exports = function(tasks, cb) {\n    cb = once(cb || noop);\n    if (!isArray(tasks)) return cb(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return cb();\n\n    function wrapIterator(iterator) {\n        return restParam(function(err, args) {\n            if (err) {\n                cb.apply(null, [err].concat(args));\n            } else {\n                var next = iterator.next();\n                if (next) {\n                    args.push(wrapIterator(next));\n                } else {\n                    args.push(cb);\n                }\n                ensureAsync(iterator).apply(null, args);\n            }\n        });\n    }\n    wrapIterator(iterator(tasks))();\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n","/**\n* Cache data structure with:\n*  - enumerable items\n*  - unique hash item access (if none is passed in, one is generated)\n*  - size (length) expiration\n*  - controllable expiration (e.g. keep in cache longer if older/less likely to change)\n*  - time-based expiration\n*  - custom expiration based on passed-in function\n*\n* Also:\n*  - built to work well with browserify\n*  - no dependencies at all\n*  - pet friendly\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nconst libLinkedList = require(`./LinkedList.js`);\n\nclass CashMoney extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'ObjectCache';\n\n\t\t// The map of node objects by hash because Reasons.\n\t\tthis._HashMap = {};\n\n\t\tthis._RecordMap = {};\n\n\t\tthis._List = new libLinkedList();\n\n\t\t// If the list gets over maxLength, we will automatically remove nodes on insertion.\n\t\tthis.maxLength = 0;\n\n\t\t// If cache entries get over this age, they are removed with prune\n\t\tthis.maxAge = 0;\n\t}\n\n\tget RecordMap()\n\t{\n\t\treturn this._RecordMap;\n\t}\n\n\t// Add (or update) a node in the cache\n\tput(pData, pHash)\n\t{\n\t\t// If the hash of the record exists\n\t\tif (this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\t// Just update the hashed records datum\n\t\t\tthis._HashMap[pHash].Datum = pData;\n\t\t\tthis._RecordMap[pHash] = pData;\n\t\t\treturn this._HashMap[pHash].Datum;\n\t\t}\n\n\t\tlet tmpNode = this._List.push(pData, pHash);\n\t\tthis._HashMap[tmpNode.Hash] = tmpNode;\n\t\tthis._RecordMap[pHash] = pData;\n\n\t\t// Automatically prune if over length, but only prune this nodes worth.\n\t\tif (this.maxLength > 0   &&   this._List.length > this.maxLength)\n\t\t{\n\t\t\t// Pop it off the head of the list\n\t\t\ttmpNode = this._List.pop();\n\t\t\t// Also remove it from the hashmap\n\t\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\t\tdelete this._HashMap[tmpNode.Hash];\n\t\t}\n\n\t\t// Now some expiration properties on the node metadata... namely the birthdate in ms of the node\n\t\ttmpNode.Metadata.Created = +new Date();\n\n\t\treturn tmpNode.Datum;\n\t}\n\n\t// Read a datum by hash from the cache\n\tread(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._HashMap[pHash].Datum;\n\t}\n\n\t// Reinvigorate a node based on hash, updating the timestamp and moving it to the head of the list (also removes custom metadata)\n\ttouch(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get the old node out of the list\n\t\tlet tmpNode = this._List.remove(this._HashMap[pHash]);\n\t\t// Remove it from the hash map\n\t\tdelete this._RecordMap[pHash];\n\t\tdelete this._HashMap[pHash];\n\n\t\t// Now put it back, fresh.\n\t\treturn this.put(tmpNode.Datum, tmpNode.Hash);\n\t}\n\n\t// Expire a cached record based on hash\n\texpire(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpNode = this._HashMap[pHash];\n\n\t\t// Remove it from the list of cached records\n\t\ttmpNode = this._List.remove(tmpNode);\n\t\t// Also remove it from the hashmap\n\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\tdelete this._HashMap[tmpNode.Hash];\n\n\t\t// Return it in case the consumer wants to do anything with it\n\t\treturn tmpNode;\n\t}\n\n\t// Prune records from the cached set based on maxAge\n\tpruneBasedOnExpiration(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tif (this.maxAge < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now enumerate each record and remove any that are expired\n\t\tlet tmpNow = +new Date();\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\t// Expire the node if it is older than max age milliseconds\n\t\t\tif (tmpNow - this._HashMap[tmpKeys[i]].Metadata.Created >= this.maxAge)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on maxLength\n\tpruneBasedOnLength(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\t// Pop records off until we have reached maxLength unless it's 0\n\t\tif (this.maxLength > 0)\n\t\t{\n\t\t\twhile (this._List.length > this.maxLength)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this._List.pop());\n\t\t\t}\n\t\t}\n\n\t\treturn fComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on passed in pPruneFunction(pDatum, pHash, pNode) -- returning true expires it\n\tpruneCustom(fComplete, fPruneFunction, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\tlet tmpNode = this._HashMap[tmpKeys[i]];\n\t\t\t// Expire the node if the passed in function returns true\n\t\t\tif (fPruneFunction(tmpNode.Datum, tmpNode.Hash, tmpNode))\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune the list down to the asserted rules (max age then max length if still too long)\n\tprune(fComplete)\n\t{\n\t\tlet tmpRemovedRecords = [];\n\n\t\t// If there are no cached records, we are done.\n\t\tif (this._List.length < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now prune based on expiration time\n\t\tthis.pruneBasedOnExpiration((fExpirationPruneComplete)=>\n\t\t\t{\n\t\t\t\t// Now prune based on length, then return the removed records in the callback.\n\t\t\t\tthis.pruneBasedOnLength(fComplete, tmpRemovedRecords);\n\t\t\t}, tmpRemovedRecords);\n\t}\n\n\t// Get a low level node (including metadata statistics) by hash from the cache\n\tgetNode(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\n\t\treturn this._HashMap[pHash];\n\t}\n}\n\nmodule.exports = CashMoney;","/**\n* Double Linked List Node\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Linked List Node Prototype\n*\n* @class LinkedListNode\n* @constructor\n*/\n\nclass LinkedListNode\n{\n\tconstructor()\n\t{\n\t\tthis.Hash = false;\n\t\tthis.Datum = false;\n\n\t\t// This is where expiration and other elements are stored;\n\t\tthis.Metadata = {};\n\n\t\tthis.LeftNode = false;\n\t\tthis.RightNode = false;\n\n\t\t// To allow safe specialty operations on nodes\n\t\tthis.__ISNODE = true;\n\t}\n}\n\nmodule.exports = LinkedListNode;","\"use strict\"\n/**\n* Simple double linked list to hold the cache entries in, in order.\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module FeeFiFo\n*/\n\nconst libLinkedListNode = require('./LinkedList-Node.js');\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nclass LinkedList\n{\n\tconstructor()\n\t{\n\t\t// Total number of nodes ever processed by this ADT\n\t\tthis.totalNodes = 0;\n\n\t\t// The length of the set of nodes currently in the list\n\t\tthis.length = 0;\n\n\t\tthis.head = false;\n\t\tthis.tail = false;\n\t}\n\n\t// Create a node object.\n\tinitializeNode(pDatum, pHash)\n\t{\n\t\t// Don't allow undefined to be added to the list because of reasons\n\t\tif (typeof(pDatum) === 'undefined')\n\t\t\treturn false;\n\n\t\tthis.totalNodes++;\n\n\t\t// Get (or create) a unique hash\n\t\tlet tmpHash = (typeof(pHash) != 'undefined') ? pHash : `NODE[${this.totalNodes}]`;\n\n\t\tlet tmpNode = new libLinkedListNode();\n\n\t\ttmpNode.Hash = tmpHash;\n\t\ttmpNode.Datum = pDatum;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Add a node to the end (right of tail) of the list.\n\tappend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.tail.RightNode = tmpNode;\n\t\ttmpNode.LeftNode = this.tail;\n\t\tthis.tail = tmpNode;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Append to tail of list (FIFO)\n\tpush(pDatum, pHash)\n\t{\n\t\treturn this.append(pDatum, pHash);\n\t}\n\n\t// Add a node to the beginning (left of head) of the list.\n\tprepend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.head.LeftNode = tmpNode;\n\t\ttmpNode.RightNode = this.head;\n\t\tthis.head = tmpNode;\n\t\treturn tmpNode;\n\t}\n\n\t// Remove a node from the list\n\tremove(pNode)\n\t{\n\t\tif (typeof(pNode) === 'undefined')\n\t\t\treturn false;\n\n\t\tif (!pNode.__ISNODE)\n\t\t\treturn false;\n\n\t\tthis.length--;\n\n\t\t// Last element in list.  Empty it out.\n\t\tif (this.length < 1)\n\t\t{\n\t\t\tthis.head = false;\n\t\t\tthis.tail = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's somewhere in the middle, surgically remove it.\n\t\tif (pNode.LeftNode && pNode.RightNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = pNode.RightNode;\n\t\t\tpNode.RightNode.LeftNode = pNode.LeftNode;\n\n\t\t\tpNode.RightNode = false;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's the tail\n\t\tif (pNode.LeftNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = false;\n\t\t\tthis.tail = pNode.LeftNode;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It must be the head\n\t\tpNode.RightNode.LeftNode = false;\n\t\tthis.head = pNode.RightNode;\n\t\tpNode.RightNode = false;\n\t\treturn pNode;\n\t}\n\n\t// Remove the head of the list (FIFO)\n\tpop()\n\t{\n\t\treturn this.remove(this.head);\n\t}\n\n\t// Enumerate over each node IN ORDER, running the function fAction(pDatum, pHash, fCallback) then calling the function fComplete callback when done\n\teach(fAction, fComplete)\n\t{\n\t\tif (this.length < 1)\n\t\t\treturn fComplete();\n\n\t\tlet tmpNode = false;\n\n\t\tlet fIterator = (pError)=>\n\t\t{\n\t\t\t// If the user passed in a callback with an error, call their callback with the error\n\t\t\tif (pError)\n\t\t\t\treturn fComplete(pError);\n\n\t\t\t// If there is no node, this must be the initial run.\n\t\t\tif (!tmpNode)\n\t\t\t\ttmpNode = this.head;\n\t\t\t// Check if we are at the tail of the list\n\t\t\telse if (!tmpNode.RightNode)\n\t\t\t\treturn fComplete();\n\t\t\t// Proceed to the next node\n\t\t\telse\n\t\t\t\ttmpNode = tmpNode.RightNode;\n\n\t\t\t// Call the actual action\n\t\t\t// I hate this pattern because long tails eventually cause stack overflows.\n\t\t\tfAction(tmpNode.Datum, tmpNode.Hash, fIterator);\n\t\t};\n\n\t\t// Now kick off the iterator\n\t\treturn fIterator();\n\t}\n\n\t// Seek a specific node, 0 is the index of the first node.\n\tseek(pNodeIndex)\n\t{\n\t\tif (!pNodeIndex)\n\t\t\treturn false;\n\t\tif (this.length < 1)\n\t\t\treturn false;\n\t\tif (pNodeIndex >= this.length)\n\t\t\treturn false;\n\n\t\tlet tmpNode = this.head;\n\t\tfor (let i = 0; i < pNodeIndex; i++)\n\t\t{\n\t\t\ttmpNode = tmpNode.RightNode;\n\t\t}\n\n\t\treturn tmpNode;\n\t}\n}\n\nmodule.exports = LinkedList;","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/**\n* Base Logger Class\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\nclass BaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = (typeof(pLogStreamSettings) == 'object') ? pLogStreamSettings : {};\n\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\t// We added this as the mechanism for tracking loggers to allow multiple simultaneous streams\n\t\t// to the same provider.\n\t\tthis.loggerUUID = this.generateInsecureUUID();\n\n\t\t// Eventually we can use this array to ompute which levels the provider allows.\n\t\t// For now it's just used to precompute some string concatenations.\n\t\tthis.levels = (\n\t\t\t[\n\t\t\t\t\"trace\",\n\t\t\t\t\"debug\",\n\t\t\t\t\"info\",\n\t\t\t\t\"warn\",\n\t\t\t\t\"error\",\n\t\t\t\t\"fatal\"\n\t\t\t]);\n\t}\n\n\t// This is meant to generate programmatically insecure UUIDs to identify loggers\n\tgenerateInsecureUUID()\n\t{\n\t\tlet tmpDate = new Date().getTime();\n\t\tlet tmpUUID = 'LOGSTREAM-xxxxxx-yxxxxx'.replace(/[xy]/g,\n\t\t\t\t(pCharacter) =>\n\t\t\t\t{\n\t\t\t\t\t// Funny algorithm from w3resource that is twister-ish without the deep math and security\n\t\t\t\t\t// ..but good enough for unique log stream identifiers\n\t\t\t\t\tlet tmpRandomData = (tmpDate + Math.random()*16)%16 | 0;\n\t\t\t\t\ttmpDate = Math.floor(tmpDate/16);\n\n\t\t\t\t\treturn (pCharacter =='x' ? tmpRandomData : (tmpRandomData&0x3|0x8)).toString(16);\n\t\t\t\t});\n\t\treturn tmpUUID;\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n","/**\n* Default Logger Provider Function\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\nvar getDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\ttmpDefaultProviders.default = tmpDefaultProviders.console;\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();","module.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]","let libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings);\n\n\t\tthis._ShowTimeStamps = this._Settings.hasOwnProperty('showtimestamps') ? (this._Settings.showtimestamps == true) : true;\n\t\tthis._FormattedTimeStamps = this._Settings.hasOwnProperty('formattedtimestamps') ? (this._Settings.formattedtimestamps == true) : true;\n\n\t\tthis._ContextMessage = this._Settings.hasOwnProperty('Context') ? `(${this._Settings.Context})` : \n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? `(${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'Unnamed_Log_Context';\n\n\t\t// Allow the user to decide what gets output to the console\n\t\tthis._OutputLogLinesToConsole = this._Settings.hasOwnProperty('outputloglinestoconsole') ? this._Settings.outputloglinestoconsole : true;\n\t\tthis._OutputObjectsToConsole = this._Settings.hasOwnProperty('outputobjectstoconsole') ? this._Settings.outputobjectstoconsole : true;\n\n\t\t// Precompute the prefix for each level\n\t\tthis.prefixCache = {};\n\t\tfor (let i = 0; i <= this.levels.length; i++)\n\t\t{\n\t\t\tthis.prefixCache[this.levels[i]] = `[${this.levels[i]}] ${this._ContextMessage}: `;\n\n\t\t\tif (this._ShowTimeStamps)\n\t\t\t{\n\t\t\t\t// If there is a timestamp we need a to prepend space before the prefixcache string, since the timestamp comes first\n\t\t\t\tthis.prefixCache[this.levels[i]] = ' '+this.prefixCache[this.levels[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpTimeStamp = '';\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = (new Date()).toISOString();\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = +new Date();\n\t\t}\n\n\t\tlet tmpLogLine = `${tmpTimeStamp}${this.prefixCache[pLevel]}${pLogText}`;\n\n\t\tif (this._OutputLogLinesToConsole)\n\t\t{\n\t\t\tconsole.log(tmpLogLine);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (this._OutputObjectsToConsole && (typeof(pObject) !== 'undefined'))\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 2));\n\t\t}\n\n\t\t// Provide an easy way to be overridden and be consistent\n\t\treturn tmpLogLine;\n\t}\n}\n\nmodule.exports = ConsoleLogger;","const libConsoleLog = require('./Fable-Log-Logger-Console.js');\nconst libFS = require('fs');\nconst libPath = require('path');\n\nclass SimpleFlatFileLogger extends libConsoleLog\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings, pFableLog);\n\n\t\t// If a path isn't provided for the logfile, it tries to use the ProductName or Context\n\t\tthis.logFileRawPath = (this._Settings.hasOwnProperty('path')) ? this._Settings.path : `./${this._ContextMessage}.log`;\n\t\tthis.logFilePath = libPath.normalize(this.logFileRawPath);\n\n\t\tthis.logFileStreamOptions = (this._Settings.hasOwnProperty('fileStreamoptions')) ? this._Settings.fileStreamOptions : (\n\t\t\t{\n\t\t\t\t\"flags\": \"a\",\n\t\t\t\t\"encoding\": \"utf8\"\n\t\t\t})\n\n\t\tthis.fileWriter = libFS.createWriteStream(this.logFilePath, this.logFileStreamOptions);\n\n\t\tthis.activelyWriting = false;\n\n\t\tthis.logLineStrings = [];\n\t\tthis.logObjectStrings = [];\n\n\t\tthis.defaultWriteCompleteCallback = ()=>{};\n\t\tthis.defaultBufferFlushCallback = ()=>{};\n\t}\n\n\tcloseWriter(fCloseComplete)\n\t{\n\t\tlet tmpCloseComplete = (typeof(fCloseComplete) == 'function') ? fCloseComplete : ()=>{};\n\t\tif (this.fileWriter)\n\t\t{\n\t\t\tthis.fileWriter.end('\\n');\n\t\t\treturn this.fileWriter.once('finish', tmpCloseComplete.bind(this));\n\t\t}\n\t};\n\n\tcompleteBufferFlushToLogFile(fFlushComplete)\n\t{\n\t\tthis.activelyWriting = false;\n\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\tif (this.logLineStrings.length > 0)\n\t\t{\n\t\t\tthis.flushBufferToLogFile(tmpFlushComplete);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpFlushComplete();\n\t\t}\n\t}\n\n\tflushBufferToLogFile(fFlushComplete)\n\t{\n\t\tif (!this.activelyWriting)\n\t\t{\n\t\t\t// Only want to be writing one thing at a time....\n\t\t\tthis.activelyWriting = true;\n\n\t\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\t\t// Get the current buffer arrays.  These should always have matching number of elements.\n\t\t\tlet tmpLineStrings = this.logLineStrings;\n\t\t\tlet tmpObjectStrings = this.logObjectStrings;\n\n\t\t\t// Reset these to be filled while we process this queue...\n\t\t\tthis.logLineStrings = [];\n\t\t\tthis.logObjectStrings = [];\n\n\t\t\t// This is where we will put each line before writing it to the file...\n\t\t\tlet tmpConstructedBufferOutputString = '';\n\n\t\t\tfor (let i = 0; i < tmpLineStrings.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: Windows Newline?   ....... yo no se!\n\t\t\t\ttmpConstructedBufferOutputString += `${tmpLineStrings[i]}\\n`;\n\t\t\t\tif (tmpObjectStrings[i] !== false)\n\t\t\t\t{\n\t\t\t\t\ttmpConstructedBufferOutputString += `${tmpObjectStrings[i]}\\n`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.fileWriter.write(tmpConstructedBufferOutputString, 'utf8'))\n\t\t\t{\n\t\t\t\t// If the streamwriter returns false, we need to wait for it to drain.\n\t\t\t\tthis.fileWriter.once('drain', this.completeBufferFlushToLogFile.bind(this, tmpFlushComplete));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.completeBufferFlushToLogFile(tmpFlushComplete);\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpLogLine = super.write(pLevel, pLogText, pObject);\n\n\t\t// Use a very simple array as the write buffer\n\t\tthis.logLineStrings.push(tmpLogLine);\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tthis.logObjectStrings.push(JSON.stringify(pObject, null, 4));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logObjectStrings.push(false);\n\t\t}\n\n\t\tthis.flushBufferToLogFile();\n\t}\n}\n\nmodule.exports = SimpleFlatFileLogger;","/**\n* Fable Logging Service\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass FableLog extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'Logging';\n\n\t\tlet tmpSettings = (typeof(pSettings) === 'object') ? pSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders-Node.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.datumDecorator = (pDatum) => pDatum;\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetDatumDecorator(fDatumDecorator)\n\t{\n\t\tif (typeof(fDatumDecorator) === 'function')\n\t\t{\n\t\t\tthis.datumDecorator = fDatumDecorator;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.datumDecorator = (pDatum) => pDatum;\n\t\t}\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'default',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableLog(pSettings);\n}\n\n\nmodule.exports = FableLog;\nmodule.exports.new = autoConstruct;\nmodule.exports.LogProviderBase = require('./Fable-Log-BaseLogger.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-Console.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-SimpleFlatFile.js');\n","/**\n* Fable Core Pre-initialization Service Base\n*\n* For a couple services, we need to be able to instantiate them before the Fable object is fully initialized.\n* This is a base class for those services.\n*\n* @author <steven@velozo.com>\n*/\n\nclass FableCoreServiceProviderBase\n{\n\tconstructor(pOptions, pServiceHash)\n\t{\n\t\tthis.fable = false;\n\n\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions : {};\n\n\t\tthis.serviceType = 'Unknown';\n\n\t\t// The hash will be a non-standard UUID ... the UUID service uses this base class!\n\t\tthis.UUID = `CORESVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`;\n\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash : `${this.UUID}`;\n\t}\n\n\n\tstatic isFableService = true;\n\n\t// After fable is initialized, it would be expected to be wired in as a normal service.\n\tconnectFable(pFable)\n\t{\n\t\tthis.fable = pFable;\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = FableCoreServiceProviderBase;\n","/**\n* Fable Service Base\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tthis.fable = pFable;\n\n\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t: ((typeof(pFable) === 'object') && !pFable.isFable) ? pFable\n\t\t\t\t\t\t: {};\n\n\t\tthis.serviceType = 'Unknown';\n\n\t\tif (typeof(pFable.getUUID) == 'function')\n\t\t{\n\t\t\tthis.UUID = pFable.getUUID();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.UUID = `NoFABLESVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`\n\t\t}\n\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash : `${this.UUID}`;\n\n\t\t// Pull back a few things\n\t\tthis.log = this.fable.log;\n\t\tthis.servicesMap = this.fable.servicesMap;\n\t\tthis.services = this.fable.services;\n\t}\n\n\tstatic isFableService = true;\n}\n\nmodule.exports = FableServiceProviderBase;\n\nmodule.exports.CoreServiceProviderBase = require('./Fable-ServiceProviderBase-Preinit.js');","module.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n","/**\n* Fable Settings Template Processor\n*\n* This class allows environment variables to come in via templated expressions, and defaults to be set.\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\nconst libPrecedent = require('precedent');\n\nclass FableSettingsTemplateProcessor\n{\n\tconstructor(pDependencies)\n\t{\n        // Use a no-dependencies templating engine to parse out environment variables\n\t\tthis.templateProcessor = new libPrecedent();\n\n        // TODO: Make the environment variable wrap expression demarcation characters configurable?\n\t\tthis.templateProcessor.addPattern('${', '}',\n\t\t\t(pTemplateValue)=>\n\t\t\t{\n\t\t\t\tlet tmpTemplateValue = pTemplateValue.trim();\n\n\t\t\t\tlet tmpSeparatorIndex = tmpTemplateValue.indexOf('|');\n\n\t\t\t\tconst tmpDefaultValue = tmpSeparatorIndex >= 0 ? tmpTemplateValue.substring(tmpSeparatorIndex+1) : '';\n\n\t\t\t\tlet tmpEnvironmentVariableName = (tmpSeparatorIndex > -1) ? tmpTemplateValue.substring(0, tmpSeparatorIndex) : tmpTemplateValue;\n\n\t\t\t\tif (process.env.hasOwnProperty(tmpEnvironmentVariableName))\n\t\t\t\t{\n\t\t\t\t\treturn process.env[tmpEnvironmentVariableName];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpDefaultValue;\n\t\t\t\t}\n\t\t\t});\n    }\n\n    parseSetting(pString)\n    {\n        return this.templateProcessor.parseString(pString);\n    }\n}\n\nmodule.exports = FableSettingsTemplateProcessor;\n","/**\n* Fable Settings Add-on\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nconst libFableSettingsTemplateProcessor = require('./Fable-Settings-TemplateProcessor.js');\n\nclass FableSettings extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'SettingsManager';\n\n\t\t// Initialize the settings value template processor\n\t\tthis.settingsTemplateProcessor = new libFableSettingsTemplateProcessor();\n\n\t\t// set straight away so anything that uses it respects the initial setting\n\t\tthis._configureEnvTemplating(pSettings);\n\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')));\n\t}\n\n\t// Update the configuration for environment variable templating based on the current settings object\n\t_configureEnvTemplating(pSettings)\n\t{\n\t\t// default environment variable templating to on\n\t\tthis._PerformEnvTemplating = !pSettings || pSettings.NoEnvReplacement !== true;\n\t}\n\n\t// Resolve (recursive) any environment variables found in settings object.\n\t_resolveEnv(pSettings)\n\t{\n\t\tfor (const tmpKey in pSettings)\n\t\t{\n\t\t\tif (typeof(pSettings[tmpKey]) === 'object')\n\t\t\t{\n\t\t\t\tthis._resolveEnv(pSettings[tmpKey]);\n\t\t\t}\n\t\t\telse if (typeof(pSettings[tmpKey]) === 'string')\n\t\t\t{\n\t\t\t\tpSettings[tmpKey] = this.settingsTemplateProcessor.parseSetting(pSettings[tmpKey]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if a value is an object (but not an array).\n\t */\n\t_isObject(value)\n\t{\n\t\treturn typeof(value) === 'object' && !Array.isArray(value);\n\t}\n\n\t/**\n\t * Merge two plain objects. Keys that are objects in both will be merged property-wise.\n\t */\n\t_deepMergeObjects(toObject, fromObject)\n\t{\n\t\tif (!fromObject || !this._isObject(fromObject))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject.keys(fromObject).forEach((key) =>\n\t\t{\n\t\t\tconst fromValue = fromObject[key];\n\t\t\tif (this._isObject(fromValue))\n\t\t\t{\n\t\t\t\tconst toValue = toObject[key];\n\t\t\t\tif (toValue && this._isObject(toValue))\n\t\t\t\t{\n\t\t\t\t\t// both are objects, so do a recursive merge\n\t\t\t\t\tthis._deepMergeObjects(toValue, fromValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoObject[key] = fromValue;\n\t\t});\n\t\treturn toObject;\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\t\ttmpSettingsTo = this._deepMergeObjects(tmpSettingsTo, tmpSettingsFromCopy);\n\n\t\tif (this._PerformEnvTemplating)\n\t\t{\n\t\t\tthis._resolveEnv(tmpSettingsTo);\n\t\t}\n\t\t// Update env tempating config, since we just updated the config object, and it may have changed\n\t\tthis._configureEnvTemplating(tmpSettingsTo);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\n\t\tthis.settings = this._deepMergeObjects(tmpSettingsFromCopy, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = FableSettings;\nmodule.exports.new = autoConstruct;","/**\n* Random Byte Generator - Browser version\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn this.generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n","/**\n* Fable UUID Generator\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;0\n\nconst libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'UUID';\n\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = FableUUID;\nmodule.exports.new = autoConstruct;\n","/**\n* Fable Application Services Management\n* @author <steven@velozo.com>\n*/\n\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableService extends libFableServiceBase.CoreServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'ServiceManager';\n\n\t\tthis.serviceTypes = [];\n\n\t\t// A map of instantiated services\n\t\tthis.servicesMap = {};\n\n\t\t// A map of the default instantiated service by type\n\t\tthis.services = {};\n\n\t\t// A map of class constructors for services\n\t\tthis.serviceClasses = {};\n\n\t\t// If we need extra service initialization capabilities\n\t\tthis.extraServiceInitialization = false;\n\t}\n\n\taddServiceType(pServiceType, pServiceClass)\n\t{\n\t\tif (this.servicesMap.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\t// TODO: Check if any services are running?\n\t\t\tthis.fable.log.warn(`Adding a service type [${pServiceType}] that already exists.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the container for instantiated services to go in\n\t\t\tthis.servicesMap[pServiceType] = {};\n\n\t\t\t// Add the type to the list of types\n\t\t\tthis.serviceTypes.push(pServiceType);\n\t\t}\n\n\t\t// Using the static member of the class is a much more reliable way to check if it is a service class than instanceof\n\t\tif ((typeof(pServiceClass) == 'function') && (pServiceClass.isFableService))\n\t\t{\n\t\t\t// Add the class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = pServiceClass;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the base class to the list of classes\n\t\t\tthis.fable.log.error(`Attempted to add service type [${pServiceType}] with an invalid class.  Using base service class, which will not crash but won't provide meaningful services.`);\n\t\t\tthis.serviceClasses[pServiceType] = libFableServiceBase;\n\t\t}\n\t}\n\n\t// This is for the services that are meant to run mostly single-instance so need a default at initialization\n\taddAndInstantiateServiceType(pServiceType, pServiceClass)\n\t{\n\t\tthis.addServiceType(pServiceType, pServiceClass);\n\t\treturn this.instantiateServiceProvider(pServiceType, {}, `${pServiceType}-Default`);\n\t}\n\n\t// Some services expect to be overloaded / customized class.\n\tinstantiateServiceProviderFromPrototype(pServiceType, pOptions, pCustomServiceHash, pServicePrototype)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new pServicePrototype(this.fable, pOptions, pCustomServiceHash);\n\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\n\tinstantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = this.instantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\t// Create a service provider but don't register it to live forever in fable.services\n\tinstantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new this.serviceClasses[pServiceType](this.fable, pOptions, pCustomServiceHash);\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\t\treturn tmpService;\n\t}\n\n\t// Connect an initialized service provider that came before Fable was initialized\n\tconnectPreinitServiceProviderInstance(pServiceInstance)\n\t{\n\t\tlet tmpServiceType = pServiceInstance.serviceType;\n\t\tlet tmpServiceHash = pServiceInstance.Hash;\n\n\t\t// The service should already be instantiated, so just connect it to fable\n\t\tpServiceInstance.connectFable(this.fable);\n\n\t\tif (!this.servicesMap.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\t// If the core service hasn't registered itself yet, create the service container for it.\n\t\t\t// This means you couldn't register another with this type unless it was later registered with a constructor class.\n\t\t\tthis.servicesMap[tmpServiceType] = {};\n\t\t}\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[tmpServiceType][tmpServiceHash] = pServiceInstance;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(tmpServiceType, tmpServiceHash)\n\t\t}\n\n\t\treturn pServiceInstance;\n\t}\n\n\tsetDefaultServiceInstantiation(pServiceType, pServiceHash)\n\t{\n\t\tif (this.servicesMap[pServiceType].hasOwnProperty(pServiceHash))\n\t\t{\n\t\t\tthis.fable[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\tthis.services[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nmodule.exports = FableService;\n\nmodule.exports.ServiceProviderBase = libFableServiceBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceBase.CoreServiceProviderBase;","/**\n* Fable Application Services Support Library\n* @author <steven@velozo.com>\n*/\n// Pre-init services\nconst libFableSettings = require('fable-settings');\nconst libFableUUID = require('fable-uuid');\nconst libFableLog = require('fable-log');\n\nconst libFableServiceManager = require('./Fable-ServiceManager.js');\n\nclass Fable\n{\n\tconstructor(pSettings)\n\t{\n\t\t// Initialization Phase 0: Set up the lowest level state (core services)\n\t\t// Container for the core services prototypes.\n\t\t// This is here so if an API consumer changes the default for a core service,\n\t\t// fable still runs with what was initialized.\n\t\tthis._coreServices = {};\n\n\t\t// Instantiate the default Settings Manager\n\t\tthis._coreServices.SettingsManager = new libFableSettings(pSettings);\n\t\t// Instantiate the UUID generator\n\t\tthis._coreServices.UUID = new libFableUUID(this._coreServices.SettingsManager.settings);\n\t\t// Instantiate the logging system\n\t\tthis._coreServices.Logging = new libFableLog(this._coreServices.SettingsManager.settings);\n\t\tthis._coreServices.Logging.initialize();\n\n\t\t// Initialization Phase 1: Instantiate the service manager\n\t\t// This is the start actual bootstrapping point for fable\n\t\tthis._coreServices.ServiceManager = new libFableServiceManager(this);\n\t\tthis.serviceManager = this._coreServices.ServiceManager;\n\t\tthis.serviceManager.connectFable(this);\n\t\t// Bootstrapping of fable into the Service Manager is complete\n\n\t\t// Initialization Phase 2: Map in the default services.\n\t\t// They will then be available in the Default service provider set as well.\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.ServiceManager);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.UUID);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.Logging);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.SettingsManager);\n\n\t\t// Initialize and instantiate the default baked-in Data Arithmatic service\n\t\tthis.serviceManager.addAndInstantiateServiceType('EnvironmentData', require('./services/Fable-Service-EnvironmentData.js'));\n\t\tthis.serviceManager.addServiceType('Template', require('./services/Fable-Service-Template.js'));\n\t\tthis.serviceManager.addServiceType('MetaTemplate', require('./services/Fable-Service-MetaTemplate.js'));\n\t\tthis.serviceManager.addServiceType('Anticipate', require('./services/Fable-Service-Anticipate.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('DataFormat', require('./services/Fable-Service-DataFormat.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('DataGeneration', require('./services/Fable-Service-DataGeneration.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('Utility', require('./services/Fable-Service-Utility.js'));\n\t\tthis.serviceManager.addServiceType('Operation', require('./services/Fable-Service-Operation.js'));\n\t\tthis.serviceManager.addServiceType('RestClient', require('./services/Fable-Service-RestClient.js'));\n\t\tthis.serviceManager.addServiceType('CSVParser', require('./services/Fable-Service-CSVParser.js'));\n\t\tthis.serviceManager.addServiceType('Manifest', require('manyfest'));\n\t\tthis.serviceManager.addServiceType('ObjectCache', require('cachetrax'));\n\t\tthis.serviceManager.addServiceType('FilePersistence', require('./services/Fable-Service-FilePersistence.js'));\n\t}\n\n\tget isFable()\n\t{\n\t\treturn true;\n\t}\n\n\tget settings()\n\t{\n\t\treturn this._coreServices.SettingsManager.settings;\n\t}\n\n\tget settingsManager()\n\t{\n\t\treturn this._coreServices.SettingsManager;\n\t}\n\n\tget log()\n\t{\n\t\treturn this._coreServices.Logging;\n\t}\n\n\tget services()\n\t{\n\t\treturn this._coreServices.ServiceManager.services;\n\t}\n\n\tget servicesMap()\n\t{\n\t\treturn this._coreServices.ServiceManager.servicesMap;\n\t}\n\n\tgetUUID()\n\t{\n\t\treturn this._coreServices.UUID.getUUID();\n\t}\n\n\tget fable()\n\t{\n\t\treturn this;\n\t};\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new Fable(pSettings);\n}\n\nmodule.exports = Fable;\nmodule.exports.new = autoConstruct;\n\nmodule.exports.LogProviderBase = libFableLog.LogProviderBase;\nmodule.exports.ServiceProviderBase = libFableServiceManager.ServiceProviderBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceManager.CoreServiceProviderBase;\n\nmodule.exports.precedent = libFableSettings.precedent;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceAnticipate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'AsyncAnticipate';\n\n\t\t// The queue of operations waiting to run.\n\t\tthis.operationQueue = [];\n\t\tthis.erroredOperations = [];\n\n\t\tthis.executingOperationCount = 0;\n\t\tthis.completedOperationCount = 0;\n\n\t\tthis.maxOperations = 1;\n\n\t\tthis.lastError = undefined;\n\t\tthis.waitingFunctions = [];\n\t}\n\n\tcheckQueue()\n\t{\n\t\t// This checks to see if we need to start any operations.\n\t\tif (this.operationQueue.length > 0 && this.executingOperationCount < this.maxOperations)\n\t\t{\n\t\t\tlet tmpOperation = this.operationQueue.shift();\n\t\t\tthis.executingOperationCount += 1;\n\t\t\ttmpOperation(this.buildAnticipatorCallback());\n\t\t}\n\t\telse if (this.waitingFunctions.length > 0 && this.executingOperationCount < 1)\n\t\t{\n\t\t\t// If there are no operations left, and we have waiting functions, call them.\n\t\t\tfor (let i = 0; i < this.waitingFunctions.length; i++)\n\t\t\t{\n\t\t\t\tthis.waitingFunctions[i](this.lastError);\n\t\t\t}\n\t\t\t// Reset our state\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.waitingFunctions = [];\n\t\t}\n\t}\n\n\t// Expects a function fAsynchronousFunction(fCallback)\n\tanticipate(fAsynchronousFunction)\n\t{\n\t\tthis.operationQueue.push(fAsynchronousFunction);\n\t\tthis.checkQueue();\n\t}\n\n\tbuildAnticipatorCallback()\n\t{\n\t\t// This uses closure-scoped state to track the callback state\n\t\tlet tmpCallbackState = (\n\t\t\t{\n\t\t\t\tCalled: false,\n\t\t\t\tError: undefined,\n\t\t\t\tOperationSet: this\n\t\t\t});\t\t\n\t\treturn hoistedCallback;\n\t\tfunction hoistedCallback(pError)\n\t\t{\n\t\t\tif (tmpCallbackState.Called)\n\t\t\t{\n\t\t\t\t// If they call the callback twice, throw an error\n\t\t\t\tthrow new Error(\"Anticipation async callback called twice...\");\n\t\t\t}\n\t\t\ttmpCallbackState.Called = true;\n\t\t\ttmpCallbackState.error = pError;\n\n\t\t\ttmpCallbackState.OperationSet.executingOperationCount -= 1;\n\t\t\ttmpCallbackState.OperationSet.completedOperationCount += 1;\n\n\t\t\ttmpCallbackState.OperationSet.checkQueue();\n\t\t}\n\t}\n\n\twait(fCallback)\n\t{\n\t\tthis.waitingFunctions.push(fCallback);\n\t\tthis.checkQueue();\n\t}\n}\n\nmodule.exports = FableServiceAnticipate;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Parsing CSVs.  Why?  Because it's a thing that needs to be done.\n*\n* 1. And the other node CSV parsers had issues with the really messy files we had.\n* \n*\n* 2. None of the CSV parsers dealt with and multi-line quoted string columns\n*    which are apparently a-ok according to the official spec.\n* Plus a lot of them are asynchronous because apparently that's the best way to\n* do anything; unfortunately some files have a sequence issue with that.\n*\n* @class CSVParser\n*/\nclass CSVParser extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'CSVParser';\n\n        this.Header = [];\n        this.HeaderFieldNames = [];\n\n        this.Delimiter = ',';\n        this.QuoteCharacter = '\"';\n\n        this.CleanCharacters = ['\\r'];\n\n        this.HeaderLineIndex = 0;\n        this.HasHeader = true;\n        this.HasSetHeader = false;\n        this.EmitHeader = false;\n\n        this.EmitJSON = true;\n\n        this.EscapedQuoteString = '&quot;';\n\n        // Current Line Parsing State\n        this.CurrentLine = '';\n        this.CurrentRecord = [];\n\n        this.InQuote = false;\n        this.InEscapedQuote = false;\n\n        this.LinesParsed = 0;\n        this.RowsEmitted = 0;\n    }\n\n    marshalRowToJSON(pRowArray)\n    {\n        if (!Array.isArray(pRowArray))\n        {\n            return false;\n        }\n\n        for (let i = this.HeaderFieldNames.length; i < pRowArray.length; i++)\n        {\n            this.HeaderFieldNames[i] = `${i}`;\n        }\n\n        let tmpObject = {};\n\n        for (let i = 0; i < pRowArray.length; i++)\n        {\n            tmpObject[this.HeaderFieldNames[i]] = pRowArray[i];\n        }\n\n        return tmpObject;\n    }\n\n    // Set the header data, for use in marshalling to JSON.\n    setHeader (pHeaderArray)\n    {\n        this.Header = pHeaderArray;\n\n        for (let i = 0; i < this.Header.length; i++)\n        {\n            if (typeof(this.Header[i]) == 'undefined')\n            {\n                this.HeaderFieldNames[i] = `${i}`;\n            }\n            else\n            {\n                this.HeaderFieldNames[i] = this.Header[i].toString();\n            }\n        }\n    }\n\n    resetRowState()\n    {\n        this.CurrentRecord = [];\n    }\n\n    pushLine()\n    {\n        for (let i = 0; i < this.CleanCharacters.length; i++)\n        {\n            this.CurrentLine = this.CurrentLine.replace(this.CleanCharacters[i],'');\n        }\n        this.CurrentRecord.push(this.CurrentLine);\n        this.CurrentLine = '';\n    }\n\n    emitRow(pFormatAsJSON)\n    {\n        let tmpFormatAsJSON = (typeof(pFormatAsJSON) == 'undefined') ? this.EmitJSON : pFormatAsJSON;\n\n        this.RowsEmitted++;\n        let tmpCompletedRecord = this.CurrentRecord;\n        this.CurrentRecord = [];\n\n        if (tmpFormatAsJSON)\n        {\n            return this.marshalRowToJSON(tmpCompletedRecord);\n        }\n        else\n        {\n            return tmpCompletedRecord;\n        }\n    }\n\n    parseCSVLine (pLineString)\n    {\n        this.LinesParsed++;\n\n        for (let i = 0; i < pLineString.length; i++)\n        {\n            if ((!this.InQuote) && (pLineString[i] == this.Delimiter))\n            {\n                this.pushLine();\n            }\n            else if (pLineString[i] == this.QuoteCharacter)\n            {\n                // If we are in the second part of an escaped quote, ignore it.\n                if (this.InEscapedQuote)\n                {\n                    this.InEscapedQuote = false;\n                }\n                // If we aren't in a quote, enter quote\n                else if (!this.InQuote)\n                {\n                    this.InQuote = true;\n                }\n                // We are in a quote, so peek forward to see if this is an \"escaped\" quote pair\n                else if ((i < pLineString.length) && (pLineString[i+1] == this.QuoteCharacter))\n                {\n                    this.CurrentLine += this.EscapedQuoteString;\n                    this.InEscapedQuote = true;\n                }\n                // We are in a quote, this isn't an \"escaped\" quote pair, so go out of quote mode\n                else\n                {\n                    this.InQuote = false;\n                }\n            }\n            else\n            {\n                this.CurrentLine += pLineString[i];\n            }\n        }\n\n        // See if we are in a multiline quoted entry -- if not, emit the row.\n        if (!this.InQuote)\n        {\n            // Push the last remaining column from the buffer to the current line.\n            this.pushLine();\n\n            // Check to see if there is a header -- and if so, if this is the header row\n            if (this.HasHeader && !this.HasSetHeader && (this.RowsEmitted == this.HeaderLineIndex))\n            {\n                this.HasSetHeader = true;\n                // Override the format as json bit\n                this.setHeader(this.emitRow(false));\n\n                // No matter what, formatting this as JSON is silly and we don't want to go there anyway.\n                if (this.EmitHeader)\n                {\n                    return this.Header;\n                }\n                else\n                {\n                    return false;\n                }\n            }\n            else\n            {\n                return this.emitRow();\n            }\n        }\n        else\n        {\n            return false;\n        }\n    };\n}\n\nmodule.exports = CSVParser;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Data Formatting and Translation Functions\n*\n* @class DataFormat\n*/\nclass DataFormat extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'DataArithmatic';\n\n\t\t// Regular Expressions (so they don't have to be recompiled every time)\n\t\t// These could be defined as static, but I'm not sure if that will work with browserify ... and specifically the QT browser.\n\t\tthis._Regex_formatterInsertCommas = /.{1,3}/g;\n\t\t// Match Function:\n\t\t// function(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t\t// Thoughts about below:   /^([+-]?)(0*)(\\d+)(\\.(\\d+))?$/;\n\t\tthis._Regex_formatterAddCommasToNumber = /^([-+]?)(0?)(\\d+)(.?)(\\d+)$/g;\n\t\tthis._Regex_formatterDollarsRemoveCommas = /,/gi;\n\t\tthis._Regex_formatterCleanNonAlphaChar = /[^a-zA-Z]/gi;\n\t\tthis._Regex_formatterCapitalizeEachWord = /([a-zA-Z]+)/g;\n\n\t\t// TODO: Potentially pull these in from a configuration.\n\t\t// TODO: Use locale data for this if it's defaults all the way down.\n\t\tthis._Value_MoneySign_Currency = '$';\n\t\tthis._Value_NaN_Currency = '--';\n\t\tthis._Value_GroupSeparator_Number = ',';\n\n\t\tthis._Value_Prefix_StringHash = 'HSH';\n\t\tthis._Value_Clean_formatterCleanNonAlpha = '';\n\n\t\tthis._UseEngineStringStartsWith = (typeof(String.prototype.startsWith) === 'function');\n\t\tthis._UseEngineStringEndsWith = (typeof(String.prototype.endsWith) === 'function');\n\t}\n\n\n\t/*************************************************************************\n\t * String Manipulation and Comparison Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Reverse a string\n\t *\n\t * @param {string} pString - The string to reverse\n\t * @returns {string}\n\t */\n\tstringReverse (pString)\n\t{\n\t\t// TODO: Benchmark if there are faster ways we want to do this with all the newer JS stuff\n\t\t//       ... and if it will work with browserify in a clean way.\n\t\treturn pString.split('').reverse().join('');\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pStartIndex\n\t * @returns {*}\n\t */\n\tstringStartsWith (pString, pSearchString, pStartIndex)\n\t{\n\t\tif (this._UseEngineStringStartsWith)\n\t\t{\n\t\t\treturn pString.startsWith(pSearchString, pStartIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringStartsWith_Polyfill.call(pString, pSearchString, pStartIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pStartIndex - The index to start the search at\n\t * @returns {boolean}\n\t */\n\tstringStartsWith_Polyfill (pSearchString, pStartIndex)\n\t{\n\t\treturn this.slice(pStartIndex || 0, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pEndIndex\n\t * @returns {*}\n\t */\n\tstringEndsWith (pString, pSearchString, pEndIndex)\n\t{\n\t\tif (this._UseEngineStringEndsWith)\n\t\t{\n\t\t\treturn pString.endsWith(pSearchString, pEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringEndsWith_Polyfill.call(pString, pSearchString, pEndIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pEndIndex - The index to end the search at\n\t * @returns {boolean}\n\t */\n\tstringEndsWith_Polyfill (pSearchString, pEndIndex)\n\t{\n\t\t// This works much better than >= because\n\t\t// it compensates for NaN:\n\t\tif (!(pEndIndex < this.length))\n\t\t{\n\t\t\tpEndIndex = this.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpEndIndex |= 0; // round position\n\t\t}\n\t\treturn this.substr(pEndIndex - pSearchString.length, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Generate an insecure string hash.  Not meant to be secure, just a quick way to generate a hash for a string.  This is not a cryptographic hash.  Additional warranty and disclaimer ... this is not for passwords!\n\t *\n\t * @param {string} pString\n\t * @returns {string}\n\t */\n\tinsecureStringHash (pString)\n\t{\n\t\tlet tmpHash = 0;\n\t\tlet tmpStringLength = pString.length;\n\t\tlet tmpCharacterIndex = 0;\n\n\t\twhile (tmpCharacterIndex < tmpStringLength)\n\t\t{\n\t\t\ttmpHash = (tmpHash << 5) - tmpHash + pString.charCodeAt(tmpCharacterIndex++) | 0;\n\t\t}\n\n\t\treturn `${this._Value_Prefix_StringHash}${tmpHash}`;\n\t}\n\n\tcapitalizeEachWord (pString)\n\t{\n\t\treturn pString.replace(this._Regex_formatterCapitalizeEachWord,\n\t\t\t(pMatch) =>\n\t\t\t{\n\t\t\t\treturn pMatch.charAt(0).toUpperCase() + pMatch.substr(1);\n\t\t\t});\n\t}\n\n\t/**\n\t * Clean wrapping characters if they exist consistently around the string.  If they do not, the string is returned unchanged.\n\t *\n\t * @param {string} pWrapCharacter - The character expected as the wrapping character\n\t * @param {string} pString - the string to clean\n\t * @returns {string}\n\t */\n\tcleanEnclosureWrapCharacters (pWrapCharacter, pString)\n\t{\n\t\t// # Use case from ManyFest DSL:\n\t\t//\n\t\t// When a boxed property is passed in, it should have quotes of some\n\t\t// kind around it.\n\t\t//\n\t\t// For instance:\n\t\t// \t\tMyValues['Name']\n\t\t// \t\tMyValues[\"Age\"]\n\t\t// \t\tMyValues[`Cost`]\n\t\t//\n\t\t// This function is necessary to remove the wrapping quotes before object\n\t\t// resolution can occur.\n\t\tif (pString.startsWith(pWrapCharacter) && pString.endsWith(pWrapCharacter))\n\t\t{\n\t\t\treturn pString.substring(1, pString.length - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn pString;\n\t\t}\n\t}\n\n\t/**\n\t * Clean a string of any non-alpha characters (including numbers)\n\t *\n\t * @param {*} pString\n\t * @returns\n\t */\n\tcleanNonAlphaCharacters (pString)\n\t{\n\t\tif ((typeof(pString) == 'string') && (pString != ''))\n\t\t{\n\t\t\treturn pString.replace(this._Regex_formatterCleanNonAlphaChar, this._Value_Clean_formatterCleanNonAlpha);\n\t\t}\n\n\t\treturn '';\n\t}\n\n\n\t/*************************************************************************\n\t * Number Formatting Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Insert commas every 3 characters from the right.  Used by formatterAddCommasToNumber().\n\t *\n\t * @param {*} pString\n\t * @returns {*}\n\t */\n\tformatterInsertCommas (pString)\n\t{\n\t\t// Reverse, because it's easier to do things from the left, given arbitrary digit counts\n\t\tlet tmpReversed = this.stringReverse(pString);\n\t\t// Add commas every three characters\n\t\tlet tmpReversedWithCommas = tmpReversed.match(this._Regex_formatterInsertCommas).join(',');\n\t\t// Reverse again (back to normal direction)\n\t\treturn this.stringReverse(tmpReversedWithCommas);\n\t}\n\n\tprocessAddCommasToNumberRegex(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t{\n\t\t// If there was no decimal, the last capture grabs the final digit, so\n\t\t// we have to put it back together with the 'before' substring\n\t\treturn pSign + (pDecimal ? this.formatterInsertCommas(pBefore) + pDecimal + pAfter : this.formatterInsertCommas(pBefore + pAfter));\n\t}\n\n\t/**\n\t * Add Commas to a Number for readability.\n\t *\n\t * @param {*} pNumber\n\t * @returns {string}\n\t */\n\tformatterAddCommasToNumber (pNumber)\n\t{\n\t\t// If the regex doesn't match, `replace` returns the string unmodified\n\t\treturn (pNumber.toString()).replace\n\t\t(\n\t\t\tthis._Regex_formatterAddCommasToNumber,\n\t\t\tthis.processAddCommasToNumberRegex.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * This will take a number and format it as a dollar string.  It will also add commas to the number.  If the number is not a number, it will return '--'.\n\t *\n\t * @param {*} pValue\n\t * @returns {string}\n\t */\n\tformatterDollars (pValue)\n\t{\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tlet tmpDollarAmount = this.fable.Utility.bigDecimal.round(pValue, 2);\n\n\t\tif (isNaN(tmpDollarAmount))\n\t\t{\n\t\t\t// Try again and see if what was passed in was a dollars string.\n\t\t\tif (typeof(pValue) == 'string')\n\t\t\t{\n\t\t\t\t// TODO: Better rounding function?  This is a hack to get rid of the currency symbol and commas.\n\t\t\t\ttmpDollarAmount = parseFloat(pValue.replace(this._Value_MoneySign_Currency,'').replace(this._Regex_formatterDollarsRemoveCommas,'')).toFixed(2);\n\t\t\t}\n\t\t\t// If we didn't get a number, return the \"not a number\" string.\n\t\t\tif (isNaN(tmpDollarAmount))\n\t\t\t{\n\t\t\t\treturn this._Value_NaN_Currency;\n\t\t\t}\n\t\t}\n\n\t\t// TODO: Get locale data and use that for this stuff.\n\t\treturn `$${this.formatterAddCommasToNumber(tmpDollarAmount)}`;\n\t}\n\n\t/**\n\t * Round a number to a certain number of digits.  If the number is not a number, it will return 0.  If no digits are specified, it will default to 2 significant digits.\n\t *\n\t * @param {*} pValue\n\t * @param {number} pDigits\n\t * @returns {string}\n\t */\n\tformatterRoundNumber (pValue, pDigits)\n\t{\n\t\tlet tmpDigits = (typeof(pDigits) == 'undefined') ? 2 : pDigits;\n\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\n\t\tlet tmpValue = this.fable.Utility.bigDecimal.round(pValue, tmpDigits);\n\t\tif (isNaN(tmpValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpValue;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate a reapeating padding string to be appended before or after depending on \n\t * which padding function it uses.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringGeneratePaddingString(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpTargetLength = pTargetLength >> 0;\n\t\tlet tmpPadString = String((typeof pPadString !== 'undefined' ? pPadString : ' '));\n\t\tif (pString.length > pTargetLength)\n\t\t{\n\t\t\t// No padding string if the source string is already longer than the target length, return an empty string\n\t\t\treturn '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpPadLength = pTargetLength - pString.length;\n\t\t\tif (tmpPadLength > pPadString.length)\n\t\t\t{\n\t\t\t\tpPadString += pPadString.repeat(tmpTargetLength / pPadString.length);\n\t\t\t}\n\t\t\treturn pPadString.slice(0,tmpPadLength);\n\t\t}\n\t}\n\n\t/**\n\t * Pad the start of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadStart = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString) + tmpString;\n\t}\n\n\t/**\n\t * Pad the end of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadEnd = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn tmpString + this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString);\n\t}\n\n\t/*************************************************************************\n\t * Time Formatting Functions (milliseconds)\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Format a time length in milliseconds into a human readable string.\n\t * @param {number} pTimeSpan \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeSpan(pTimeSpan)\n\t{\n\t\tif (typeof(pTimeSpan) != 'number')\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpMs = parseInt(pTimeSpan%1000);\n\t\tlet tmpSeconds = parseInt((pTimeSpan/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeSpan/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeSpan/(1000*60*60));\n\n\t\treturn `${this.stringPadStart(tmpHours,2,'0')}:${this.stringPadStart(tmpMinutes,2,'0')}:${this.stringPadStart(tmpSeconds,2,'0')}.${this.stringPadStart(tmpMs,3,'0')}`;\n\t}\n\n\t/**\n\t * Format the time delta between two times in milliseconds into a human readable string.\n\t * \n\t * @param {number} pTimeStart \n\t * @param {number} pTimeEnd \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeDelta(pTimeStart, pTimeEnd)\n\t{\n\t\tif ((typeof(pTimeStart) != 'number') || (typeof(pTimeEnd) != 'number'))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.formatTimeSpan(pTimeEnd-pTimeStart);\n\t}\n\n\t// THE FOLLOWING TERRIBLE FUNCTIONS ARE FOR QT / WKHTMLTOPDF when luxon and moment don't work so well\n\tgetMonthFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tgetMonthAbbreviatedFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tformatSortableStringFromDate (pDate)\n\t{\n\t\treturn pDate.getFullYear()+this.stringPadStart(pDate.getMonth(),2,'0')+this.stringPadStart(pDate.getDate(),2,'0');\n\t}\n\n\t/*************************************************************************\n\t * String Tokenization Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Return the string before the matched substring.\n\t *\n\t * If the substring is not found, the entire string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringBeforeMatch (pString, pMatch)\n\t{\n\t\treturn pString.split(pMatch)[0];\n\t}\n\n\t/**\n\t * Return the string after the matched substring.\n\t *\n\t * If the substring is not found, an empty string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringAfterMatch (pString, pMatch)\n\t{\n\t\tlet tmpStringSplitLocation = pString.indexOf(pMatch);\n\n\t\tif ((tmpStringSplitLocation < 0) || ((tmpStringSplitLocation + pMatch.length) >= pString.length))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn pString.substring(tmpStringSplitLocation + pMatch.length);\n\t}\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures (pString, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\tif (tmpEnclosureDepth == 0)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t}\n\t\t\t\ttmpEnclosureDepth++;\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpEnclosureCount;\n\t}\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosedValueStartIndex = 0;\n\t\tlet tmpEnclosedValueEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This is the end of an enclosure\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t\t{\n\t\t\t// Return an empty string if the enclosure is not found\n\t\t\treturn '';\n\t\t}\n\n\t\tif ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t\t}\n\t}\n\n\n\t/**\n\t * Remove an enclosure from a string based on the index of the enclosure.\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToRemove\n\t * @param {number} pEnclosureStart\n\t * @param {number} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringRemoveEnclosureByIndex (pString, pEnclosureIndexToRemove, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToRemove = (typeof(pEnclosureIndexToRemove) == 'number') ? pEnclosureIndexToRemove : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosureStartIndex = 0;\n\t\tlet tmpEnclosureEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToRemove == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosureStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosureEndIndex <= tmpEnclosureStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToRemove)\n\t\t{\n\t\t\treturn tmpString;\n\t\t}\n\n\t\tlet tmpReturnString = '';\n\n\t\tif (tmpEnclosureStartIndex > 1)\n\t\t{\n\t\t\ttmpReturnString = tmpString.substring(0, tmpEnclosureStartIndex);\n\t\t}\n\n\t\tif ((tmpString.length > (tmpEnclosureEndIndex + 1)) && (tmpEnclosureEndIndex > tmpEnclosureStartIndex))\n\t\t{\n\t\t\ttmpReturnString += tmpString.substring(tmpEnclosureEndIndex+1);\n\t\t}\n\n\t\treturn tmpReturnString;\n\t}\n}\n\nmodule.exports = DataFormat;","module.exports={\n\t\"DefaultIntegerMinimum\": 0,\n\t\"DefaultIntegerMaximum\": 9999999,\n\n\t\"DefaultNumericStringLength\": 10,\n\n\t\"MonthSet\": [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n\n\t\"WeekDaySet\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\n\n\t\"ColorSet\": \n\t\t[\n\t\t\t\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Blue\", \"Indigo\", \"Violet\", \"Pink\", \"Purple\", \"Turquoise\", \"Gold\",\n\t\t\t\"Lime\", \"Maroon\", \"Navy\", \"Coral\", \"Teal\", \"Brown\", \"White\", \"Black\", \"Sky\", \"Berry\",\n\t\t\t\"Grey\", \"Straw\", \"Silver\", \"Sapphire\"\n\t\t],\n\n\t\"SurNameSet\":\n\t\t[\n\t\t\t\"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Miller\", \"Davis\", \"Garcia\", \"Rodriguez\", \"Wilson\",\n\t\t\t\"Martinez\", \"Anderson\", \"Taylor\", \"Thomas\", \"Hernandez\", \"Moore\", \"Martin\", \"Jackson\", \"Thompson\", \"White\",\n\t\t\t\"Lopez\", \"Lee\", \"Gonzalez\", \"Harris\", \"Clark\", \"Lewis\", \"Robinson\", \"Walker\", \"Perez\", \"Hall\",\n\t\t\t\"Young\", \"Allen\", \"Sanchez\", \"Wright\", \"King\", \"Scott\", \"Green\", \"Baker\", \"Adams\", \"Nelson\",\n\t\t\t\"Hill\", \"Ramirez\", \"Campbell\", \"Mitchell\", \"Roberts\", \"Carter\", \"Phillips\", \"Evans\", \"Turner\", \"Torres\",\n\t\t\t\"Parker\", \"Collins\", \"Edwards\", \"Stewart\", \"Flores\", \"Morris\", \"Nguyen\", \"Murphy\", \"Rivera\", \"Cook\",\n\t\t\t\"Rogers\", \"Morgan\", \"Peterson\", \"Cooper\", \"Reed\", \"Bailey\", \"Bell\", \"Gomez\", \"Kelly\", \"Howard\",\n\t\t\t\"Ward\", \"Cox\", \"Diaz\", \"Richardson\", \"Wood\", \"Watson\", \"Brooks\", \"Bennett\", \"Gray\", \"James\",\n\t\t\t\"Reyes\", \"Cruz\", \"Hughes\", \"Price\", \"Myers\", \"Long\", \"Foster\", \"Sanders\", \"Ross\", \"Morales\",\n\t\t\t\"Powell\", \"Sullivan\", \"Russell\", \"Ortiz\", \"Jenkins\", \"Gutierrez\", \"Perry\", \"Butler\", \"Barnes\", \"Fisher\"\n\t\t],\n\n\t\"NameSet\":\n\t\t[\n\t\t\t\"Mary\", \"Patricia\", \"Jennifer\", \"Linda\", \"Elizabeth\", \"Barbara\", \"Susan\", \"Jessica\", \"Sarah\", \"Karen\",\n\t\t\t\"Lisa\", \"Nancy\", \"Betty\", \"Sandra\", \"Margaret\", \"Ashley\", \"Kimberly\", \"Emily\", \"Donna\", \"Michelle\",\n\t\t\t\"Carol\", \"Amanda\", \"Melissa\", \"Deborah\", \"Stephanie\", \"Dorothy\", \"Rebecca\", \"Sharon\", \"Laura\", \"Cynthia\",\n\t\t\t\"Amy\", \"Kathleen\", \"Angela\", \"Shirley\", \"Brenda\", \"Emma\", \"Anna\", \"Pamela\", \"Nicole\", \"Samantha\",\n\t\t\t\"Katherine\", \"Christine\", \"Helen\", \"Debra\", \"Rachel\", \"Carolyn\", \"Janet\", \"Maria\", \"Catherine\", \"Heather\",\n\t\t\t\"Diane\", \"Olivia\", \"Julie\", \"Joyce\", \"Victoria\", \"Ruth\", \"Virginia\", \"Lauren\", \"Kelly\", \"Christina\",\n\t\t\t\"Joan\", \"Evelyn\", \"Judith\", \"Andrea\", \"Hannah\", \"Megan\", \"Cheryl\", \"Jacqueline\", \"Martha\", \"Madison\",\n\t\t\t\"Teresa\", \"Gloria\", \"Sara\", \"Janice\", \"Ann\", \"Kathryn\", \"Abigail\", \"Sophia\", \"Frances\", \"Jean\",\n\t\t\t\"Alice\", \"Judy\", \"Isabella\", \"Julia\", \"Grace\", \"Amber\", \"Denise\", \"Danielle\", \"Marilyn\", \"Beverly\",\n\t\t\t\"Charlotte\", \"Natalie\", \"Theresa\", \"Diana\", \"Brittany\", \"Doris\", \"Kayla\", \"Alexis\", \"Lori\", \"Marie\",\n\t\t\t\"James\", \"Robert\", \"John\", \"Michael\", \"David\", \"William\", \"Richard\", \"Joseph\", \"Thomas\", \"Christopher\",\n\t\t\t\"Charles\", \"Daniel\", \"Matthew\", \"Anthony\", \"Mark\", \"Donald\", \"Steven\", \"Andrew\", \"Paul\", \"Joshua\",\n\t\t\t\"Kenneth\", \"Kevin\", \"Brian\", \"George\", \"Timothy\", \"Ronald\", \"Jason\", \"Edward\", \"Jeffrey\", \"Ryan\",\n\t\t\t\"Jacob\", \"Gary\", \"Nicholas\", \"Eric\", \"Jonathan\", \"Stephen\", \"Larry\", \"Justin\", \"Scott\", \"Brandon\",\n\t\t\t\"Benjamin\", \"Samuel\", \"Gregory\", \"Alexander\", \"Patrick\", \"Frank\", \"Raymond\", \"Jack\", \"Dennis\", \"Jerry\",\n\t\t\t\"Tyler\", \"Aaron\", \"Jose\", \"Adam\", \"Nathan\", \"Henry\", \"Zachary\", \"Douglas\", \"Peter\", \"Kyle\",\n\t\t\t\"Noah\", \"Ethan\", \"Jeremy\", \"Walter\", \"Christian\", \"Keith\", \"Roger\", \"Terry\", \"Austin\", \"Sean\",\n\t\t\t\"Gerald\", \"Carl\", \"Harold\", \"Dylan\", \"Arthur\", \"Lawrence\", \"Jordan\", \"Jesse\", \"Bryan\", \"Billy\",\n\t\t\t\"Bruce\", \"Gabriel\", \"Joe\", \"Logan\", \"Alan\", \"Juan\", \"Albert\", \"Willie\", \"Elijah\", \"Wayne\",\n\t\t\t\"Randy\", \"Vincent\", \"Mason\", \"Roy\", \"Ralph\", \"Bobby\", \"Russell\", \"Bradley\", \"Philip\", \"Eugene\"\n\t\t]\n}","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceDataGeneration extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'DataGeneration';\n\n\t\tthis.defaultData = require('./Fable-Service-DataGeneration-DefaultValues.json');\n\t}\n\n\t// Return a random integer between pMinimum and pMaximum\n\trandomIntegerBetween(pMinimum, pMaximum)\n\t{\n\t\treturn Math.floor(Math.random() * (pMaximum - pMinimum)) + pMinimum;\n\t}\n\t// Return a random integer up to the passed-in maximum\n\trandomIntegerUpTo(pMaximum)\n\t{\n\t\treturn this.randomIntegerBetween(0, pMaximum);\n\t}\n\t// Return a random integer between 0 and 9999999\n\trandomInteger()\n\t{\n\t\treturn Math.floor(Math.random()*this.defaultData.DefaultIntegerMaximum);\n\t}\n\n\n\trandomNumericString(pLength, pMaxNumber)\n\t{\n\t\tlet tmpLength = (typeof(pLength) === 'undefined') ? 10 : pLength;\n\t\tlet tmpMaxNumber = (typeof(pMaxNumber) === 'undefined') ? ((10 ** tmpLength) - 1) : pMaxNumber;\n\n\t\treturn this.services.DataFormat.stringPadStart(this.randomIntegerUpTo(tmpMaxNumber), pLength, '0');\n\t}\n\n\n\trandomMonth()\n\t{\n\t\treturn this.defaultData.MonthSet[this.randomIntegerUpTo(this.defaultData.MonthSet.length-1)];\n\t}\n\trandomDayOfWeek()\n\t{\n\t\treturn this.defaultData.WeekDaySet[this.randomIntegerUpTo(this.defaultData.WeekDaySet.length-1)];\n\t}\n\n\n\trandomColor()\n\t{\n\t\treturn this.defaultData.ColorSet[this.randomIntegerUpTo(this.defaultData.ColorSet.length-1)];\n\t}\n\n\n\trandomName()\n\t{\n\t\treturn this.defaultData.NameSet[this.randomIntegerUpTo(this.defaultData.NameSet.length-1)];\n\t}\n\trandomSurname()\n\t{\n\t\treturn this.defaultData.SurNameSet[this.randomIntegerUpTo(this.defaultData.SurNameSet.length-1)];\n\t}\n}\n\nmodule.exports = FableServiceDataGeneration;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceEnvironmentData extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'EnvironmentData';\n\n\t\tthis.Environment = `node.js`;\n\t}\n}\n\nmodule.exports = FableServiceEnvironmentData;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nconst libFS = require('fs');\nconst libPath = require('path');\n\n\nclass FableServiceFilePersistence extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'FilePersistence';\n\n\t\tif (!this.options.hasOwnProperty('Mode'))\n\t\t{\n\t\t\tthis.options.Mode = parseInt('0777', 8) & ~process.umask();\n\t\t}\n\n\t\tthis.currentInputFolder = `/tmp`;\n\t\tthis.currentOutputFolder = `/tmp`;\n\t}\n\n\tjoinPath(...pPathArray)\n\t{\n\t\treturn libPath.resolve(...pPathArray);\n\t}\n\n\texistsSync(pPath)\n\t{\n\t\treturn libFS.existsSync(pPath);\n\t}\n\n\texists(pPath, fCallback)\n\t{\n\t\tlet tmpFileExists = this.existsSync(pPath);;\n\n\t\treturn fCallback(null, tmpFileExists);\n\t}\n\n\twriteFileSync(pFileName, pFileContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFileSync(pFileName, pFileContent, tmpOptions);\n\t}\n\n\tappendFileSync(pFileName, pAppendContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.appendFileSync(pFileName, pAppendContent, tmpOptions);\n\t}\n\n\tdeleteFileSync(pFileName)\n\t{\n\t\treturn libFS.unlinkSync(pFileName);\n\t}\n\n\tdeleteFolderSync(pFileName)\n\t{\n\t\treturn libFS.rmdirSync(pFileName);\n\t}\n\n\twriteFileSyncFromObject(pFileName, pObject)\n\t{\n\t\treturn this.writeFileSync(pFileName, JSON.stringify(pObject, null, 4));\n\t}\n\n\twriteFileSyncFromArray(pFileName, pFileArray)\n\t{\n\t\tif (!Array.isArray(pFileArray))\n\t\t{\n\t\t\tthis.log.error(`File Persistence Service attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).`);\n\t\t\treturn Error('Attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let i = 0; i < pFileArray.length; i++)\n\t\t\t{\n\t\t\t\treturn this.appendFileSync(pFileName, `${pFileArray[i]}\\n`);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Default folder behaviors\n\n\tgetDefaultOutputPath(pFileName)\n\t{\n\t\treturn libPath.join(this.currentOutputFolder, pFileName);\n\t}\n\n\tdataFolderWriteSync(pFileName, pFileContent)\n\t{\n\t\treturn this.writeFileSync(this.getDefaultOutputPath(pFileName), pFileContent);\n\t}\n\n\tdataFolderWriteSyncFromObject(pFileName, pObject)\n\t{\n\t\treturn this.writeFileSyncFromObject(this.getDefaultOutputPath(pFileName), pObject);\n\t}\n\n\tdataFolderWriteSyncFromArray(pFileName, pFileArray)\n\t{\n\t\treturn this.writeFileSyncFromArray(this.getDefaultOutputPath(pFileName), pFileArray);\n\t}\n\n\t// Folder management\n\tmakeFolderRecursive(pParameters, fCallback)\n\t{\n\t\tlet tmpParameters = pParameters;\n\n\t\tif (typeof(pParameters) == 'string')\n\t\t{\n\t\t\ttmpParameters = { Path: pParameters };\n\t\t}\n\t\telse if (typeof(pParameters) !== 'object')\n\t\t{\n\t\t\tfCallback(new Error('Parameters object or string not properly passed to recursive folder create.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(tmpParameters.Path) !== 'string'))\n\t\t{\n\t\t\tfCallback(new Error('Parameters object needs a path to run the folder create operation.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!tmpParameters.hasOwnProperty('Mode'))\n\t\t{\n\t\t\ttmpParameters.Mode = this.options.Mode;\n\t\t}\n\n\t\t// Check if we are just starting .. if so, build the initial state for our recursive function\n\t\tif (typeof(tmpParameters.CurrentPathIndex) === 'undefined')\n\t\t{\n\t\t\t// Build the tools to start recursing\n\t\t\ttmpParameters.ActualPath = libPath.normalize(tmpParameters.Path);\n\t\t\ttmpParameters.ActualPathParts = tmpParameters.ActualPath.split(libPath.sep);\n\t\t\ttmpParameters.CurrentPathIndex = 0;\n\t\t\ttmpParameters.CurrentPath = '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is not our first run, so we will continue the recursion.\n\t\t\t// Build the new base path\n\t\t\tif (tmpParameters.CurrentPath == libPath.sep)\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\n\t\t\t// Increment the path index\n\t\t\ttmpParameters.CurrentPathIndex++;\n\t\t}\n\n\t\t// Check if the path is fully complete\n\t\tif (tmpParameters.CurrentPathIndex >= tmpParameters.ActualPathParts.length)\n\t\t{\n\t\t\treturn fCallback(null);\n\t\t}\n\n\t\t// Check if the path exists (and is a folder)\n\t\tlibFS.open(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], 'r',\n\t\t\t(pError, pFileDescriptor)=>\n\t\t\t{\n\t\t\t\tif (pFileDescriptor)\n\t\t\t\t{\n\t\t\t\t\tlibFS.closeSync(pFileDescriptor);\n\t\t\t\t}\n\n\t\t\t\tif (pError && pError.code=='ENOENT')\n\t\t\t\t{\n\t\t\t\t\t/* Path doesn't exist, create it */\n\t\t\t\t\tlibFS.mkdir(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], tmpParameters.Mode,\n\t\t\t\t\t\t(pCreateError) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!pCreateError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// We have now created our folder and there was no error -- continue.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (pCreateError.code =='EEXIST')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// The folder exists -- our dev might be running this in parallel/async/whatnot.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(pCreateError.code);\n\t\t\t\t\t\t\t\treturn fCallback(pCreateError);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nmodule.exports = FableServiceFilePersistence;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\n/**\n* Precedent Meta-Templating\n* @author      Steven Velozo <steven@velozo.com>\n* @description Process text stream trie and postfix tree, parsing out meta-template expression functions.\n*/\nconst libWordTree = require(`./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js`);\nconst libStringParser = require(`./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js`);\n\n\nclass FableServiceMetaTemplate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'MetaTemplate';\n\n\t\tthis.WordTree = new libWordTree();\n\n\t\t// In order to allow asynchronous template processing we need to use the async.eachLimit function\n\t\tthis.StringParser = new libStringParser(this.fable.services.Utility.eachLimit);\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\taddPatternAsync(pPatternStart, pPatternEnd, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternAsync(pPatternStart, pPatternEnd, pParserPromise);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData, fCallback)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceMetaTemplate;","/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor(fEachLimit)\n\t{\n\t\tthis.eachLimit = fEachLimit;\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacterAsync (pCharacter, pParserState, pData, fCallback)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\treturn fCallback();\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn fCallback();\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t * @param {function} fCallback - The callback function to call when the parse is complete\n\t */\n\tparseString (pString, pParseTree, pData, fCallback)\n\t{\n\t\tif (typeof(fCallback) !== 'function')\n\t\t{\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\t\tfor (var i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: This is not fast.\n\t\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData, fCallback);\n\t\t\t}\n\n\t\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\t\treturn tmpParserState.Output;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is the async mode\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\t\t\ttmpParserState.Asynchronous = true;\n\n\t\t\tthis.eachLimit(pString, 1,\n\t\t\t\t(pCharacter, fCharacterCallback) =>\n\t\t\t\t{\n\t\t\t\t\tthis.parseCharacterAsync(pCharacter, tmpParserState, pData, fCharacterCallback);\n\t\t\t\t},\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\t// Flush the remaining data\n\t\t\t\t\tthis.flushOutputBuffer(tmpParserState);\n\t\t\t\t\tfCallback(pError, tmpParserState.Output);\n\t\t\t\t});\n\n\t\t}\n\t}\n}\n\nmodule.exports = StringParser;\n","/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn tmpLeaf;\n\t}\n\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternAsync (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParser);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t}\n\t}\n}\n\nmodule.exports = WordTree;\n","module.exports = (\n    {\n        \"Metadata\": {\n            \"UUID\": false,\n            \"Hash\": false,\n\n            \"Title\": \"\",\n            \"Summary\": \"\",\n\n            \"Version\": 0\n        },\n        \"Status\": {\n            \"Completed\": false,\n\n            \"CompletionProgress\": 0,\n            \"CompletionTimeElapsed\": 0,\n\n            \"Steps\": 1,\n            \"StepsCompleted\": 0,\n\n            \"StartTime\": 0,\n            \"EndTime\": 0\n        },\n        \"Errors\": [],\n        \"Log\": []\n    }\n);","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nconst _OperationStatePrototypeString = JSON.stringify(require('./Fable-Service-Operation-DefaultSettings.js'));\n\nclass FableOperation extends libFableServiceBase\n{\n\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PhasedOperation';\n\n\t\tthis.state = JSON.parse(_OperationStatePrototypeString);\n\n\t\t// Match the service instantiation to the operation.\n\t\tthis.state.Metadata.Hash = this.Hash;\n\t\tthis.state.Metadata.UUID = this.UUID;\n\n\t\tthis.name = (typeof(this.options.Name) == 'string') ? this.options.Name : `Unnamed Operation ${this.state.Metadata.UUID}`;\n\n\t\tthis.log = this;\n\t}\n\n\twriteOperationLog(pLogLevel, pLogText, pLogObject)\n\t{\n\t\tthis.state.Log.push(`${new Date().toUTCString()} [${pLogLevel}]: ${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Log.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\twriteOperationErrors(pLogText, pLogObject)\n\t{\n\t\tthis.state.Errors.push(`${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Errors.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('TRACE', pLogText, pLogObject);\n\t\tthis.fable.log.trace(pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('DEBUG', pLogText, pLogObject);\n\t\tthis.fable.log.debug(pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('INFO', pLogText, pLogObject);\n\t\tthis.fable.log.info(pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('WARN', pLogText, pLogObject);\n\t\tthis.fable.log.warn(pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('ERROR', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.error(pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('FATAL', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.fatal(pLogText, pLogObject);\n\t}\n}\n\nmodule.exports = FableOperation;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nconst libSimpleGet = require('simple-get');\nconst libCookie = require('cookie');\n\nclass FableServiceRestClient extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.TraceLog = false;\n\t\tif (this.options.TraceLog || this.fable.TraceLog)\n\t\t{\n\t\t\tthis.TraceLog = true;\n\t\t}\n\n\t\tthis.dataFormat = this.fable.services.DataFormat;\n\n\t\tthis.serviceType = 'RestClient';\n\n\t\tthis.cookie = false;\n\n\t\t// This is a function that can be overridden, to allow the management\n\t\t// of the request options before they are passed to the request library.\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tget simpleGet()\n\t{\n\t\treturn libSimpleGet;\n\t}\n\n\tprepareCookies(pRequestOptions)\n\t{\n\t\tif (this.cookie)\n\t\t{\n\t\t\tlet tmpCookieObject = this.cookie;\n\t\t\tif (!pRequestOptions.hasOwnProperty('headers'))\n\t\t\t{\n\t\t\t\tpRequestOptions.headers = {};\n\t\t\t}\n\t\t\tlet tmpCookieKeys = Object.keys(tmpCookieObject);\n\t\t\tif (tmpCookieKeys.length > 0)\n\t\t\t{\n\t\t\t\t// Only grab the first for now.\n\t\t\t\tpRequestOptions.headers.cookie = libCookie.serialize(tmpCookieKeys[0], tmpCookieObject[tmpCookieKeys[0]]);\t\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn pRequestOptions;\n\t}\n\n\tpreRequest(pOptions)\n\t{\n\t\t// Validate the options object\n\t\tlet tmpOptions = this.prepareCookies(pOptions);\n\t\treturn this.prepareRequestOptions(tmpOptions);\n\t}\n\n\texecuteChunkedRequest(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpData.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpData);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteChunkedRequestBinary(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\ttmpOptions.json = false;\n\t\ttmpOptions.encoding = null;\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpDataBuffer = false;\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO: Potentially create a third option that streams this to a file?  So it doesn't have to hold it all in memory.\n\t\t\t\t\t\tif (!tmpDataBuffer)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.from(pChunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.concat([tmpDataBuffer, pChunk]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpDataBuffer.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpDataBuffer);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteJSONRequest(pOptions, fCallback)\n\t{\n\t\tpOptions.json = true;\n\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\tif (!tmpOptions.hasOwnProperty('headers'))\n\t\t{\n\t\t\ttmpOptions.headers = {};\n\t\t}\n\t\t/* Automated headers break some APIs\n\t\tif (!tmpOptions.headers.hasOwnProperty('Content-Type'))\n\t\t{\n\t\t\ttmpOptions.headers['Content-Type'] = 'application/json';\n\t\t}\n\t\t*/\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} JSON request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpJSONData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpJSONData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> JSON ${tmpOptions.method} completed - received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, JSON.parse(tmpJSONData));\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetJSON(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeJSONRequest(tmpRequestOptions, fCallback);\n\t}\n\n\tputJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PUT JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PUT';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpostJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`POST JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'POST';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpatchJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PATCH JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PATCH';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\theadJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`HEAD JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'HEAD';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tdelJSON(pOptions, fCallback)\n\t{\n\t\tpOptions.method = 'DELETE';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tgetRawText(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeChunkedRequest(tmpRequestOptions, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceRestClient;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceTemplate extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Template';\n\n\t\t// These are the exact regex's used in lodash/underscore\n\t\t// TODO: Switch this to precedent\n\t\tthis.Matchers = (\n\t\t\t{\n\t\t\t\tEvaluate: /<%([\\s\\S]+?)%>/g,\n\t\t\t\tInterpolate: /<%=([\\s\\S]+?)%>/g,\n\t\t\t\tEscaper: /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g,\n\t\t\t\tUnescaper: /\\\\(\\\\|'|r|n|t|u2028|u2029)/g,\n\t\t\t\t// This is how underscore does it, so we are keeping it for now.\n\t\t\t\tGuaranteedNonMatch: /.^/\n\t\t\t});\n\n\t\t// This is a helper for the escaper and unescaper functions.\n\t\t// Right now we are going to keep what underscore is doing, but, not forever.\n\t\tthis.templateEscapes = {\n\t\t\t'\\\\': '\\\\',\n\t\t\t\"'\": \"'\",\n\t\t\t'r': '\\r',\n\t\t\t'\\r': 'r',\n\t\t\t'n': '\\n',\n\t\t\t'\\n': 'n',\n\t\t\t't': '\\t',\n\t\t\t'\\t': 't',\n\t\t\t'u2028': '\\u2028',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'u2029': '\\u2029',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\t// This is defined as such to underscore that it is a dynamic programming\n\t\t// function on this class.\n\t\tthis.renderFunction = false;\n        this.templateString = false;\n\t}\n\n\trenderTemplate(pData)\n\t{\n\t\treturn this.renderFunction(pData);\n\t}\n\n\ttemplateFunction(pData)\n\t{\n\t\tlet fRenderTemplateBound = this.renderTemplate.bind(this);\n\t\treturn fRenderTemplateBound;\n\t}\n\n\tbuildTemplateFunction(pTemplateText, pData)\n\t{\n\t\t// For now this is being kept in a weird form ... this is to mimic the old\n\t\t// underscore code until this is rewritten using precedent.\n\t\tthis.TemplateSource = \"__p+='\" + pTemplateText\n\t\t\t.replace(this.Matchers.Escaper,\n\t\t\t\t(pMatch)=>\n\t\t\t\t{\n\t\t\t\t\treturn `\\\\${this.templateEscapes[pMatch]}`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Interpolate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `'+\\n(${decodeURIComponent(pCode)})+\\n'`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Evaluate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `';\\n${decodeURIComponent(pCode)}\\n;__p+='`;\n\t\t\t\t}) + `';\\n`;\n\n\n\t\tthis.TemplateSource = `with(pTemplateDataObject||{}){\\n${this.TemplateSource}}\\n`;\n\t\tthis.TemplateSource = `var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n${this.TemplateSource}return __p;\\n`;\n\n\t\tthis.renderFunction = new Function('pTemplateDataObject', this.TemplateSource);\n\n\t\tif (typeof(pData) != 'undefined')\n\t\t{\n\t\t\treturn this.renderFunction(pData);\n\t\t}\n\n\t\t// Provide the compiled function source as a convenience for build time\n\t\t// precompilation.\n\t\tthis.TemplateSourceCompiled = 'function(obj){\\n' + this.TemplateSource + '}';\n\n\t\treturn this.templateFunction();\n\t}\n}\n\nmodule.exports = FableServiceTemplate;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\n// TODO: These are still pretty big -- consider the smaller polyfills\nconst libAsyncWaterfall = require('async.waterfall');\nconst libAsyncEachLimit = require('async.eachlimit');\n\nconst libBigDecimal = require('js-big-decimal');\n\nclass FableServiceUtility extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\tthis.templates = {};\n\n\t\t// These two functions are used extensively throughout\n\t\tthis.waterfall = libAsyncWaterfall;\n\t\tthis.eachLimit = libAsyncEachLimit;\n\n\t\tthis.bigDecimal = libBigDecimal;\n\t}\n\n\t// Underscore and lodash have a behavior, _.extend, which merges objects.\n\t// Now that es6 gives us this, use the native thingy.\n\t// Nevermind, the native thing is not stable enough across environments\n\t// Basic shallow copy\n\textend(pDestinationObject, ...pSourceObjects)\n\t{\n\t\tfor (let i = 0; i < pSourceObjects.length; i++)\n\t\t{\n\t\t\tlet tmpSourceObject = pSourceObjects[i];\n\t\t\tif (typeof(tmpSourceObject) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpObjectProperties = Object.keys(tmpSourceObject);\n\t\t\t\tfor (let k = 0; k < tmpObjectProperties.length; k++)\n\t\t\t\t{\n\t\t\t\t\tpDestinationObject[tmpObjectProperties[k]] = tmpSourceObject[tmpObjectProperties[k]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pDestinationObject;\n\t}\n\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\ttemplate(pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Template');\n\n\t\treturn tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t}\n\n\t// Build a template function from a template hash, and, register it with the service provider\n\tbuildHashedTemplate(pTemplateHash, pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.serviceManager.instantiateServiceProvider('Template', {}, pTemplateHash);\n\n\t\tthis.templates[pTemplateHash] = tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\n\t\treturn this.templates[pTemplateHash];\n\t}\n\n\t// This is a safe, modern version of chunk from underscore\n\t// Algorithm pulled from a mix of these two polyfills:\n\t// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\n\t// https://youmightnotneed.com/lodash\n\t// This implementation was most tolerant in browsers.  Uglify can fix the rest.\n\tchunk (pInput, pChunkSize, pChunkCache)\n\t{\n\t\tlet tmpInputArray = [...pInput];\n\t\t// Note lodash defaults to 1, underscore defaults to 0\n\t\tlet tmpChunkSize = (typeof(pChunkSize) == 'number') ? pChunkSize : 0;\n\t\tlet tmpChunkCache = (typeof(pChunkCache) != 'undefined') ? pChunkCache : [];\n\n\t\tif (tmpChunkSize <= 0)\n\t\t{\n\t\t\treturn tmpChunkCache;\n\t\t}\n\n\t\twhile (tmpInputArray.length)\n\t\t{\n\t\t\ttmpChunkCache.push(tmpInputArray.splice(0, tmpChunkSize));\n\t\t}\n\n\t\treturn tmpChunkCache;\n\t}\n\n\t// Convert an ISO string to a javascript date object\n\t// Adapted from https://stackoverflow.com/a/54751179\n\t//\n\t// Takes strings like: 2022-11-04T11:34:45.000Z\n\t//                and: 1986-06-11T09:34:46.012Z+0200\n\t// ... and converts them into javascript timestamps, following the directions of the timezone stuff.\n\t//\n\t// This is not meant to replace the more complex libraries such as moment or luxon.\n\t// This *is* meant to be a simple, small, and fast way to convert ISO strings to dates in engines\n\t// with ultra limited JS capabilities where those don't work.\n\tisoStringToDate (pISOString)\n\t{\n\n\t\t// Split the string into an array based on the digit groups.\n\t\tlet tmpDateParts = pISOString.split( /\\D+/ );\n\n\t\t// Set up a date object with the current time.\n\t\tlet tmpReturnDate = new Date();\n\n\t\t// Track the number of hours we need to adjust the date by based on the timezone.\n\t\tlet tmpTimeZoneOffsetInHours = 0;\n\t\t// Track the number of minutes we need to adjust the date by based on the timezone.\n\t\tlet tmpTimeZoneOffsetInMinutes = 0;\n\n\t\t// Manually parse the parts of the string and set each part for the\n\t\t// date. Note: Using the UTC versions of these functions is necessary\n\t\t// because we're manually adjusting for time zones stored in the\n\t\t// string.\n\t\ttmpReturnDate.setUTCFullYear( parseInt( tmpDateParts[ 0 ] ) );\n\n\t\t// The month numbers are one \"off\" from what normal humans would expect\n\t\t// because January == 0.\n\t\ttmpReturnDate.setUTCMonth( parseInt( tmpDateParts[ 1 ] - 1 ) );\n\t\ttmpReturnDate.setUTCDate( parseInt( tmpDateParts[ 2 ] ) );\n\n\t\t// Set the time parts of the date object.\n\t\ttmpReturnDate.setUTCHours( parseInt( tmpDateParts[ 3 ] ) );\n\t\ttmpReturnDate.setUTCMinutes( parseInt( tmpDateParts[ 4 ] ) );\n\t\ttmpReturnDate.setUTCSeconds( parseInt( tmpDateParts[ 5 ] ) );\n\t\ttmpReturnDate.setUTCMilliseconds( parseInt( tmpDateParts[ 6 ] ) );\n\n\t\t// If there's a value for either the hours or minutes offset.\n\t\tif (tmpDateParts[ 7 ] || tmpDateParts[ 8 ])\n\t\t{\n\t\t\t// If there's a value for the minutes offset.\n\t\t\tif (tmpDateParts[8])\n\t\t\t{\n\t\t\t\t// Convert the minutes value into an hours value.\n\t\t\t\ttmpTimeZoneOffsetInMinutes = parseInt(tmpDateParts[8]) / 60;\n\t\t\t}\n\n\t\t\t// Add the hours and minutes values to get the total offset in hours.\n\t\t\ttmpTimeZoneOffsetInHours = parseInt(tmpDateParts[7]) + tmpTimeZoneOffsetInMinutes;\n\n\t\t\t// If the sign for the timezone is a plus to indicate the timezone is ahead of UTC time.\n\t\t\tif (pISOString.substr( -6, 1 ) == \"+\")\n\t\t\t{\n\t\t\t\t// Make the offset negative since the hours will need to be subtracted from the date.\n\t\t\t\ttmpTimeZoneOffsetInHours *= -1;\n\t\t\t}\n\t\t}\n\n\t\t// Get the current hours for the date and add the offset to get the correct time adjusted for timezone.\n\t\ttmpReturnDate.setHours( tmpReturnDate.getHours() + tmpTimeZoneOffsetInHours );\n\n\t\t// Return the Date object calculated from the string.\n\t\treturn tmpReturnDate;\n\t}\n}\n\nmodule.exports = FableServiceUtility;","var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bigDecimal\"] = factory();\n\telse\n\t\troot[\"bigDecimal\"] = factory();\n})(global, function() {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 165:\n/***/ (function(__unused_webpack_module, exports) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.abs = void 0;\nfunction abs(n) {\n    if (typeof n == 'number' || typeof n == 'bigint')\n        n = n.toString();\n    if (n[0] == '-')\n        return n.substring(1);\n    return n;\n}\nexports.abs = abs;\n\n\n/***/ }),\n\n/***/ 217:\n/***/ (function(__unused_webpack_module, exports) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pad = exports.trim = exports.add = void 0;\n//function add {\nfunction add(number1, number2) {\n    var _a;\n    if (number2 === void 0) { number2 = \"0\"; }\n    var neg = 0, ind = -1, neg_len;\n    //check for negatives\n    if (number1[0] == '-') {\n        number1 = number1.substring(1);\n        if (!testZero(number1)) {\n            neg++;\n            ind = 1;\n            neg_len = number1.length;\n        }\n    }\n    if (number2[0] == '-') {\n        number2 = number2.substring(1);\n        if (!testZero(number2)) {\n            neg++;\n            ind = 2;\n            neg_len = number2.length;\n        }\n    }\n    number1 = trim(number1);\n    number2 = trim(number2);\n    _a = pad(trim(number1), trim(number2)), number1 = _a[0], number2 = _a[1];\n    if (neg == 1) {\n        if (ind === 1)\n            number1 = compliment(number1);\n        else if (ind === 2)\n            number2 = compliment(number2);\n    }\n    var res = addCore(number1, number2);\n    if (!neg)\n        return trim(res);\n    else if (neg == 2)\n        return ('-' + trim(res));\n    else {\n        if (number1.length < (res.length))\n            return trim(res.substring(1));\n        else\n            return ('-' + trim(compliment(res)));\n    }\n}\nexports.add = add;\nfunction compliment(number) {\n    if (testZero(number)) {\n        return number;\n    }\n    var s = '', l = number.length, dec = number.split('.')[1], ld = dec ? dec.length : 0;\n    for (var i = 0; i < l; i++) {\n        if (number[i] >= '0' && number[i] <= '9')\n            s += (9 - parseInt(number[i]));\n        else\n            s += number[i];\n    }\n    var one = (ld > 0) ? ('0.' + (new Array(ld)).join('0') + '1') : '1';\n    return addCore(s, one);\n}\nfunction trim(number) {\n    var parts = number.split('.');\n    if (!parts[0])\n        parts[0] = '0';\n    while (parts[0][0] == '0' && parts[0].length > 1)\n        parts[0] = parts[0].substring(1);\n    return parts[0] + (parts[1] ? ('.' + parts[1]) : '');\n}\nexports.trim = trim;\nfunction pad(number1, number2) {\n    var parts1 = number1.split('.'), parts2 = number2.split('.');\n    //pad integral part\n    var length1 = parts1[0].length, length2 = parts2[0].length;\n    if (length1 > length2) {\n        parts2[0] = (new Array(Math.abs(length1 - length2) + 1)).join('0') + (parts2[0] ? parts2[0] : '');\n    }\n    else {\n        parts1[0] = (new Array(Math.abs(length1 - length2) + 1)).join('0') + (parts1[0] ? parts1[0] : '');\n    }\n    //pad fractional part\n    length1 = parts1[1] ? parts1[1].length : 0,\n        length2 = parts2[1] ? parts2[1].length : 0;\n    if (length1 || length2) {\n        if (length1 > length2) {\n            parts2[1] = (parts2[1] ? parts2[1] : '') + (new Array(Math.abs(length1 - length2) + 1)).join('0');\n        }\n        else {\n            parts1[1] = (parts1[1] ? parts1[1] : '') + (new Array(Math.abs(length1 - length2) + 1)).join('0');\n        }\n    }\n    number1 = parts1[0] + ((parts1[1]) ? ('.' + parts1[1]) : '');\n    number2 = parts2[0] + ((parts2[1]) ? ('.' + parts2[1]) : '');\n    return [number1, number2];\n}\nexports.pad = pad;\nfunction addCore(number1, number2) {\n    var _a;\n    _a = pad(number1, number2), number1 = _a[0], number2 = _a[1];\n    var sum = '', carry = 0;\n    for (var i = number1.length - 1; i >= 0; i--) {\n        if (number1[i] === '.') {\n            sum = '.' + sum;\n            continue;\n        }\n        var temp = parseInt(number1[i]) + parseInt(number2[i]) + carry;\n        sum = (temp % 10) + sum;\n        carry = Math.floor(temp / 10);\n    }\n    return carry ? (carry.toString() + sum) : sum;\n}\nfunction testZero(number) {\n    return (/^0[0]*[.]{0,1}[0]*$/.test(number));\n}\n\n\n/***/ }),\n\n/***/ 423:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\n\nvar add_1 = __webpack_require__(217);\nvar abs_1 = __webpack_require__(165);\nvar round_1 = __webpack_require__(350);\nvar multiply_1 = __webpack_require__(182);\nvar divide_1 = __webpack_require__(415);\nvar modulus_1 = __webpack_require__(213);\nvar compareTo_1 = __webpack_require__(664);\nvar subtract_1 = __webpack_require__(26);\nvar roundingModes_1 = __webpack_require__(916);\nvar bigDecimal = /** @class */ (function () {\n    function bigDecimal(number) {\n        if (number === void 0) { number = '0'; }\n        this.value = bigDecimal.validate(number);\n    }\n    bigDecimal.validate = function (number) {\n        if (number) {\n            number = number.toString();\n            if (isNaN(number))\n                throw Error(\"Parameter is not a number: \" + number);\n            if (number[0] == '+')\n                number = number.substring(1);\n        }\n        else\n            number = '0';\n        //handle missing leading zero\n        if (number.startsWith('.'))\n            number = '0' + number;\n        else if (number.startsWith('-.'))\n            number = '-0' + number.substr(1);\n        //handle exponentiation\n        if (/e/i.test(number)) {\n            var _a = number.split(/[eE]/), mantisa = _a[0], exponent = _a[1];\n            mantisa = (0, add_1.trim)(mantisa);\n            var sign = '';\n            if (mantisa[0] == '-') {\n                sign = '-';\n                mantisa = mantisa.substring(1);\n            }\n            if (mantisa.indexOf('.') >= 0) {\n                exponent = parseInt(exponent) + mantisa.indexOf('.');\n                mantisa = mantisa.replace('.', '');\n            }\n            else {\n                exponent = parseInt(exponent) + mantisa.length;\n            }\n            if (mantisa.length < exponent) {\n                number = sign + mantisa + (new Array(exponent - mantisa.length + 1)).join('0');\n            }\n            else if (mantisa.length >= exponent && exponent > 0) {\n                number = sign + (0, add_1.trim)(mantisa.substring(0, exponent)) +\n                    ((mantisa.length > exponent) ? ('.' + mantisa.substring(exponent)) : '');\n            }\n            else {\n                number = sign + '0.' + (new Array(-exponent + 1)).join('0') + mantisa;\n            }\n        }\n        return number;\n    };\n    bigDecimal.prototype.getValue = function () {\n        return this.value;\n    };\n    bigDecimal.prototype.setValue = function (num) {\n        this.value = bigDecimal.validate(num);\n    };\n    bigDecimal.getPrettyValue = function (number, digits, separator) {\n        if (!(digits || separator)) {\n            digits = 3;\n            separator = ',';\n        }\n        else if (!(digits && separator)) {\n            throw Error('Illegal Arguments. Should pass both digits and separator or pass none');\n        }\n        number = bigDecimal.validate(number);\n        var neg = number.charAt(0) == '-';\n        if (neg)\n            number = number.substring(1);\n        var len = number.indexOf('.');\n        len = len > 0 ? len : (number.length);\n        var temp = '';\n        for (var i = len; i > 0;) {\n            if (i < digits) {\n                digits = i;\n                i = 0;\n            }\n            else\n                i -= digits;\n            temp = number.substring(i, i + digits) + ((i < (len - digits) && i >= 0) ? separator : '') + temp;\n        }\n        return (neg ? '-' : '') + temp + number.substring(len);\n    };\n    bigDecimal.prototype.getPrettyValue = function (digits, separator) {\n        return bigDecimal.getPrettyValue(this.value, digits, separator);\n    };\n    bigDecimal.round = function (number, precision, mode) {\n        if (precision === void 0) { precision = 0; }\n        if (mode === void 0) { mode = roundingModes_1.RoundingModes.HALF_EVEN; }\n        number = bigDecimal.validate(number);\n        // console.log(number)\n        if (isNaN(precision))\n            throw Error(\"Precision is not a number: \" + precision);\n        return (0, round_1.roundOff)(number, precision, mode);\n    };\n    bigDecimal.prototype.round = function (precision, mode) {\n        if (precision === void 0) { precision = 0; }\n        if (mode === void 0) { mode = roundingModes_1.RoundingModes.HALF_EVEN; }\n        if (isNaN(precision))\n            throw Error(\"Precision is not a number: \" + precision);\n        return new bigDecimal((0, round_1.roundOff)(this.value, precision, mode));\n    };\n    bigDecimal.abs = function (number) {\n        number = bigDecimal.validate(number);\n        return (0, abs_1.abs)(number);\n    };\n    bigDecimal.prototype.abs = function () {\n        return new bigDecimal((0, abs_1.abs)(this.value));\n    };\n    bigDecimal.floor = function (number) {\n        number = bigDecimal.validate(number);\n        if (number.indexOf('.') === -1)\n            return number;\n        return bigDecimal.round(number, 0, roundingModes_1.RoundingModes.FLOOR);\n    };\n    bigDecimal.prototype.floor = function () {\n        if (this.value.indexOf('.') === -1)\n            return new bigDecimal(this.value);\n        return new bigDecimal(this.value).round(0, roundingModes_1.RoundingModes.FLOOR);\n    };\n    bigDecimal.ceil = function (number) {\n        number = bigDecimal.validate(number);\n        if (number.indexOf('.') === -1)\n            return number;\n        return bigDecimal.round(number, 0, roundingModes_1.RoundingModes.CEILING);\n    };\n    bigDecimal.prototype.ceil = function () {\n        if (this.value.indexOf('.') === -1)\n            return new bigDecimal(this.value);\n        return new bigDecimal(this.value).round(0, roundingModes_1.RoundingModes.CEILING);\n    };\n    bigDecimal.add = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return (0, add_1.add)(number1, number2);\n    };\n    bigDecimal.prototype.add = function (number) {\n        return new bigDecimal((0, add_1.add)(this.value, number.getValue()));\n    };\n    bigDecimal.subtract = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return (0, subtract_1.subtract)(number1, number2);\n    };\n    bigDecimal.prototype.subtract = function (number) {\n        return new bigDecimal((0, subtract_1.subtract)(this.value, number.getValue()));\n    };\n    bigDecimal.multiply = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return (0, multiply_1.multiply)(number1, number2);\n    };\n    bigDecimal.prototype.multiply = function (number) {\n        return new bigDecimal((0, multiply_1.multiply)(this.value, number.getValue()));\n    };\n    bigDecimal.divide = function (number1, number2, precision) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return (0, divide_1.divide)(number1, number2, precision);\n    };\n    bigDecimal.prototype.divide = function (number, precision) {\n        return new bigDecimal((0, divide_1.divide)(this.value, number.getValue(), precision));\n    };\n    bigDecimal.modulus = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return (0, modulus_1.modulus)(number1, number2);\n    };\n    bigDecimal.prototype.modulus = function (number) {\n        return new bigDecimal((0, modulus_1.modulus)(this.value, number.getValue()));\n    };\n    bigDecimal.compareTo = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return (0, compareTo_1.compareTo)(number1, number2);\n    };\n    bigDecimal.prototype.compareTo = function (number) {\n        return (0, compareTo_1.compareTo)(this.value, number.getValue());\n    };\n    bigDecimal.negate = function (number) {\n        number = bigDecimal.validate(number);\n        return (0, subtract_1.negate)(number);\n    };\n    bigDecimal.prototype.negate = function () {\n        return new bigDecimal((0, subtract_1.negate)(this.value));\n    };\n    bigDecimal.RoundingModes = roundingModes_1.RoundingModes;\n    return bigDecimal;\n}());\nmodule.exports = bigDecimal;\n\n\n/***/ }),\n\n/***/ 664:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.compareTo = void 0;\nvar add_1 = __webpack_require__(217);\nfunction compareTo(number1, number2) {\n    var _a;\n    var negative = false;\n    if (number1[0] == '-' && number2[0] != \"-\") {\n        return -1;\n    }\n    else if (number1[0] != '-' && number2[0] == '-') {\n        return 1;\n    }\n    else if (number1[0] == '-' && number2[0] == '-') {\n        number1 = number1.substr(1);\n        number2 = number2.substr(1);\n        negative = true;\n    }\n    _a = (0, add_1.pad)(number1, number2), number1 = _a[0], number2 = _a[1];\n    if (number1.localeCompare(number2) == 0) {\n        return 0;\n    }\n    for (var i = 0; i < number1.length; i++) {\n        if (number1[i] == number2[i]) {\n            continue;\n        }\n        else if (number1[i] > number2[i]) {\n            if (negative) {\n                return -1;\n            }\n            else {\n                return 1;\n            }\n        }\n        else {\n            if (negative) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n    }\n    return 0;\n}\nexports.compareTo = compareTo;\n\n\n/***/ }),\n\n/***/ 415:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.divide = void 0;\nvar add_1 = __webpack_require__(217);\nvar round_1 = __webpack_require__(350);\nfunction divide(dividend, divisor, precission) {\n    if (precission === void 0) { precission = 8; }\n    if (divisor == 0) {\n        throw new Error('Cannot divide by 0');\n    }\n    dividend = dividend.toString();\n    divisor = divisor.toString();\n    // remove trailing zeros in decimal ISSUE#18\n    dividend = dividend.replace(/(\\.\\d*?[1-9])0+$/g, \"$1\").replace(/\\.0+$/, \"\");\n    divisor = divisor.replace(/(\\.\\d*?[1-9])0+$/g, \"$1\").replace(/\\.0+$/, \"\");\n    if (dividend == 0)\n        return '0';\n    var neg = 0;\n    if (divisor[0] == '-') {\n        divisor = divisor.substring(1);\n        neg++;\n    }\n    if (dividend[0] == '-') {\n        dividend = dividend.substring(1);\n        neg++;\n    }\n    var pt_dvsr = divisor.indexOf('.') > 0 ? divisor.length - divisor.indexOf('.') - 1 : -1;\n    divisor = (0, add_1.trim)(divisor.replace('.', ''));\n    if (pt_dvsr >= 0) {\n        var pt_dvnd = dividend.indexOf('.') > 0 ? dividend.length - dividend.indexOf('.') - 1 : -1;\n        if (pt_dvnd == -1) {\n            dividend = (0, add_1.trim)(dividend + (new Array(pt_dvsr + 1)).join('0'));\n        }\n        else {\n            if (pt_dvsr > pt_dvnd) {\n                dividend = dividend.replace('.', '');\n                dividend = (0, add_1.trim)(dividend + (new Array(pt_dvsr - pt_dvnd + 1)).join('0'));\n            }\n            else if (pt_dvsr < pt_dvnd) {\n                dividend = dividend.replace('.', '');\n                var loc = dividend.length - pt_dvnd + pt_dvsr;\n                dividend = (0, add_1.trim)(dividend.substring(0, loc) + '.' + dividend.substring(loc));\n            }\n            else if (pt_dvsr == pt_dvnd) {\n                dividend = (0, add_1.trim)(dividend.replace('.', ''));\n            }\n        }\n    }\n    var prec = 0, dl = divisor.length, rem = '0', quotent = '';\n    var dvnd = (dividend.indexOf('.') > -1 && dividend.indexOf('.') < dl) ? dividend.substring(0, dl + 1) : dividend.substring(0, dl);\n    dividend = (dividend.indexOf('.') > -1 && dividend.indexOf('.') < dl) ? dividend.substring(dl + 1) : dividend.substring(dl);\n    if (dvnd.indexOf('.') > -1) {\n        var shift = dvnd.length - dvnd.indexOf('.') - 1;\n        dvnd = dvnd.replace('.', '');\n        if (dl > dvnd.length) {\n            shift += dl - dvnd.length;\n            dvnd = dvnd + (new Array(dl - dvnd.length + 1)).join('0');\n        }\n        prec = shift;\n        quotent = '0.' + (new Array(shift)).join('0');\n    }\n    precission = precission + 2;\n    while (prec <= precission) {\n        var qt = 0;\n        while (parseInt(dvnd) >= parseInt(divisor)) {\n            dvnd = (0, add_1.add)(dvnd, '-' + divisor);\n            qt++;\n        }\n        quotent += qt;\n        if (!dividend) {\n            if (!prec)\n                quotent += '.';\n            prec++;\n            dvnd = dvnd + '0';\n        }\n        else {\n            if (dividend[0] == '.') {\n                quotent += '.';\n                prec++;\n                dividend = dividend.substring(1);\n            }\n            dvnd = dvnd + dividend.substring(0, 1);\n            dividend = dividend.substring(1);\n        }\n    }\n    return ((neg == 1) ? '-' : '') + (0, add_1.trim)((0, round_1.roundOff)(quotent, precission - 2));\n}\nexports.divide = divide;\n\n\n/***/ }),\n\n/***/ 213:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.modulus = void 0;\nvar divide_1 = __webpack_require__(415);\nvar round_1 = __webpack_require__(350);\nvar multiply_1 = __webpack_require__(182);\nvar subtract_1 = __webpack_require__(26);\nvar roundingModes_1 = __webpack_require__(916);\nfunction modulus(dividend, divisor) {\n    if (divisor == 0) {\n        throw new Error('Cannot divide by 0');\n    }\n    dividend = dividend.toString();\n    divisor = divisor.toString();\n    validate(dividend);\n    validate(divisor);\n    var sign = '';\n    if (dividend[0] == '-') {\n        sign = '-';\n        dividend = dividend.substr(1);\n    }\n    if (divisor[0] == '-') {\n        divisor = divisor.substr(1);\n    }\n    var result = (0, subtract_1.subtract)(dividend, (0, multiply_1.multiply)(divisor, (0, round_1.roundOff)((0, divide_1.divide)(dividend, divisor), 0, roundingModes_1.RoundingModes.FLOOR)));\n    return sign + result;\n}\nexports.modulus = modulus;\nfunction validate(oparand) {\n    if (oparand.indexOf('.') != -1) {\n        throw new Error('Modulus of non-integers not supported');\n    }\n}\n\n\n/***/ }),\n\n/***/ 182:\n/***/ (function(__unused_webpack_module, exports) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.multiply = void 0;\nfunction multiply(number1, number2) {\n    number1 = number1.toString();\n    number2 = number2.toString();\n    /*Filter numbers*/\n    var negative = 0;\n    if (number1[0] == '-') {\n        negative++;\n        number1 = number1.substr(1);\n    }\n    if (number2[0] == '-') {\n        negative++;\n        number2 = number2.substr(1);\n    }\n    number1 = trailZero(number1);\n    number2 = trailZero(number2);\n    var decimalLength1 = 0;\n    var decimalLength2 = 0;\n    if (number1.indexOf('.') != -1) {\n        decimalLength1 = number1.length - number1.indexOf('.') - 1;\n    }\n    if (number2.indexOf('.') != -1) {\n        decimalLength2 = number2.length - number2.indexOf('.') - 1;\n    }\n    var decimalLength = decimalLength1 + decimalLength2;\n    number1 = trailZero(number1.replace('.', ''));\n    number2 = trailZero(number2.replace('.', ''));\n    if (number1.length < number2.length) {\n        var temp = number1;\n        number1 = number2;\n        number2 = temp;\n    }\n    if (number2 == '0') {\n        return '0';\n    }\n    /*\n    * Core multiplication\n    */\n    var length = number2.length;\n    var carry = 0;\n    var positionVector = [];\n    var currentPosition = length - 1;\n    var result = \"\";\n    for (var i = 0; i < length; i++) {\n        positionVector[i] = number1.length - 1;\n    }\n    for (var i = 0; i < 2 * number1.length; i++) {\n        var sum = 0;\n        for (var j = number2.length - 1; j >= currentPosition && j >= 0; j--) {\n            if (positionVector[j] > -1 && positionVector[j] < number1.length) {\n                sum += parseInt(number1[positionVector[j]--]) * parseInt(number2[j]);\n            }\n        }\n        sum += carry;\n        carry = Math.floor(sum / 10);\n        result = sum % 10 + result;\n        currentPosition--;\n    }\n    /*\n    * Formatting result\n    */\n    result = trailZero(adjustDecimal(result, decimalLength));\n    if (negative == 1) {\n        result = '-' + result;\n    }\n    return result;\n}\nexports.multiply = multiply;\n/*\n* Add decimal point\n*/\nfunction adjustDecimal(number, decimal) {\n    if (decimal == 0)\n        return number;\n    else {\n        number = (decimal >= number.length) ? ((new Array(decimal - number.length + 1)).join('0') + number) : number;\n        return number.substr(0, number.length - decimal) + '.' + number.substr(number.length - decimal, decimal);\n    }\n}\n/*\n* Removes zero from front and back*/\nfunction trailZero(number) {\n    while (number[0] == '0') {\n        number = number.substr(1);\n    }\n    if (number.indexOf('.') != -1) {\n        while (number[number.length - 1] == '0') {\n            number = number.substr(0, number.length - 1);\n        }\n    }\n    if (number == \"\" || number == \".\") {\n        number = '0';\n    }\n    else if (number[number.length - 1] == '.') {\n        number = number.substr(0, number.length - 1);\n    }\n    if (number[0] == '.') {\n        number = '0' + number;\n    }\n    return number;\n}\n\n\n/***/ }),\n\n/***/ 350:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.roundOff = void 0;\nvar roundingModes_1 = __webpack_require__(916);\n/**\n *\n * @param input the number to round\n * @param n precision\n * @param mode Rounding Mode\n */\nfunction roundOff(input, n, mode) {\n    if (n === void 0) { n = 0; }\n    if (mode === void 0) { mode = roundingModes_1.RoundingModes.HALF_EVEN; }\n    if (mode === roundingModes_1.RoundingModes.UNNECESSARY) {\n        throw new Error(\"UNNECESSARY Rounding Mode has not yet been implemented\");\n    }\n    if (typeof (input) == 'number' || typeof (input) == 'bigint')\n        input = input.toString();\n    var neg = false;\n    if (input[0] === '-') {\n        neg = true;\n        input = input.substring(1);\n    }\n    var parts = input.split('.'), partInt = parts[0], partDec = parts[1];\n    //handle case of -ve n: roundOff(12564,-2)=12600\n    if (n < 0) {\n        n = -n;\n        if (partInt.length <= n)\n            return '0';\n        else {\n            var prefix = partInt.substr(0, partInt.length - n);\n            input = prefix + '.' + partInt.substr(partInt.length - n) + partDec;\n            prefix = roundOff(input, 0, mode);\n            return (neg ? '-' : '') + prefix + (new Array(n + 1).join('0'));\n        }\n    }\n    // handle case when integer output is desired\n    if (n == 0) {\n        var l = partInt.length;\n        if (greaterThanFive(parts[1], partInt, neg, mode)) {\n            partInt = increment(partInt);\n        }\n        return (neg && parseInt(partInt) ? '-' : '') + partInt;\n    }\n    // handle case when n>0\n    if (!parts[1]) {\n        return (neg ? '-' : '') + partInt + '.' + (new Array(n + 1).join('0'));\n    }\n    else if (parts[1].length < n) {\n        return (neg ? '-' : '') + partInt + '.' + parts[1] + (new Array(n - parts[1].length + 1).join('0'));\n    }\n    partDec = parts[1].substring(0, n);\n    var rem = parts[1].substring(n);\n    if (rem && greaterThanFive(rem, partDec, neg, mode)) {\n        partDec = increment(partDec);\n        if (partDec.length > n) {\n            return (neg ? '-' : '') + increment(partInt, parseInt(partDec[0])) + '.' + partDec.substring(1);\n        }\n    }\n    return (neg && (parseInt(partInt) || parseInt(partDec)) ? '-' : '') + partInt + '.' + partDec;\n}\nexports.roundOff = roundOff;\nfunction greaterThanFive(part, pre, neg, mode) {\n    if (!part || part === new Array(part.length + 1).join('0'))\n        return false;\n    // #region UP, DOWN, CEILING, FLOOR \n    if (mode === roundingModes_1.RoundingModes.DOWN || (!neg && mode === roundingModes_1.RoundingModes.FLOOR) ||\n        (neg && mode === roundingModes_1.RoundingModes.CEILING))\n        return false;\n    if (mode === roundingModes_1.RoundingModes.UP || (neg && mode === roundingModes_1.RoundingModes.FLOOR) ||\n        (!neg && mode === roundingModes_1.RoundingModes.CEILING))\n        return true;\n    // #endregion\n    // case when part !== five\n    var five = '5' + (new Array(part.length).join('0'));\n    if (part > five)\n        return true;\n    else if (part < five)\n        return false;\n    // case when part === five\n    switch (mode) {\n        case roundingModes_1.RoundingModes.HALF_DOWN: return false;\n        case roundingModes_1.RoundingModes.HALF_UP: return true;\n        case roundingModes_1.RoundingModes.HALF_EVEN:\n        default: return (parseInt(pre[pre.length - 1]) % 2 == 1);\n    }\n}\nfunction increment(part, c) {\n    if (c === void 0) { c = 0; }\n    if (!c)\n        c = 1;\n    if (typeof (part) == 'number')\n        part.toString();\n    var l = part.length - 1, s = '';\n    for (var i = l; i >= 0; i--) {\n        var x = parseInt(part[i]) + c;\n        if (x == 10) {\n            c = 1;\n            x = 0;\n        }\n        else {\n            c = 0;\n        }\n        s += x;\n    }\n    if (c)\n        s += c;\n    return s.split('').reverse().join('');\n}\n\n\n/***/ }),\n\n/***/ 916:\n/***/ (function(__unused_webpack_module, exports) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RoundingModes = void 0;\nvar RoundingModes;\n(function (RoundingModes) {\n    /**\n     * Rounding mode to round towards positive infinity.\n     */\n    RoundingModes[RoundingModes[\"CEILING\"] = 0] = \"CEILING\";\n    /**\n     * Rounding mode to round towards zero.\n     */\n    RoundingModes[RoundingModes[\"DOWN\"] = 1] = \"DOWN\";\n    /**\n     * Rounding mode to round towards negative infinity.\n     */\n    RoundingModes[RoundingModes[\"FLOOR\"] = 2] = \"FLOOR\";\n    /**\n     * Rounding mode to round towards \"nearest neighbor\" unless both neighbors are equidistant,\n     * in which case round down.\n     */\n    RoundingModes[RoundingModes[\"HALF_DOWN\"] = 3] = \"HALF_DOWN\";\n    /**\n     * Rounding mode to round towards the \"nearest neighbor\" unless both neighbors are equidistant,\n     * in which case, round towards the even neighbor.\n     */\n    RoundingModes[RoundingModes[\"HALF_EVEN\"] = 4] = \"HALF_EVEN\";\n    /**\n     * Rounding mode to round towards \"nearest neighbor\" unless both neighbors are equidistant,\n     * in which case round up.\n     */\n    RoundingModes[RoundingModes[\"HALF_UP\"] = 5] = \"HALF_UP\";\n    /**\n     * Rounding mode to assert that the requested operation has an exact result, hence no rounding is necessary.\n     * UNIMPLEMENTED\n     */\n    RoundingModes[RoundingModes[\"UNNECESSARY\"] = 6] = \"UNNECESSARY\";\n    /**\n     * Rounding mode to round away from zero.\n     */\n    RoundingModes[RoundingModes[\"UP\"] = 7] = \"UP\";\n})(RoundingModes = exports.RoundingModes || (exports.RoundingModes = {}));\n\n\n/***/ }),\n\n/***/ 26:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.negate = exports.subtract = void 0;\nvar add_1 = __webpack_require__(217);\nfunction subtract(number1, number2) {\n    number1 = number1.toString();\n    number2 = number2.toString();\n    number2 = negate(number2);\n    return (0, add_1.add)(number1, number2);\n}\nexports.subtract = subtract;\nfunction negate(number) {\n    if (number[0] == '-') {\n        number = number.substr(1);\n    }\n    else {\n        number = '-' + number;\n    }\n    return number;\n}\nexports.negate = negate;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \tvar __webpack_exports__ = __webpack_require__(423);\n/******/ \t\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});","// When a boxed property is passed in, it should have quotes of some\n// kind around it.\n//\n// For instance:\n// \t\tMyValues['Name']\n// \t\tMyValues[\"Age\"]\n// \t\tMyValues[`Cost`]\n//\n// This function removes the wrapping quotes.\n//\n// Please note it *DOES NOT PARSE* template literals, so backticks just\n// end up doing the same thing as other quote types.\n//\n// TODO: Should template literals be processed?  If so what state do they have access to?  That should happen here if so.\n// TODO: Make a simple class include library with these\nconst cleanWrapCharacters = (pCharacter, pString) =>\n{\n\tif (pString.startsWith(pCharacter) && pString.endsWith(pCharacter))\n\t{\n\t\treturn pString.substring(1, pString.length - 1);\n\t}\n\telse\n\t{\n\t\treturn pString;\n\t}\n};\n\nmodule.exports = cleanWrapCharacters;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Hash Translation\n*\n* This is a very simple translation table for hashes, which allows the same schema to resolve\n* differently based on a loaded translation table.\n*\n* This is to prevent the requirement for mutating schemas over and over again when we want to\n* reuse the structure but look up data elements by different addresses.\n*\n* One side-effect of this is that a translation table can \"override\" the built-in hashes, since\n* this is always used to resolve hashes before any of the functionCallByHash(pHash, ...) perform\n* their lookups by hash.\n*\n* @class ManyfestHashTranslation\n*/\nclass ManyfestHashTranslation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n        this.translationTable = {};\n\t}\n\n    translationCount()\n    {\n        return Object.keys(this.translationTable).length;\n    }\n\n    addTranslation(pTranslation)\n    {\n        // This adds a translation in the form of:\n        // { \"SourceHash\": \"DestinationHash\", \"SecondSourceHash\":\"SecondDestinationHash\" }\n        if (typeof(pTranslation) != 'object')\n        {\n            this.logError(`Hash translation addTranslation expected a translation be type object but was passed in ${typeof(pTranslation)}`);\n            return false;\n        }\n\n        let tmpTranslationSources = Object.keys(pTranslation)\n\n        tmpTranslationSources.forEach(\n            (pTranslationSource) =>\n            {\n                if (typeof(pTranslation[pTranslationSource]) != 'string')\n                {\n                    this.logError(`Hash translation addTranslation expected a translation destination hash for [${pTranslationSource}] to be a string but the referrant was a ${typeof(pTranslation[pTranslationSource])}`);\n                }\n                else\n                {\n                    this.translationTable[pTranslationSource] = pTranslation[pTranslationSource];\n                }\n            });\n    }\n\n    removeTranslationHash(pTranslationHash)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslationHash))\n        {\n            delete this.translationTable[pTranslationHash];\n        }\n    }\n\n    // This removes translations.\n    // If passed a string, just removes the single one.\n    // If passed an object, it does all the source keys.\n    removeTranslation(pTranslation)\n    {\n        if (typeof(pTranslation) == 'string')\n        {\n            this.removeTranslationHash(pTranslation);\n            return true;\n        }\n        else if (typeof(pTranslation) == 'object')\n        {\n            let tmpTranslationSources = Object.keys(pTranslation)\n\n            tmpTranslationSources.forEach(\n                (pTranslationSource) =>\n                {\n                    this.removeTranslation(pTranslationSource);\n                });\n            return true;\n        }\n        else\n        {\n            this.logError(`Hash translation removeTranslation expected either a string or an object but the passed-in translation was type ${typeof(pTranslation)}`);\n            return false;\n        }\n    }\n\n    clearTranslations()\n    {\n        this.translationTable = {};\n    }\n\n    translate(pTranslation)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslation))\n        {\n            return this.translationTable[pTranslation];\n        }\n        else\n        {\n            return pTranslation;\n        }\n    }\n}\n\nmodule.exports = ManyfestHashTranslation;","/**\n* @author <steven@velozo.com>\n*/\n\n/**\n* Manyfest simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n\n    console.log(`[Manyfest] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject));\n};\n\nmodule.exports = logToConsole;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Resolver\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressResolverCheckAddressExists\n*/\nclass ManyfestObjectAddressResolverCheckAddressExists\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// Check if an address exists.\n\t//\n\t// This is necessary because the getValueAtAddress function is ambiguous on\n\t// whether the element/property is actually there or not (it returns\n\t// undefined whether the property exists or not).  This function checks for\n\t// existance and returns true or false dependent.\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\t// TODO: Should these throw an error?\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Check if the property exists.\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName].hasOwnProperty(tmpBoxedPropertyReference);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Use the new in operator to see if the element is in the array\n\t\t\t\t\treturn (tmpBoxedPropertyNumber in pObject[tmpBoxedPropertyName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Check if the property exists\n\t\t\t\treturn pObject.hasOwnProperty(pAddress);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// Because this is an impossible address, the property doesn't exist\n\t\t\t\t\t// TODO: Should we throw an error in this condition?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverCheckAddressExists;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - DeleteValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverDeleteValue\n*/\nclass ManyfestObjectAddressResolverDeleteValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// TODO: Dry me\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Count from the end to the beginning so splice doesn't %&%#$ up the array\n\t\t\t\tfor (let i = tmpInputArray.length - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Delete elements end to beginning\n\t\t\t\t\t\ttmpInputArray.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tdelete pObject[tmpObjectPropertyName];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tdelete pObject[pAddress];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverDeleteValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - GetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverGetValue\n*/\nclass ManyfestObjectAddressResolverGetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress, pParentAddress, pRootObject)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// Set the root object to the passed-in object if it isn't set yet.  This is expected to be the root object.\n\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// Adding simple back-navigation in objects\n\t\tif (tmpSeparatorIndex == 0)\n\t\t{\n\t\t\t// Given an address of \"Bundle.Contract.IDContract...Project.IDProject\" the ... would be interpreted as two back-navigations from IDContract.\n\t\t\t// When the address is passed in, though, the first . is already eliminated.  So we can count the dots.\n\t\t\tlet tmpParentAddressParts = tmpParentAddress.split('.');\n\n\t\t\tlet tmpBackNavigationCount = 0;\n\n\t\t\t// Count the number of dots\n\t\t\tfor (let i = 0; i < pAddress.length; i++)\n\t\t\t{\n\t\t\t\tif (pAddress.charAt(i) != '.')\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttmpBackNavigationCount++;\n\t\t\t}\n\n\t\t\tlet tmpParentAddressLength = tmpParentAddressParts.length - tmpBackNavigationCount;\n\n\t\t\tif (tmpParentAddressLength < 0)\n\t\t\t{\n\t\t\t\t// We are trying to back navigate more than we can.\n\t\t\t\t// TODO: Should this be undefined or should we bank out at the bottom and try to go forward?\n\t\t\t\t// This seems safest for now.\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are trying to back navigate to a parent object.\n\t\t\t\t// Recurse with the back-propagated parent address, and, the new address without the back-navigation dots.\n\t\t\t\tlet tmpRecurseAddress = pAddress.slice(tmpBackNavigationCount);\n\t\t\t\tif (tmpParentAddressLength > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpRecurseAddress = `${tmpParentAddressParts.slice(0, tmpParentAddressLength).join('.')}.${tmpRecurseAddress}`;\n\t\t\t\t}\n\t\t\t\tthis.logInfo(`Back-navigation detected.  Recursing back to address [${tmpRecurseAddress}]`);\n\t\t\t\treturn this.getValueAtAddress(tmpRootObject, tmpRecurseAddress);\n\t\t\t}\n\t\t}\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\tlet tmpOutputArray = [];\n\t\t\t\tfor (let i = 0; i < tmpInputArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOutputArray.push(tmpInputArray[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpOutputArray;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn pObject[tmpObjectPropertyName];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\treturn pObject[pAddress];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverGetValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - SetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressSetValue\n*/\nclass ManyfestObjectAddressSetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyReference] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the time in recursion to set the value in the object\n\t\t\t\tpObject[pAddress] = pValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressSetValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Generation\n*\n* Automagically generate addresses and properties based on a passed-in object,\n* to be used for easy creation of schemas.  Meant to simplify the lives of\n* developers wanting to create schemas without typing a bunch of stuff.\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressGeneration\n*/\nclass ManyfestObjectAddressGeneration\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// generateAddressses\n\t//\n\t// This flattens an object into a set of key:value pairs for *EVERY SINGLE\n\t// POSSIBLE ADDRESS* in the object.  It can get ... really insane really\n\t// quickly.  This is not meant to be used directly to generate schemas, but\n\t// instead as a starting point for scripts or UIs.\n\t//\n\t// This will return a mega set of key:value pairs with all possible schema\n\t// permutations and default values (when not an object) and everything else.\n\tgenerateAddressses (pObject, pBaseAddress, pSchema)\n\t{\n\t\tlet tmpBaseAddress = (typeof(pBaseAddress) == 'string') ? pBaseAddress : '';\n\t\tlet tmpSchema = (typeof(pSchema) == 'object') ? pSchema : {};\n\n\t\tlet tmpObjectType = typeof(pObject);\n\n\t\tlet tmpSchemaObjectEntry = (\n\t\t\t{\n\t\t\t\tAddress: tmpBaseAddress,\n\t\t\t\tHash: tmpBaseAddress,\n\t\t\t\tName: tmpBaseAddress,\n\t\t\t\t// This is so scripts and UI controls can force a developer to opt-in.\n\t\t\t\tInSchema: false\n\t\t\t}\n\t\t)\n\n\t\tif ((tmpObjectType == 'object') && (pObject == null))\n\t\t{\n\t\t\ttmpObjectType = 'null';\n\t\t}\n\n\t\tswitch(tmpObjectType)\n\t\t{\n\t\t\tcase 'string':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'String';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\tcase 'bigint':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Number';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\tcase 'null':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Any';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif (Array.isArray(pObject))\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Array';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < pObject.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[i], `${tmpBaseAddress}[${i}]`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Object';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t\ttmpBaseAddress += '.';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectProperties = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectProperties.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[tmpObjectProperties[i]], `${tmpBaseAddress}${tmpObjectProperties[i]}`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'symbol':\n\t\t\tcase 'function':\n\t\t\t\t// Symbols and functions neither recurse nor get added to the schema\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tmpSchema;\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressGeneration;","// Given a string, parse out any conditional expressions and set whether or not to keep the record.\n//\n// For instance:\n// \t\t'files[]<<~?format,==,Thumbnail?~>>'\n//      'files[]<<~?format,==,Metadata?~>>'\n//      'files[]<<~?size,>,4000?~>>'\n//\n// The wrapping parts are the <<~? and ?~>> megabrackets.\n//\n// The function does not need to alter the string -- just check the conditionals within.\n\n// TODO: Consider making this an es6 class\n\n// Let's use indexOf since it is apparently the fastest.\nconst _ConditionalStanzaStart = '<<~?';\nconst _ConditionalStanzaStartLength = _ConditionalStanzaStart.length;\nconst _ConditionalStanzaEnd = '?~>>';\nconst _ConditionalStanzaEndLength = _ConditionalStanzaEnd.length;\n\n// Test the condition of a value in a record\nconst testCondition = (pManyfest, pRecord, pSearchAddress, pSearchComparator, pValue) =>\n{\n\tswitch(pSearchComparator)\n\t{\n\t\tcase '!=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) != pValue);\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) < pValue);\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) > pValue);\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) <= pValue);\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) >= pValue);\n\t\t\tbreak;\n\t\tcase '===':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === pValue);\n\t\t\tbreak;\n\t\tcase '==':\n\t\tdefault:\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) == pValue);\n\t\t\tbreak;\n\t}\n};\n\nconst parseConditionals = (pManyfest, pAddress, pRecord) =>\n{\n\tlet tmpKeepRecord = true;\n\n\t/*\n\t\tAlgorithm is simple:\n\n\t\t1.  Enuerate start points\n\n\t\t2.  Find stop points within each start point\n\t\t3. Check the conditional\n\t*/\n\n\tlet tmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart);\n\n\twhile (tmpStartIndex != -1)\n\t{\n\t\tlet tmpStopIndex = pAddress.indexOf(_ConditionalStanzaEnd, tmpStartIndex+_ConditionalStanzaStartLength);\n\n\t\tif (tmpStopIndex != -1)\n\t\t{\n\t\t\tlet tmpMagicComparisonPatternSet = pAddress.substring(tmpStartIndex+_ConditionalStanzaStartLength, tmpStopIndex).split(',');\n\n\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\t\t\tlet tmpSearchComparator = tmpMagicComparisonPatternSet[1];\n\t\t\tlet tmpSearchValue = tmpMagicComparisonPatternSet[2];\n\n\t\t\t// Process the piece\n\t\t\ttmpKeepRecord = tmpKeepRecord && testCondition(pManyfest, pRecord, tmpSearchAddress, tmpSearchComparator, tmpSearchValue);\n\t\t\ttmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart, tmpStopIndex+_ConditionalStanzaEndLength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpStartIndex = -1;\n\t\t}\n\t\t\n\t}\n\n\treturn tmpKeepRecord;\n}\n\nmodule.exports = parseConditionals;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Schema Manipulation Functions\n*\n* @class ManyfestSchemaManipulation\n*/\nclass ManyfestSchemaManipulation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n    // This translates the default address mappings to something different.\n    //\n    // For instance you can pass in manyfest schema descriptor object:\n    // \t{\n\t//\t  \"Address.Of.a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t//\t  \"Address.Of.b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t//  }\n    //\n    //\n    // And then an address mapping (basically a Hash->Address map)\n    //  {\n    //    \"a\": \"New.Address.Of.a\",\n    //    \"b\": \"New.Address.Of.b\"\n    //  }\n    //\n    // NOTE: This mutates the schema object permanently, altering the base hash.\n    //       If there is a collision with an existing address, it can lead to overwrites.\n    // TODO: Discuss what should happen on collisions.\n\tresolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\tif (typeof(pManyfestSchemaDescriptors) != 'object')\n\t\t{\n\t\t\tthis.logError(`Attempted to resolve address mapping but the descriptor was not an object.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof(pAddressMapping) != 'object')\n\t\t{\n\t\t\t// No mappings were passed in\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the arrays of both the schema definition and the hash mapping\n\t\tlet tmpManyfestAddresses = Object.keys(pManyfestSchemaDescriptors);\n\t\tlet tmpHashMapping = {};\n\t\ttmpManyfestAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tif (pManyfestSchemaDescriptors[pAddress].hasOwnProperty('Hash'))\n\t\t\t\t{\n\t\t\t\t\ttmpHashMapping[pManyfestSchemaDescriptors[pAddress].Hash] = pAddress;\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet tmpAddressMappingSet = Object.keys(pAddressMapping);\n\n\t\ttmpAddressMappingSet.forEach(\n\t\t\t(pInputAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpNewDescriptorAddress = pAddressMapping[pInputAddress];\n\t\t\t\tlet tmpOldDescriptorAddress = false;\n\t\t\t\tlet tmpDescriptor = false;\n\n\t\t\t\t// See if there is a matching descriptor either by Address directly or Hash\n\t\t\t\tif (pManyfestSchemaDescriptors.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = pInputAddress;\n\t\t\t\t}\n\t\t\t\telse if (tmpHashMapping.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = tmpHashMapping[pInputAddress];\n\t\t\t\t}\n\n\t\t\t\t// If there was a matching descriptor in the manifest, store it in the temporary descriptor\n\t\t\t\tif (tmpOldDescriptorAddress)\n\t\t\t\t{\n\t\t\t\t\ttmpDescriptor = pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t\tdelete pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Create a new descriptor!  Map it to the input address.\n\t\t\t\t\ttmpDescriptor = { Hash:pInputAddress };\n\t\t\t\t}\n\n\t\t\t\t// Now re-add the descriptor to the manyfest schema\n\t\t\t\tpManyfestSchemaDescriptors[tmpNewDescriptorAddress] = tmpDescriptor;\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tsafeResolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\t// This returns the descriptors as a new object, safely remapping without mutating the original schema Descriptors\n\t\tlet tmpManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptors));\n\t\tthis.resolveAddressMappings(tmpManyfestSchemaDescriptors, pAddressMapping);\n\t\treturn tmpManyfestSchemaDescriptors;\n\t}\n\n\tmergeAddressMappings(pManyfestSchemaDescriptorsDestination, pManyfestSchemaDescriptorsSource)\n\t{\n\t\tif ((typeof(pManyfestSchemaDescriptorsSource) != 'object') || (typeof(pManyfestSchemaDescriptorsDestination) != 'object'))\n\t\t{\n\t\t\tthis.logError(`Attempted to merge two schema descriptors but both were not objects.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpSource = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsSource));\n\t\tlet tmpNewManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsDestination));\n\n\t\t// The first passed-in set of descriptors takes precedence.\n\t\tlet tmpDescriptorAddresses = Object.keys(tmpSource);\n\n\t\ttmpDescriptorAddresses.forEach(\n\t\t\t(pDescriptorAddress) =>\n\t\t\t{\n\t\t\t\tif (!tmpNewManyfestSchemaDescriptors.hasOwnProperty(pDescriptorAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpNewManyfestSchemaDescriptors[pDescriptorAddress] = tmpSource[pDescriptorAddress];\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpNewManyfestSchemaDescriptors;\n\t}\n}\n\nmodule.exports = ManyfestSchemaManipulation;","/**\n* @author <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\nlet libHashTranslation = require('./Manyfest-HashTranslation.js');\nlet libObjectAddressCheckAddressExists = require('./Manyfest-ObjectAddress-CheckAddressExists.js');\nlet libObjectAddressGetValue = require('./Manyfest-ObjectAddress-GetValue.js');\nlet libObjectAddressSetValue = require('./Manyfest-ObjectAddress-SetValue.js');\nlet libObjectAddressDeleteValue = require('./Manyfest-ObjectAddress-DeleteValue.js');\nlet libObjectAddressGeneration = require('./Manyfest-ObjectAddressGeneration.js');\nlet libSchemaManipulation = require('./Manyfest-SchemaManipulation.js');\n\nconst _DefaultConfiguration = { Scope:'DEFAULT', Descriptors: {} }\n\n/**\n* Manyfest object address-based descriptions and manipulations.\n*\n* @class Manyfest\n*/\nclass Manyfest extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'Manifest';\n\n\t\t// Wire in logging\n\t\tthis.logInfo = libSimpleLog;\n\t\tthis.logError = libSimpleLog;\n\n\t\t// Create an object address resolver and map in the functions\n\t\tthis.objectAddressCheckAddressExists = new libObjectAddressCheckAddressExists(this.logInfo, this.logError);\n\t\tthis.objectAddressGetValue = new libObjectAddressGetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressSetValue = new libObjectAddressSetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressDeleteValue = new libObjectAddressDeleteValue(this.logInfo, this.logError);\n\n\t\tif (!this.options.hasOwnProperty('defaultValues'))\n\t\t{\n\t\t\tthis.options.defaultValues = (\n\t\t\t\t{\n\t\t\t\t\t\"String\": \"\",\n\t\t\t\t\t\"Number\": 0,\n\t\t\t\t\t\"Float\": 0.0,\n\t\t\t\t\t\"Integer\": 0,\n\t\t\t\t\t\"Boolean\": false,\n\t\t\t\t\t\"Binary\": 0,\n\t\t\t\t\t\"DateTime\": 0,\n\t\t\t\t\t\"Array\": [],\n\t\t\t\t\t\"Object\": {},\n\t\t\t\t\t\"Null\": null\n\t\t\t\t});\n\t\t}\n\t\tif (!this.options.hasOwnProperty('strict'))\n\t\t{\n\t\t\tthis.options.strict = false;\n\t\t}\n\n\t\tthis.scope = undefined;\n\t\tthis.elementAddresses = undefined;\n\t\tthis.elementHashes = undefined;\n\t\tthis.elementDescriptors = undefined;\n\n\t\tthis.reset();\n\n\t\tif (typeof(this.options) === 'object')\n\t\t{\n\t\t\tthis.loadManifest(this.options);\n\t\t}\n\n\t\tthis.schemaManipulations = new libSchemaManipulation(this.logInfo, this.logError);\n\t\tthis.objectAddressGeneration = new libObjectAddressGeneration(this.logInfo, this.logError);\n\n\t\tthis.hashTranslations = new libHashTranslation(this.logInfo, this.logError);\n\t}\n\n\t/*************************************************************************\n\t * Schema Manifest Loading, Reading, Manipulation and Serialization Functions\n\t */\n\n\t// Reset critical manifest properties\n\treset()\n\t{\n\t\tthis.scope = 'DEFAULT';\n\t\tthis.elementAddresses = [];\n\t\tthis.elementHashes = {};\n\t\tthis.elementDescriptors = {};\n\t}\n\n\tclone()\n\t{\n\t\t// Make a copy of the options in-place\n\t\tlet tmpNewOptions = JSON.parse(JSON.stringify(this.options));\n\n\t\tlet tmpNewManyfest = new Manyfest(this.getManifest(), this.logInfo, this.logError, tmpNewOptions);\n\n\t\t// Import the hash translations\n\t\ttmpNewManyfest.hashTranslations.addTranslation(this.hashTranslations.translationTable);\n\n\t\treturn tmpNewManyfest;\n\t}\n\n\t// Deserialize a Manifest from a string\n\tdeserialize(pManifestString)\n\t{\n\t\t// TODO: Add guards for bad manifest string\n\t\treturn this.loadManifest(JSON.parse(pManifestString));\n\t}\n\n\t// Load a manifest from an object\n\tloadManifest(pManifest)\n\t{\n\t\tif (typeof(pManifest) !== 'object')\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading manifest; expecting an object but parameter was type ${typeof(pManifest)}.`);\n\t\t}\n\n\t\tlet tmpManifest = (typeof(pManifest) == 'object') ? pManifest : {};\n\n\t\tlet tmpDescriptorKeys = Object.keys(_DefaultConfiguration);\n\n\t\tfor (let i = 0; i < tmpDescriptorKeys.length; i++)\n\t\t{\n\t\t\tif (!tmpManifest.hasOwnProperty(tmpDescriptorKeys[i]))\n\t\t\t{\n\t\t\t\ttmpManifest[tmpDescriptorKeys[i]] = JSON.parse(JSON.stringify(_DefaultConfiguration[tmpDescriptorKeys[i]]));\n\t\t\t}\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Scope'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Scope) === 'string')\n\t\t\t{\n\t\t\t\tthis.scope = tmpManifest.Scope;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest; expecting a string but property was type ${typeof(tmpManifest.Scope)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest object.  Property \"Scope\" does not exist in the root of the object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Descriptors'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Descriptors) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpDescriptionAddresses = Object.keys(tmpManifest.Descriptors);\n\t\t\t\tfor (let i = 0; i < tmpDescriptionAddresses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.addDescriptor(tmpDescriptionAddresses[i], tmpManifest.Descriptors[tmpDescriptionAddresses[i]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading description object from manifest object.  Expecting an object in 'Manifest.Descriptors' but the property was type ${typeof(tmpManifest.Descriptors)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object description from manifest object.  Property \"Descriptors\" does not exist in the root of the Manifest object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('HashTranslations'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.HashTranslations) === 'object')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < tmpManifest.HashTranslations.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// Each translation is \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Serialize the Manifest to a string\n\tserialize()\n\t{\n\t\treturn JSON.stringify(this.getManifest());\n\t}\n\n\tgetManifest()\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tScope: this.scope,\n\t\t\t\tDescriptors: JSON.parse(JSON.stringify(this.elementDescriptors)),\n\t\t\t\tHashTranslations: JSON.parse(JSON.stringify(this.hashTranslations.translationTable))\n\t\t\t});\n\t}\n\n\t// Add a descriptor to the manifest\n\taddDescriptor(pAddress, pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) === 'object')\n\t\t{\n\t\t\t// Add the Address into the Descriptor if it doesn't exist:\n\t\t\tif (!pDescriptor.hasOwnProperty('Address'))\n\t\t\t{\n\t\t\t\tpDescriptor.Address = pAddress;\n\t\t\t}\n\n\t\t\tif (!this.elementDescriptors.hasOwnProperty(pAddress))\n\t\t\t{\n\t\t\t\tthis.elementAddresses.push(pAddress);\n\t\t\t}\n\n\t\t\t// Add the element descriptor to the schema\n\t\t\tthis.elementDescriptors[pAddress] = pDescriptor;\n\n\t\t\t// Always add the address as a hash\n\t\t\tthis.elementHashes[pAddress] = pAddress;\n\n\t\t\tif (pDescriptor.hasOwnProperty('Hash'))\n\t\t\t{\n\t\t\t\t// TODO: Check if this is a good idea or not..\n\t\t\t\t//       Collisions are bound to happen with both representations of the address/hash in here and developers being able to create their own hashes.\n\t\t\t\tthis.elementHashes[pDescriptor.Hash] = pAddress;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpDescriptor.Hash = pAddress;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object descriptor for address '${pAddress}' from manifest object.  Expecting an object but property was type ${typeof(pDescriptor)}.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetDescriptorByHash(pHash)\n\t{\n\t\treturn this.getDescriptor(this.resolveHashAddress(pHash));\n\t}\n\n\tgetDescriptor(pAddress)\n\t{\n\t\treturn this.elementDescriptors[pAddress];\n\t}\n\n\t// execute an action function for each descriptor\n\teachDescriptor(fAction)\n\t{\n        let tmpDescriptorAddresses = Object.keys(this.elementDescriptors);\n        for (let i = 0; i < tmpDescriptorAddresses.length; i++)\n        {\n            fAction(this.elementDescriptors[tmpDescriptorAddresses[i]]);\n        }\n\n\t}\n\n\t/*************************************************************************\n\t * Beginning of Object Manipulation (read & write) Functions\n\t */\n\t// Check if an element exists by its hash\n\tcheckAddressExistsByHash (pObject, pHash)\n\t{\n\t\treturn this.checkAddressExists(pObject,this.resolveHashAddress(pHash));\n\t}\n\n\t// Check if an element exists at an address\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\treturn this.objectAddressCheckAddressExists.checkAddressExists(pObject, pAddress);\n\t}\n\n\t// Turn a hash into an address, factoring in the translation table.\n\tresolveHashAddress(pHash)\n\t{\n\t\tlet tmpAddress = undefined;\n\n\t\tlet tmpInElementHashTable = this.elementHashes.hasOwnProperty(pHash);\n\t\tlet tmpInTranslationTable = this.hashTranslations.translationTable.hasOwnProperty(pHash);\n\n\t\t// The most straightforward: the hash exists, no translations.\n\t\tif (tmpInElementHashTable && !tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[pHash];\n\t\t}\n\t\t// There is a translation from one hash to another, and, the elementHashes contains the pointer end\n\t\telse if (tmpInTranslationTable && this.elementHashes.hasOwnProperty(this.hashTranslations.translate(pHash)))\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[this.hashTranslations.translate(pHash)];\n\t\t}\n\t\t// Use the level of indirection only in the Translation Table\n\t\telse if (tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.hashTranslations.translate(pHash);\n\t\t}\n\t\t// Just treat the hash as an address.\n\t\t// TODO: Discuss this ... it is magic but controversial\n\t\telse\n\t\t{\n\t\t\ttmpAddress = pHash;\n\t\t}\n\n\t\treturn tmpAddress;\n\t}\n\n\t// Get the value of an element by its hash\n\tgetValueByHash (pObject, pHash)\n\t{\n\t\tlet tmpValue = this.getValueAtAddress(pObject, this.resolveHashAddress(pHash));\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptorByHash(pHash));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\tlet tmpValue = this.objectAddressGetValue.getValueAtAddress(pObject, pAddress);\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptor(pAddress));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Set the value of an element by its hash\n\tsetValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.setValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressSetValue.setValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Delete the value of an element by its hash\n\tdeleteValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.deleteValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressDeleteValue.deleteValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Validate the consistency of an object against the schema\n\tvalidate(pObject)\n\t{\n\t\tlet tmpValidationData =\n\t\t{\n\t\t\tError: null,\n\t\t\tErrors: [],\n\t\t\tMissingElements:[]\n\t\t};\n\n\t\tif (typeof(pObject) !== 'object')\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Expected passed in object to be type object but was passed in ${typeof(pObject)}`);\n\t\t}\n\n\t\tlet addValidationError = (pAddress, pErrorMessage) =>\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Element at address \"${pAddress}\" ${pErrorMessage}.`);\n\t\t};\n\n\t\t// Now enumerate through the values and check for anomalies based on the schema\n\t\tfor (let i = 0; i < this.elementAddresses.length; i++)\n\t\t{\n\t\t\tlet tmpDescriptor = this.getDescriptor(this.elementAddresses[i]);\n\t\t\tlet tmpValueExists = this.checkAddressExists(pObject, tmpDescriptor.Address);\n\t\t\tlet tmpValue = this.getValueAtAddress(pObject, tmpDescriptor.Address);\n\n\t\t\tif ((typeof(tmpValue) == 'undefined') || !tmpValueExists)\n\t\t\t{\n\t\t\t\t// This will technically mean that `Object.Some.Value = undefined` will end up showing as \"missing\"\n\t\t\t\t// TODO: Do we want to do a different message based on if the property exists but is undefined?\n\t\t\t\ttmpValidationData.MissingElements.push(tmpDescriptor.Address);\n\t\t\t\tif (tmpDescriptor.Required || this.options.strict)\n\t\t\t\t{\n\t\t\t\t\taddValidationError(tmpDescriptor.Address, 'is flagged REQUIRED but is not set in the object');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now see if there is a data type specified for this element\n\t\t\tif (tmpDescriptor.DataType)\n\t\t\t{\n\t\t\t\tlet tmpElementType = typeof(tmpValue);\n\t\t\t\tswitch(tmpDescriptor.DataType.toString().trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpValueString = tmpValue.toString();\n\t\t\t\t\t\t\tif (tmpValueString.indexOf('.') > -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// TODO: Is this an error?\n\t\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but has a decimal point in the number.`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DateTime':\n\t\t\t\t\t\tlet tmpValueDate = new Date(tmpValue);\n\t\t\t\t\t\tif (tmpValueDate.toString() == 'Invalid Date')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is not parsable as a Date by Javascript`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Check if this is a string, in the default case\n\t\t\t\t\t\t// Note this is only when a DataType is specified and it is an unrecognized data type.\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} (which auto-converted to String because it was unrecognized) but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpValidationData;\n\t}\n\n\t// Returns a default value, or, the default value for the data type (which is overridable with configuration)\n\tgetDefaultValue(pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) != 'object')\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (pDescriptor.hasOwnProperty('Default'))\n\t\t{\n\t\t\treturn pDescriptor.Default;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Default to a null if it doesn't have a type specified.\n\t\t\t// This will ensure a placeholder is created but isn't misinterpreted.\n\t\t\tlet tmpDataType = (pDescriptor.hasOwnProperty('DataType')) ? pDescriptor.DataType : 'String';\n\t\t\tif (this.options.defaultValues.hasOwnProperty(tmpDataType))\n\t\t\t{\n\t\t\t\treturn this.options.defaultValues[tmpDataType];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// give up and return null\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enumerate through the schema and populate default values if they don't exist.\n\tpopulateDefaults(pObject, pOverwriteProperties)\n\t{\n\t\treturn this.populateObject(pObject, pOverwriteProperties,\n\t\t\t// This just sets up a simple filter to see if there is a default set.\n\t\t\t(pDescriptor) =>\n\t\t\t{\n\t\t\t\treturn pDescriptor.hasOwnProperty('Default');\n\t\t\t});\n\t}\n\n\t// Forcefully populate all values even if they don't have defaults.\n\t// Based on type, this can do unexpected things.\n\tpopulateObject(pObject, pOverwriteProperties, fFilter)\n\t{\n\t\t// Automatically create an object if one isn't passed in.\n\t\tlet tmpObject = (typeof(pObject) === 'object') ? pObject : {};\n\t\t// Default to *NOT OVERWRITING* properties\n\t\tlet tmpOverwriteProperties = (typeof(pOverwriteProperties) == 'undefined') ? false : pOverwriteProperties;\n\t\t// This is a filter function, which is passed the schema and allows complex filtering of population\n\t\t// The default filter function just returns true, populating everything.\n\t\tlet tmpFilterFunction = (typeof(fFilter) == 'function') ? fFilter : (pDescriptor) => { return true; };\n\n\t\tthis.elementAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpDescriptor = this.getDescriptor(pAddress);\n\t\t\t\t// Check the filter function to see if this is an address we want to set the value for.\n\t\t\t\tif (tmpFilterFunction(tmpDescriptor))\n\t\t\t\t{\n\t\t\t\t\t// If we are overwriting properties OR the property does not exist\n\t\t\t\t\tif (tmpOverwriteProperties || !this.checkAddressExists(tmpObject, pAddress))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setValueAtAddress(tmpObject, pAddress, this.getDefaultValue(tmpDescriptor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpObject;\n\t}\n};\n\nmodule.exports = Manyfest;","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","const libFableServiceBase = require('fable-serviceproviderbase')\n\nconst defaultPictSettings = (\n\t{\n\t\tName: 'DefaultPictApplication',\n\n\t\t// The main \"viewport\" is the view that is used to host our application\n\t\tMainViewportViewIdentifier: 'Default-View',\n\t\tMainViewportRenderableHash: false,\n\t\tMainViewportDestinationAddress: false,\n\t\tMainViewportDefaultDataAddress: false,\n\n\t\t// Whether or not we should automatically render the main viewport after we initialize the pict application\n\t\tAutoSolveAfterInitialize: true,\n\t\tAutoRenderMainViewportViewAfterInitialize: true,\n\n\t\tManifests: {},\n\t\t// The prefix to prepend on all template destination hashes\n\t\tIdentifierAddressPrefix: 'PICT-'\n\t});\n\nclass PictApplication extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tthis.serviceType = 'PictApplication';\n\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict state\n\t\tthis.AppData = this.fable.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\n\t\t// Load all the manifests for the application\n\t\tlet tmpManifestKeys = Object.keys(this.options.Manifests);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++)\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.fable.serviceManager.instantiateServiceProvider('Manifest', this.options.Manifests[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing solve() function...`)\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpViewsToSolve[i].solve();\n\t\t}\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\t// Walk through any loaded views and solve them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoSolveWithApp)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoSolveOrdinal - b.options.AutoSolveOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToSolve[i].solveAsync.bind(tmpViewsToSolve[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\ttmpViewsToInitialize[i].initialize();\n\t\t\t}\n\t\t\tthis.onAfterInitialize();\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Solve the template synchronously\n\t\t\t\tthis.solve();\n\t\t\t}\n\t\t\t// Now check and see if we should automatically render as well\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Render the template synchronously\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallBack)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\t// TODO: Some optimization cleverness could be gained by grouping them into a parallelized async operation, by ordinal.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority\n\t\t\t// If they are all the default priority 0, it will end up being add order due to JSON Object Property Key order stuff\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = tmpViewsToInitialize[i];\n\t\t\t\ttmpAnticipate.anticipate(tmpView.initializeAsync.bind(tmpView));\n\t\t\t}\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.solveAsync.bind(this));\n\t\t\t}\n\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.renderMainViewportAsync.bind(this));\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallBack();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\trender(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\t// Now get the view (by hash) from the loaded views\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not render from View ${tmpViewIdentifier} because it is not a valid view.`);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn tmpView.render(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress);\n\t}\n\trenderMainViewport()\n\t{\n\t\treturn this.render(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress);\n\t}\n\n\trenderAsync(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tlet tmpErrorMessage = `PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not asynchronously render from View ${tmpViewIdentifier} because it is not a valid view.`;\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.error(tmpErrorMessage);\n\t\t\t}\n\t\t\treturn fCallback(new Error(tmpErrorMessage));\n\t\t}\n\n\t\treturn tmpView.renderAsync(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress, fCallback);\n\t}\n\trenderMainViewportAsync(fCallback)\n\t{\n\t\treturn this.renderAsync(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress, fCallback);\n\t}\n}\n\nmodule.exports = PictApplication;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst defaultPictViewSettings = (\n\t{\n\t\tDefaultRenderable: false,\n\t\tDefaultDestinationAddress: false,\n\t\tDefaultTemplateRecordAddress: false,\n\n\t\tViewIdentifier: false,\n\n\t\t// If this is set to true, when the App initializes this will.\n\t\t// After the App initializes, initialize will be called as soon as it's added.\n\t\tAutoInitialize: true,\n\t\tAutoInitializeOrdinal: 0,\n\n\t\t// If this is set to true, when the App autorenders (on load) this will.\n\t\t// After the App initializes, render will be called as soon as it's added.\n\t\tAutoRender: true,\n\t\tAutoRenderOrdinal: 0,\n\n\t\tAutoSolveWithApp: true,\n\t\tAutoSolveOrdinal: 0,\n\n\t\tCSSHash: false,\n\t\tCSS: false,\n\t\tCSSProvider: false,\n\t\tCSSPriority: 500,\n\n\t\tTemplates: [],\n\n\t\tDefaultTemplates: [],\n\n\t\tRenderables: [],\n\n\t\tManifests: {}\n\t});\n\nclass PictView extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Intersect default options, parent constructor, service information\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictViewSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tif (!this.options.ViewIdentifier)\n\t\t{\n\t\t\tthis.options.ViewIdentifier = `AutoViewID-${this.fable.getUUID()}`;\n\t\t}\n\t\tthis.serviceType = 'PictView';\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict application state\n\t\tthis.AppData = this.pict.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastRenderedTimestamp = false;\n\n\t\t// Load all templates from the array in the options\n\t\t// Templates are in the form of {Hash:'Some-Template-Hash',Template:'Template content',Source:'TemplateSource'}\n\t\tfor (let i = 0; i < this.options.Templates.length; i++)\n\t\t{\n\t\t\tlet tmpTemplate = this.options.Templates[i];\n\n\t\t\tif (!tmpTemplate.hasOwnProperty('Hash') || !tmpTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Template ${i} in the options array.`, tmpTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addTemplate(tmpTemplate.Hash, tmpTemplate.Template, tmpTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load all default templates from the array in the options\n\t\t// Templates are in the form of {Prefix:'',Postfix:'-List-Row',Template:'Template content',Source:'TemplateSourceString'}\n\t\tfor (let i = 0; i < this.options.DefaultTemplates.length; i++)\n\t\t{\n\t\t\tlet tmpDefaultTemplate = this.options.DefaultTemplates[i];\n\n\t\t\tif (!tmpDefaultTemplate.hasOwnProperty('Postfix') || !tmpDefaultTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Default Template ${i} in the options array.`, tmpDefaultTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpDefaultTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpDefaultTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addDefaultTemplate(tmpDefaultTemplate.Prefix, tmpDefaultTemplate.Postfix, tmpDefaultTemplate.Template, tmpDefaultTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load the CSS if it's available\n\t\tif (this.options.CSS)\n\t\t{\n\t\t\tlet tmpCSSHash = this.options.CSSHash ? this.options.CSSHash : `View-${this.options.ViewIdentifier}`;\n\t\t\tlet tmpCSSProvider = this.options.CSSProvider ? this.options.CSSProvider : tmpCSSHash;\n\t\t\tthis.pict.CSSMap.addCSS(tmpCSSHash, this.options.CSS, tmpCSSProvider, this.options.CSSPriority);\n\t\t}\n\n\t\t// Load all renderables\n\t\t// Renderables are launchable renderable instructions with templates\n\t\t// They look as such: {Identifier:'ContentEntry', TemplateHash:'Content-Entry-Section-Main', ContentDestinationAddress:'#ContentSection', RecordAddress:'AppData.Content.DefaultText', ManifestTransformation:'ManyfestHash', ManifestDestinationAddress:'AppData.Content.DataToTransformContent'}\n\t\t// The only parts that are necessary are Identifier and Template\n\t\t// A developer can then do render('ContentEntry') and it just kinda works.  Or they can override the ContentDestinationAddress\n\t\tthis.renderables = {};\n\t\tfor (let i = 0; i < this.options.Renderables.length; i++)\n\t\t{\n\t\t\tlet tmpRenderable = this.options.Renderables[i];\n\t\t\tthis.addRenderable(this.options.Renderables[i]);\n\t\t}\n\t}\n\n\taddRenderable(pRenderableHash, pTemplateHash, pDefaultTemplateDataAddress, pDefaultDestinationAddress, pRenderMethod)\n\t{\n\t\tlet tmpRenderable = false;\n\n\t\tif (typeof(pRenderableHash) == 'object')\n\t\t{\n\t\t\t// The developer passed in the renderable as an object.\n\t\t\t// Use theirs instead!\n\t\t\ttmpRenderable = pRenderableHash;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpRenderMethod = (typeof(pRenderMethod) !== 'string') ? pRenderMethod : 'replace';\n\t\t\ttmpRenderable = (\n\t\t\t\t{\n\t\t\t\t\tRenderableHash: pRenderableHash,\n\t\t\t\t\tTemplateHash: pTemplateHash,\n\t\t\t\t\tDefaultTemplateDataAddress: pDefaultTemplateDataAddress,\n\t\t\t\t\tDefaultDestinationAddress: pDefaultDestinationAddress,\n\t\t\t\t\tRenderMethod: tmpRenderMethod\n\t\t\t\t});\n\t\t}\n\n\t\tif ((typeof(tmpRenderable.RenderableHash) != 'string') || (typeof(tmpRenderable.TemplateHash) != 'string'))\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Renderable; RenderableHash or TemplateHash are invalid.`, tmpRenderable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} adding renderable [${tmpRenderable.RenderableHash}] pointed to template ${tmpRenderable.TemplateHash}.`);\n\t\t\t}\n\n\t\t\tthis.renderables[tmpRenderable.RenderableHash] = tmpRenderable;\n\t\t}\n\t}\n\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\tthis.onAfterInitialize();\n\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallback)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallback();\n\t\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonBeforeRender(pRenderable, pRenderDestinationAddress, pData)\n\t{\n\t\t// Overload this to mess with stuff before the content gets generated from the template\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeRenderAsync(pRenderable, pRenderDestinationAddress, pData, fCallback)\n\t{\n\t\tthis.onBeforeRender(pRenderable, pRenderDestinationAddress, pData);\n\t\treturn fCallback();\n\t}\n\n\trender(pRenderable, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it is not a valid renderable.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\tlet tmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\t// Generate the content output from the template and data\n\t\tlet tmpContent = this.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData)\n\n\t\t// Assign the content to the destination address\n\t\tswitch(tmpRenderable.RenderMethod)\n\t\t{\n\t\t\tcase 'append':\n\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'prepend':\n\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'append_once':\n\t\t\t\t// Try to find the content in the destination address\n\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t{\n\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\t}\n\t\t\tcase 'replace':\n\t\t\tdefault:\n\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Execute the developer-overridable post-render behavior\n\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, tmpContent)\n\n\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\t}\n\trenderAsync(pRenderable, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`));\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`));\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn fCallback(Error(`Could not render ${tmpRenderableHash}`));\n\t\t}\n\n\t\tlet tmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\tlet tmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\t// Render the template (asynchronously)\n\t\tthis.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData,\n\t\t\t(pError, pContent) =>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render (asynchronously) ${tmpRenderableHash} (param ${pRenderable}) because it did not parse the template.`, pError);\n\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t}\n\n\t\t\t\t// Assign the content to the destination address\n\t\t\t\tswitch(tmpRenderable.RenderMethod)\n\t\t\t\t{\n\t\t\t\t\tcase 'append':\n\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'prepend':\n\t\t\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'append_once':\n\t\t\t\t\t\t// Try to find the content in the destination address\n\t\t\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'replace':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Execute the developer-overridable post-render behavior\n\t\t\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, pContent)\n\n\t\t\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\t\t\treturn fCallback(null, pContent);\n\t\t\t});\n\t}\n\n\tonAfterRender()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterRenderAsync(fCallback)\n\t{\n\t\tthis.onAfterRender();\n\t\treturn fCallback();\n\t}\n}\n\nmodule.exports = PictView;","/**\n* Precedent Meta-Templating\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Process text streams, parsing out meta-template expressions.\n*/\nvar libWordTree = require(`./WordTree.js`);\nvar libStringParser = require(`./StringParser.js`);\n\nclass Precedent\n{\n\t/**\n\t * Precedent Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser();\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData);\n\t}\n}\n\nmodule.exports = Precedent;\n","/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t */\n\tparseString (pString, pParseTree, pData)\n\t{\n\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\tfor (var i = 0; i < pString.length; i++)\n\t\t{\n\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData);\n\t\t}\n\n\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\treturn tmpParserState.Output;\n\t}\n}\n\nmodule.exports = StringParser;\n","/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*! simple-concat. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function (stream, cb) {\n  var chunks = []\n  stream.on('data', function (chunk) {\n    chunks.push(chunk)\n  })\n  stream.once('end', function () {\n    if (cb) cb(null, Buffer.concat(chunks))\n    cb = null\n  })\n  stream.once('error', function (err) {\n    if (cb) cb(err)\n    cb = null\n  })\n}\n","/*! simple-get. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = simpleGet\n\nconst concat = require('simple-concat')\nconst decompressResponse = require('decompress-response') // excluded from browser build\nconst http = require('http')\nconst https = require('https')\nconst once = require('once')\nconst querystring = require('querystring')\nconst url = require('url')\n\nconst isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'\n\nfunction simpleGet (opts, cb) {\n  opts = Object.assign({ maxRedirects: 10 }, typeof opts === 'string' ? { url: opts } : opts)\n  cb = once(cb)\n\n  if (opts.url) {\n    const { hostname, port, protocol, auth, path } = url.parse(opts.url) // eslint-disable-line node/no-deprecated-api\n    delete opts.url\n    if (!hostname && !port && !protocol && !auth) opts.path = path // Relative redirect\n    else Object.assign(opts, { hostname, port, protocol, auth, path }) // Absolute redirect\n  }\n\n  const headers = { 'accept-encoding': 'gzip, deflate' }\n  if (opts.headers) Object.keys(opts.headers).forEach(k => (headers[k.toLowerCase()] = opts.headers[k]))\n  opts.headers = headers\n\n  let body\n  if (opts.body) {\n    body = opts.json && !isStream(opts.body) ? JSON.stringify(opts.body) : opts.body\n  } else if (opts.form) {\n    body = typeof opts.form === 'string' ? opts.form : querystring.stringify(opts.form)\n    opts.headers['content-type'] = 'application/x-www-form-urlencoded'\n  }\n\n  if (body) {\n    if (!opts.method) opts.method = 'POST'\n    if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)\n    if (opts.json && !opts.form) opts.headers['content-type'] = 'application/json'\n  }\n  delete opts.body; delete opts.form\n\n  if (opts.json) opts.headers.accept = 'application/json'\n  if (opts.method) opts.method = opts.method.toUpperCase()\n\n  const originalHost = opts.hostname // hostname before potential redirect\n  const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls\n  const req = protocol.request(opts, res => {\n    if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      opts.url = res.headers.location // Follow 3xx redirects\n      delete opts.headers.host // Discard `host` header on redirect (see #32)\n      res.resume() // Discard response\n\n      const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api\n      // If redirected host is different than original host, drop headers to prevent cookie leak (#73)\n      if (redirectHost !== null && redirectHost !== originalHost) {\n        delete opts.headers.cookie\n        delete opts.headers.authorization\n      }\n\n      if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {\n        opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)\n        delete opts.headers['content-length']; delete opts.headers['content-type']\n      }\n\n      if (opts.maxRedirects-- === 0) return cb(new Error('too many redirects'))\n      else return simpleGet(opts, cb)\n    }\n\n    const tryUnzip = typeof decompressResponse === 'function' && opts.method !== 'HEAD'\n    cb(null, tryUnzip ? decompressResponse(res) : res)\n  })\n  req.on('timeout', () => {\n    req.abort()\n    cb(new Error('Request timed out'))\n  })\n  req.on('error', cb)\n\n  if (isStream(body)) body.on('error', cb).pipe(req)\n  else req.end(body)\n\n  return req\n}\n\nsimpleGet.concat = (opts, cb) => {\n  return simpleGet(opts, (err, res) => {\n    if (err) return cb(err)\n    concat(res, (err, data) => {\n      if (err) return cb(err)\n      if (opts.json) {\n        try {\n          data = JSON.parse(data.toString())\n        } catch (err) {\n          return cb(err, res, data)\n        }\n      }\n      cb(null, res, data)\n    })\n  })\n}\n\n;['get', 'post', 'put', 'patch', 'head', 'delete'].forEach(method => {\n  simpleGet[method] = (opts, cb) => {\n    if (typeof opts === 'string') opts = { url: opts }\n    return simpleGet(Object.assign({ method: method.toUpperCase() }, opts), cb)\n  }\n})\n","var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('events').EventEmitter;\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst defaultConfiguration = (\n\t{\n\t\t// This is the address for the <script /> tag that contains the CSS.\n\t\tCSSElementAddress: '#PICT-CSS'\n\t}\n)\n\nclass PictCSS extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\t// No merging of options necessary\n\t\tif (typeof(this.options.CSSElementAddress) === 'undefined')\n\t\t{\n\t\t\tthis.options.CSSElementAddress = defaultConfiguration.CSSElementAddress;\n\t\t}\n\n\t\tthis.inlineCSSMap = {};\n\t}\n\n\t// Add a CSS fragment to the CSS map (each view can have its own CSS fragment)\n\t// Hash is shared across all views, so if 10 views all load the \"My-Table-View\" fragment, it will only be loaded once.\n\taddCSS(pHash, pContent, pPriority, pProvider)\n\t{\n\t\tlet tmpPriority = (typeof(pPriority) !== 'undefined') ? pPriority : 1000;\n\t\tlet tmpProvidor = (typeof(pProvider) === 'string') ? pProvider : 'Unknown';\n\t\tthis.inlineCSSMap[pHash] = { Hash: pHash, Content: pContent, Provider: tmpProvidor, Priority:tmpPriority };\n\t}\n\n\tremoveCSS(pHash)\n\t{\n\t\tdelete this.inlineCSSMap[pHash];\n\t}\n\n\tgenerateCSS()\n\t{\n\t\tlet tmpCSS = '';\n\t\tlet tmpCSSHashes = Object.keys(this.inlineCSSMap);\n\t\t// Sort the hashes by Priority\n\t\ttmpCSSHashes.sort((a, b) => { return this.inlineCSSMap[a].Priority - this.inlineCSSMap[b].Priority; });\n\t\tfor (let i = 0; i < tmpCSSHashes.length; i++)\n\t\t{\n\t\t\tlet tmpCSSFragment = this.inlineCSSMap[tmpCSSHashes[i]];\n\t\t\tlet tmpCSSComment = tmpCSSFragment.Hash;\n\t\t\tif (tmpCSSFragment.Hash != tmpCSSFragment.Provider)\n\t\t\t{\n\t\t\t\ttmpCSSComment = `${tmpCSSComment} from ${tmpCSSFragment.Provider}`;\n\t\t\t}\n\t\t\ttmpCSS += `/* ${tmpCSSComment} */\\n${tmpCSSFragment.Content}\\n`;\n\t\t}\n\t\treturn tmpCSS;\n\t}\n\n\t// Inject the CSS into the magic DOM element for it\n\tinjectCSS()\n\t{\n\t\tthis.services.ContentAssignment.assignContent(this.options.CSSElementAddress, this.generateCSS());\n\t}\n}\n\nmodule.exports = PictCSS;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictContentAssignment extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictContentAssignment';\n\n\t\t// Check to see if we are running in a browser\n\t\tthis.inBrowser = false;\n\t\tthis.hasDocument = false;\n\t\tif (typeof (window) == 'object')\n\t\t{\n\t\t\tthis.inBrowser = true;\n\t\t\t// Now check that the browser has a document object\n\t\t\tif ((typeof (window.document) != 'undefined') && (typeof (window.document.querySelectorAll) == 'function'))\n\t\t\t{\n\t\t\t\tthis.hasDocument = true;\n\t\t\t}\n\t\t}\n\n\t\t// If we're in a browser, check to see if jQuery is available.\n\t\tthis.hasJquery = false;\n\t\tthis.jQuery = false;\n\t\tif (this.inBrowser && typeof (window.jQuery) !== 'undefined')\n\t\t{\n\t\t\tthis.hasJquery = true;\n\t\t}\n\n\t\t// API Consumers can craft their own assign function\n\t\tthis.customAssignFunction = false;\n\t\t// API Consumers can also craft their own prepend function\n\t\tthis.customPrependFunction = false;\n\t\t// API Consumers can also craft their own append function\n\t\tthis.customAppendFunction = false;\n\n\t\t// API Consumers can also craft their own read function\n\t\tthis.customReadFunction = false;\n\t\t// API Consumers can even craft their own get element function.\n\t\tthis.customGetElementFunction = false;\n\n\n\t}\n\n\tgetElement(pAddress)\n\t{\n\t\tif (this.customGetElementFunction)\n\t\t{\n\t\t\treturn this.customGetElementFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpElements = window.jQuery(pAddress);\n\t\t\tif (tmpElements.length == 0)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// TODO: This isn't the most efficient method, but it is the most compatible.\n\t\t\t\tlet tmpElementSet = [];\n\t\t\t\tfor (let i = 0; i < tmpElements.length; i++)\n\t\t\t\t{\n\t\t\t\t\ttmpElementSet.push(tmpElements[0]);\n\t\t\t\t}\n\t\t\t\treturn tmpElementSet;\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\treturn window.document.querySelectorAll(pAddress);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content GET ELEMENT for [${pAddress}] will return empty because none of the browser methods are available`);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tassignContent(pAddress, pContent)\n\t{\n\t\tif (this.customAssignFunction)\n\t\t{\n\t\t\treturn this.customAssignFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\n\t\t\t// Should we ensure we matched 1 and exactly 1 element?\n\t\t\t//if (tmpTargetElement && tmpTargetElement.length == 1)\n\t\t\t//{\n\t\t\t// Set the content\n\t\t\ttmpTargetElement.html(pContent);\n\t\t\t//}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'BUTTON':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\tcase 'A':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content ASSIGN to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tappendContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customAppendFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.append(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"beforeend\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content APPEND to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tprependContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customPrependFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.prepend(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"afterbegin\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content PREPEND in [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\treadContent(pAddress)\n\t{\n\t\tif (this.customReadFunction)\n\t\t{\n\t\t\treturn this.customReadFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\treturn tmpTargetElement.html();\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tif (tmpTargetElementSet.length < 1)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse if (tmpTargetElementSet.length == 1)\n\t\t\t{\n\t\t\t\tif ((tmpTargetElementSet[0].tagName == 'INPUT') || (tmpTargetElementSet[0].tagName == 'TEXTAREA'))\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].value;\n\t\t\t\t}\n\t\t\t\telse if (tmpTargetElementSet[0].tagName == 'SCRIPT')\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].text;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].innerHTML;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content READ from [${pAddress}]...`);\n\t\t\treturn '';\n\t\t}\n\t}\n\n\n\taddClass(pAddress, pClass)\n\t{\n\t\tif (this.customAddClassFunction)\n\t\t{\n\t\t\treturn this.customAddClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.addClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.add(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content ADDCLASS to [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\tremoveClass(pAddress, pClass)\n\t{\n\t\tif (this.customRemoveClassFunction)\n\t\t{\n\t\t\treturn this.customRemoveClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.remove(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVECLASS from [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\ttoggleClass(pAddress, pClass)\n\t{\n\t\t// STUB\n\t}\n\n\thasClass(pAddress, pClass)\n\t{\n\t\t// STUB\n\t}\n\n}\n\nmodule.exports = PictContentAssignment;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictDataProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictDataProvider';\n\t}\n\n    getDataByAddress(pAddress, pData)\n    {\n        let tmpData = (typeof(pData) === 'undefined') ? {} : pData;\n\n        return this.fable.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, pAddress);\n    }\n}\n\nmodule.exports = PictDataProvider;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictMeadowEntityProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictMeadowProvider';\n\n\t\tif (this.fable.settings.PictDefaultURLPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = this.fable.settings.PictDefaultURLPrefix;\n\t\t}\n\t\telse if (!this.options.urlPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = '/1.0/';\n\t\t}\n\n\t\tif (this.fable.settings.PictDefaultDownloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = this.fable.settings.PictDefaultDownloadBatchSize;\n\t\t}\n\t\telse if (!this.options.downloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = 100;\n\t\t}\n\n\t\tthis.restClient = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('RestClient');\n\n\t\tthis.cache = {};\n\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tinitializeCache(pEntity)\n\t{\n\t\t// This should not be happening as often as it's happening.\n\t\tif (!this.cache.hasOwnProperty(pEntity))\n\t\t{\n\t\t\tthis.cache[pEntity] = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('ObjectCache');\n\t\t\t// TODO: Make this a configuration?\n\t\t\t// For now cache for 30 seconds.\n\t\t\tthis.cache[pEntity].maxAge = 30000;\n\t\t\tthis.cache[pEntity].maxLength = 10000;\n\n\t\t\tthis.fable.Bundle[pEntity] = this.cache[pEntity].RecordMap;\n\t\t}\n\t}\n\n\tgetEntity (pEntity, pIDRecord, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tlet tmpPossibleRecord = this.cache[pEntity].read(pIDRecord);\n\n\t\t\t\tif (tmpPossibleRecord)\n\t\t\t\t{\n\t\t\t\t\treturn tmpPossibleRecord;\n\t\t\t\t}\n\n\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}/${pIDRecord}`\n\t\t\t\t\t});\n\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pBody)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.cache[pEntity].put(pBody, pIDRecord);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pBody);\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tgetEntitySet = function (pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// TODO: Should we test for too many record IDs here by string length?\n\t\t// FBL~ID${pDestinationEntity}~INN~${tmpIDRecordsCommaSeparated}\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tlet tmpCountOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}s/Count/FilteredTo/${pMeadowFilterExpression}`\n\t\t\t\t\t});\n\t\t\t\ttmpCountOptions = this.prepareRequestOptions(tmpCountOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpCountOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Error getting bulk entity count of [${pEntity}] filtered to [${pMeadowFilterExpression}] from server [${tmpCountOptions.url}]: ${pError}`);\n\t\t\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet tmpRecordCount = 0;\n\t\t\t\t\t\tif (pBody.Count)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpRecordCount = pBody.Count;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpDownloadURIFragments = [];\n\t\t\t\t\t\tlet tmpDownloadBatchSize = this.options.downloadBatchSize;\n\t\t\t\t\t\tfor (let i = 0; i < (tmpRecordCount / tmpDownloadBatchSize); i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Generate each of the URI fragments to download\n\t\t\t\t\t\t\ttmpDownloadURIFragments.push(`${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${i*tmpDownloadBatchSize}/${tmpDownloadBatchSize}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpEntitySet = [];\n\t\t\t\t\t\t// Now run these in series (it's possible to parallelize but no reason to)\n\t\t\t\t\t\tthis.fable.Utility.eachLimit(tmpDownloadURIFragments, 1,\n\t\t\t\t\t\t\t(pURIFragment, fDownloadCallback)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\turl: `${this.options.urlPrefix}${pURIFragment}`\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\t\t\t\t\tthis.restClient.getJSON(pURIFragment,\n\t\t\t\t\t\t\t\t\t(pDownloadError, pDownloadResponse, pDownloadBody)=>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttmpEntitySet = tmpEntitySet.concat(pDownloadBody);\n\t\t\t\t\t\t\t\t\t\t// Should we be caching each record?\n\t\t\t\t\t\t\t\t\t\treturn fDownloadCallback(pDownloadError);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(pFullDownloadError)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(pFullDownloadError, tmpEntitySet);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t});\n\t}\n}\n\nmodule.exports = PictMeadowEntityProvider;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictTemplateProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictTemplateProvider';\n\n        this.templates = {};\n        this.templateSources = {};\n\n        // Default templates are stored by prefix.\n        // The longest prefix match is used.\n        // Case sensitive.\n        this.defaultTemplates = [];\n\n        // This function can be overloaded to load templates from a database, in a page or other source.\n        this.loadTemplateFunction = (pTemplateHash) => { return false; };\n\t}\n\n    addTemplate(pTemplateHash, pTemplate, pTemplateSource)\n    {\n        this.templates[pTemplateHash] = pTemplate;\n\n        if (typeof(pTemplateSource) == 'string')\n        {\n            this.templateSources[pTemplateHash] = pTemplateSource;\n        }\n        else\n        {\n            this.templateSources[pTemplateHash] = `Direct addTemplate('${pTemplateHash}') function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`;\n        }\n    }\n\n    addDefaultTemplate(pPrefix, pPostfix, pTemplate, pSource)\n    {\n        let tmpSource = (typeof(pSource) == 'string') ? pSource : `Direct addDefaultTemplate('${pPrefix}','${pPostfix}',..) function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`\n        let tmpDefaultTemplate = {\n            prefix: pPrefix,\n            postfix: pPostfix,\n            template: pTemplate,\n            source: tmpSource\n        };\n        if (typeof(pTemplate) != 'string')\n        {\n            this.log.error('PictTemplateProvider.addDefaultTemplate: pTemplate is not a string.');\n        }\n        this.defaultTemplates.push(tmpDefaultTemplate);\n    }\n\n    checkDefaultTemplateHash(pTemplateHash)\n    {\n        /*\n         * Default templates are managed by postfix and prefix.  The use case is things like titles, headers, list \n         * wrappers, rows, etc.\n         *\n         * So we might have a default template for a list wrapper and it should expect \"-ListWrap\" as the postfix.\n         * And we might have a default template for a list row and it should expect \"-ListRow\" as the postfix.\n         * The list might have a \"-ListTitle\", or we might have shared titles and it would just be \"-Title\".\n         * \n         * The idea is to allow fallbacks on defaults.\n         */\n        for (let i = 0; i < this.defaultTemplates.length; i++)\n        {\n            if ((pTemplateHash.indexOf(this.defaultTemplates[i].postfix) == pTemplateHash.length - this.defaultTemplates[i].postfix.length)\n                && (pTemplateHash.indexOf(this.defaultTemplates[i].prefix) == 0))\n            {\n                this.templates[pTemplateHash] = this.defaultTemplates[i].template;\n                this.templateSources[pTemplateHash] = `Auto created in checkDefaultTemplateHash('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${this.defaultTemplates[i].prefix}]...[${this.defaultTemplates[i].postfix}]`;\n                return this.templates[pTemplateHash];\n            }\n        }\n        return false;\n    }\n\n    getTemplate(pTemplateHash)\n    {\n        // TODO: Optimize this.\n        // If the template doesn't exist, try to load it with the loading function\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.loadTemplate(pTemplateHash);\n        }\n        // If the loading function fails, try to load it from the default templates\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.checkDefaultTemplateHash(pTemplateHash);\n        }\n        if (this.templates.hasOwnProperty(pTemplateHash))\n        {\n            return this.templates[pTemplateHash];\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    loadTemplate(pTemplateHash)\n    {\n        let tmpTemplate = this.loadTemplateFunction(pTemplateHash);\n\n        if (tmpTemplate)\n        {\n            this.templates[pTemplateHash] = tmpTemplate.template;\n            this.templateSources[pTemplateHash] = `Loaded in loadTemplate('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${tmpTemplate.source}]`;\n\n        }\n\n        return tmpTemplate;\n    }\n}\n\nmodule.exports = PictTemplateProvider;","/**\n* @author <steven@velozo.com>\n*/\nconst libFable = require('fable');\n\nclass Pict extends libFable\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\tthis.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n\n\t\t// The templateProvider provides a basic key->template mapping with default fallback capabilities\n\t\tthis.serviceManager.addAndInstantiateServiceType('TemplateProvider', require('./Pict-Template-Provider.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('EntityProvider',  require('./Pict-Meadow-EntityProvider.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('DataProvider',  require('./Pict-DataProvider.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('ContentAssignment',  require('./Pict-Content-Assignment.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('CSSMap', require('./Pict-CSS.js'));\n\n\t\tthis.serviceManager.instantiateServiceProvider('MetaTemplate');\n\t\tthis.serviceManager.instantiateServiceProvider('DataGeneration');\n\n\t\tthis.manifest = this.serviceManager.instantiateServiceProvider('Manifest');\n\n\t\tthis.AppData = {};\n\t\tthis.Bundle = {};\n\n\t\t// Log noisness goes from 0 - 5, where 5 is show me everything.\n\t\tthis.LogNoisiness = 0;\n\n\t\t// Load manifest sets\n\t\tif (this.settings.Manifests)\n\t\t{\n\t\t\tthis.loadManifestSet(this.settings.Manifests);\n\t\t}\n\n\t\tthis._DefaultPictTemplatesInitialized = false;\n\t\tthis.initializePictTemplateEngine();\n\n\t\tthis.serviceManager.addServiceType('PictView',  require('pict-view'));\n\t\tthis.serviceManager.addServiceType('PictApplication',  require('pict-application'));\n\n\t\t// Expose the named views directly, through a convenience accessor\n\t\tthis.views = this.serviceManager.servicesMap.PictView;\n\t}\n\n\t// Load manifests in as Hashed services\n\tloadManifestSet (pManifestSet)\n\t{\n\t\tif (typeof(pManifestSet) != 'object')\n\t\t{\n\t\t\tthis.log.warn(`PICT [${this.UUID}] could not load Manifest Set; pManifestSet was not an object.`);\n\t\t\treturn false;\n\t\t}\n\t\tlet tmpManifestKeys = Object.keys(pManifestSet);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++ )\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.serviceManager.instantiateServiceProvider('Manifest', pManifestSet[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddView(pViewHash, pOptions, pViewPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpViewHash = (typeof(pViewHash) == 'string') ? pViewHash : this.fable.getUUID();\n\n\t\tif (typeof(pViewPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pViewPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pViewPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\t\t\treturn this.serviceManager.instantiateServiceProviderFromPrototype('PictView', tmpOptions, tmpViewHash, pViewPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.serviceManager.instantiateServiceProvider('PictView', tmpOptions, tmpViewHash);\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddApplication(pApplicationHash, pOptions, pApplicationPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpApplicationHash = (typeof(pApplicationHash) == 'string') ? pApplicationHash : this.fable.getUUID();\n\n\t\tif (typeof(pApplicationPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pApplicationPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pApplicationPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\n\t\t\treturn this.serviceManager.instantiateServiceProviderFromPrototype('PictApplication', tmpOptions, tmpApplicationHash, pApplicationPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.serviceManager.instantiateServiceProvider('PictApplication', tmpOptions, tmpApplicationHash);\n\t\t}\n\t}\n\n\tinitializePictTemplateEngine()\n\t{\n\t\t/*\n\t\t *\n\t\t * To stave off madness, these are inefficient for now.  The wkhtmltopdf renderer leaves much to be desired\n\t\t * in the way of feedback with regards to javascript compatibility.\n\t\t *\n\t\t */\n\t\tif (!this._DefaultPictTemplatesInitialized)\n\t\t{\n\t\t\t// Expects one of the following:\n\t\t\t// \t\t{~Entity:Book:1~}\n\t\t\t//          ...meaning GET BOOK 1\n\t\t\t// \t\t{~Entity:Book:AppData.Some.Address.IDBook~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook\n\t\t\t// \t\t{~E:Book:AppData.Some.Address.IDBook:Render-Book-Template~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook and render it to Render-Book-Template\n\t\t\tlet fEntityRender = (pHash, pData, fCallback) =>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpEntity = false;\n\t\t\t\t\tlet tmpEntityID = false;\n\t\t\t\t\tlet tmpEntityTemplate = false;\n\n\t\t\t\t\t// This expression requires 2 parts -- a third is optional, and, if present, is the template to render to.\n\t\t\t\t\tlet tmpHashSeparator = tmpHash.indexOf('|');\n\n\t\t\t\t\tif (tmpHashSeparator < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\t\tlet tmpHashEntitySeparator = tmpHash.indexOf(':');\n\t\t\t\t\t\ttmpEntity = tmpHash.substring(0, tmpHashEntitySeparator);\n\t\t\t\t\t\ttmpEntityID = tmpHash.substring(tmpHashEntitySeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is a 3 part hash (the entity, the ID, and the template)\n\t\t\t\t\t\tlet tmpHashEntitySeparator = tmpHash.indexOf(':');\n\t\t\t\t\t\ttmpEntity = tmpHash.substring(0, tmpHashEntitySeparator);\n\n\t\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf('|');\n\t\t\t\t\t\ttmpEntityID = tmpHash.substring(tmpHashEntitySeparator + 1, tmpHashTemplateSeparator);\n\n\t\t\t\t\t\ttmpEntityTemplate = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isNaN(tmpEntityID))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpEntityID = parseInt(tmpEntityID);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is an address, so we need to get the value at the address\n\t\t\t\t\t\ttmpEntityID = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpEntityID);\n\t\t\t\t\t}\n\n\t\t\t\t\t// No Entity or EntityID\n\t\t\t\t\tif (!tmpEntity || !tmpEntityID)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to get the entity\n\t\t\t\t\tthis.EntityProvider.getEntity(tmpEntity, tmpEntityID,\n\t\t\t\t\t\t(pError, pRecord) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Pict: Entity Render: Error getting entity [${tmpEntity}] with ID [${tmpEntityID}] for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\t\t\treturn fCallback(pError, '');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Now render the template\n\t\t\t\t\t\t\tif (tmpEntityTemplate)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(null, this.parseTemplateByHash(tmpEntityTemplate, pRecord));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternAsync('{~E:', '~}', fEntityRender);\n\t\t\tthis.MetaTemplate.addPatternAsync('{~Entity:', '~}', fEntityRender);\n\n\t\t\t// {NE~Some.Address|If the left value is truthy, render this value.~}\n\t\t\tlet fNotEmptyRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Should switch this to indexOf so pipes can be in the content.\n\t\t\t\t\tlet tmpHashParts = tmpHash.split('|');\n\n\t\t\t\t\t// For now just check truthiness\n\t\t\t\t\tif (this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHashParts[0]))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpHashParts[1];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~NotEmpty:', '~}', fNotEmptyRender);\n\t\t\tthis.MetaTemplate.addPattern('{~NE:', '~}', fNotEmptyRender);\n\n\t\t\t// {~T:Template:AddressOfData~}\n\t\t\tlet fTemplateRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~T:', '~}', fTemplateRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Template:', '~}', fTemplateRender);\n\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~TS:', '~}', fTemplateSetRender);\n\t\t\tthis.MetaTemplate.addPattern('{~TemplateSet:', '~}', fTemplateSetRender);\n\n\t\t\t//{~Data:AppData.Some.Value.to.Render~}\n\t\t\tlet fDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn tmpValue;\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~D:', '~}', fDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Data:', '~}', fDataRender);\n\n\t\t\tthis.MetaTemplate.addPattern('{~Dollars:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterDollars(tmpColumnData);\n\t\t\t\t});\n\t\t\tthis.MetaTemplate.addPattern('{~Digits:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterAddCommasToNumber(this.DataFormat.formatterRoundNumber(tmpColumnData, 2));\n\t\t\t\t});\n\n\t\t\tlet fRandomNumberString = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumberString]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpStringLength = 4;\n\t\t\t\t\tlet tmpMaxNumber = 9999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpStringLength = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomNumericString(tmpStringLength, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumberString:', '~}',fRandomNumberString);\n\t\t\tthis.MetaTemplate.addPattern('{~RNS:', '~}',fRandomNumberString);\n\n\t\t\tlet fRandomNumber = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumber]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpMinimumNumber = 0;\n\t\t\t\t\tlet tmpMaxNumber = 9999999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMinimumNumber = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomIntegerBetween(tmpMinimumNumber, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumber:', '~}',fRandomNumber);\n\t\t\tthis.MetaTemplate.addPattern('{~RN:', '~}',fRandomNumber);\n\n\t\t\tlet fPascalCaseIdentifier = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn this.DataFormat.cleanNonAlphaCharacters(this.DataFormat.capitalizeEachWord(tmpValue));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~PascalCaseIdentifier:', '~}',fPascalCaseIdentifier);\n\n\t\t\tlet fLogValue = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tlet tmpValueType = typeof(tmpValue);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValueType == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is ${tmpValueType}.`);\n\t\t\t\t\t}\n\t\t\t\t\telse if (tmpValueType == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is an obect.`, tmpValue);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] if a ${tmpValueType} = [${tmpValue}]`);\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogValue:', '~}',fLogValue);\n\t\t\tthis.MetaTemplate.addPattern('{~LV:', '~}',fLogValue);\n\n\n\t\t\tlet fLogStatement = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tthis.log.trace(`PICT Template Log Message: ${tmpHash}`);\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogStatement:', '~}',fLogStatement);\n\t\t\tthis.MetaTemplate.addPattern('{~LS:', '~}',fLogStatement);\n\n\t\t\tlet fBreakpoint = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpError = new Error(`PICT Template Breakpoint: ${tmpHash}`);\n\t\t\t\t\tthis.log.trace(`PICT Template Breakpoint: ${tmpHash}`, tmpError.stack);\n\t\t\t\t\tdebugger;\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~Breakpoint', '~}',fBreakpoint);\n\n\t\t\tthis._DefaultPictTemplatesInitialized = true;\n\t\t}\n\t}\n\n\tparseTemplate (pTemplateString, pData, fCallback)\n\t{\n\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\treturn this.MetaTemplate.parseString(pTemplateString, tmpData, fCallback);\n\t}\n\n\tparseTemplateByHash (pTemplateHash, pData, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\treturn this.parseTemplate(tmpTemplateString, pData, fCallback);\n\t}\n\n\tparseTemplateSet (pTemplateString, pDataSet, fCallback)\n\t{\n\t\t// TODO: This will need streaming -- for now janky old string append does the trick\n\t\tlet tmpValue = '';\n\t\tif (typeof(fCallback) == 'function')\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tthis.Utility.eachLimit(pDataSet, 1,\n\t\t\t\t\t(pRecord, fRecordTemplateCallback)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplate(pTemplateString, pRecord,\n\t\t\t\t\t\t\t(pError, pTemplateResult)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValue += pTemplateResult;\n\t\t\t\t\t\t\t\treturn fRecordTemplateCallback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t(pError)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fCallback(pError, tmpValue);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn fCallback(Error('Pict: Template Set: pDataSet is not an array or object.'), '');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tif (Array.isArray(pDataSet))\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < pDataSet.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpKeys = Object.keys(pDataSet);\n\t\t\t\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[tmpKeys[i]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpValue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\tparseTemplateSetByHash (pTemplateHash, pDataSet, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\treturn this.parseTemplateSet(tmpTemplateString, pDataSet, fCallback);\n\t}\n};\n\nmodule.exports = Pict;\n\nmodule.exports.PictApplicationClass = require('pict-application');\nmodule.exports.PictViewClass = require('pict-view');\n\nmodule.exports.EnvironmentLog = require('./environments/Pict-Environment-Log.js');\n\n// This is to help understand the type of enivironement we're executing in\nmodule.exports.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");","/**\n* Pict browser shim loader\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\n\nclass PictEnvironmentLog\n{\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\t}\n\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\tcustomGetElementFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\tcustomReadFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\tcustomAppendFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\tcustomPrependFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomAssignFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Assign.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n}\n\nmodule.exports = PictEnvironmentLog;"]}